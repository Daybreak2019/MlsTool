message,fuzzy
"['thread', 'improveunderstand', 'hopefullycheck', 'statement', 'period', 'explicit', 'stoppedclose']",{'thread': 100}
"['release', 'security', 'document']",{'Security': 100}
"['befbcaamerge', 'framework', 'pholser', 'field', 'request', 'issue', 'publicframeworkfield', 'constructor']",{'issue': 100}
"['issue', 'suggestion', 'junit', 'method']",{'issue': 100}
"['thread', 'clearclassblock', 'status', 'clearedclassrules', 'afterclass', 'method']",{'thread': 100}
"['openjdk', 'generation', 'javadoc']",{'generation': 100}
"['small', 'incorrect']",{'incorrect': 100}
"['simplifysimplifyremovedbrowseoverridden', 'methodprevent', 'security']",{'Security': 100}
"['source', 'permission']",{'permission': 100}
"['trace', 'stack']",{'stack': 100}
"['stacktextlistener', 'stack', 'update']",{'stack': 100}
"['length', 'failure', 'message', 'different', 'legible', 'arrayclose']",{'length': 100}
"['issue', 'differ', 'array']",{'issue': 100}
"['exception', 'methodblock', 'ensure', 'resultrunleaf', 'method', 'introductionregression', 'exception', 'junit', 'regardmethodblock', 'invocation', 'longercatch', 'version', 'block', 'previousmethodblock', 'custom', 'invokes', 'method', 'modificationthrown', 'exceptionexecution', 'methodblock', 'method', 'failingmethod', 'runlisteners', 'subsequentjunit', 'registeredcommit', 'invocation', 'address', 'issue', 'wrappingmethodblock', 'catch', 'exceptionrunleaf', 'statement', 'runleaf', 'wrappedcloseclose']",{'issue': 100}
"['generation', 'javadoc']",{'generation': 100}
"['issue', 'requestoption', 'javadoc', 'utilize']",{'issue': 100}
"['requestchange', 'issue']",{'issue': 100}
"['noisy', 'cloud', 'probability', 'failure', 'deterministictimeout', 'timeouts', 'beginningclock', 'threadactual', 'thread', 'smallvalue', 'timeout', 'cloud', 'probabilistic', 'naturescope']",{'thread': 100}
"['field', 'restoreprefix', 'removedintellij', 'unfortunatelyintellij', 'junit', 'impossibleintellij', 'startalready', 'issue', 'revert', 'ticketintellij', 'version']",{'issue': 100}
"['mergemerge', 'request', 'mustafaalilicense', 'android', 'issue', 'error']",{'issue': 100}
"['issue', 'error']",{'issue': 100}
"['accessibility', 'group', 'doclintdoclint', 'javacgroup', 'default', 'strictreference', 'report', 'issue', 'syntaxclass', 'javadoc', 'hamcrest', 'reportingsyntaxdoclint']",{'issue': 100}
"['javadoc', 'issue']",{'issue': 100}
"['mergestephenc', 'generate', 'requestconfiguration', 'issue']",{'issue': 100}
"['mergevbauer', 'buffer', 'string', 'request', 'removereplace', 'stringbuffer', 'stringbuilder']",{'buffer': 100}
"['buffer', 'rename', 'stringbuilder', 'usage']",{'buffer': 100}
"['undefined', 'javascript', 'firefox', 'issue', 'return']",{'issue': 100}
"['requestkcooney', 'safety', 'address', 'issue', 'concern', 'thread']","{'issue': 100, 'thread': 100}"
"['configuration', 'issue']",{'issue': 100}
"['kcooney', 'safety', 'address', 'issue', 'concern', 'thread']","{'issue': 100, 'thread': 100}"
"['contributinghelpful', 'display', 'issue', 'guideline', 'request']",{'issue': 100}
"['mergebeneschan', 'master', 'display', 'timeout', 'thread']",{'thread': 100}
"['mergemerge', 'validators', 'request', 'codingricky', 'annotationvalidation', 'check', 'issue', 'category']",{'issue': 100}
"['alltests', 'issue']",{'issue': 100}
"['check', 'thread']",{'thread': 100}
"['feedback', 'changefactory', 'creation', 'saftey', 'collection', 'thread']",{'thread': 100}
"['display', 'timeout', 'issue', 'thread']","{'issue': 100, 'thread': 100}"
"['mergemerge', 'russellsantos', 'request', 'safety', 'warning', 'thread']",{'thread': 100}
"['safety', 'warning', 'thread']",{'thread': 100}
"['fsuffix', 'length', 'equallength', 'fprefix', 'equalsuffix', 'length', 'equal', 'fsuffixsuffix', 'computation', 'removedfound', 'inconsistency']",{'length': 100}
"['trace', 'stack', 'original', 'method']",{'stack': 100}
"['commits', 'junit', 'squashedcommitkcooney', 'kevin', 'author', 'cooneyrunnotifiercommitkcooney', 'kevin', 'author', 'cooneychange', 'revertcommitkcooney', 'kevin', 'author', 'cooneycleanup', 'minorcommitkcooney', 'kevin', 'author', 'cooneynotice', 'changeafdbadbfffeea', 'commitkcooney', 'kevin', 'author', 'cooneyconsistent', 'stylecommitkcooney', 'kevin', 'author', 'cooneyresponse', 'dsaff', 'tibor', 'update', 'commends', 'reviewcommit', 'afbaebabfaeebfkcooney', 'kevin', 'author', 'cooneyrunnotifiertest', 'junit', 'stylecommitkcooney', 'kevin', 'author', 'cooneyremove', 'copyrightcommitkcooney', 'kevin', 'author', 'changecommit', 'badfdbfcfdcmergekcooney', 'kevin', 'author', 'cooneymaster', 'listener', 'concurrent', 'branchcommitkcooney', 'kevin', 'author', 'cooneyremove', 'annotationdiffs', 'reducecommit', 'ffabddebdcakcooney', 'kevin', 'author', 'cooneyreplace', 'annotation', 'concurrentjavadoc', 'updatefunctionality', 'runnotifiertest', 'deletecommit', 'aacaafcdefcdebmergekcooney', 'kevin', 'author', 'cooneyremove', 'annotation', 'dependencyccdbbafbbcaeba', 'commitmergekcooney', 'kevin', 'author', 'cooneymerge', 'concurrent', 'listenerconflictrunner', 'junit', 'notificationcbafaaeddecf', 'commitkcooney', 'kevin', 'author', 'cooneyremovecommit', 'feabeafcmergekcooney', 'kevin', 'author', 'cooneymerge', 'listener', 'tibor', 'concurrent', 'branchconflictrunner', 'junit', 'notificationjunitdcafcfcfbdd', 'committibor', 'digana', 'authorthreadsafe', 'annotationcommitkcooney', 'kevin', 'author', 'cooneyremove', 'annotation', 'concurrent', 'dependencycommittibor', 'digana', 'authoralltestscbaffccdf', 'committibor', 'digana', 'authorpurpose', 'clarifiedcommittibor', 'digana', 'authorkcooney', 'junit', 'cabccddfcadbbcommittibor', 'digana', 'authorkcooney', 'runner', 'notification', 'junitcommit', 'aaaeccacbbbdkcooney', 'kevin', 'author', 'cooneyrunnotifiertestcommitmergekcooney', 'kevin', 'author', 'cooneymerge', 'listener', 'tibor', 'concurrent', 'branchconflictrunner', 'junit', 'notificationrunner', 'junit', 'notificationjunitcommittibor', 'digana', 'authorcompatible', 'backward', 'cowalcommitkcooney', 'kevin', 'author', 'cooneycleanup', 'implementationcommit', 'cabccddfcadbbkcooney', 'kevin', 'author', 'cooneymethod', 'equalcommittibor', 'digana', 'authorbackward', 'removedcommittibor', 'digana', 'authorremove', 'problem', 'listenercommitmergetibor', 'digana', 'authormaster', 'junitcbadedbbcafebd', 'committibor', 'digana', 'authoralltestscommitmergetibor', 'digana', 'authormaster', 'junitcommit', 'aeddaedeacdtibor', 'digana', 'realusagecommit', 'dfbcfebfacbbbactibor', 'digana', 'authorcommittibor', 'digana', 'authorcollection', 'thread']","{'concurrent': 100, 'thread': 100}"
"['issue', 'requestimplementation', 'issue']",{'issue': 100}
"['copyright', 'request', 'removeremove', 'copyright', 'incorrect']",{'incorrect': 100}
"['copyright', 'incorrect']",{'incorrect': 100}
"['request', 'romerosilvajavadoc', 'issue']",{'issue': 100}
"['signature', 'install', 'priorlocal', 'signature', 'issue', 'install', 'repositoryrepository', 'localrelease', 'active', 'people', 'junitverify', 'safer', 'execution', 'phase']",{'issue': 100}
"['property', 'entryhamcrest', 'versionversion', 'dependency', 'issue', 'property', 'definemultiple', 'version', 'dependency', 'dependencyright', 'specify', 'version', 'dependency', 'thingdependency', 'override']",{'issue': 100}
"['skazzyy', 'requesttheory', 'assumes', 'issue']",{'issue': 100}
"['theory', 'assumesassume', 'issue', 'method', 'annotatedtheory']",{'issue': 100}
"['volatile', 'thread']",{'thread': 100}
"['eccfbf', 'mergeavandeursen', 'request', 'coverage', 'issue', 'coverage']",{'issue': 100}
"['synthetic', 'filtertaken', 'account', 'method', 'sortingwithoutgenerate', 'coverage', 'synthetic', 'methodresolve', 'simplifies', 'issue']",{'issue': 100}
"['requestconstructor', 'treatment', 'thread']",{'thread': 100}
"['volatile', 'getnanos', 'thread']",{'thread': 100}
"['array', 'convertingresolve', 'equality', 'incomplete', 'issue', 'sensitivemethodsorter']",{'issue': 100}
"['space', 'whiteresolve', 'equality', 'incomplete', 'issue', 'sensitivemethodsorter']",{'issue': 100}
"['indentation', 'cleaningeclipse', 'methodextraresolve', 'equality', 'incomplete', 'issue', 'sensitivemethodsorter']",{'issue': 100}
"['method', 'helperresolve', 'equality', 'incomplete', 'issue', 'sensitivemethodsorter']",{'issue': 100}
"['failinganalysis', 'coverage', 'deletedmethod', 'helperresolve', 'equality', 'incomplete', 'issue', 'sensitivemethodsorter']",{'issue': 100}
"['sorter', 'method', 'resultresolve', 'equality', 'incomplete', 'issue', 'sensitivemethodsorter']",{'issue': 100}
"['methodresolve', 'equality', 'incomplete', 'issue', 'sensitivemethodsorter']",{'issue': 100}
"['class', 'dummy', 'uniform', 'namingresolve', 'equality', 'incomplete', 'issue', 'sensitivemethodsorter']",{'issue': 100}
"['methodsorter', 'ascendingequality', 'check', 'issueresolve', 'equality', 'incomplete', 'issue', 'sensitivemethodsorter']",{'issue': 100}
"['default', 'methodsorterequality', 'check', 'issueresolve', 'equality', 'incomplete', 'issue', 'sensitivemethodsorter']",{'issue': 100}
"['class', 'dummy', 'renamedresolve', 'equality', 'incomplete', 'issue', 'sensitivemethodsorter']",{'issue': 100}
"['reason', 'volatile', 'thread', 'daemon']",{'thread': 100}
"['mergecoreyjv', 'master', 'requestrequest', 'issue']",{'issue': 100}
"['sorter', 'implementation', 'alternative', 'implementation', 'extrajacoco', 'implementation', 'analysis', 'coverage', 'whereascheck', 'interest', 'order', 'approach', 'coverage', 'irrelevant', 'method', 'extragenerate', 'analyzer', 'mightequality', 'furthermore', 'sensitive', 'approachequality']",{'Sensitive': 100}
"['issue', 'accidentallycompatible']",{'issue': 100}
"['mergecoreyjv', 'master', 'requestrequest', 'issue']",{'issue': 100}
"['constructor', 'treatment', 'thread']",{'thread': 100}
"['kentbeck', 'issue', 'junit']",{'issue': 100}
"['issue', 'style']",{'issue': 100}
"['issue', 'requeststyle', 'issue', 'description']",{'issue': 100}
"['suggestion', 'issue', 'dsaffparameter', 'javadoc', 'description', 'alignempty', 'javadoc']",{'issue': 100}
"['executor', 'instance', 'thread']",{'thread': 100}
"['executor', 'instance', 'thread']",{'thread': 100}
"['cleanup', 'reference', 'thread']",{'thread': 100}
"['cleanup', 'reference', 'thread']",{'thread': 100}
"['ecbccf', 'mergeamalakar', 'master', 'javadoc', 'superclass', 'special', 'issue', 'override', 'shadow', 'subclass', 'method']",{'issue': 100}
"['javadoc', 'superclass', 'special', 'issue', 'override', 'shadow', 'subclass', 'method', 'review']",{'issue': 100}
"['javadoc', 'superclass', 'special', 'issue', 'override', 'shadow', 'subclass', 'method']",{'issue': 100}
"['suggestion', 'issue', 'order', 'import', 'markdown']",{'issue': 100}
"['whitespaces', 'issue']",{'issue': 100}
"['issue', 'descriptionstyle', 'issue', 'description']",{'issue': 100}
"['acaefa', 'mergeawulder', 'issue', 'requestsuggestion', 'kcooney']",{'issue': 100}
"['suggestion', 'kcooney', 'consistent', 'issue', 'suggestion']",{'issue': 100}
"['issue', 'requestworkaround', 'compilation', 'problem']",{'issue': 100}
"['issue', 'requestissue']",{'issue': 100}
"['issue', 'requestissue']",{'issue': 100}
"['issue', 'requestfolder', 'exists', 'issue']",{'issue': 100}
"['exists', 'issue']",{'issue': 100}
"['issue', 'requesttestwatcher', 'exception']",{'issue': 100}
"['invokedjunit', 'issue', 'kentbeckgeneral', 'solution', 'testwatcher', 'method', 'statecommit', 'quirk', 'introduces', 'methodinternal', 'package']",{'issue': 100}
"['matthewfarwell', 'recursive', 'requestfolder', 'recursive', 'issue', 'incompatibility']",{'issue': 100}
"['serializable', 'factory', 'unique', 'issue', 'object', 'method', 'description']",{'issue': 100}
"['issue', 'requestrestore', 'deterministic']",{'issue': 100}
"['restore', 'deterministicissuecomment', 'patch', 'kevin', 'kentbeck', 'issue', 'junit', 'cooney']",{'issue': 100}
"['style', 'error', 'issue', 'performance']",{'issue': 100}
"['double', 'issue', 'assertnotequals']",{'issue': 100}
"['issue', 'problem']",{'issue': 100}
"['cffebc', 'mergeahitrin', 'issue', 'requestvalue', 'display', 'assertnull', 'object']",{'issue': 100}
"['issue', 'error', 'message']",{'issue': 100}
"['style', 'error', 'issue', 'performance']",{'issue': 100}
"['exceptionexception', 'assertionerror', 'thrown', 'matchrunner', 'issue', 'resultactual', 'message', 'exceptionactual', 'message', 'exceptionstacktrace', 'assertionerroractual', 'message', 'exceptionstacktrace', 'actual', 'exception']",{'issue': 100}
"['exceptionexception', 'assertionerror', 'thrown', 'matchrunner', 'issue', 'resultactual', 'message', 'exceptionactual', 'message', 'exceptionstacktrace', 'assertionerroractual', 'message', 'exceptionstacktrace', 'actual', 'exception']",{'issue': 100}
"['mergemerge', 'stefanbirkner', 'requestclass', 'static', 'issue', 'message', 'error']",{'issue': 100}
"['issue', 'assumption']",{'issue': 100}
"['issue', 'failontimeout']",{'issue': 100}
"['kentbeck', 'issue', 'enable', 'junit', 'result']",{'issue': 100}
"['helpful', 'static', 'exception', 'field', 'issue', 'message']",{'issue': 100}
"['classrule', 'order', 'field', 'issue']",{'issue': 100}
"['helpful', 'exception', 'field', 'issue', 'message']",{'issue': 100}
"['theory', 'runner', 'equivalent', 'setting', 'variable', 'generic', 'experiment', 'attempt', 'issue', 'comprises', 'junit', 'validator', 'migrates']",{'issue': 100}
"['display', 'issue', 'message', 'error', 'double']",{'issue': 100}
"['master', 'issue']",{'issue': 100}
"['issue', 'multipleintersection']",{'issue': 100}
"['testwatcher', 'issue']",{'issue': 100}
"['stack', 'description', 'category', 'filter']",{'stack': 100}
"['mergemerge', 'krosenvold', 'issue', 'junit', 'threadingissues']",{'issue': 100}
"['assertnull', 'issue']",{'issue': 100}
"['concurrency', 'patch']",{'concurren': 90}
"['vanilla', 'thread']",{'thread': 100}
"['trace', 'stack', 'exception']",{'stack': 100}
"['trace', 'stack', 'section', 'report']",{'stack': 100}
