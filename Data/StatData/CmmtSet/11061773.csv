message,fuzzy
"['arrow', 'pattern', 'style', 'object', 'crash']",{'crash': 100}
"['arrow', 'incorrect', 'brace', 'parens', 'reference']",{'incorrect': 100}
"['issue', 'triage', 'update']",{'issue': 100}
"['esquery', 'crash', 'usingesquery', 'crash', 'usingchange', 'chore', 'esquery', 'optionesquery', 'option', 'chore']",{'crash': 100}
"['clean', 'chore', 'workflow', 'issue']",{'issue': 100}
"['eslint', 'upgrade', 'downgrade', 'question', 'crash']",{'crash': 100}
"['lodash', 'upgrade', 'security', 'issuecommit', 'vulnerability', 'update', 'security', 'prototype', 'lodash']",{'Security': 100}
"['bodyless', 'crash', 'useless', 'constructor']",{'crash': 100}
"['install', 'runningrequirement', 'legacy', 'resolvingdependency', 'plugin', 'eslint', 'versionfigure', 'undefined', 'issue', 'latermeantimesituation', 'temporary', 'updatedocumentation']",{'issue': 100}
"['length', 'property', 'update']",{'length': 100}
"['decimal', 'integer']",{'integer': 100}
"['integer', 'chore', 'formattednumeric', 'literal', 'digit', 'objectdecimal', 'integer', 'binary', 'octalbigint', 'numeric', 'validliteral', 'distinct', 'similar', 'invalid', 'lookingresult', 'literal']",{'integer': 100}
"['length', 'updatecontinuedelete', 'pattern', 'identifier', 'multiple', 'valid', 'patternfunction', 'return', 'extractedlengthfunction', 'return', 'extractedlengthwrong', 'modify', 'update', 'examplecreate', 'instance', 'regexp', 'update', 'djermanovicfunction', 'modify', 'updatepattern']",{'length': 100}
"['template', 'party', 'chore', 'parserchore', 'issue', 'template', 'party', 'parsertemplate']",{'issue': 100}
"['common', 'chore', 'issue', 'template', 'party', 'parser']",{'issue': 100}
"['deprecate', 'blacklist', 'updatedeprecation', 'deprecates', 'document', 'djermanoviccontent', 'blacklist', 'verbatim', 'denylistdeprecates', 'blacklist', 'updatereplacedby']",{'blacklist': 100}
"['blacklist', 'rename', 'update', 'denylistblacklist', 'rename', 'update', 'denylistupdate']",{'blacklist': 100}
"['policy', 'readme', 'security']",{'Security': 100}
"['chore', 'issue', 'template']",{'issue': 100}
"['update', 'policyupdate', 'policytemplate', 'update', 'issue']",{'issue': 100}
"['discord', 'gitterdiscord', 'gittertemplate', 'error', 'issue']",{'issue': 100}
"['globals', 'external', 'blacklist', 'referenceallow', 'globals', 'external', 'blacklist', 'referencecheck', 'reference', 'global', 'simplify']",{'blacklist': 100}
"['pattern', 'identifier', 'length', 'update', 'array', 'checkpattern', 'identifier', 'length', 'update', 'array', 'checkwrongdocumentation', 'update']",{'length': 100}
"['arrow', 'style', 'literal', 'object', 'crash']",{'crash': 100}
"['minor', 'grammar', 'issue']",{'issue': 100}
"['description', 'generation', 'category']",{'generation': 100}
"['update', 'report', 'blacklist', 'update', 'report', 'blacklist', 'checkproperty', 'assignment', 'checkoptionremove', 'condition']",{'blacklist': 100}
"['positive', 'false', 'blacklist']",{'blacklist': 100}
"['operator', 'adjacent', 'assignment', 'division', 'crash']",{'crash': 100}
"['crash', 'radix']",{'crash': 100}
"['objectpatterns', 'blacklist', 'ignoreobject', 'objectpattern', 'ignore']",{'blacklist': 100}
"['crash', 'await']",{'crash': 100}
"['license', 'upgrade', 'issue', 'optionator']",{'issue': 100}
"['regex', 'class', 'crash', 'invalid']",{'crash': 100}
"['issue', 'problematic', 'installationissue', 'problematic', 'installationespree', 'update']",{'issue': 100}
"['eslint', 'chore', 'issue', 'update', 'template']",{'issue': 100}
"['location', 'group', 'incorrect']",{'incorrect': 100}
"['report', 'location', 'eqeqeq', 'incorrect']",{'incorrect': 100}
"['argument', 'crash']",{'crash': 100}
"['dependency', 'lodash', 'lodash', 'issue']",{'issue': 100}
"['message', 'style', 'comment', 'multiline', 'incorrect']",{'incorrect': 100}
"['chore', 'incorrect']",{'incorrect': 100}
"['generation', 'documentation', 'chore', 'formatter']",{'generation': 100}
"['release', 'generation', 'chore', 'script']",{'generation': 100}
"['stricter', 'config', 'stricter', 'config', 'issue', 'consistent', 'refactor', 'validatingexistent', 'enable', 'errorthrow', 'existent', 'configproblemupdateupdate']",{'issue': 100}
"['comment', 'linebreak', 'avoiddetermine', 'contains', 'logic', 'arrow', 'implicit', 'function', 'fraction', 'closercommit', 'reluctant', 'linebreak', 'solution', 'guess', 'alternate', 'incorrect', 'implicit', 'comment', 'location']",{'incorrect': 100}
"['crash', 'chore', 'improvecrash', 'number', 'output', 'event']",{'crash': 100}
"['regex', 'invalid', 'comment', 'avoidalmost', 'unicode', 'regexes', 'fdbbcccaccfeea', 'issue', 'codebase', 'exception', 'place', 'changedunicode', 'warning', 'regexes', 'expression', 'thoughunicode', 'character', 'warning', 'regexes', 'unnecessary', 'comment', 'invalidcommit', 'problem', 'order', 'eslint']",{'issue': 100}
"['crash', 'parens', 'extraeslint', 'fuzzer', 'issue', 'travis']","{'crash': 100, 'issue': 100}"
"['chore', 'fuzzercommit', 'iteration', 'eslint', 'fuzzer', 'issue', 'particular', 'small', 'author', 'breaksecond', 'fuzzer', 'reproduces', 'config', 'minimal', 'positive', 'false', 'parser', 'upgrade', 'fuzzer', 'autofixer', 'creates', 'detect', 'crash', 'error']","{'issue': 100, 'crash': 100}"
"['globals', 'clarifychange', 'setting', 'assumeglobals', 'implies', 'automaticallyecmaversion', 'setting', 'environmentsuggestion', 'implementeslint', 'issue']",{'issue': 100}
"['globals', 'string', 'globals', 'string', 'disabledeslint', 'globals', 'readable', 'issue', 'confusingbooleans', 'legacy']",{'issue': 100}
"['chore', 'property', 'eslint', 'surface', 'processing', 'linter', 'browserify', 'logic', 'effort', 'access', 'generation', 'config', 'public', 'utility', 'issue']","{'generation': 100, 'issue': 100}"
"['implicit', 'account', 'comment', 'linebreakarrow', 'implicit', 'exists', 'comment', 'expression', 'linebreakformattingexpression', 'variable', 'arrowexist', 'arrow', 'function', 'comment', 'parens', 'enwrappedcreate', 'arrow', 'block', 'helper', 'commentarrow', 'ensure', 'comment', 'expression', 'length', 'comment', 'checklogic', 'condense', 'commentfunction', 'reword', 'documentation', 'helpercondition', 'arrow', 'implicit', 'function', 'implementation', 'account', 'comment', 'multilogic', 'arrow', 'function', 'accountlogic', 'arrow', 'implicit', 'function', 'besides', 'fixer', 'account', 'specify', 'linebreak', 'autofixbesides', 'astutilremove', 'semicolon', 'extraasync', 'arrow', 'column', 'parameter', 'findfirsttoken', 'helper', 'method', 'object', 'documentationcherryremovearrowbody', 'function', 'addparentheses', 'fixertarget', 'rename', 'autofixbesidesvalidcallback', 'account', 'constructorcomment', 'multilinejsdocs', 'detail', 'comment', 'clarity', 'extraimport', 'statement', 'update', 'string', 'template', 'requestedvariable', 'declaration']",{'length': 100}
"['label', 'issue', 'ensure', 'triage', 'addedgithub', 'eslint', 'issue']",{'issue': 100}
"['template', 'update', 'issuelabel', 'appropriate', 'issue', 'update', 'improvement', 'github', 'issue', 'template', 'automation', 'changelog']",{'issue': 100}
"['template', 'issue']",{'issue': 100}
"['resolvable', 'chorefancy', 'similar', 'dominictarr', 'paranoid', 'event', 'issue']",{'issue': 100}
"['snippet', 'incorrect', 'console', 'providesresult', 'warning', 'unexpectd', 'current', 'property', 'console', 'snippet']",{'incorrect': 100}
"['failure', 'buildfuture', 'issue', 'alternative', 'tschaub']",{'issue': 100}
"['warning', 'cliengine', 'canary', 'issue', 'address', 'nonexistent', 'command', 'config', 'deprecation']",{'issue': 100}
"['whitespace', 'legacy', 'chore', 'irregular', 'report', 'avoidargument', 'whitespace', 'legacy', 'multi', 'avoideslint', 'issue', 'aladdin', 'aardvark', 'plugin']",{'issue': 100}
"['template', 'chore', 'update', 'issueeasier', 'selection', 'issue', 'emoji', 'template', 'screenpeople', 'issue', 'hackerone', 'security', 'template', 'directingpeople', 'issue', 'template', 'question', 'directingchatroom']","{'issue': 100, 'Security': 100}"
"['information', 'security', 'issue']","{'Security': 100, 'issue': 100}"
"['duplicate', 'crash', 'error']",{'crash': 100}
"['object', 'value', 'crash', 'invalid']",{'crash': 100}
"['consistent', 'crash', 'empty']",{'crash': 100}
"['value', 'default', 'update', 'position', 'incorrect']",{'incorrect': 100}
"['updateeslint', 'function', 'variable', 'update', 'reading', 'activates', 'whenever', 'assignment', 'expression', 'await', 'assigns', 'report', 'value', 'condition', 'execution', 'issue', 'yield', 'error']",{'issue': 100}
"['ignore', 'pattern', 'default', 'resolveresult', 'issue', 'subdirectory', 'default', 'location', 'folder', 'directory', 'project']",{'issue': 100}
"['prerelease', 'generation', 'logic']",{'generation': 100}
"['release', 'readme', 'issue']",{'issue': 100}
"['catch', 'crash', 'optional']",{'crash': 100}
"['objectconduct', 'eslint', 'community', 'adheres', 'foundationcloserequest', 'purposedocumentation', 'updatetemplate', 'master', 'eslinttemplate', 'master', 'master', 'templateautofixingoptionsomethingplease', 'explainplease', 'question', 'request', 'issue', 'paste', 'checkedeslint', 'issueensure', 'request', 'developer', 'guidechange', 'includechange', 'documentation', 'update', 'appropriaterequest', 'requiredchange', 'overviewallowfunction']",{'issue': 100}
"['visitor', 'extraneous', 'update', 'object', 'improves', 'removingrequest', 'purposedocumentation', 'updatetemplate', 'master', 'eslinttemplate', 'master', 'master', 'templateautofixingoptionsomethingplease', 'explainplease', 'question', 'request', 'issue', 'paste', 'checkedensure', 'request', 'developer', 'guidechange', 'includechange', 'documentation', 'update', 'appropriaterequest', 'object', 'includesdetermine', 'variable', 'declaration', 'assignment', 'object', 'focus', 'reviewermodule', 'scopeilyavolodin', 'ljharb']",{'issue': 100}
"['spare', 'commathrow', 'ignore', 'error', 'pointcorrect', 'array', 'chore', 'issue']",{'issue': 100}
"['scope', 'unskip', 'chore', 'eslint', 'issue']",{'issue': 100}
"['format', 'chore', 'issue', 'update', 'template']",{'issue': 100}
"['nonexistent', 'report', 'error', 'fatalfound', 'report', 'error', 'improvepattern', 'engine', 'string', 'empty', 'filteringoriginal', 'length', 'important', 'array', 'ensures', 'returnthrown', 'ensure', 'empty', 'directory', 'errorensure', 'thrown', 'errorupdatebroken', 'enginemessage', 'error']",{'length': 100}
"['choreeslint', 'issue', 'await', 'return']",{'issue': 100}
"['constructor', 'buffer', 'backticks', 'description']",{'buffer': 100}
"['indentation', 'update', 'indentation', 'issue', 'ensure', 'indent', 'update', 'listener']",{'issue': 100}
"['value', 'chore', 'comment', 'return', 'incorrect']",{'incorrect': 100}
"['template', 'default', 'chore', 'issue']",{'issue': 100}
"['multiple', 'github', 'issue']",{'issue': 100}
"['comment', 'avoidcause', 'instance', 'source', 'update', 'linter', 'behavior', 'configuration', 'problem', 'issue', 'comment', 'crash', 'error', 'fataleslint', 'issue']","{'issue': 100, 'crash': 100}"
"['emptyeslint', 'issue']",{'issue': 100}
"['chore', 'assignment', 'crash', 'invalid']",{'crash': 100}
"['crash', 'space', 'parens']",{'crash': 100}
"['validator', 'instance', 'chore', 'config', 'avoidperformance', 'issue', 'creates', 'linter', 'version', 'laterpossible', 'progress', 'module', 'linter', 'reading']",{'issue': 100}
"['comment', 'chore', 'incorrect']",{'incorrect': 100}
"['object', 'newline', 'curlyeslint', 'object', 'newline', 'babel', 'curlytoken', 'assumption', 'object', 'newline', 'curlyobject', 'alwayscause', 'eslint', 'issue', 'false', 'babelfilter', 'function', 'getlasttokenfilter', 'actual', 'symmetrywould', 'aware', 'issue', 'thoughliteral', 'object', 'newline', 'object', 'newline', 'behaviour', 'literal', 'object', 'direct', 'lookup', 'replaceeslint']",{'issue': 100}
"['stdin', 'string', 'emptywould', 'argument', 'issue', 'string', 'empty']",{'issue': 100}
"['processor', 'update', 'usingeslint', 'issuecomment', 'issue', 'processor', 'remainssupportsautofix', 'processor', 'exportnecessary', 'autofix', 'processor', 'method', 'transform', 'range', 'support', 'location', 'transformsmultipass', 'preprocess', 'postprocess']",{'issue': 100}
"['indent', 'array', 'crash', 'option', 'sparse']",{'crash': 100}
"['indentation', 'update', 'space', 'avoidwould', 'indentation', 'issue', 'indent', 'option', 'space']",{'issue': 100}
"['encouraging', 'people', 'gitter', 'issue', 'notice', 'question', 'support', 'similar', 'display']",{'issue': 100}
"['block', 'crash', 'semicolon']",{'crash': 100}
"['occurs', 'crash', 'error']",{'crash': 100}
"['readme', 'config', 'badge', 'eslintreadme', 'image', 'badge', 'eslint', 'incorrect', 'release', 'config', 'version', 'display']",{'incorrect': 100}
"['maintainer', 'issue']",{'issue': 100}
"['detect', 'chore', 'fuzzerdetect', 'chore', 'fuzzercommit', 'problem', 'result', 'certain', 'fuzzer', 'autofix', 'detect', 'crash', 'syntax', 'autoconfig', 'eslint', 'eslump', 'fuzzer', 'random', 'lydell', 'configthink', 'fuzzer', 'normalversion', 'eslumplinter', 'logic', 'update', 'eslintupgrade', 'eslump']",{'crash': 100}
"['parameter', 'function', 'indentation', 'update', 'nestedcommit', 'token', 'indentatio', 'element', 'offset', 'indent', 'array', 'update', 'parens', 'incorrect']",{'incorrect': 100}
"['emptystatements', 'indentation', 'updatelogic', 'contains', 'usingcommit', 'logic', 'indentation', 'emptystatement', 'semicolon', 'incorrect']",{'incorrect': 100}
"['condition', 'buildeslint', 'issuecommit', 'eslint', 'order', 'module', 'issue', 'occasionallycause', 'eslint', 'bundle', 'single', 'random', 'guess', 'anonymous', 'module', 'cache', 'infer', 'issue', 'occurs', 'requirejs', 'error']",{'issue': 100}
"['release', 'communication', 'patch', 'guidelinedescribe', 'communicate', 'issue', 'release', 'update', 'documentation']",{'issue': 100}
"['argument', 'method', 'update', 'crash']",{'crash': 100}
"['integer', 'property', 'check', 'object']",{'integer': 100}
"['license', 'update', 'buildchecker', 'subdependency', 'eslint', 'license', 'acceptable', 'issue', 'master', 'error']",{'issue': 100}
"['object', 'crash', 'shorthand']",{'crash': 100}
"['issue', 'regression', 'specifies', 'assert', 'regression', 'significant', 'option', 'environment', 'people', 'setting', 'parser', 'child', 'corresponding', 'override', 'parseroptions', 'config', 'thing', 'project', 'modify', 'project', 'problem', 'importanteslint', 'issue']",{'issue': 100}
"['style', 'block', 'update', 'check', 'allman', 'style', 'block', 'update', 'check', 'allman', 'indentcommit', 'handler', 'logic', 'function', 'blockstatement', 'indentation', 'style', 'block', 'issue', 'indent', 'update', 'allman', 'arraycomment', 'explanation', 'blockstatements', 'update']",{'issue': 100}
"['arrow', 'function', 'indent', 'crash', 'parenscommit', 'arrow', 'parameter', 'parenthesis', 'function']",{'crash': 100}
"['problem', 'number', 'fixableproblem', 'number', 'fixablemessage', 'shortencount', 'codeframe', 'fixablerebase', 'update', 'indentation', 'issue']",{'issue': 100}
"['rewriterewrite', 'indent', 'updateeslint', 'issuedisadvantage', 'implementation', 'property', 'offset', 'object', 'constraint', 'number', 'satisfies', 'indentation', 'certain', 'space', 'openingexplicit', 'eslint', 'indentation', 'issue', 'check', 'callexpression', 'incorrecteslint', 'indentation', 'ternary', 'issue', 'assignment', 'check', 'expression', 'checkedeslint', 'pattern', 'parenthesis', 'token', 'indentation', 'issue', 'indent', 'check', 'comment', 'expression', 'couldcommit', 'strategy', 'indent', 'rewritespecific', 'offset', 'object', 'indent', 'offsetstorage', 'token', 'element', 'array', 'value', 'hashmap', 'indentation', 'comment', 'openingblockstatement', 'brace', 'token', 'offset', 'modify', 'token', 'indentation', 'desiredoffsets', 'calculatevalue', 'token', 'indentation', 'token', 'indentation', 'exception', 'check', 'ensures', 'offset', 'parent', 'context', 'evaluatedentire', 'previous', 'indentation', 'multiple', 'parent', 'people', 'indentation', 'inconsistency', 'implementation', 'ignores', 'decidedversusseveral', 'indentation', 'comment', 'threetoken', 'indentation', 'righttoken', 'indentation', 'rightindentation', 'comment', 'computedendcolumn', 'ensure', 'endline', 'weakmaps', 'object', 'improvecomment', 'explanation', 'updatevariable', 'capitalizationlogic', 'check', 'equalitywithout', 'blocksingle', 'statement', 'style', 'semicolon']",{'issue': 100}
"['buffer', 'constructorbuffer', 'constructorinput', 'example']",{'buffer': 100}
"['multiple', 'space', 'emptycrash', 'multiple', 'space', 'emptycommit', 'multiple', 'empty', 'crash', 'newline', 'space', 'trailingduplication']",{'crash': 100}
"['eslint', 'negation', 'unsafe', 'clarifycommit', 'eslint', 'negation', 'unsafe', 'native', 'update', 'negatedeslint', 'issue']",{'issue': 100}
"['notation', 'integer', 'autofix', 'property', 'syntax', 'invalidcommit', 'integer', 'property', 'literal', 'update', 'object', 'access', 'fixer', 'place', 'insert', 'notation', 'number', 'decimal', 'autofixer']",{'integer': 100}
"['generate', 'option', 'config', 'invalidlogic', 'invalid', 'generate', 'option', 'generatingpropertyfirst', 'object', 'option', 'invalid', 'configs', 'generate', 'generator', 'statement', 'issue', 'string', 'similar', 'generatingresult', 'worth', 'implementation', 'option', 'invalid', 'future', 'statement', 'detail', 'crash', 'errorcommit', 'issue', 'option']","{'issue': 100, 'crash': 100}"
"['chore', 'property', 'location', 'error', 'incorrect']",{'incorrect': 100}
"['selector', 'example', 'incorrect']",{'incorrect': 100}
"['chore', 'configpublic', 'eslint', 'module', 'issue']",{'issue': 100}
"['declaration', 'crash', 'mixedcommit', 'declaration', 'declarator', 'assignment', 'update']",{'crash': 100}
"['assignment', 'crashdetermine', 'ignore', 'function', 'assignment', 'update', 'check', 'expression', 'crash']",{'crash': 100}
"['literal', 'string', 'crash', 'literal', 'string', 'crash', 'computedorder', 'function', 'update', 'object', 'operation', 'performs', 'detect', 'string', 'checkliteral']",{'crash': 100}
"['vulnerable', 'stream', 'priorknown', 'concat', 'vulnerable', 'stream', 'priorconcat', 'stream', 'slackknown', 'concat', 'update', 'vulnerable', 'stream', 'priorconcat', 'stream']",{'vulnerable': 100}
"['source', 'chore', 'incorrect']",{'incorrect': 100}
"['uncommon', 'linebreaks', 'update', 'consistentlyuncommon', 'linebreaks', 'update', 'eslint', 'character', 'linebreaks', 'regex', 'issue', 'implementation', 'account', 'string', 'different', 'implementedcommit', 'property', 'linebreaksexpression', 'linebreaks', 'regularfunction', 'linebreaks', 'regex', 'updatechange', 'observablemessage', 'string', 'report', 'multi', 'errorcontains', 'global', 'location', 'report', 'linebreak', 'invalidcontains', 'token', 'exception', 'comment', 'option', 'errorbuildlogic', 'whitespace', 'multi', 'space']",{'issue': 100}
"['extra', 'incorrect']",{'incorrect': 100}
"['statement', 'chore', 'parent', 'check', 'unifystatement', 'constant', 'issue', 'check', 'utils']",{'issue': 100}
"['precedence', 'parens', 'extra', 'incorrect']",{'incorrect': 100}
"['bracket', 'incorrect']",{'incorrect': 100}
"['template', 'spacingtemplate', 'spacingtemplate', 'parens', 'checkchange', 'issue', 'category', 'stylisticintro', 'documentation', 'intro', 'rewrote', 'descriptive', 'templateincludes', 'readingbetter', 'update', 'conceptcommentdocumentationpresent', 'behaviour', 'comment', 'template']",{'issue': 100}
"['indent', 'array', 'object', 'crash', 'sparse']",{'crash': 100}
"['brace', 'statement', 'style', 'block', 'crash']",{'crash': 100}
"['astutils', 'regex', 'catastrophic', 'linebreakastutils', 'regex', 'catastrophic', 'linebreaksusceptible', 'eslint', 'source', 'regular', 'utils', 'expression', 'quadratic', 'character', 'issue', 'catastrophicapplies', 'contains', 'useless', 'character', 'astutils', 'multiple', 'empty', 'report', 'error', 'trailingexample', 'simplifiedcomment', 'explanatory']",{'issue': 100}
"['useless', 'overflow', 'return', 'stack']","{'overflow': 100, 'stack': 100}"
"['fixer', 'property', 'update', 'object', 'newlinefixer', 'property', 'update', 'object', 'newlineremove', 'comment', 'commentremove', 'comment', 'incorrect']",{'incorrect': 100}
"['large', 'multiple', 'issue', 'empty']",{'issue': 100}
"['generation', 'config']",{'generation': 100}
"['shorthand', 'autofix', 'object', 'syntax', 'errorrefactors', 'logic', 'issue', 'shorthand', 'avoidasync', 'syntax', 'method', 'property', 'longform', 'shorthand', 'errorshorthand', 'property', 'longform', 'error', 'syntax']",{'issue': 100}
"['comment', 'default', 'insensitive', 'update']",{'Sensitive': 90}
"['blogpostcommit', 'message', 'strict', 'eslint', 'blogpost', 'issue', 'acedecaedff']",{'issue': 100}
"['incorrect', 'issue', 'requirement', 'guideissuecomment', 'eslint', 'issue']","{'incorrect': 100, 'issue': 100}"
"['template', 'update', 'false', 'negative', 'quotetemplate', 'update', 'false', 'negative', 'quotecomment', 'incorrect']",{'incorrect': 100}
"['global', 'crash', 'returnvalue', 'global', 'crash', 'returnwithout', 'semicolon']",{'crash': 100}
"['unreachable', 'useless', 'overflow', 'return', 'stack']","{'overflow': 100, 'stack': 100}"
"['update', 'config', 'issue', 'scenario', 'overridden', 'option', 'confusion', 'behaviornumeric', 'string', 'insteadlevel']",{'issue': 100}
"['chore', 'incorrect']",{'incorrect': 100}
"['access', 'property', 'indent', 'array', 'check', 'incorrect']",{'incorrect': 100}
"['eslint', 'relax', 'permission', 'meeting']",{'permission': 100}
"['access', 'member', 'length']",{'length': 100}
"['multiple', 'update', 'empty', 'false', 'negativecommit', 'possible', 'logic', 'order', 'intendedstore', 'explanation', 'value', 'eslint', 'order', 'corresponding', 'overwrite', 'issue', 'literal', 'account', 'empty', 'template', 'template', 'string', 'logical', 'beginning']",{'issue': 100}
"['property', 'object', 'crash', 'shorthand', 'avoidspread', 'property', 'object', 'crash', 'shorthand', 'avoidproperty', 'additional', 'spreadgetters', 'setter', 'comment', 'update']",{'crash': 100}
"['consistent', 'issue', 'object', 'option', 'shorthand', 'neededconsistent', 'issue', 'object', 'option', 'shorthand', 'neededisredundant', 'revisecommit', 'trigger', 'agreement', 'check', 'empty']",{'issue': 100}
"['template', 'fence', 'issue']",{'issue': 100}
"['chore', 'issue', 'script', 'check', 'reference']",{'issue': 100}
"['section', 'issue']",{'issue': 100}
"['update', 'issue']",{'issue': 100}
"['issue', 'distinguish', 'example', 'stylistic']",{'issue': 100}
"['wrong', 'space', 'blank', 'skipblanklines', 'length', 'option', 'total']",{'length': 100}
"['symbol', 'statement', 'constructor', 'incorrect']",{'incorrect': 100}
"['licence', 'cache', 'issue']",{'issue': 100}
"['update', 'policy', 'issue']",{'issue': 100}
"['grammar', 'issue']",{'issue': 100}
"['period', 'issue']",{'issue': 100}
"['example', 'incorrect']",{'incorrect': 100}
"['length', 'exceptionchangedexception', 'acceptsproperty']",{'length': 100}
"['issue', 'distinguish', 'example', 'stylistic']",{'issue': 100}
"['config', 'errormessage', 'feedbackdirectory', 'ancestor', 'suggestion', 'ianvsjsdoc', 'block', 'comment', 'jsdoc', 'unclear', 'issue']",{'issue': 100}
"['distinguish', 'block', 'quotereflectprevious', 'exampleconsistentaddress', 'attempt', 'issuedealt', 'issue', 'statedsweep', 'subsequentaround', 'space', 'fencedremove', 'blockquotes']",{'issue': 100}
"['examplesweep', 'batch', 'finalensure', 'examplespecific', 'suitable', 'option', 'exampleensure', 'consistent', 'exampleaddress', 'attempt', 'issuedealt', 'issue', 'statedsweep', 'errorstyle', 'unorderedstyle', 'unorderedstyle', 'unorderedstyle', 'unorderedindentation', 'unorderedindentationmarkdown', 'errormessage', 'error', 'setting', 'exposemarkdownlint', 'issuecomment', 'davidanson', 'issue']",{'issue': 100}
"['exampleensure', 'examplespecific', 'suitable', 'option', 'exampleensure', 'consistent', 'exampleaddress', 'attempt', 'issuedealt', 'issue', 'statedsweep', 'duplicate', 'importlater']",{'issue': 100}
"['issue', 'distinguish', 'example', 'stylistic']",{'issue': 100}
"['declaration', 'crash']",{'crash': 100}
"['issue', 'distinguish', 'example', 'stylistic']",{'issue': 100}
"['autoconfig', 'inline', 'comment', 'crash']",{'crash': 100}
"['afcacb', 'mergestylistic', 'request', 'issue', 'scriptdaemon', 'mergeissue', 'distinguish', 'example', 'stylistic']",{'issue': 100}
"['issue', 'distinguish', 'example', 'stylistic']",{'issue': 100}
"['mergeeslint', 'request', 'super', 'crash', 'mergecrash']",{'crash': 100}
"['length', 'paragraph', 'index']",{'length': 100}
"['mergestylistic', 'request', 'issue', 'scriptdaemon', 'mergeissue', 'distinguish', 'example', 'stylistic']",{'issue': 100}
"['issue', 'distinguish', 'example', 'stylistic']",{'issue': 100}
"['mergepedrottimark', 'stylistic', 'request', 'example', 'issue', 'distinguish', 'mergeissue', 'distinguish', 'example', 'stylistic']",{'issue': 100}
"['issue', 'distinguish', 'example', 'stylistic']",{'issue': 100}
"['mergerequest', 'eslint', 'valid', 'array', 'field', 'crash']",{'crash': 100}
"['mergerequest', 'issue', 'object', 'error']",{'issue': 100}
"['cbfbeb', 'mergeeslint', 'request', 'gyandeeps', 'patch', 'mergejsdoc', 'valid', 'issue']",{'issue': 100}
"['valid', 'issue']",{'issue': 100}
"['aafafd', 'mergerequest', 'issue', 'configs', 'support']",{'issue': 100}
"['adcbfmessage', 'request', 'config', 'incorrectmessage', 'config', 'incorrect']",{'incorrect': 100}
"['mergerequest', 'issue', 'afahimunary', 'space', 'update', 'override']",{'issue': 100}
"['aefcc', 'mergeuseless', 'eslint', 'request', 'crash', 'constructor', 'mergeclash', 'useless', 'constructor']",{'crash': 100}
"['mergeplatinumazure', 'request', 'issue', 'template', 'mergeseparate', 'issue', 'template', 'config', 'question', 'parser']",{'issue': 100}
"['separate', 'issue', 'template', 'config', 'question', 'parser']",{'issue': 100}
"['mergerequest', 'plugins', 'environment', 'mergeenvironment', 'incorrect']",{'incorrect': 100}
"['environment', 'incorrect']",{'incorrect': 100}
"['object', 'crash', 'sourcecode']",{'crash': 100}
"['bffbc', 'mergerequest', 'issue', 'regexp', 'update', 'invalid']",{'issue': 100}
"['update', 'consistent', 'exclude', 'return', 'constructorcommit', 'disables', 'consistent', 'returnvalue', 'return', 'implicitlysimple', 'return', 'exampleclass', 'instantiation', 'pattern', 'popularizedcommit', 'exclusion', 'constructorcould', 'option', 'invalid', 'easilycommon', 'consistent', 'return', 'constructorcommit', 'utils', 'expose', 'isesconstructorconsistentissuecomment', 'eslint', 'locke', 'kevin']",{'expose': 100}
"['ccaaerequest', 'kaicataldo', 'mergetemplate', 'issue']",{'issue': 100}
"['template', 'issue']",{'issue': 100}
"['ebffe', 'mergerequest', 'issue', 'afahimconflict', 'multi', 'smart', 'space']",{'issue': 100}
"['mergerequest', 'eslint', 'issuesuper', 'crash', 'constructor']",{'crash': 100}
"['super', 'crash', 'constructor']",{'crash': 100}
"['fbbdca', 'mergeeslint', 'request', 'mergeparam', 'jsdoc', 'config', 'incorrect']",{'incorrect': 100}
"['param', 'jsdoc', 'config', 'incorrect']",{'incorrect': 100}
"['mergemysticatea', 'request', 'crash', 'newline', 'mergecrash', 'newline', 'switch', 'statement']",{'crash': 100}
"['crash', 'newline', 'switch', 'statement']",{'crash': 100}
"['mergemysticatea', 'function', 'request', 'empty', 'crash', 'mergefunction', 'crash', 'empty']",{'crash': 100}
"['function', 'crash', 'empty']",{'crash': 100}
"['mergereadme', 'request', 'eslint', 'mergedocumentation', 'issue']",{'issue': 100}
"['documentation', 'issue']",{'issue': 100}
"['mergemysticatea', 'request', 'import', 'crash', 'mergeimport', 'crash']",{'crash': 100}
"['import', 'crash']",{'crash': 100}
"['mergemysticatea', 'request', 'index', 'range', 'mergeperformance', 'issue']",{'issue': 100}
"['performance', 'issue']",{'issue': 100}
"['mergerequest', 'eslint', 'location', 'object', 'error', 'incorrect']",{'incorrect': 100}
"['mergerequest', 'eslint', 'issuelocation', 'space', 'parens', 'error', 'incorrect']",{'incorrect': 100}
"['location', 'object', 'error', 'incorrect']",{'incorrect': 100}
"['location', 'space', 'parens', 'error', 'incorrect']",{'incorrect': 100}
"['mergekeithamus', 'request', 'blacklist', 'mergeblacklist']",{'blacklist': 100}
"['dbacf', 'mergerequest', 'eslint', 'issuevalue', 'integer', 'minimum', 'update', 'schema']",{'integer': 100}
"['value', 'integer', 'minimum', 'update', 'schema']",{'integer': 100}
"['mergerequest', 'eslint', 'multiple', 'error', 'incorrect']",{'incorrect': 100}
"['mergerequest', 'eslint', 'location', 'block', 'incorrect']",{'incorrect': 100}
"['multiple', 'error', 'incorrect']",{'incorrect': 100}
"['location', 'block', 'incorrect']",{'incorrect': 100}
"['mergerequest', 'marcelozarate', 'issueexample', 'issue', 'semantic', 'small', 'documentation']",{'issue': 100}
"['example', 'issue', 'semantic', 'small', 'documentation']",{'issue': 100}
"['mergerequest', 'issue']",{'issue': 100}
"['advice', 'followaltercation', 'issuechalk', 'issue']",{'issue': 100}
"['message', 'quoteeslint', 'output', 'consumes', 'style', 'quote', 'undef', 'style', 'different', 'quoteplugins', 'emittedsmooth', 'inconsistencyfuture', 'thingchange', 'thing', 'inclinationeslint', 'plugin', 'quoteinvestigation', 'inconsistency', 'amountsingle', 'double', 'eslintsingle', 'others', 'decidedquotecommit', 'othersimport', 'issuecomment', 'issue', 'trotzig']",{'issue': 100}
"['number', 'changedvalue', 'integer']",{'integer': 100}
"['mergerequest', 'issue', 'cschulleroption', 'magic', 'number']",{'issue': 100}
"['bffffe', 'mergerequest', 'issue']",{'issue': 100}
"['mergerequest', 'eslint', 'issuefirst', 'issue', 'indent', 'comma']",{'issue': 100}
"['issue', 'indent', 'comma']",{'issue': 100}
"['length', 'option', 'commentseparate', 'source', 'length']",{'length': 100}
"['mergerequest', 'issue', 'regsebruleid', 'property']",{'issue': 100}
"['dadfb', 'mergerequest', 'issue', 'betaorbustreason', 'upgrade', 'security', 'handlebar']","{'issue': 100, 'Security': 100}"
"['reason', 'upgrade', 'security', 'handlebarhandlebar', 'security', 'vulnerability', 'versionadvisoryeslint', 'handlebar', 'minimum', 'update', 'version']",{'Security': 100}
"['mergerequest', 'issue', 'option', 'underscore']",{'issue': 100}
"['mergeplatinumazure', 'request', 'eqeqeq', 'issue', 'autofix', 'mergeautofix', 'bugfix', 'eqeqeq']",{'issue': 100}
"['fafbefrequest', 'eslint', 'issuefallthrough', 'location', 'incorrect']",{'incorrect': 100}
"['fallthrough', 'location', 'incorrect']",{'incorrect': 100}
"['deebe', 'bbbcaaa', 'mergemysticatea', 'request', 'length', 'property', 'mergelength', 'property', 'option']",{'length': 100}
"['mergerevert', 'eslint', 'request', 'issue', 'mergerevert', 'exception', 'update', 'parens']",{'issue': 100}
"['mergemysticatea', 'request', 'native', 'crash', 'defineproperty', 'native', 'empty']",{'crash': 100}
"['length', 'property', 'option']",{'length': 100}
"['mergerevert', 'eslint', 'request', 'issue', 'mergearrow', 'revert', 'update', 'empty']",{'issue': 100}
"['mergewindow', 'request', 'issue', 'royriojas', 'master', 'mergehandle', 'cachelocation', 'window']",{'issue': 100}
"['bedafcache', 'request', 'issue', 'royriojas', 'global', 'mergecache', 'store', 'directory', 'update']",{'issue': 100}
"['mergerequest', 'issue', 'multiple', 'update', 'maxeof']",{'issue': 100}
"['mergecondition', 'arrow', 'request', 'issue', 'lukekarrys', 'mergecondition', 'arrow']",{'issue': 100}
"['string', 'update', 'error', 'ruletestermessage', 'result', 'incorrect', 'string', 'error', 'assertion', 'invalid', 'ruletester']",{'incorrect': 100}
"['mergerequest', 'issue', 'winterbesupport', 'update', 'nashorn', 'engine']",{'issue': 100}
"['generation', 'formatter']",{'generation': 100}
"['mergerequest', 'eslint', 'indentfuncfixfunction', 'indent', 'issue']",{'issue': 100}
"['function', 'indent', 'issue']",{'issue': 100}
"['mergerequest', 'autocomment', 'eslint', 'mergeshorten', 'issue', 'autocomment', 'simplify']",{'issue': 100}
"['shorten', 'issue', 'autocomment', 'simplify']",{'issue': 100}
"['mergemysticatea', 'request', 'global', 'crash']",{'crash': 100}
"['ebcae', 'mergeplatinumazure', 'request', 'length', 'check', 'checkcommitcommit', 'check', 'message']",{'length': 100}
"['effefd', 'mergemysticatea', 'pattern', 'request', 'empty', 'object', 'crash', 'empty', 'object']",{'crash': 100}
"['dedcdaa', 'mergerequest', 'issue', 'guerreroconsistent', 'keyword']",{'issue': 100}
"['mergerequest', 'joakimbeng', 'master', 'mergespread', 'object', 'crash', 'syntax', 'quote']",{'crash': 100}
"['object', 'crash', 'syntax', 'quote']",{'crash': 100}
"['crash', 'indent', 'empty']",{'crash': 100}
"['fbeae', 'mergerequest', 'eslint', 'issueindentation', 'issue']",{'issue': 100}
"['indentation', 'issue']",{'issue': 100}
"['mergerequest', 'mathieumg', 'mergeignore', 'length', 'property', 'option']",{'length': 100}
"['ceabc', 'mergerequest', 'literal', 'property', 'object', 'crash', 'shorthand']",{'crash': 100}
"['literal', 'property', 'object', 'crash', 'shorthand']",{'crash': 100}
"['ignore', 'length', 'property', 'update', 'option']",{'length': 100}
"['length', 'pattern']",{'length': 100}
"['bfaaacf', 'mergelength', 'request', 'arrow', 'mergeviolation', 'arrow', 'parameter', 'function', 'length', 'catch']",{'length': 100}
"['violation', 'arrow', 'parameter', 'function', 'length', 'catch']",{'length': 100}
"['debcec', 'mergerequest', 'eslint', 'issuestatic', 'geterrorresults', 'expose', 'cliengine', 'method', 'update']",{'expose': 100}
"['static', 'geterrorresults', 'expose', 'cliengine', 'method', 'update']",{'expose': 100}
"['mergerequest', 'eslint', 'issuestatic', 'expose', 'cliengine', 'method', 'update', 'getformatter']",{'expose': 100}
"['static', 'expose', 'cliengine', 'method', 'update', 'getformatter']",{'expose': 100}
"['request', 'block', 'scratch', 'block', 'issue']",{'issue': 100}
"['block', 'issue']",{'issue': 100}
"['cffbdrequest', 'patch', 'albburtsev', 'mergesyntax', 'example', 'incorrect']",{'incorrect': 100}
"['syntax', 'example', 'incorrect']",{'incorrect': 100}
"['cbfff', 'mergemessage', 'eslint', 'request', 'issue', 'mergemessage', 'automatic', 'clarify']",{'issue': 100}
"['mergerequest', 'eslint', 'issuetemplate', 'issue']",{'issue': 100}
"['template', 'issue']",{'issue': 100}
"['mergerequest', 'eslint', 'issueeslint', 'issue', 'shallow', 'config']",{'issue': 100}
"['eslint', 'issue', 'shallow', 'config']",{'issue': 100}
"['febdee', 'mergerequest', 'mathieumg', 'check', 'crash']",{'crash': 100}
"['crash', 'sparse', 'array']",{'crash': 100}
"['mergerevert', 'eslint', 'request', 'issue', 'mergerevert']",{'issue': 100}
"['sanitise', 'revert', 'jekyll', 'generation', 'interpolation']",{'generation': 100}
"['mergemichaelficarra', 'request', 'patch', 'mergejekyll', 'generation', 'sanitise', 'interpolation']",{'generation': 100}
"['mergerequest', 'issue', 'option', 'update']",{'issue': 100}
"['ecmafeatures', 'regexp', 'invalideslint', 'issuecomment', 'issue']",{'issue': 100}
"['jekyll', 'generation', 'sanitise', 'interpolation']",{'generation': 100}
"['mergerequest', 'issue', 'ianvssingle', 'ignore', 'alignment', 'vertical']",{'issue': 100}
"['crash', 'pattern', 'array', 'empty']",{'crash': 100}
"['mergerequest', 'eslint', 'issueproperty', 'crash']",{'crash': 100}
"['mergerequest', 'eslint', 'issuecaseless', 'crash', 'switch', 'indent']",{'crash': 100}
"['property', 'crash']",{'crash': 100}
"['caseless', 'crash', 'switch', 'indent']",{'crash': 100}
"['mergerequest', 'eslint', 'recursive', 'issue']",{'issue': 100}
"['recursive', 'issue']",{'issue': 100}
"['bebbarequest', 'eslint', 'crash', 'workaround', 'escope']",{'crash': 100}
"['crash', 'workaround', 'escope']",{'crash': 100}
"['mergerequest', 'patch', 'ianvsrequest', 'requirement', 'issue', 'clarify']",{'issue': 100}
"['request', 'requirement', 'issue', 'clarify']",{'issue': 100}
"['mergerequest', 'glenjamin', 'config', 'mergegiven', 'crash', 'config']",{'crash': 100}
"['mergeeslint', 'request', 'issue', 'indent', 'valorkin', 'mergeindentation', 'update', 'eslint']",{'issue': 100}
"['generation', 'jsdoc']",{'generation': 100}
"['aacdc', 'mergerequest', 'eslint', 'issuecontext', 'ecmafeatures', 'update', 'expose']",{'expose': 100}
"['context', 'ecmafeatures', 'update', 'expose']",{'expose': 100}
"['mergehegemonic', 'request', 'index', 'mergealphabetize', 'issue', 'section', 'stylistic']",{'issue': 100}
"['alphabetize', 'issue', 'section', 'stylistic']",{'issue': 100}
"['mergerequest', 'eslint', 'issueprevent', 'block', 'empty', 'crash', 'return']",{'crash': 100}
"['block', 'empty', 'crash', 'return']",{'crash': 100}
"['mergerequest', 'btmills', 'issuemulti', 'element', 'array', 'empty', 'crash', 'space']",{'crash': 100}
"['multi', 'element', 'array', 'empty', 'crash', 'space']",{'crash': 100}
"['eedbfc', 'mergerequest', 'eslint', 'crash', 'plugins']",{'crash': 100}
"['crash', 'plugins']",{'crash': 100}
"['whitespacegetsourcelines', 'issue']",{'issue': 100}
"['mergeseparate', 'eslint', 'request', 'publish', 'gensite', 'mergeseparate', 'generation']",{'generation': 100}
"['separate', 'generation']",{'generation': 100}
"['contribution', 'bounty', 'description', 'issue', 'guideline']",{'issue': 100}
"['mergemichaelficarra', 'request', 'mergeeslintrc', 'crash']",{'crash': 100}
"['eslintrc', 'crash']",{'crash': 100}
"['mergerequest', 'gyandeeps', 'master', 'mergecliengine', 'expose']",{'expose': 100}
"['cliengine', 'expose']",{'expose': 100}
"['mergerequest', 'index', 'resource', 'jrajav', 'exclude', 'mergereadme', 'index', 'resource', 'generation', 'exclude']",{'generation': 100}
"['readme', 'index', 'resource', 'generation', 'exclude']",{'generation': 100}
"['issue', 'configuration', 'layout']",{'issue': 100}
"['crash', 'resetresetmultiplepresence', 'similar', 'issuestraightforward', 'config', 'project']",{'crash': 100}
"['mergerequest', 'master', 'briandipalma', 'return', 'incorrect']",{'incorrect': 100}
"['return', 'incorrect']",{'incorrect': 100}
"['mergerequest', 'eslint', 'issue', 'expression', 'shadow']",{'issue': 100}
"['issue', 'expression', 'shadow']",{'issue': 100}
"['validation', 'formatter', 'issue']",{'issue': 100}
"['optimist', 'option', 'optionatoroptimist', 'simplifiedarray', 'command', 'insteadoption', 'accessibleinsteadlengthy', 'issue', 'comment', 'longerusingresponsibility']",{'issue': 100}
"['generation', 'update', 'support', 'documentation']",{'generation': 100}
"['config', 'allowparse', 'force', 'extensioncommit', 'parse', 'preferable', 'consensus', 'issue', 'config', 'restriction']",{'issue': 100}
"['dfdfcilyavolodin', 'request', 'mergeclose', 'issue', 'assignment']",{'issue': 100}
"['assignment', 'initialization', 'issue']",{'issue': 100}
"['bfdac', 'mergerequest', 'undef', 'issue', 'mamacdon', 'mergefalse', 'undef', 'warning']",{'issue': 100}
"['false', 'iterator', 'proto', 'positiveiterator', 'incorrectlyvariable', 'propertyeslint', 'issuecomment', 'issue', 'comment', 'nzakas']",{'issue': 100}
"['issue', 'report', 'option', 'errorseverity', 'error']",{'issue': 100}
"['variable', 'declaration', 'track', 'stack']",{'stack': 100}
"['expose', 'runtime', 'access']",{'expose': 100}
"['cafdb', 'mergelabel', 'request', 'empty', 'ilyavolodin', 'mergelabel', 'issue', 'empty']",{'issue': 100}
"['length', 'conventionconvention', 'eslint', 'nzakas']",{'length': 100}
"['style', 'issue']",{'issue': 100}
"['fcaba', 'mergerequest', 'iancmyers', 'semicolon', 'incorrect']",{'incorrect': 100}
"['execution', 'serial', 'programatic', 'outputcommit', 'function', 'issue', 'multiple', 'output', 'array', 'incorrect']","{'issue': 100, 'incorrect': 100}"
"['execution', 'issue', 'process', 'optionwould', 'eslint']",{'issue': 100}
