message,fuzzy
"['mergecache', 'request', 'aliemjay', 'mergesystem', 'downloads', 'crash']",{'crash': 100}
"['flush', 'control', 'buffer', 'savingpiece', 'ensures', 'corruption', 'preventsystemnasrawy']",{'buffer': 100}
"['flush', 'control', 'buffer', 'controlwritten', 'storage', 'thoughdownloads', 'corruption', 'preventnasrawy']",{'buffer': 100}
"['ebdddb', 'mergeupload', 'download', 'request', 'length', 'reset', 'mergestart', 'reset', 'download']",{'length': 100}
"['suite', 'appletls', 'update', 'cipher']",{'cipher': 100}
"['mergerequest', 'patch', 'nehebplatform', 'compilation', 'openssl', 'openssl']",{'OpenSSL': 100}
"['logic', 'libressl', 'version', 'openssl']",{'OpenSSL': 100}
"['appletls', 'cipher', 'silence', 'selection', 'suite']",{'cipher': 100}
"['concurrent', 'downloads', 'option', 'clarify']",{'concurrent': 100}
"['ddcfbfoptimize', 'concurrent', 'request', 'concurrent', 'downloads']",{'concurrent': 100}
"['concurrent', 'downloads']",{'concurrent': 100}
"['document', 'thread', 'libaria']",{'thread': 100}
"['wintls', 'writedata', 'rewritemajor', 'wintlssession', 'pointhandshake', 'buffer', 'preallocatedallocatedschannel', 'trailerwsasend', 'counterpart', 'windowmemmoveapplicationsince', 'wintlssession', 'semanticallycreate', 'record', 'application', 'length']","{'buffer': 100, 'length': 100}"
"['possible', 'download', 'crash', 'metadata']",{'crash': 100}
"['method', 'entrytimer', 'sequence', 'integer']",{'integer': 100}
"['concurrency', 'increase']",{'concurren': 90}
"['overflow', 'check', 'filesize']",{'overflow': 100}
"['message', 'usage', 'buffer', 'refactor', 'bittorrent']",{'buffer': 100}
"['manual', 'concurrent', 'downloads', 'document', 'option']",{'concurrent': 100}
"['concurrent', 'downloads', 'option']",{'concurrent': 100}
"['ffbef', 'mergeoptimize', 'concurrent', 'downloads']",{'concurrent': 100}
"['dynamic', 'concurrent', 'function', 'number', 'downloads', 'bandwidth', 'overall', 'support']",{'concurrent': 100}
"['system', 'crypto', 'policy', 'support']",{'crypto': 100}
"['buffercheck', 'facilityexistence', 'remote', 'eventcommit', 'issue', 'length', 'return', 'introducingsocketcore', 'providestlssession']","{'issue': 100, 'length': 100}"
"['connection', 'integer', 'transaction']",{'integer': 100}
"['openssl', 'compile']",{'OpenSSL': 100}
"['readme', 'version', 'android', 'update', 'openssl']",{'OpenSSL': 100}
"['option', 'buffer', 'socketsocket', 'buffer', 'maximumvalue', 'socket', 'descriptorsetsockopt', 'option', 'socket', 'usingoption', 'usecase']",{'buffer': 100}
"['result', 'download', 'speed', 'issue']",{'issue': 100}
"['force', 'option', 'encryptionmessage', 'encryption', 'payload', 'option', 'bittorrentcrypto', 'shorthand', 'requrelevel', 'crypto', 'legacy', 'bittorrentencrypt', 'handshake', 'obfuscation', 'alwaysmessage', 'default', 'option']","{'encryption': 100, 'crypto': 100}"
"['openssl', 'compile']",{'OpenSSL': 100}
"['cipher', 'suite', 'ecdhe']",{'cipher': 100}
"['response', 'empty', 'crash', 'vector', 'batch']",{'crash': 100}
"['concurrent', 'downloads', 'option', 'excludesoption', 'active', 'downloadsdownloads', 'active', 'option', 'turnedactive', 'download', 'enters', 'active', 'download']",{'concurrent': 100}
"['crash', 'proxy']",{'crash': 100}
"['crashdiskadaptor', 'crash', 'piecestorage']",{'crash': 100}
"['unknown', 'download', 'bitfield', 'length', 'methoddownload', 'available', 'bitfield', 'length', 'totalcreate', 'download', 'bitfield']",{'length': 100}
"['issue', 'address', 'report']",{'issue': 100}
"['support', 'endianess', 'pbkdfimplementation', 'nmaier', 'cryptonmaier', 'crypto', 'functionality', 'endianessclose']",{'crypto': 100}
"['download', 'failure', 'option', 'assertiondirectory', 'changedfileentry', 'setpath', 'string', 'emptyprevious', 'directory', 'appliedlength', 'property', 'reset', 'unexpectedtaken', 'emptycommit', 'issue', 'length', 'setting', 'usingfileentry', 'setlength']","{'issue': 100, 'length': 100}"
"['number', 'integer', 'check']",{'integer': 100}
"['pbkdf', 'security']",{'Security': 100}
"['mingw', 'buildmingw', 'compiler', 'definesstdio', 'mingw', 'function', 'linux', 'behaves', 'testeddefines', 'pthread', 'windowversion', 'rename']",{'thread': 92}
"['ariarpc', 'encryption', 'channel', 'support']",{'encryption': 100}
"['unpause', 'crash', 'object']",{'crash': 100}
"['crash', 'unitest']",{'crash': 100}
"['crash', 'contains', 'unsupported', 'metaurl']",{'crash': 100}
"['stack', 'overflow']","{'stack': 100, 'overflow': 100}"
"['implementation', 'dhkeyexchange', 'broughtperformant', 'shoud', 'mightenough', 'purposeappletls', 'openssl', 'dependency', 'wintls']",{'OpenSSL': 100}
"['warning', 'compiler', 'openssl']",{'OpenSSL': 100}
"['public', 'expose', 'interface', 'struct', 'downloadhandle']",{'expose': 100}
"['generation', 'directive']",{'generation': 100}
"['information', 'cipher', 'session', 'block']",{'cipher': 100}
"['address', 'check', 'linklocakloopback', 'query', 'record', 'issue', 'addressloopback', 'query', 'record', 'issueaddress', 'linklocak']",{'issue': 100}
"['vprintf', 'rewrite', 'gzipfilemingw', 'vasprintfvsnprintf', 'mingw', 'vsnprintf', 'buffer']",{'buffer': 100}
"['iterator', 'indexedlist', 'implementiterator', 'dangerous', 'expose']",{'expose': 100}
"['length', 'crash', 'filename']","{'length': 100, 'crash': 100}"
"['length', 'instance']",{'length': 100}
"['btmessage', 'removedchecknumber', 'entry', 'buffer']",{'buffer': 100}
"['buffer', 'entry', 'btmessages']",{'buffer': 100}
"['overflow', 'bitfieldman']",{'overflow': 100}
"['cache', 'contagious', 'appendreceive', 'cache', 'entry', 'small', 'becomescache', 'buffer', 'mitigate', 'leastcache', 'contagious', 'append']",{'buffer': 100}
"['encryption', 'command']",{'encryption': 100}
"['compression', 'openssl']",{'OpenSSL': 100}
"['length', 'check', 'exceedrequestgroup', 'metalink', 'metaurl', 'bittorrentensure', 'thoese', 'multipleequal']",{'length': 100}
"['insteaddiskadaptor', 'problematic', 'totalwithout', 'system', 'overflow', 'exceedcheck', 'largelength', 'download']",{'overflow': 100}
"['bufferedfile', 'allocation', 'stack', 'reference']",{'stack': 100}
"['possible', 'buffer', 'message']",{'buffer': 100}
"['rewritten', 'peerconnection', 'receivemessageimplementation', 'length', 'leastpayload', 'receivepossible', 'btpiecemessageconst', 'pointer', 'buffer']","{'length': 100, 'buffer': 100}"
"['vsnprintf', 'mingw', 'returnvsnprintf', 'buffer', 'output', 'return', 'mingwwinconsolefile', 'vsnprintf']",{'buffer': 100}
"['possible', 'library', 'crypto', 'clarifytracker', 'detail']",{'crypto': 100}
"['failure', 'content', 'length']",{'length': 100}
"['integer', 'param', 'valid', 'check', 'addedensure', 'method', 'fileindexequal']",{'integer': 100}
"['value', 'integer', 'element']",{'integer': 100}
"['capacity', 'peerconnection', 'buffer', 'number', 'reserve', 'accordingpiece', 'message', 'number', 'bitfield', 'lengthcapacity', 'initial', 'buffer', 'payload', 'exceedsexpand', 'buffer', 'necessarypeerconnection', 'bitfield']",{'buffer': 100}
"['compile', 'libgcrypt', 'openssl', 'error']",{'OpenSSL': 100}
"['download', 'assumelength', 'exception', 'length', 'check', 'checksum', 'issuelength', 'deletedsuccessful']",{'length': 100}
"['length', 'rangebtmessage']",{'length': 100}
"['piece', 'length']",{'length': 100}
"['piece', 'ariarpc', 'length', 'option']",{'length': 100}
"['piece', 'length', 'addedpiece', 'option', 'lengthoccur', 'multiple', 'boundary', 'splitoption', 'bittorrentpiece', 'contains']",{'length': 100}
"['enable', 'workarounds', 'buggymemory', 'usage', 'support', 'openssl']",{'OpenSSL': 100}
"['length', 'limit', 'maximumdownloadsmemory', 'download', 'maximum', 'bytearraywriterreasonable', 'defaultsmaller']",{'length': 100}
"['initialization', 'libgcryptchange', 'crypto', 'default', 'initialize', 'libgcrypt']",{'crypto': 100}
"['server', 'async', 'server', 'address', 'accepts', 'option', 'asynchronous', 'resolveraddress', 'server', 'optionserver', 'option', 'insteadspecifyuseful', 'system', 'optioncreate', 'permission']",{'permission': 100}
"['overflow', 'progress', 'calculation', 'percentageallocation', 'check']",{'overflow': 100}
"['mingw', 'check', 'permission']",{'permission': 100}
"['peekdata', 'socketcore', 'eliminatedsince', 'buffer', 'response', 'headerseveral', 'bufferheader', 'consumesresponse', 'containsince', 'socketcore', 'peekdata', 'ftpconnection']",{'buffer': 100}
"['rewritten', 'checkpeerconnection', 'simplifiedpeerconnection', 'buffer', 'check']",{'buffer': 100}
"['length', 'connection']",{'length': 100}
"['tujikawa', 'tatsuhiro', 'tsujikawapiece', 'length', 'allowrealtime', 'crypto', 'chunk', 'optional', 'checksumusage', 'unique', 'metalink']","{'length': 100, 'crypto': 100}"
"['tujikawa', 'tatsuhiro', 'tsujikawaempty', 'instance', 'length', 'range', 'returnprevent', 'content', 'header']",{'length': 100}
"['tujikawa', 'tatsuhiro', 'compile', 'openssl', 'error']",{'OpenSSL': 100}
"['tujikawa', 'tatsuhiro', 'compile', 'openssl', 'support', 'error', 'bittorrent']",{'OpenSSL': 100}
"['tujikawa', 'tatsuhiro', 'downloads', 'length', 'download', 'speed']",{'length': 100}
"['tujikawa', 'tatsuhiro', 'handlecomponent', 'percent', 'encode', 'absolute', 'issuedownload', 'relative', 'issue']",{'issue': 100}
"['tujikawa', 'tatsuhiro', 'compile', 'openssl', 'error']",{'OpenSSL': 100}
"['tujikawa', 'tatsuhiro', 'unitest', 'openssl']",{'OpenSSL': 100}
"['tujikawa', 'tatsuhiro', 'tsujikawainject', 'metadatagetmode', 'btmessage', 'validatordownload', 'length', 'check', 'totalmetadatagetmode']",{'length': 100}
"['tujikawa', 'tatsuhiro', 'potential', 'alignment', 'integer']",{'integer': 100}
"['tujikawa', 'tatsuhiro', 'tsujikawasubclasstrack', 'element', 'stack']",{'stack': 100}
"['tujikawa', 'tatsuhiro', 'tsujikawadownload', 'session', 'length', 'updatedfastest', 'peerstat']",{'length': 100}
"['tujikawa', 'tatsuhiro', 'tsujikawasingle', 'knownfileentry', 'download', 'length', 'object', 'total']",{'length': 100}
"['tujikawa', 'tatsuhiro', 'commandknown', 'downloads', 'issue']",{'issue': 100}
"['tujikawa', 'tatsuhiro', 'tsujikawavalue', 'concurrent', 'downloads', 'option']",{'concurrent': 100}
"['tujikawa', 'tatsuhiro', 'tsujikawashare', 'writer', 'createdpiece', 'previous', 'length']",{'length': 100}
"['tujikawa', 'tatsuhiro', 'tsujikawasegmentation', 'fault', 'erroralgorithm', 'executingcompare', 'function', 'implementation', 'improper', 'returnresult']",{'improper': 100}
"['tujikawa', 'tatsuhiro', 'rednoah', 'tsujikawaredirection', 'connection', 'content', 'length', 'occurs']",{'length': 100}
"['tujikawa', 'tatsuhiro', 'rednoah', 'tsujikawapiece', 'message', 'operator', 'equality', 'length', 'addedlength']",{'length': 100}
"['tujikawa', 'tatsuhiro', 'rednoah', 'tsujikawafirst', 'issue', 'command']",{'issue': 100}
"['tujikawa', 'tatsuhiro', 'rednoah', 'tsujikawawritable', 'socket', 'buffer', 'check', 'removedbittorrentlower', 'downloads']",{'buffer': 100}
"['tujikawa', 'tatsuhiro', 'rednoah', 'compile', 'error', 'gnutlswithout', 'openssl']",{'OpenSSL': 100}
"['tujikawa', 'tatsuhiro', 'rednoah', 'tsujikawavalue', 'revert', 'concurrent', 'downloads', 'defaultvalue', 'revert', 'metalink', 'server', 'default']",{'concurrent': 100}
"['tujikawa', 'tatsuhiro', 'rednoah', 'tsujikawavalue', 'openssl', 'return']",{'OpenSSL': 100}
"['tujikawa', 'tatsuhiro', 'rednoah', 'tsujikawarandom', 'generation']",{'generation': 100}
"['tujikawa', 'tatsuhiro', 'rednoah', 'tsujikawalevel', 'crypto']",{'crypto': 100}
"['tujikawa', 'tatsuhiro', 'rednoah', 'tsujikawamessage', 'encryption', 'streamconnection', 'header', 'accepts', 'obfuscation', 'incomingestablishes', 'connection', 'legacy', 'header', 'bittorrentretry', 'legacy', 'header', 'obfuscation', 'failedplain', 'default', 'option', 'behaviorsupportcrypto', 'tracker', 'addedsupportcrypto', 'addedprepareforretry']",{'encryption': 100}
"['forgottujikawa', 'tatsuhiro', 'rednoah', 'tsujikawaexception', 'thrownpayload', 'length', 'particular', 'successiveoverwrites', 'length', 'payload', 'receivemessagepayload']",{'length': 100}
"['tujikawa', 'tatsuhiro', 'rednoah', 'tsujikawaexception', 'thrownpayload', 'length', 'particular', 'successiveoverwrites', 'length', 'payload', 'receivemessagepayload']",{'length': 100}
"['tujikawa', 'tatsuhiro', 'rednoah', 'tsujikawapiece', 'length', 'addedresult', 'exception', 'entryrequestgrouprequetgroup', 'requestgroupmessage']",{'length': 100}
"['tujikawa', 'tatsuhiro', 'rednoah', 'tsujikawaadjacent', 'requestedoptionsharesupport', 'system', 'removeddefault', 'ratio', 'valueshare', 'introducedunfoldrangeparse', 'thrown', 'function', 'exception', 'catch', 'addedsubclassparsearglisten', 'addedlisten', 'select', 'range', 'acceptsoperator', 'exception', 'class', 'implementedprintexception', 'stack']",{'stack': 100}
"['tujikawa', 'tatsuhiro', 'rednoah', 'tsujikawacontrol', 'download', 'progress', 'recalculates', 'loadingpiece', 'different', 'length', 'downloadcontextsavedpiece', 'control']",{'length': 100}
"['tujikawa', 'tatsuhiro', 'rednoah', 'tsujikawacompilation', 'errorinclude', 'removedinclude', 'removedfunction', 'ifdef', 'removedcompilation', 'openssl', 'errorinclude', 'block', 'default', 'compiler', 'suppress', 'addedoperatorsmithii', 'smith', 'mingw', 'buildchange', 'supportremovedremovedmingw', 'miscellaneouslseek', 'insteadinclude', 'compile', 'quietcallback', 'changedresolve', 'mingw', 'socket', 'executeinternalfunction', 'errno', 'abstract', 'error', 'wsagetlasterrorfunction', 'errno', 'abstract', 'errormsg', 'privateopenssl', 'psuedo', 'proper', 'handlingsignal']",{'OpenSSL': 100}
"['tujikawa', 'tatsuhiro', 'rednoah', 'tsujikawafatalexceptionexception', 'onabortexception', 'onabortexception', 'onabortexception', 'executeexception', 'onabortexception', 'executeexception', 'executeexception', 'onabortexceptionexceptionexceptionexceptionexceptionexceptionexceptionconst', 'staticgetidgetidgetidgetidgetidgetidgetidgetidremovedgetidgetidgetidgetidgetidgetidgetidgetidgetidgetidgetidforce', 'truncate', 'check', 'command', 'optionexists', 'alreadygetfilepath', 'virtualdiskwriterentry', 'fileentrydiskwriterentry', 'fileexistsdiskwriterentry', 'getfileentryfileexistsgetfilepathexecute', 'exists', 'check', 'alreadyfileexistsgetfilepathforce', 'truncate', 'explanation', 'showusage', 'addedcommandforce', 'truncate', 'commandsetmsggetfilepath', 'publicgetfileentry', 'fileentryfileexistsalready', 'torrent', 'regressiondochokedactiondochokedactiontarget', 'delete', 'dochokedaction', 'requestallowedaddedmessage', 'outgoing', 'sendkeepalive', 'alivemessagequeuedecideinterest', 'simplifiedfillpiece', 'btchokemessage', 'alreadydochokedactioncleanvirtual', 'virtual', 'prepareforretry', 'keywordvirtual', 'keywordvirtual', 'onabort', 'istimeout', 'insteadpiece', 'debug', 'addeddouble', 'clear', 'avoidassignment', 'socket', 'readablegettingmessage', 'possible', 'length']",{'length': 100}
"['tujikawa', 'tatsuhiro', 'rednoah', 'tsujikawasupport', 'metalinktryreservedexecute', 'tryreservedtryreservedrequestreservedfilechecksumtouppertolowerfilechecksumtouppertolowernormaldownloadoption', 'metalink', 'commandusage', 'metalink', 'writtenmessage', 'digest', 'accordingpayload', 'length', 'segfault', 'causemessagereceivemessage', 'fixedlength', 'exception', 'decodingmethod', 'changedfunction', 'overload', 'encodefunction', 'decode', 'overloadencodefunction', 'overload', 'encodepiece', 'download', 'error', 'preventchecksumabortpiece', 'receivedaction', 'peerinteraction']",{'length': 100}
"['tujikawa', 'tatsuhiro', 'rednoah', 'tsujikawasetupinternal', 'generation', 'peeridwriteheaderwriteheadercause', 'segfaults', 'exception', 'writelogmessagecontains', 'unescapedsleep', 'shortrequest', 'trackerquery', 'parseurl', 'string']",{'generation': 100}
"['tujikawa', 'tatsuhiro', 'rednoah', 'tsujikawaseveral', 'gnutlsconst', 'writedata', 'quarifierreaddata', 'gnutls', 'peekdataremovedcreates', 'commandtorrentman', 'method', 'check', 'openssl', 'usingconfiguredependency', 'direct', 'removedopensslusingtujikawa', 'tatsuhiro', 'rednoah', 'tsujikawamessage', 'alivealiveclose', 'connectionchokinglocalhostduplicate', 'addingequal', 'number', 'graterdeleteduplicate', 'failure', 'entryargument', 'ordertujikawa', 'tatsuhiro', 'rednoah', 'tsujikawalevel', 'movedaddedlevel', 'movedimplementedmacro']",{'OpenSSL': 100}
