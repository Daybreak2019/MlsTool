message,fuzzy
"['cleanup', 'method', 'security', 'helper']",{'Security': 100}
"['security', 'update']",{'Security': 100}
"['ffdeb', 'mergerequest', 'event', 'mitre', 'virtsoperation', 'event', 'generation', 'finish']",{'generation': 100}
"['operation', 'event', 'generation', 'finishmethod', 'event', 'generation', 'changingstylevariable', 'clearer']",{'generation': 100}
"['security', 'independentincludes', 'saftey', 'check', 'testingfailure', 'chance', 'reducesecurity', 'issue']","{'Security': 100, 'issue': 100}"
"['issue', 'filter', 'appliedvalidate', 'functionality', 'correctnessfuture']",{'issue': 100}
"['security', 'update', 'comment']",{'Security': 100}
"['issue', 'contact', 'default', 'permission']","{'issue': 100, 'permission': 100}"
"['modal', 'vulns', 'source', 'fixingsanitization', 'issue', 'frontjquery', 'usingquote', 'single']",{'issue': 100}
"['server', 'vulnerability', 'injection', 'config', 'command', 'virtsavoid', 'internal', 'config', 'command', 'python', 'arbitrary', 'place', 'calderalonger', 'config', 'requirement']",{'injection': 100}
"['security', 'function']",{'Security': 100}
"['report', 'operation', 'eventproper', 'report', 'event', 'generation']",{'generation': 100}
"['issue', 'deletion', 'refresh', 'sessionissue', 'deletion', 'refresh', 'sessionremoveversion', 'python', 'availablebryan', 'bworrell']",{'issue': 100}
"['initialtunnelingdebug', 'issue', 'unnecessary', 'output', 'dummy', 'response', 'contact', 'config', 'default', 'addinginitial', 'contactfixture', 'requirement', 'dnspython', 'packagemessage']",{'issue': 100}
"['header', 'insensitive']",{'Sensitive': 90}
"['length', 'highlightingregex']",{'length': 100}
"['template', 'issue', 'question']",{'issue': 100}
"['issue', 'documentation']",{'issue': 100}
"['mergewbooth', 'patch', 'request', 'mitre', 'mergetemplate', 'issue', 'update']",{'issue': 100}
"['template', 'issue', 'update']",{'issue': 100}
"['updatemitre', 'issue', 'caldera']",{'issue': 100}
"['mergerequest', 'issue', 'mitrepyasn', 'update']",{'issue': 100}
"['blacklist', 'testingvirtualenv', 'virtualenv', 'blacklist']",{'blacklist': 100}
"['defaultrandom', 'config', 'value', 'generateissue', 'config', 'default', 'hardcodingobvious', 'config', 'currentupdateignore', 'insecureconsolidate', 'kwarg', 'clearerrefactor', 'module', 'config', 'generation', 'david', 'privateducky']",{'generation': 100}
"['report', 'generation', 'fixingreport', 'generation', 'fixingunneccesary', 'variable', 'removekiddingasync', 'generator']",{'generation': 100}
"['issue', 'consumptionchrome']",{'issue': 100}
"['mergerequest', 'report', 'generation', 'mitre', 'mergereport', 'generation']",{'generation': 100}
"['version', 'refactor', 'minimum', 'checkingrefactor', 'check', 'display', 'error', 'environment', 'requirement', 'recentchange', 'defaultdebug', 'removingreview', 'concerntravisresolution', 'issue', 'browser', 'conflict']",{'issue': 100}
"['string', 'issue']",{'issue': 100}
"['payload', 'reference', 'generation', 'payload', 'reference', 'generationusage', 'variable', 'cleanerreplacement', 'payload']",{'generation': 100}
"['mitreutility', 'decryption']",{'encryption': 90}
"['decryption', 'output', 'caldera']",{'encryption': 90}
"['encryption', 'splittingencryption', 'authentication']",{'encryption': 100}
"['pytestdisable', 'initialize', 'inherit', 'fixturefixture', 'baseline', 'object', 'conftestaiohttp', 'pytest', 'fixturerandom', 'fixture', 'numberfixture', 'pytest', 'rewriteconvert', 'pytestability', 'aiohttp', 'pytest', 'assertion', 'originalconvert', 'pytest', 'parserconvert', 'fixture', 'pytestservice', 'thread', 'update', 'fixturepytest', 'update', 'fixture', 'assertion', 'utilizefixture', 'commentdirect', 'setup', 'access', 'decorator', 'fixture']",{'thread': 100}
"['potential', 'issue', 'report', 'operation']",{'issue': 100}
"['issue', 'submodule', 'index', 'compass']",{'issue': 100}
"['issue', 'server']",{'issue': 100}
"['issue', 'decode', 'agent']",{'issue': 100}
"['enable', 'malware', 'cipher']",{'cipher': 100}
"['result', 'encryption', 'virtsresult', 'initial', 'implementation', 'encryptioninconsistent', 'decodingservice', 'store', 'adition', 'result', 'logginglogic', 'method', 'initialization', 'private', 'encryptionwhitespace']",{'encryption': 100}
"['operation', 'generation', 'section', 'operation', 'generation', 'section']",{'generation': 100}
"['stockpile', 'function', 'cipher']",{'cipher': 100}
"['world', 'theme', 'cipher', 'encryption', 'world', 'theme', 'cipher', 'encryption', 'world', 'theme', 'cipher', 'encryption', 'quick', 'default']","{'cipher': 100, 'encryption': 100}"
"['world', 'theme', 'cipher', 'encryption', 'world', 'theme', 'cipher', 'encryption', 'world', 'theme', 'cipher', 'encryption', 'basic', 'swappingupdate']","{'cipher': 100, 'encryption': 100}"
"['issue', 'return', 'variable', 'string', 'parser']",{'issue': 100}
"['issue', 'matcher']",{'issue': 100}
"['injection', 'commandplatform', 'ability', 'service', 'valueasyncdownload', 'functionextra', 'newline', 'removeextra', 'platform']",{'injection': 100}
"['crash', 'exfil', 'force', 'patchability', 'virts', 'stockpileupdate', 'stockpile']",{'crash': 100}
"['omergunal', 'patchprevents', 'issue', 'operation', 'event']",{'issue': 100}
"['issue', 'powershell']",{'issue': 100}
