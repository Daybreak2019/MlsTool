message,fuzzy
"['query', 'issue', 'validation']",{'issue': 100}
"['master', 'rename', 'issue']",{'issue': 100}
"['issue', 'accessors']",{'issue': 100}
"['alphanodes', 'issue', 'introspection']",{'issue': 100}
"['namespace', 'issue']",{'issue': 100}
"['condition', 'incorrect']",{'incorrect': 100}
"['compile', 'expose']",{'expose': 100}
"['issue', 'problem', 'function', 'potential', 'performance']",{'issue': 100}
"['issue', 'condition', 'retraction', 'exists']",{'issue': 100}
"['issue', 'condition']",{'issue': 100}
"['issue', 'usage']",{'issue': 100}
"['issue', 'number']",{'issue': 100}
"['issue', 'hashcodeissue', 'special', 'hashcode']",{'issue': 100}
"['issue', 'semantics', 'equality', 'incorrect', 'similarissue', 'semantics', 'equality', 'incorrect']","{'issue': 100, 'incorrect': 100}"
"['issue', 'productionnode', 'memory']",{'issue': 100}
"['query', 'issue']",{'issue': 100}
"['issue', 'graph', 'conjunction', 'enhance', 'performance']",{'issue': 100}
"['custom', 'issue', 'refactor', 'defrule', 'defquery', 'support']",{'issue': 100}
"['common', 'issue', 'error', 'condition', 'thrown', 'exception']",{'issue': 100}
"['issue', 'inspection', 'session', 'graph', 'clojurescript', 'supportprovides', 'namespaces', 'inspection', 'session', 'graph', 'clojurescript', 'available', 'update', 'graph', 'inspectredundant', 'bindingclara', 'clojurescript', 'version', 'errorrequire', 'insteadmacro', 'utils', 'supportexplicit', 'implicit', 'macro', 'clean', 'refernamespace']",{'issue': 100}
"['issue', 'condition', 'deserialize', 'constraint', 'empty', 'durability']",{'issue': 100}
"['complex', 'group', 'issue', 'respect']",{'issue': 100}
"['mergemerge', 'issue', 'ethanechristian', 'requestaccumulator', 'issue', 'inconsistent', 'behavior']",{'issue': 100}
"['accumulator', 'issue', 'inconsistent', 'behavior']",{'issue': 100}
"['mergemerge', 'issue', 'dependency', 'request', 'compiler', 'williamparkerissue', 'dependency']",{'issue': 100}
"['issue', 'dependency', 'functionality', 'session', 'inspection', 'clara']",{'issue': 100}
"['mergemerge', 'issue', 'requestissue', 'transient', 'value', 'memory', 'return', 'clara', 'getter']",{'issue': 100}
"['issue', 'transient', 'value', 'memory', 'return', 'clara', 'getter']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestbuild', 'clojurescript', 'issue', 'leiningen']",{'issue': 100}
"['clojurescript', 'issue', 'leiningen']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestclojurescript', 'issue', 'memory', 'accumulation']",{'issue': 100}
"['issue', 'semantics', 'clojure', 'memory', 'different', 'function', 'accumulation', 'clojurescript']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestaccumulator', 'issue', 'retraction', 'distinct', 'function']",{'issue': 100}
"['accumulator', 'issue', 'retraction', 'respect', 'distinct', 'value', 'function', 'cardinality']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requesttruth', 'issue', 'refactor']",{'issue': 100}
"['cross', 'issue', 'platform', 'refactor', 'maintenance']",{'issue': 100}
"['issue', 'requestclojurescript']",{'issue': 100}
"['clojurescript', 'issue']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestaccumulator', 'issue', 'refactor']",{'issue': 100}
"['issue', 'requestupgrade', 'issue', 'schema']",{'issue': 100}
"['accumulator', 'issue', 'clojure', 'namespace', 'clojurescript']",{'issue': 100}
"['issue', 'version', 'support', 'config', 'update', 'travis']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestcommon', 'issue', 'clojure', 'macro', 'clojurescript']",{'issue': 100}
"['issue', 'clojure', 'macro', 'share', 'clojurescript']",{'issue': 100}
"['issue', 'clojure', 'condition', 'environment', 'symbol']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestissue', 'ancestor']",{'issue': 100}
"['clojurescript', 'issue', 'ancestor', 'version']",{'issue': 100}
"['issue', 'requestsalience']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestissue', 'condition']",{'issue': 100}
"['issue', 'condition', 'inspection']",{'issue': 100}
"['accumulator', 'issue', 'input', 'condition', 'field']",{'issue': 100}
"['ebbbcmerge', 'issue', 'williamparker', 'graph', 'relat']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestissue']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'issue', 'explanat', 'activation']",{'issue': 100}
"['issue', 'functionality', 'inspection', 'session', 'explanation', 'activation']",{'issue': 100}
"['issue', 'requestissue']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestissue', 'experimental', 'retracti', 'insertion', 'introduce', 'support']",{'issue': 100}
"['equal', 'issue', 'retraction', 'experimental', 'insertion', 'introduce']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestissue', 'retraction', 'insertion', 'cache']",{'issue': 100}
"['issue', 'retraction', 'transition', 'transient', 'memory', 'unnecessary', 'persistent', 'cache']",{'issue': 100}
"['issue', 'message', 'constraint', 'exception']",{'issue': 100}
"['mergemerge', 'ethanechristian', 'request', 'alphamultiple', 'issue', 'ancestor', 'alpha']",{'issue': 100}
"['multiple', 'issue', 'ancestor', 'alpha']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestsynchronize', 'class', 'issue', 'function', 'symbol', 'factory', 'cache']",{'issue': 100}
"['synchronize', 'class', 'issue', 'function', 'symbol', 'factory', 'cache']",{'issue': 100}
"['mergemerge', 'thread', 'request', 'local', 'kulkarnipushkarthreadlocal', 'dynamic', 'durability']",{'thread': 100}
"['mergemerge', 'issue', 'williamparker', 'requestissue', 'pending', 'activation']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestissue', 'record', 'function', 'symbol', 'factory', 'cache']",{'issue': 100}
"['class', 'issue', 'record', 'function', 'symbol', 'session', 'performance', 'serialization', 'factory', 'cache']",{'issue': 100}
"['ethanechristian', 'requestinternal', 'issue', 'clojure', 'hierarchy']",{'issue': 100}
"['internal', 'issue', 'clojure', 'hierarchy', 'interface']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestoptimize', 'alpha', 'issue', 'multi']",{'issue': 100}
"['multiple', 'common', 'rulebase', 'issue', 'corresponding', 'production', 'ancestor', 'optimize', 'alpha', 'primary']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestissue', 'session']",{'issue': 100}
"['issue', 'session']",{'issue': 100}
"['eeaacmerge', 'issue', 'williamparker', 'requestissue', 'retract', 'negation']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestissue', 'retraction', 'batch', 'insertion', 'external']",{'issue': 100}
"['issue', 'retraction', 'batch', 'insertion', 'external']",{'issue': 100}
"['issue', 'memory', 'state', 'session']",{'issue': 100}
"['regression', 'fixinggroup', 'result', 'accumulatenode', 'accumulate', 'accumulatedexpose', 'issue']",{'issue': 100}
"['issue', 'requestequal', 'retraction', 'identical', 'check', 'activation']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestgroup', 'issue']",{'issue': 100}
"['group', 'issue', 'corresponding', 'element']",{'issue': 100}
"['mergemerge', 'issue', 'request', 'accumulatenode', 'williamparkergroup', 'issue']",{'issue': 100}
"['group', 'issue', 'corresponding', 'element']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestissue', 'patter', 'retract', 'insert', 'generator', 'random']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestissue', 'visib', 'accumulatenode']",{'issue': 100}
"['element', 'issue', 'facilitate', 'information', 'visibility', 'engine', 'accumulatenode']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestrulebase', 'issue', 'increase', 'determinism', 'compilation']",{'issue': 100}
"['rulebase', 'consistency', 'issue', 'execution', 'increase', 'determinism', 'compilation']",{'issue': 100}
"['issue', 'requestcombine', 'accumulatenode', 'retract']",{'issue': 100}
"['accumulatenode', 'retract', 'requiresaccumulatenode', 'issue', 'addressretract', 'thoughretract', 'defaultperformant', 'wrapper', 'retraction', 'issue', 'semantics', 'value', 'propagation', 'initialvalue', 'activate', 'memory', 'accumulatenode', 'initial', 'tokenaccum', 'optional', 'useful', 'builtaccumulate', 'issue']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestaccumulator', 'issue', 'result']",{'issue': 100}
"['accumulator', 'issue', 'retraction', 'false', 'propagation']",{'issue': 100}
"['source', 'issue', 'symbol', 'support']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestcomplex']",{'issue': 100}
"['mergemerge', 'issue', 'williamparker', 'requestequal', 'retraction', 'logical', 'productionnode']",{'issue': 100}
"['ceaad', 'mergemerge', 'issue', 'williamparker', 'requestissue', 'duplicate', 'session', 'cache']",{'issue': 100}
"['source', 'issue', 'duplicate']",{'issue': 100}
"['issue', 'negation']",{'issue': 100}
"['graph', 'issue', 'condition']",{'issue': 100}
"['optimize', 'expansion', 'issue', 'cartesian']",{'issue': 100}
"['issue', 'inspect']",{'issue': 100}
"['mergemaster', 'issue']",{'issue': 100}
"['issue', 'arbitrary', 'equality', 'arity', 'support']",{'issue': 100}
"['unification', 'insteadcomplex', 'likely', 'issue', 'criterion', 'unification', 'restrictive', 'clara', 'clojure', 'generation', 'equality', 'issue', 'error', 'clara', 'rbrush']","{'issue': 100, 'generation': 100}"
"['issue', 'idiom', 'exception', 'clojurescript']",{'issue': 100}
"['action', 'issue', 'thrown', 'exception', 'context']",{'issue': 100}
"['target', 'issue']",{'issue': 100}
"['memory', 'devise', 'expose', 'reproduction', 'state', 'small', 'maintenance', 'truthproductionnodes', 'issue', 'value', 'disjunction', 'child', 'productionnode', 'example', 'entire', 'clara', 'activation', 'condition', 'representation', 'common', 'production', 'memory', 'nestedproductionnodes', 'likely', 'benefit', 'compiler', 'problem', 'clara', 'equal', 'clojure', 'function', 'equality', 'potential', 'behavior', 'necessary', 'expression', 'memory', 'comparison', 'compiledmultiple', 'reference', 'condition', 'compile', 'equalivalent', 'disjunction', 'productionnode', 'function', 'expressionproductionnodes', 'issue', 'local', 'compilation', 'expression', 'public', 'restructure', 'signature', 'expression', 'clearerrecursion', 'function', 'innerfunction', 'memoizedpublic', 'signature', 'detail', 'function', 'reuse', 'compile', 'different', 'expressionbeneficial']","{'expose': 100, 'issue': 100}"
"['issue', 'topological']",{'issue': 100}
"['bfbdcmerge', 'issue', 'williamparker', 'issue', 'namespaces', 'ability']",{'issue': 100}
"['source', 'issue', 'namespaces']",{'issue': 100}
"['claraify', 'comment', 'issue']",{'issue': 100}
"['accum', 'accumulator', 'issue', 'negation']",{'issue': 100}
"['accumulator', 'issue', 'arbitrary', 'comparison']",{'issue': 100}
"['exists', 'issue', 'expression', 'support']",{'issue': 100}
"['logical', 'issue', 'retraction', 'listener']",{'issue': 100}
"['function', 'custom', 'issue']",{'issue': 100}
"['mergemerge', 'issue', 'infracanophile', 'ancestor', 'request', 'supportclojurescript', 'ancestor', 'support']",{'issue': 100}
"['mergemerge', 'issue', 'request', 'mischovrequires']",{'issue': 100}
"['clara', 'issue', 'ancestor', 'support']",{'issue': 100}
"['class', 'issue', 'static', 'processing', 'method']",{'issue': 100}
"['unound', 'issue']",{'issue': 100}
"['negation', 'issue', 'support']",{'issue': 100}
"['route', 'issue', 'retraction']",{'issue': 100}
"['insert', 'issue', 'support']",{'issue': 100}
"['optimize', 'function', 'issue', 'comparison']",{'issue': 100}
"['group', 'issue', 'salience', 'initial', 'activation']",{'issue': 100}
"['overflow', 'recur', 'number']",{'overflow': 100}
"['issue', 'message', 'helpful', 'compilation']",{'issue': 100}
"['issue', 'structural', 'comparison', 'address']",{'issue': 100}
"['issue', 'persistence', 'maintenance', 'truth']",{'issue': 100}
"['mergemaster', 'issue']",{'issue': 100}
"['class', 'issue', 'assumption']",{'issue': 100}
"['mergemaster', 'issue']",{'issue': 100}
"['feefe', 'mergemrrodriguez', 'addition', 'stack', 'request', 'large', 'overflowelement', 'memory']",{'stack': 100}
"['optimize', 'issue']",{'issue': 100}
"['friendly', 'issue', 'print', 'explanation']",{'issue': 100}
"['issue', 'management']",{'issue': 100}
"['issue', 'catch', 'compiler']",{'issue': 100}
"['clojurescript', 'issue', 'support']",{'issue': 100}
"['issue', 'behavior']",{'issue': 100}
"['common', 'internal', 'issue']",{'issue': 100}
"['clojurescript', 'issue']",{'issue': 100}
"['clojurescript', 'issue']",{'issue': 100}
"['creation', 'issue', 'session', 'cache']",{'issue': 100}
"['issue', 'support']",{'issue': 100}
"['issue', 'idiomatic', 'field', 'underscore']",{'issue': 100}
"['issue', 'clara', 'rbrush', 'optimization']",{'issue': 100}
