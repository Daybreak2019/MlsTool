message,fuzzy
"['incorrect', 'anchormarkdown']",{'incorrect': 100}
"['bundlernewest', 'upgrade', 'deadlock', 'rubygems', 'versionelliot', 'winkler']",{'deadlock': 100}
"['burke', 'issue']",{'issue': 100}
"['changelog', 'revampmatch', 'community', 'changelog', 'rename', 'conventionreleasesimplify', 'request', 'issue', 'ensure']",{'issue': 100}
"['transforms', 'argument', 'matcher', 'uniqueness', 'string', 'symbolactiverecord', 'argument', 'string', 'attribute', 'symboloperates', 'assumption', 'scope', 'argumentargument', 'transform', 'symbolexceptionshoulda', 'matcher', 'issue', 'thoughtbot']",{'issue': 100}
"['rspec', 'documentation', 'improverspec', 'documentation', 'matchershoulda', 'configuration', 'rspec', 'specify', 'matcher', 'requiredfailure', 'bundle', 'rspecshoulda', 'model', 'failure', 'matcher', 'errornameerrorshoulda', 'constant', 'uninitializedshoulda', 'matcher', 'issue']",{'issue': 100}
"['attribute', 'integer']",{'integer': 100}
"['undefined', 'method', 'matcher', 'solution', 'patch', 'othersshoulda', 'thoughtbot', 'matcher', 'issuecomment', 'issue']",{'issue': 100}
"['fixnum', 'integer']",{'integer': 100}
"['optionshoulda', 'matcher', 'issue', 'thoughtbotshoulda', 'thoughtbot', 'matcher', 'issueeither', 'issuecommit', 'sensitivity', 'assertingassert', 'scenario', 'attribute', 'allowspoint']",{'issue': 100}
"['extract', 'model', 'classbehind', 'driver', 'programmatic', 'providealready', 'completepattern', 'model', 'extractdefine', 'example', 'assertion', 'sharedinside', 'model', 'issue', 'sometimesactiverecord', 'activemodel', 'sometimeswithin', 'example', 'groupsince', 'strategy', 'choosemodel', 'currentlycustomize', 'strategy', 'modelassociation', 'normal', 'attribute', 'providingcustomization', 'level', 'thingpattern', 'commitplace', 'validation', 'model', 'multiplecommit', 'precursor', 'laterintroduce', 'acrossexample', 'groupmodel', 'creation', 'outer', 'method', 'example']",{'issue': 100}
"['length', 'refactor', 'matchercollection', 'commits', 'failure', 'improveeasier', 'message', 'debug', 'matcher', 'ordersomethingmatcher', 'descriptionoverride', 'providedinstance', 'variable', 'messagechange', 'interface', 'conform']",{'length': 100}
"['insensitive', 'value']",{'Sensitive': 90}
"['model', 'insensitive', 'default', 'uniqueness', 'behavioruniqueness', 'validation', 'model', 'falsematcherinstance', 'modelproduct', 'activerecord', 'classfalsefollowingcorrectlyproduct', 'describe']",{'Sensitive': 90}
"['rangeerrors', 'activerecord', 'emittedactiverecord', 'attempt', 'changedrange', 'value', 'attributecolumn', 'integer', 'raiseaccepts', 'smallint', 'limit', 'valuerangeerror', 'threecould', 'raisedalong', 'comparisoneither', 'value', 'submatchersoutside', 'valueattempt', 'integerverify', 'integer', 'value', 'column', 'attributeallow', 'value', 'string', 'versioncolumn', 'number', 'largematcher', 'couldancillary', 'commitfavor', 'removematcher', 'validator', 'instancestrictvalidatorobject']",{'integer': 100}
"['number', 'issue']",{'issue': 100}
"['scope', 'matcher', 'uniquenesselliot', 'winkler', 'author', 'secondarycommitpolymorphic', 'scope', 'attributeanother', 'validation', 'model', 'matchermatchingvalue', 'attribute', 'record', 'differentvalid', 'record', 'secondfirst', 'clash', 'attributepolymorphic', 'question', 'model', 'attribute', 'valuemeaningful', 'method', 'generate', 'corresponding', 'object', 'versionsincebecome', 'wouldmight', 'problem', 'noticedmodel', 'valid', 'nothingpolymorphic', 'access', 'tryingpolymorphic', 'attempt', 'attributequestion', 'attribute', 'validationgiven', 'modelactiverecord', 'classactiverecord', 'class', 'favoritepolymorphicpresence', 'validatesscope', 'uniqueness', 'validatesfactoryfactory', 'favoriteassociation', 'factoryfollowingrequiredescribe', 'favoritecontext', 'wouldfailurerequire', 'validation', 'sensitive', 'unique', 'value', 'favoritefailure', 'errornameerrorconstant', 'uninitializedblock', 'level', 'model', 'record', 'favoritepresence', 'validationvalidation', 'accessmodel', 'raiseattributestill', 'model', 'record', 'aliasbecome']",{'Sensitive': 100}
"['matcher', 'issueshoulda', 'matcher', 'issue', 'mocha', 'bourne', 'matchermethod', 'stubbedtarget', 'handledindependent', 'frameworkinclude', 'changesyntaxexplicity', 'failure', 'message']",{'issue': 100}
"['example', 'readme', 'incorrect']",{'incorrect': 100}
"['minor', 'issue']",{'issue': 100}
"['moduleproject', 'issue', 'railtierequire', 'railtie']",{'issue': 100}
"['fixnum', 'return', 'column', 'inclusion', 'integershoulda', 'matcher', 'issue', 'thoughtbot']",{'issue': 100}
"['number', 'section', 'issue']",{'issue': 100}
"['issue', 'virtual', 'error', 'attributesolution', 'setting', 'checkattribute']",{'issue': 100}
"['matcher', 'deprecatematcher', 'issue', 'deprecates']",{'issue': 100}
"['generation', 'inline', 'fixture', 'error']",{'generation': 100}
"['generation', 'message', 'error']",{'generation': 100}
"['message', 'generation', 'delegation', 'errordelegation']",{'generation': 100}
"['message', 'generation', 'default', 'error', 'attributemessage', 'generation', 'default', 'error', 'attributeinconsistency', 'activemodel', 'error', 'avoidinglocale', 'default', 'entry', 'overridden', 'activemodeldivergent', 'default']",{'generation': 100}
"['integercorrect', 'adapter', 'initialize', 'string', 'postgres', 'integer']",{'integer': 100}
"['refinementshoulda', 'matcher', 'issue', 'association', 'checkrelationship', 'inversefound']",{'issue': 100}
"['false', 'integer', 'operator']",{'integer': 100}
"['invalid', 'format', 'validatorshoulda', 'issue', 'adrpac', 'thoughtbot']",{'issue': 100}
"['guideline', 'contribution', 'point', 'lighthouse', 'issue']",{'issue': 100}
"['integration', 'issue']",{'issue': 100}
"['matcher', 'order', 'issue']",{'issue': 100}
"['attribute', 'issue']",{'issue': 100}
