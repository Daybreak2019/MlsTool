message,fuzzy
"['heartbeat', 'functionreturn', 'function', 'integer']",{'integer': 100}
"['dcdecdmerge', 'request', 'jjnicola', 'clangcompiler', 'issue']",{'issue': 100}
"['compiler', 'issue']",{'issue': 100}
"['buffer', 'issue']","{'buffer': 100, 'issue': 100}"
"['newline', 'forgery', 'packet']",{'Forgery': 100}
"['newline', 'forgery', 'packet']",{'Forgery': 100}
"['mergemerge', 'function', 'packet', 'documentation', 'forgery', 'arnostiefvater', 'requestinput', 'invalid', 'documentation', 'function']",{'Forgery': 100}
"['process', 'signalhandle', 'attack', 'check', 'fuction', 'interruptionalready', 'signal', 'issue', 'target', 'single']",{'issue': 100}
"['vhosts', 'creatingsolves', 'socket', 'issue', 'creates', 'process', 'parentsocket', 'inheritates', 'child']",{'issue': 100}
"['fecadmerge', 'issue', 'getipvroutes', 'arnostiefvater', 'requestmessage']",{'issue': 100}
"['forgery', 'function', 'packet', 'output']",{'Forgery': 100}
"['ipproto', 'orderinsteadprinf', 'order', 'issue']",{'issue': 100}
"['mergemerge', 'request', 'arnostiefvatercancel', 'command', 'detection', 'support', 'thread']",{'thread': 100}
"['handler', 'pthread', 'clean', 'signal', 'finishdetection', 'string', 'resourcesignal', 'finishalive', 'detection']",{'thread': 92}
"['small', 'error', 'improvement', 'pthread']",{'thread': 92}
"['signalepipe', 'crash', 'error', 'programsigpipe']",{'crash': 100}
"['warning', 'format', 'numberreturn', 'value', 'silence', 'snprintf']",{'Sprintf': 93}
"['return', 'pthread', 'errno']",{'thread': 92}
"['pthread', 'errno']",{'thread': 92}
"['buffer', 'timeout', 'packetvalue', 'buffer', 'packetwithh', 'value', 'packet', 'return']",{'buffer': 100}
"['structure', 'scannerstrukturesniffer', 'thread', 'insteadclean']",{'thread': 100}
"['reply', 'sniffer', 'aware', 'thread']",{'thread': 100}
"['issue', 'update', 'bjoernricks', 'requesttemplate', 'issue', 'update']",{'issue': 100}
"['template', 'issue', 'openvas', 'version']",{'issue': 100}
"['similar', 'template', 'issue', 'update']",{'issue': 100}
"['community', 'forum', 'issue', 'creatingcommunity', 'template', 'issue', 'config', 'github', 'displayingforum']",{'issue': 100}
"['template', 'issue', 'version', 'updaterepository', 'community', 'template', 'issue', 'github', 'strong', 'building']",{'issue': 100}
"['preference', 'invalid', 'existentdetectsdetects', 'invaliddetects', 'timeout', 'integer']",{'integer': 100}
"['preference', 'invalid', 'existentdetectsdetects', 'invaliddetects', 'timeout', 'integer']",{'integer': 100}
"['stream', 'jjnicola', 'requeststream', 'cipher']",{'cipher': 100}
"['function', 'cipher']",{'cipher': 100}
"['struct', 'table', 'cipher']",{'cipher': 100}
"['cecfaddmerge', 'issue', 'update', 'greenbone', 'request', 'installinstall', 'documentation', 'update']",{'issue': 100}
"['mergemerge', 'issue', 'update', 'master', 'install']",{'issue': 100}
"['crash', 'plugin']",{'crash': 100}
"['nvticache', 'crash', 'pluginhappen']",{'crash': 100}
"['issue', 'plugin']",{'issue': 100}
"['install', 'documentation', 'updateprocess', 'community', 'forum', 'issue', 'ticket', 'point']",{'issue': 100}
"['mergecleanup', 'clang', 'analyzer', 'issue', 'clang']",{'issue': 100}
"['issue', 'clangnever']",{'issue': 100}
"['analyzer', 'issue', 'clangnever']",{'issue': 100}
"['coverity', 'issuepointer', 'incorrect']",{'incorrect': 100}
"['coverity', 'issue']",{'issue': 100}
"['coverity', 'issue']",{'issue': 100}
"['coverity', 'issue']",{'issue': 100}
"['coverity', 'issuepointer', 'incorrect']",{'incorrect': 100}
"['issue', 'solveremove']",{'issue': 100}
"['readme', 'doxygen', 'generation', 'update']",{'generation': 100}
"['readme', 'updatedocument', 'issue', 'changeissue', 'tracker']",{'issue': 100}
"['array', 'shallow', 'issue', 'variable', 'valuetrunk', 'ddbef', 'openvas', 'scanner']",{'issue': 100}
"['manage', 'openvas', 'functionality', 'internal', 'simplifyingmanage', 'generation', 'openvas', 'exposeunify', 'support', 'generationcertificate', 'functioncertificate', 'installation', 'sequencecertificate', 'simplify', 'single', 'signingstreamline', 'prefixmanage', 'example', 'openvas', 'removedmanage', 'openvastrunk', 'ddbef', 'openvas', 'scanner']",{'generation': 100}
"['mkcert', 'client', 'openvas', 'retiremanage', 'replacement', 'openvasinstallation', 'openvas', 'generation', 'mkcertopenvas', 'script', 'mkcertremove', 'installation', 'correspondingcopyingmkcert', 'openvas', 'changemanage', 'openvasmkcert', 'openvasopenvasmkcert', 'openvasopenvastrunk', 'ddbef', 'openvas', 'scanner']",{'generation': 100}
"['issue', 'documentationfoundtrunk', 'ddbef', 'openvas', 'scanner']",{'issue': 100}
"['stack', 'requiredtrunk', 'ddbef', 'openvas', 'scanner']",{'stack': 100}
"['fatal', 'abort', 'configerrortrunk', 'ddbef', 'openvas', 'scanner']",{'fatal': 100}
"['buffer', 'increaseallow', 'preferencetrunk', 'ddbef', 'openvas', 'scanner']",{'buffer': 100}
"['directory', 'generation', 'somewheretrunk', 'ddbef', 'openvas', 'scanner']",{'generation': 100}
"['reason', 'communication', 'interruptedreason', 'whateverbetter', 'communication', 'reason', 'continueinstead', 'status', 'errorstoppedtargetreturn', 'issue', 'prevents', 'error', 'message', 'message', 'interface', 'errorreturn', 'preventstrunk', 'ddbef', 'openvas', 'scanner']",{'issue': 100}
"['wrong', 'lowerremove', 'variable', 'impressionenable', 'blockremove', 'crash', 'twiceblockotherwise', 'blockremove', 'memory', 'reassignment', 'followsduplicate', 'pluginfirst', 'blocktrunk', 'ddbef', 'openvas', 'scanner']",{'crash': 100}
"['security', 'ovaldi', 'tightenprivilege', 'launch', 'ensureplace', 'temporaryprivilege', 'ovaldi', 'cleanuptrunk', 'ddbef', 'openvas', 'scanner']",{'Security': 100}
"['vverflow', 'issue', 'fixedtrunk', 'ddbef', 'openvas', 'scanner']",{'issue': 100}
"['naive', 'default', 'dependency', 'silentmight', 'suppression', 'issue', 'security', 'message', 'comingserver', 'dependvalue', 'openvasd', 'defaulttrunk', 'ddbef', 'server', 'openvas']","{'issue': 100, 'Security': 100}"
"['memory', 'openvasd', 'insufficient', 'fixedoverflow', 'buffer', 'allocation', 'couldassemble', 'xrefs', 'stringstrcat', 'allocation', 'memory', 'ignorememory', 'ignore', 'beforehand', 'system', 'warning', 'compilesecurity', 'usage', 'potential', 'snprintftrunk', 'ddbef', 'server', 'openvas']",{'buffer': 100}
"['snprintf', 'unsafebuffer', 'correcttrunk', 'ddbef', 'server', 'openvas']",{'Sprintf': 93}
"['instance', 'issue', 'crash', 'managementtrunk', 'ddbef', 'server', 'openvas']","{'issue': 100, 'crash': 100}"
"['memory', 'issue', 'openvasd', 'crashtrunk', 'ddbef', 'server', 'openvas']",{'issue': 100}
"['openvasd', 'overflow', 'fixedfoundtrunk', 'ddbef', 'server', 'openvas']",{'overflow': 100}
"['buffer', 'nessus', 'neededtrunk', 'ddbef', 'server', 'openvas']",{'buffer': 100}
