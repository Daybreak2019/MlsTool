message,fuzzy
"['source', 'applyalphabetizetoolz', 'issue', 'pytoolz']",{'issue': 100}
"['issue', 'reminder', 'thanks']",{'issue': 100}
"['codestyle', 'issue']",{'issue': 100}
"['pytoolz', 'backport', 'cytoolzcython', 'special', 'function', 'blacklist']",{'blacklist': 100}
"['custom', 'issue', 'logic', 'curry', 'derivative', 'globals', 'moduleimport', 'resolvable', 'function', 'includeslonger', 'return', 'functionreturn', 'originalinstance', 'creates', 'resolvable', 'return', 'importfunctiondocumentation']",{'issue': 100}
"['mergemerge', 'request', 'mrocklinpluck', 'length']",{'length': 100}
"['groupby', 'version', 'easiercomment', 'originaldiscussion', 'performs', 'group', 'versionprevious', 'implementation', 'performselement', 'length', 'groupvarious', 'implementation', 'benchmarkzbenchmark', 'contributorgroupby', 'variant']",{'length': 100}
"['fasterargument', 'identity', 'keyword', 'uniquebetter', 'identity', 'resolution', 'improvement', 'attributeattribute', 'operator', 'probablyplace', 'impact', 'employ', 'optimization', 'uniqueprinciple', 'violates', 'requiringprefer', 'generalremain', 'performance', 'increase', 'worthsingle', 'iterable', 'optimizedfaster']",{'violate': 93}
"['mergemerge', 'microamp', 'request', 'masterreimplement', 'issue']",{'issue': 100}
"['issue', 'importimport']",{'issue': 100}
