message,fuzzy
"['thread', 'background']",{'thread': 100}
"['update', 'version', 'propertyupdateusage', 'counter', 'openhab', 'synology', 'addons', 'issue', 'supportupdate', 'bundle']",{'issue': 100}
"['issue', 'entry']",{'issue': 100}
"['reference', 'openhab', 'version', 'removedopenhab', 'issue']",{'issue': 100}
"['openhab', 'permission', 'linux', 'default', 'systemd']",{'permission': 100}
"['correctfound', 'ucprelayboard', 'suffix', 'solves', 'issue', 'eclipse', 'wouter']",{'issue': 100}
"['update', 'configuration', 'parameter', 'pushbulletupdate', 'pushbulletopenhab', 'issue', 'addons', 'closefountoulakis', 'angelosf', 'angelos', 'githubupdate', 'pushbulletdefaultreceiver', 'devicename', 'parameter', 'configupdatereview', 'contentfountoulakis', 'angelosf', 'angelos', 'githubupdateerror', 'description', 'defaultreceiver', 'recipient', 'recepient', 'property', 'spellingqualifier', 'title', 'override', 'action', 'column', 'string', 'method', 'removedfountoulakis', 'angelosf', 'angelos', 'githubupdatecurrent', 'description', 'accesstoken', 'document', 'property', 'section', 'pointfountoulakis', 'angelosf', 'angelos']",{'issue': 100}
"['update', 'pushbulletconfiguration', 'marker', 'exclusive', 'identity', 'persistent', 'configadmin', 'override', 'default', 'devicename', 'configopenhab', 'issue', 'issuecomment', 'distrosmarthome', 'internal', 'dispatch', 'eclipse', 'bundle', 'efbdcadeefebcfc', 'configfountoulakis', 'angelosf', 'angelos']",{'issue': 100}
"['quick', 'command', 'crash', 'succession', 'addon', 'plcbusopenhab', 'thread', 'differentevery', 'thread', 'serialwould', 'threadunresponsive', 'openhab', 'loggingscenario', 'thrown']","{'crash': 100, 'thread': 100}"
"['static', 'itemregistry', 'referenceopenhab', 'issue', 'addons']",{'issue': 100}
"['update', 'correction', 'zibasezibase', 'message', 'buffer', 'cleaningmerge', 'master', 'jitpr', 'remotereview', 'minor', 'chris']",{'buffer': 100}
"['message', 'buffer', 'zibase', 'cleaningzibase', 'message', 'buffer', 'array', 'import']",{'buffer': 100}
"['access', 'fritzboxtr', 'synchronizeddigest', 'nonce', 'concurrent', 'remote', 'preventprobst', 'oprobst', 'oliver', 'github', 'oliverprobst']",{'concurrent': 100}
"['closecommand', 'issue', 'device']",{'issue': 100}
"['length', 'error']",{'length': 100}
"['incorrect', 'usage']",{'incorrect': 100}
"['control', 'enhancement', 'dimmer', 'enhancement', 'controlactor', 'feedback', 'heatingcontrol', 'statusoperation', 'statuscontrol', 'statusstatuserror', 'check', 'preventrevert', 'enhancement', 'controlreverts', 'enhancement', 'controldefine', 'enhancement', 'controlactor', 'feedback', 'heatingcontrol', 'statusoperation', 'statuscontrol', 'statusstatuserror', 'check', 'specific', 'controlupdate', 'offset', 'temperature', 'enhancement', 'controlstringitem', 'contactitem', 'enhancement', 'controlactor', 'control', 'diagnostic', 'frame', 'enhancement', 'controlactor', 'status', 'controlenhancementposibilityshutter', 'enhancementpecenttype', 'command', 'homekit', 'reacts', 'shutterenhancment', 'dimmerfeeback', 'dimmerlevel', 'changedebug', 'level', 'enhacementconstructor', 'orignal', 'placeseperate', 'parameterlimitation', 'system', 'rescan', 'initalize', 'enhancementupdate', 'readmeupdate', 'bticino', 'automationcommand', 'possible', 'virtual', 'update', 'automationavoid', 'crash', 'statusfailure', 'statusstringitem', 'status', 'changedcontactitem', 'remotestringitem', 'remotestringitem', 'failurecorrect', 'enhacement', 'bticino', 'debug', 'heatingdebug', 'logger', 'parametershutter', 'bticino', 'runtime', 'virtual', 'feedback', 'position', 'shutterpossible', 'homekit', 'control', 'virtual', 'position', 'feedback', 'shutteraware', 'address', 'local', 'bticino', 'correction', 'definition', 'address', 'local', 'definition', 'expetionaddress', 'temporary', 'measure', 'parser', 'level', 'bticinobticino', 'rollershutter', 'control', 'enhancement', 'positionadresses', 'bticino', 'control', 'position', 'updatedstartup', 'position', 'initalizationrollershutter', 'bticino', 'enhancementadditional', 'credit', 'bticino', 'equal', 'check', 'bticinoneede', 'equal', 'changedlogger', 'bticino', 'correctlevel', 'correctvariable', 'correctvariable', 'assigements', 'bticino', 'assigmentvariable', 'assigment', 'bticino', 'removecorrect', 'bticino', 'initalisation', 'check', 'equal', 'datetimebticino', 'changerevert', 'bticino', 'changereverts', 'commitauthor', 'bticino', 'correctconstructor', 'bticino', 'correctrollershutter', 'bticino', 'correctcorrect']",{'crash': 100}
"['issue', 'bugfixallow', 'class', 'parser', 'trace', 'stringbackward', 'issue', 'bugfix', 'account']",{'issue': 100}
"['connection', 'command', 'improvement', 'telnet', 'denon', 'severalignore', 'tweak', 'instance', 'hostnamecommand', 'telnettelnetclient', 'import', 'removeexecutorservice', 'thread', 'schedule']",{'thread': 100}
"['initial', 'contribution', 'completecorrection', 'request', 'requestedcompare', 'stringversion', 'changedversion', 'removedversion', 'changedproject', 'entry', 'output', 'removedcopyright', 'applicable', 'changedversion', 'applicable', 'changedcorrection', 'request', 'eclipse', 'enhance', 'formattercorrection', 'request', 'requestedrefreshinterval', 'cardioebindingbetter', 'compatibility', 'library', 'source', 'removedelete', 'sourcecorrection', 'request', 'requestedmergedcorrection', 'cosmetic', 'variouschange', 'logger', 'loggingreplace', 'updowntype', 'percentdype', 'string', 'constant', 'onofftypeuploadproperty', 'receiptack', 'createdvariable', 'transaction', 'buffer', 'implementedvariable', 'cardioecom', 'unnecessary', 'improvement', 'synchronization', 'various', 'optimizationcardioecom', 'cosmeticcosmetic', 'cardioebindingseveral', 'class', 'correction', 'request', 'cardioebindingcosmetic', 'cardioebindingcardioecom', 'bundleversion', 'snapshot', 'changedversion', 'changedlogger', 'class', 'cardioedatetime', 'changedlogger', 'class', 'cardioedecoderlogger', 'cardioecom', 'class']",{'buffer': 100}
"['service', 'lookup', 'github', 'tensberg', 'execution', 'environment', 'fritzboxtrfunction', 'optional', 'preparation', 'github', 'tensberg', 'michaelfetch', 'request', 'fritzbox', 'multiple', 'value', 'fritzboxtritemmap', 'rework', 'configureditemmap', 'fritzbox', 'single', 'previous', 'supportedvalue', 'multiitemmap', 'extract', 'responsesingle', 'service', 'multiple', 'configuredseveral', 'multiple', 'service', 'avoidsfault', 'github', 'tensberg', 'michaelfritzboxtr', 'github', 'tensberg', 'michaelfritzboxtr', 'github', 'tensberg', 'michaelnumber', 'fritzboxtr', 'parsinginteger', 'fritzbox', 'overflow', 'github', 'tensberg', 'michaelupdate', 'fritzboxtr', 'license', 'github', 'tensberg', 'michaelfritzbox', 'github', 'tensberg', 'michaelmessage', 'level', 'fritzboxtr', 'github', 'tensberg', 'michael']",{'overflow': 100}
"['slave', 'issue']",{'issue': 100}
"['compatibility', 'firmwarecompatibility', 'issue', 'firmwareempty']",{'issue': 100}
"['openhab', 'issue', 'patch', 'addons']",{'issue': 100}
"['issue', 'service', 'compatibility', 'serialregex', 'functionality', 'addon', 'available', 'serial', 'compatibility', 'transformation', 'update', 'serialrequest', 'review', 'contact', 'dimmer', 'supportmodification', 'review', 'comment', 'request']",{'issue': 100}
"['aspectratio', 'colormode', 'value', 'additional', 'epsonprojector', 'projectoraspectratio', 'colormode', 'value', 'additional', 'projectoradditional', 'issue', 'color']",{'issue': 100}
"['sensitive', 'zwave', 'update', 'strip', 'jackson', 'chris']",{'Sensitive': 100}
"['update', 'sqlite', 'versionraspberry', 'startup', 'crash']",{'crash': 100}
"['previous', 'issuebetter', 'request', 'previous', 'issue']",{'issue': 100}
"['invalid', 'issue']",{'issue': 100}
"['support', 'zipatozipato', 'security', 'sensor', 'vision', 'manufacturer', 'window']",{'Security': 100}
"['issueissue', 'overflow', 'quickeractual', 'message', 'voltage', 'issue', 'unsupportedinstead', 'concatenation', 'string', 'loggingsystem']","{'overflow': 100, 'issue': 100}"
"['clean', 'onewire', 'concatenation', 'string', 'issue']",{'issue': 100}
"['issue', 'definition']",{'issue': 100}
"['support', 'switchingevery', 'service', 'weekday', 'virtual', 'night', 'programpossible', 'virtual', 'value', 'translatingreceive', 'thread']",{'thread': 100}
"['netatmo', 'watou', 'issue']",{'issue': 100}
"['chime', 'rfxcom', 'minor', 'chime', 'coverage', 'messagebasic', 'unsupported', 'packetarray', 'message', 'length', 'problemvalue', 'unknown', 'initializeclosewingerden', 'class', 'docblocks', 'rfxcom', 'levelwingerden', 'martin', 'martinvw', 'githubreview', 'comment', 'minor', 'fixedwingerden', 'martin', 'martinvw', 'github']",{'length': 100}
"['tellstick', 'performance', 'tellstick', 'performance', 'closetellstick', 'internal', 'controller', 'bindingevent', 'copyright', 'documentation', 'thread', 'feedbackthread', 'tellstick', 'performance', 'closetellstick', 'internal', 'controller', 'bindingevent', 'copyright', 'documentation', 'thread', 'feedbackthread']",{'thread': 100}
"['jackson', 'chrisupdate', 'database', 'zwaveopenhab', 'issue', 'jackson', 'chris']",{'issue': 100}
"['incorrect', 'bridge', 'sillentlywingerden', 'martin', 'martinvw']",{'incorrect': 100}
"['optional', 'password', 'paperui', 'parameteropenhab', 'issue']",{'issue': 100}
"['command', 'master', 'security', 'class', 'jackson', 'chris']",{'Security': 100}
"['issue', 'plugwise', 'exception', 'occurpotentialwrong', 'github', 'wouter']",{'issue': 100}
"['supportedcommandsourcexbmcinstance', 'usage', 'commandnameexamplekodisalotto', 'xbmcosd', 'switchkodisalotto', 'xbmcup', 'switchxbmcar', 'kodisalotto', 'switchxbmctf', 'kodisalotto', 'switchvaluecommandsourcepropertyname', 'xbmcinstance', 'usageexamplesxbmc', 'kodisalotto', 'stringsxbmc', 'kodisalotto', 'stringsxbmc', 'kodisalotto', 'stringsxbmc', 'kodisalotto', 'stringsxbmc', 'kodisalotto', 'stringretrieve', 'label', 'systeminfolabels', 'command', 'titleinfolabelname', 'xbmcinstance', 'usageexamplesxbmc', 'kodisalotto', 'stringsxbmc', 'kodisalotto', 'stringsxbmc', 'kodisalotto', 'stringsxbmc', 'kodisalotto', 'stringsxbmc', 'kodisalotto', 'accordingcommand', 'label', 'asynch']",{'synch': 91}
"['concurrent', 'plugwise', 'thread', 'plugwisedevice', 'github', 'wborn', 'wouter']","{'concurrent': 100, 'thread': 100}"
"['interruption', 'thread']",{'thread': 100}
"['issue', 'reportediskra', 'support', 'bindingconfiguration', 'conflict', 'string', 'format', 'separation']",{'issue': 100}
"['output', 'generator', 'openhab', 'metadataoutput', 'confusedsubsequent', 'issue', 'configurationguide', 'output', 'github', 'clark']",{'issue': 100}
"['addons', 'verificationopenhab', 'issue', 'distrokreuzer']",{'issue': 100}
"['mergemerge', 'request', 'template', 'steve', 'update', 'issueupdate', 'issue', 'template']",{'issue': 100}
"['update', 'issue', 'template']",{'issue': 100}
"['bfacbb', 'mergemerge', 'request', 'template', 'steve', 'issueopenhab', 'template', 'initial', 'issue']",{'issue': 100}
"['initial', 'issue']",{'issue': 100}
"['philioopenhab', 'issue']",{'issue': 100}
"['stelproopenhab', 'issue', 'closedevice', 'devicesummary', 'database', 'jackson', 'chris']",{'issue': 100}
"['dbbfafmerge', 'request', 'mastermochadx', 'issue']",{'issue': 100}
"['updatecdjackson', 'issue', 'habmin', 'jackson', 'chris']",{'issue': 100}
"['issue', 'exception']",{'issue': 100}
"['aefdadaivanfmartinez', 'keeloq', 'security', 'keeloq', 'protocol', 'rfxcom', 'suppport']",{'Security': 100}
"['updateopenhab', 'issue', 'jackson', 'chris']",{'issue': 100}
"['mergesplatch', 'issue', 'thread', 'factory']","{'issue': 100, 'thread': 100}"
"['thread', 'factoryukasz']",{'thread': 100}
"['security', 'keeloq', 'protocol', 'rfxcom', 'suppport']",{'Security': 100}
"['conditioner', 'certificate', 'issue', 'samsung']",{'issue': 100}
"['buffer', 'reset', 'command']",{'buffer': 100}
"['cdjackson', 'issue', 'jackson', 'chris']",{'issue': 100}
"['length', 'rfxcom', 'messagelength', 'message', 'sensor']",{'length': 100}
"['issue', 'netatmo']",{'issue': 100}
"['security', 'configuration', 'class', 'vision']",{'Security': 100}
"['cddccmerge', 'request', 'master', 'mrguessedaround', 'openhab', 'update', 'issue', 'config']",{'issue': 100}
"['update', 'issue', 'configopenhab', 'method']",{'issue': 100}
"['exact', 'removeresolve', 'issue', 'openhab', 'distrokreuzer']",{'issue': 100}
"['zmdhsd', 'qubinocdjackson', 'issue', 'habmin']",{'issue': 100}
"['felix', 'component', 'issue', 'bundle', 'startingkreuzer']",{'issue': 100}
"['bundleopenhab', 'issue', 'addonskreuzer']",{'issue': 100}
"['databasecdjackson', 'issue', 'habmincdjackson', 'issue', 'jackson', 'chris']",{'issue': 100}
"['request', 'zwaveupdate', 'serialisation', 'issue']",{'issue': 100}
"['thermostat', 'floorversion', 'issue', 'support']",{'issue': 100}
"['issue', 'parameter']",{'issue': 100}
"['request', 'dropboxuserdatacontent', 'permission', 'directory', 'issue']","{'permission': 100, 'issue': 100}"
"['nodon', 'softremoteopenhab', 'issue']",{'issue': 100}
"['includinghappen', 'message', 'energy', 'support', 'monitorlightwave', 'message', 'status', 'supportupdatetime', 'message', 'fixedmessage', 'receiver', 'thread', 'issue', 'unknownissue', 'message']","{'thread': 100, 'issue': 100}"
"['different', 'versionopenhab', 'issue']",{'issue': 100}
"['openhab', 'issue']",{'issue': 100}
"['ccceb', 'mergemerge', 'request', 'debfiles', 'theoweiss', 'permission', 'configdirconfiguration', 'owner', 'openhab', 'directory', 'installation']",{'permission': 100}
"['converter', 'command', 'check', 'multi', 'levelopenhab', 'issue']",{'issue': 100}
"['mergemerge', 'request', 'mrguesseddecimal', 'persistence', 'mapdb', 'issue', 'restore', 'percenttype', 'value']",{'issue': 100}
"['extraopenhab', 'issue']",{'issue': 100}
"['request', 'masterupdate', 'issue']",{'issue': 100}
"['multilevel', 'switchopenhab', 'issue']",{'issue': 100}
"['dlinkcdjackson', 'issue', 'habmin']",{'issue': 100}
"['zmnhadopenhab', 'issue']",{'issue': 100}
"['updateopenhab', 'issue']",{'issue': 100}
"['conversion', 'bigdecimal', 'temperatureopenhab', 'issue']",{'issue': 100}
"['merten', 'databasecdjackson', 'issue', 'habmincdjackson', 'issue', 'habmin']",{'issue': 100}
"['error', 'login', 'message', 'credential', 'insteonplm', 'incorrect']",{'incorrect': 100}
"['configopenhab', 'issue']",{'issue': 100}
"['openhab', 'issue']",{'issue': 100}
"['catch', 'script', 'exception', 'thread']",{'thread': 100}
"['cdjackson', 'issue', 'habmin']",{'issue': 100}
"['nodon', 'manufactureropenhab', 'issue']",{'issue': 100}
"['mergemerge', 'request', 'bindingprovider', 'concurrency', 'watousafety']",{'concurren': 90}
"['nodonopenhab', 'issue']",{'issue': 100}
"['econetopenhab', 'issue']",{'issue': 100}
"['referenceopenhab', 'issue']",{'issue': 100}
"['threadsafe', 'expose', 'method', 'block', 'notifylisteners', 'synchronizedharmonyhub', 'bundings', 'bindingconfigs', 'ecobee']",{'expose': 100}
"['barrier', 'device', 'class', 'secureopenhab', 'issue']",{'issue': 100}
"['updatecdjackson', 'issue', 'habmin']",{'issue': 100}
"['mergecrackerstealth', 'issue', 'clean', 'message', 'service']",{'issue': 100}
"['floor', 'heatit', 'thermostat', 'thermodevice', 'zwavedbopenhab', 'issue']",{'issue': 100}
"['update', 'zmnhod', 'qubinoopenhab', 'issue']",{'issue': 100}
"['update', 'zmnhod', 'parameter', 'qubinoopenhab', 'issue']",{'issue': 100}
"['update', 'zmnhod', 'qubinoopenhab', 'issue']",{'issue': 100}
"['incorrect', 'class', 'endpoint', 'jackson', 'chris']",{'incorrect': 100}
"['issue', 'product']",{'issue': 100}
"['update', 'product', 'issue', 'model']",{'issue': 100}
"['issue', 'product', 'databasecdata', 'editedincorrect']",{'issue': 100}
"['product', 'issue', 'tiltzwave', 'databaserecognize', 'unnecessarycdata', 'consistent', 'parameter', 'realizedincorporate']",{'issue': 100}
"['usage', 'issue']",{'issue': 100}
"['levitonopenhab', 'issue']",{'issue': 100}
"['state', 'double', 'quote', 'command', 'removecommand', 'changeddouble', 'trigger', 'withouttrigger', 'issue', 'string']",{'issue': 100}
"['mergemerge', 'request', 'mvolaart', 'mastermeter', 'issue']",{'issue': 100}
"['cdjackson', 'issue', 'habmin']",{'issue': 100}
"['zwaveme', 'addeddevice', 'issue', 'database']",{'issue': 100}
"['cdjackson', 'issue', 'habmin']",{'issue': 100}
"['class', 'handlingopenhab', 'issue']",{'issue': 100}
"['version', 'paramopenhab', 'issue']",{'issue': 100}
"['version', 'addedinclude', 'version', 'issue']",{'issue': 100}
"['parameter', 'configcdjackson', 'issue', 'habmin']",{'issue': 100}
"['issue', 'vision']",{'issue': 100}
"['mergemerge', 'request', 'heatmiser', 'skynethomeupdate', 'issue', 'heatmiser']",{'issue': 100}
"['update', 'issue', 'heatmiserhandle']",{'issue': 100}
"['mergemerge', 'request', 'dennis', 'onewire', 'tempscale', 'property', 'issue', 'config']",{'issue': 100}
"['freebox', 'issue', 'bridge']",{'issue': 100}
"['tempscale', 'property', 'issue', 'config']",{'issue': 100}
"['visioncdjackson', 'issue', 'habmin']",{'issue': 100}
"['updateopenhab', 'issue']",{'issue': 100}
"['initial', 'addition', 'sirencdjackson', 'issue', 'habmin']",{'issue': 100}
"['security', 'device', 'visioncdjackson', 'issue', 'habmin']","{'Security': 100, 'issue': 100}"
"['cdjackson', 'issue', 'habminopenhab', 'issue']",{'issue': 100}
"['thermostat', 'manufacturercdjackson', 'issue', 'habmin']",{'issue': 100}
"['linear', 'detectorcdjackson', 'issue', 'habmin']",{'issue': 100}
"['issue', 'getculhandler', 'empty', 'property']",{'issue': 100}
"['philiocdjackson', 'issue', 'habmin']",{'issue': 100}
"['cdjackson', 'issue', 'habmin']",{'issue': 100}
"['security', 'vision']",{'Security': 100}
"['product', 'reference', 'switchopenhab', 'issue']",{'issue': 100}
"['device', 'leviton', 'zwaveopenhab', 'issue']",{'issue': 100}
"['permission', 'thermostat', 'close', 'property']",{'permission': 100}
"['classicui', 'empty', 'invalid', 'reponsefirefox', 'browser', 'valid', 'sends', 'response', 'empty', 'crash', 'server']",{'crash': 100}
"['jascocdjackson', 'issue', 'habmin']",{'issue': 100}
"['ebbdab', 'mergelolodomo', 'request', 'freeboxphone', 'issue', 'freebox', 'management']",{'issue': 100}
"['phone', 'issue', 'freebox', 'management']",{'issue': 100}
"['zstickcdjackson', 'issue', 'habmin']",{'issue': 100}
"['library', 'issue', 'upgrade', 'thomasletsch']",{'issue': 100}
"['issue', 'busevents', 'command', 'causeopenhab', 'issue']",{'issue': 100}
"['issue', 'busevents', 'command', 'causeopenhab', 'issue']",{'issue': 100}
"['acddbamerge', 'request', 'corruption', 'thread', 'issue', 'context']","{'thread': 100, 'issue': 100}"
"['sensorcdjackson', 'issue', 'habmin']",{'issue': 100}
"['fortressopenhab', 'issue']",{'issue': 100}
"['persistence', 'connection', 'mysql', 'errcnt', 'gettable', 'checkchange', 'issue', 'errcnt', 'check', 'connectionstore', 'result', 'connection']",{'issue': 100}
"['update', 'philiocdjackson', 'issue', 'habmin']",{'issue': 100}
"['request', 'rsstephensdscalarm', 'message', 'openhab', 'issue', 'partition']",{'issue': 100}
"['evolveopenhab', 'issue']",{'issue': 100}
"['linearcdjackson', 'issue', 'habmin']",{'issue': 100}
"['generator', 'reference', 'existent', 'issue']",{'issue': 100}
"['cdjackson', 'issue', 'habmin']",{'issue': 100}
"['update', 'associationopenhab', 'issue']",{'issue': 100}
"['entrycdjackson', 'issue', 'habmin']",{'issue': 100}
"['error', 'databaseopenhab', 'issue']",{'issue': 100}
"['request', 'jakeysimulator', 'mochad', 'thread']",{'thread': 100}
"['mochad', 'thread']",{'thread': 100}
"['thread', 'threadpool']",{'thread': 100}
"['issue', 'context', 'corruptionissue']",{'issue': 100}
"['issue', 'syntax']",{'issue': 100}
"['update', 'version', 'stringcdjackson', 'issue', 'habmin']",{'issue': 100}
"['mergemerge', 'master', 'concurrency', 'watou', 'origin']",{'concurren': 90}
"['mergemerge', 'openhab', 'concurrency', 'watouconflictopenhab', 'internal', 'bundle']",{'concurren': 90}
"['exposure', 'concurrent', 'multiple', 'access', 'problem']","{'Exposure': 100, 'concurrent': 100}"
"['potential', 'ignoreeventset', 'ecobee', 'concurrency', 'thread', 'issue']","{'concurren': 90, 'thread': 100, 'issue': 100}"
"['master', 'zwavecommits', 'mastercdjackson', 'habmin', 'issue', 'parameter', 'optionpersistence', 'openhab', 'runtime', 'check', 'restart', 'upgrade', 'databasehomepage', 'adduser', 'runtime', 'control', 'rename', 'dependency', 'inlinebrickdc', 'managedservice', 'actionupdate', 'bindingupdate', 'braceletcopyright', 'actionupdatedsystemd', 'scriptbutton', 'support', 'braceletlinear', 'support', 'bindingsupport', 'openhab', 'runtime', 'configuration', 'persistencepersistence', 'problem', 'permissionsystemd', 'permissionsystemd', 'permission']","{'issue': 100, 'permission': 100}"
"['master', 'zwavecommits', 'masterupdateincrease', 'debug', 'trace', 'levelversion', 'spurious', 'class', 'method', 'redirect', 'status', 'custom', 'executeurlinitialdocumentet', 'interval', 'request', 'openhab', 'conditioner', 'multiple', 'value', 'issue', 'samsung', 'refreshmessage', 'atmosphere', 'sitemap', 'request', 'delay', 'thread', 'issue', 'memorystate', 'contact', 'bugfix', 'issue', 'influxdb', 'switchmultiple', 'communicationindication', 'changeblank', 'removedcolor', 'device', 'supportvariable', 'state', 'bindinginitial', 'support', 'bridge', 'actioninvalid']","{'issue': 100, 'thread': 100}"
"['update', 'everspringopenhab', 'issue']",{'issue': 100}
"['update', 'product', 'smartstripcdjackson', 'issue', 'habmin']",{'issue': 100}
"['parameter', 'optioncdjackson', 'issue', 'habmin']",{'issue': 100}
"['initial', 'addition', 'strip', 'smartcdjackson', 'issue', 'habmin']",{'issue': 100}
"['parameter', 'confirmationopenhab', 'issue']",{'issue': 100}
"['openhab', 'issue']",{'issue': 100}
"['databaseopenhab', 'issue']",{'issue': 100}
"['update', 'referenceopenhab', 'issue']",{'issue': 100}
"['openhab', 'issue']",{'issue': 100}
"['mergeinfluxdb', 'theoweiss', 'contact', 'bugfix', 'issue', 'influxdb', 'switch']",{'issue': 100}
"['mergemerge', 'request', 'limit', 'atmosphere', 'threadpool', 'innoqlimit', 'atmosphere', 'thread']",{'thread': 100}
"['mergemerge', 'request', 'atmoshphere', 'digitaldan', 'issue', 'delay', 'thread', 'issue', 'memory']","{'issue': 100, 'thread': 100}"
"['documentet', 'interval', 'request', 'openhab', 'conditioner', 'multiple', 'value', 'issue', 'samsung', 'refresh']",{'issue': 100}
"['sitemap', 'request', 'delay', 'thread', 'issue', 'memory']","{'thread': 100, 'issue': 100}"
"['contact', 'bugfix', 'issue', 'influxdb', 'switch']",{'issue': 100}
"['color', 'device', 'issue', 'supporterror', 'color', 'exception']",{'issue': 100}
"['keyfobcdjackson', 'issue', 'habmin']",{'issue': 100}
"['integer', 'converteropenhab', 'issueopenhab', 'issue']","{'integer': 100, 'issue': 100}"
"['integer', 'converter', 'thermostat', 'bigdecimal', 'updateopenhab', 'issue']","{'integer': 100, 'issue': 100}"
"['report', 'thermostattreat', 'systemboiler', 'thermostat', 'control', 'controller', 'sendingcommand', 'handlingopenhab', 'issue']",{'issue': 100}
"['zwavedb', 'device', 'length', 'doorsensor']",{'length': 100}
"['unknown', 'class', 'wakeup', 'encapsulatedopenhab', 'issue']",{'issue': 100}
"['master', 'zwavecommits', 'readable', 'scriptentry', 'value', 'topic', 'meter', 'invalid', 'ejtlvmya', 'failure', 'property', 'problem', 'error', 'power', 'openhab', 'configration', 'obisidentifer', 'category', 'reading', 'detect', 'forum', 'version', 'qlxtazvp', 'dbnjrrmeiwq', 'slaveelectrity', 'issue', 'teichstafalse', 'message', 'error', 'eliminatedacross', 'suggestion', 'script', 'persistent', 'start', 'obliterate', 'workaround', 'nielsenevent', 'example', 'sendinghelpful', 'booleanaddedexample', 'improvedopenhab', 'thermostat', 'changedproperty', 'sitemap', 'testingkoubachi', 'createstate', 'update']",{'issue': 100}
"['value', 'issue', 'category', 'topic', 'reading', 'detectversion', 'property', 'removederror', 'configration', 'slaveelectrity', 'spellingmeter', 'forum', 'qlxtazvp', 'value', 'issue', 'obisidentifer', 'category', 'problem', 'reading', 'topicmeter', 'invalid', 'entry', 'forum', 'power', 'failure', 'dbnjrrmeiwq', 'value', 'category', 'problem', 'reading', 'topicforum', 'ejtlvmya', 'issue', 'category', 'problem']",{'issue': 100}
"['initial', 'parameteropenhab', 'issue']",{'issue': 100}
"['correction', 'issue']",{'issue': 100}
"['zwavezwaveopenhab', 'issue', 'philio']",{'issue': 100}
"['philioopenhab', 'issue']",{'issue': 100}
"['incorrect', 'error', 'entry', 'removeopenhab', 'issue']","{'incorrect': 100, 'issue': 100}"
"['cfaea', 'mergemerge', 'zwavezwaveupdate', 'issue', 'openhab', 'zipato']",{'issue': 100}
"['update', 'zipatoopenhab', 'issue']",{'issue': 100}
"['zwavezwaveopenhab', 'issue']",{'issue': 100}
"['escapeopenhab', 'issue']",{'issue': 100}
"['persistence', 'problem', 'permission']",{'permission': 100}
"['zwavezwaveopenhab', 'issue', 'zipato']",{'issue': 100}
"['zipatoopenhab', 'issue']",{'issue': 100}
"['horstmann', 'securecdjackson', 'issue', 'habmin']",{'issue': 100}
"['systemd', 'permission']",{'permission': 100}
"['systemd', 'permission']",{'permission': 100}
"['mergemerge', 'request', 'issue', 'startup']",{'issue': 100}
"['issue', 'startup']",{'issue': 100}
"['battery', 'length', 'check', 'processing', 'report']",{'length': 100}
"['integer', 'number', 'value', 'pilight']",{'integer': 100}
"['check', 'monitor', 'networkopenhab', 'issue']",{'issue': 100}
"['valid', 'check', 'lengthopenhab', 'issue']",{'issue': 100}
"['zwavezwaveupdate', 'issue', 'openhab', 'mimolite']",{'issue': 100}
"['incorrect', 'bugfix']",{'incorrect': 100}
"['update', 'mimoliteopenhab', 'issue']",{'issue': 100}
"['acebc', 'mergemerge', 'initialisation', 'zwaveinitialisation', 'zwaveopenhab', 'issue', 'database', 'zmnhiacdjackson', 'issue', 'habmin', 'distribution', 'networkupstools', 'bindinglable', 'house', 'changedguest', 'fritzbox', 'bindingcatch', 'message', 'status', 'comment', 'improvednetwork']",{'issue': 100}
"['initialisation', 'zwavezwaveopenhab', 'issue', 'database', 'zmnhiacdjackson', 'issue', 'habmin', 'distribution', 'networkupstools', 'bindinglable', 'house', 'changedguest', 'fritzbox', 'bindingcatch', 'message', 'status', 'comment', 'improvednetwork']",{'issue': 100}
"['database', 'zmnhiaopenhab', 'issue']",{'issue': 100}
"['switchcdjackson', 'issue', 'habmin']",{'issue': 100}
"['ecfaf', 'mergemerge', 'initialisation', 'zwaveinitialisation', 'zwaveinterval', 'command', 'configurable', 'bugfix', 'issuefolder', 'callback', 'configuration', 'dynamic', 'issue', 'copyright', 'bundlecontext', 'variable', 'archetype', 'project', 'activator', 'valid', 'default', 'header', 'import', 'static', 'bundle']",{'issue': 100}
"['initialisation', 'zwavezwaveupdate', 'fibaro', 'universal', 'sensorinterval', 'command', 'configurable', 'bugfix', 'issuefolder', 'callback', 'configuration', 'dynamic', 'issue', 'copyright', 'bundlecontext', 'variable', 'archetype', 'project', 'activator', 'valid', 'default', 'header', 'import', 'static', 'bundle']",{'issue': 100}
"['master', 'zwavemasterinterval', 'command', 'configurable', 'bugfix', 'issuefolder', 'callback', 'configuration', 'dynamic', 'issue', 'copyright', 'bundlecontext', 'variable', 'archetype', 'project', 'activator', 'valid', 'default', 'header', 'import', 'static', 'bundle', 'access', 'removeddatabase', 'leviton', 'zwave']",{'issue': 100}
"['mergeissue', 'olibutzki', 'requestimpossible', 'urtsi', 'issue', 'serial']",{'issue': 100}
"['initialisation', 'zwavecommits', 'initialisation', 'zwavetransaction', 'possible', 'senddata', 'application', 'controllerunnecessary', 'parameter', 'refactorcdjackson', 'issue', 'habminfirefox', 'display', 'kudos', 'number', 'slaneyclass', 'commandscale', 'transform', 'limit', 'bugfix', 'segmentupdate', 'device', 'sensorgarage', 'class', 'sensor', 'device', 'updatecolor', 'brightness', 'result', 'bugfixworkaround', 'smack', 'actionlarge', 'negative', 'numberlarge', 'negative', 'numberqueue', 'synchronisation', 'aroundhashcode', 'equal', 'fixedmanagedservice', 'removedblind', 'rfxcom', 'forest', 'chamberlainmeter', 'relay', 'qubino', 'class', 'informationupdate', 'relay', 'qubinoconflictinternal', 'openhab', 'zwave', 'protocol', 'bundle']",{'issue': 100}
"['initialisation', 'zwavezwavecdjackson', 'issue']",{'issue': 100}
"['dynamic', 'issue', 'diekmann', 'tdiekman']",{'issue': 100}
"['everspringcdjackson', 'issue', 'habmin']",{'issue': 100}
"['initialisation', 'zwavezwaveblind', 'rfxcom', 'forest', 'chamberlaincdjackson', 'issue', 'habmin']",{'issue': 100}
"['cdjackson', 'issue', 'habmin']",{'issue': 100}
"['initialisation', 'zwavezwaveassociation', 'openhab', 'group', 'update', 'issue']",{'issue': 100}
"['update', 'group', 'associationopenhab', 'issue']",{'issue': 100}
"['initialisation', 'zwavecommits', 'zwavegeneration', 'support', 'aeotec', 'keyfobopenhab', 'linear', 'issueerror', 'persistence', 'openhab', 'bugfix', 'warning', 'issue', 'influxdbpersistence', 'openhab', 'bugfix', 'issue', 'influxdbenvironment', 'exeuctionpersistence', 'openhab', 'bugfix', 'issue', 'connectioncallback', 'action', 'removeimprove', 'actionopenhab', 'server', 'resourcecallbacksmack', 'source', 'actiontarget', 'action', 'javac', 'level', 'sourcewildcard', 'command', 'respondingupdate', 'launch', 'eclipse', 'result', 'default', 'bugfix', 'thread', 'refreshoperation', 'compressor']","{'issue': 100, 'thread': 100}"
"['master', 'zwavecommits', 'mastergeneration', 'support', 'aeotec', 'keyfoberror', 'persistence', 'openhab', 'bugfix', 'warning', 'issue', 'influxdbpersistence', 'openhab', 'bugfix', 'issue', 'influxdbenvironment', 'exeuctionpersistence', 'openhab', 'bugfix', 'issue', 'connectioncallback', 'action', 'removeimprove', 'actionopenhab', 'server', 'resourcecallbacksmack', 'source', 'actiontarget', 'action', 'javac', 'level', 'sourcewildcard', 'command', 'respondingupdate', 'launch', 'eclipse', 'result', 'default', 'bugfix', 'thread', 'refreshoperation', 'compressor', 'configactionaction', 'eclipse', 'config']","{'issue': 100, 'thread': 100}"
"['generation', 'support', 'aeotec', 'keyfob']",{'generation': 100}
"['linearopenhab', 'issue']",{'issue': 100}
"['error', 'persistence', 'openhab', 'bugfix', 'warning', 'issue', 'influxdb']",{'issue': 100}
"['persistence', 'openhab', 'bugfix', 'issue', 'influxdb']",{'issue': 100}
"['persistence', 'openhab', 'bugfix', 'issue', 'influxdb']",{'issue': 100}
"['initialisation', 'zwavecommits', 'initialisation', 'zwaveinput', 'exception', 'thread', 'updateexception', 'input', 'thread', 'handlingwatchdog', 'inputthread', 'checkerror', 'check', 'progress', 'stage', 'implementavailable', 'bundle', 'package', 'activeversion', 'zibase', 'distribution', 'bindinglicense', 'version', 'issue', 'minorproper', 'validation', 'error', 'unnecessary', 'version', 'comment', 'removedwimpi', 'license', 'version', 'binary', 'modbus', 'sourceinitial', 'bindingfunctionreturn', 'transaction', 'route', 'assignment', 'completionplace', 'holder', 'concatenation', 'stringconflictinternal', 'openhab', 'zwave', 'protocol', 'bundleinternal', 'openhab', 'initialization', 'zwave', 'protocol', 'bundle']","{'thread': 100, 'issue': 100}"
"['bugfix', 'refreshdefault', 'thread', 'refreshexecute']",{'thread': 100}
"['input', 'exception', 'thread', 'update']",{'thread': 100}
"['exception', 'input', 'thread']",{'thread': 100}
"['master', 'zwavecommits', 'masteravailable', 'bundle', 'package', 'activeversion', 'zibase', 'distribution', 'bindinglicense', 'version', 'issue', 'minorproper', 'validation', 'error', 'unnecessary', 'version', 'comment', 'removedwimpi', 'license', 'version', 'binary', 'modbus', 'sourceinitial', 'holder', 'concatenation', 'stringchart', 'message', 'openhab', 'uppercase', 'string', 'value', 'issue', 'compareresolv', 'conflictreview', 'fatal', 'levelreturn', 'state', 'timestamps', 'scenario', 'zibase']","{'issue': 100, 'fatal': 100}"
"['mergemerge', 'master', 'initialisation', 'zwavecommits', 'masteravailable', 'bundle', 'package', 'activeversion', 'zibase', 'distribution', 'bindinglicense', 'version', 'issue', 'minorproper', 'validation', 'error', 'unnecessary', 'version', 'comment', 'removedwimpi', 'license', 'version', 'binary', 'modbus', 'sourceinitial', 'holder', 'concatenation', 'stringchart', 'message', 'openhab', 'uppercase', 'string', 'value', 'issue', 'compareresolv', 'conflictreview', 'fatal', 'levelreturn', 'state', 'timestamps', 'scenario', 'zibase']","{'issue': 100, 'fatal': 100}"
"['version', 'issue']",{'issue': 100}
"['cdabamerge', 'request', 'holgeroerror', 'fatal', 'level']",{'fatal': 100}
"['value', 'uppercase', 'value', 'issueopenhab', 'issue']",{'issue': 100}
"['zwavezwavecdjackson', 'vision', 'device', 'habmin', 'update', 'issueopenhab', 'issue', 'danfosscosmeticcorrection', 'issue', 'handleallow', 'direct', 'response', 'transformationremove', 'review', 'adjustment', 'enhance', 'mavenexception', 'initial', 'bundle', 'google']",{'issue': 100}
"['update', 'device', 'visioncdjackson', 'issue', 'habmin']",{'issue': 100}
"['danfossopenhab', 'issue']",{'issue': 100}
"['request', 'cliniquecorrection', 'issue', 'netatmo']",{'issue': 100}
"['correction', 'issue']",{'issue': 100}
"['device', 'class', 'siren', 'specificopenhab', 'issue']",{'issue': 100}
"['master', 'zwavecommits', 'masterupdate', 'zwavecurrent', 'minute', 'commonid', 'provider', 'command', 'sendingerror', 'eclipse', 'variouscleansingrequest', 'module', 'netatmo', 'timestamp', 'update', 'value', 'featureupdatemistake', 'archetype', 'paste', 'maxcube', 'diffs', 'issue', 'messageerror', 'generic', 'style', 'compilationpaste', 'teichsta', 'comment']",{'issue': 100}
"['thread', 'processing', 'major', 'messagemessage', 'meantsecond', 'message']",{'thread': 100}
"['mergemerge', 'request', 'master', 'value', 'issue']",{'issue': 100}
"['fatal', 'levelwrong', 'debug', 'message', 'level']",{'fatal': 100}
"['maxcube', 'diffs', 'issue', 'marcel', 'verpaalen']",{'issue': 100}
"['security', 'setting', 'actionconnection', 'default', 'validateconnection']",{'Security': 100}
"['initialisation', 'zwavezwaveupdate', 'sensitive', 'configdevice']",{'Sensitive': 100}
"['sensitive', 'config']",{'Sensitive': 100}
"['initialisation', 'zwavecommits', 'zwaveupdate', 'issue', 'openhabupdate', 'issue', 'receptacle', 'openhablight', 'clean', 'document', 'dimmer', 'insteonplm', 'gettingevent', 'multiple', 'dimmer', 'switch', 'detectpublish', 'determineversion', 'levelerror', 'usage', 'syntax', 'insteonplm', 'compilerinsteon', 'equal', 'eclipse', 'generate', 'hashcode', 'report', 'source', 'conflict', 'resolvedsometimes', 'dimmer', 'percentage', 'loaddimmer', 'dimmermaxablity', 'insteonplm', 'format', 'levelversion', 'message', 'duplicate', 'device', 'ingnore', 'message', 'duplicate', 'light', 'future', 'metric', 'configurable', 'default', 'approx', 'individual', 'state', 'keypad', 'command', 'insteonplm', 'button', 'handler', 'group', 'parameter', 'configmodemdbbuilder', 'class', 'insteonplm', 'warningprettier', 'insteonplm']",{'issue': 100}
"['updateopenhab', 'issue']",{'issue': 100}
"['update', 'receptacleopenhab', 'issue']",{'issue': 100}
"['initialisation', 'zwavezwaveupdate', 'referenceopenhab', 'issue']",{'issue': 100}
"['openhab', 'issue']",{'issue': 100}
"['unknowncdjackson', 'issue', 'habmin']",{'issue': 100}
"['ceeedmerge', 'request', 'clinique', 'group', 'patch', 'issue', 'datetime']",{'issue': 100}
"['command', 'wakeup', 'class', 'awake', 'modify', 'timeropenhab', 'issue']",{'issue': 100}
"['initialisation', 'zwavezwavebenext', 'openhab', 'dimmer', 'update', 'issue']",{'issue': 100}
"['update', 'dimmer', 'benextopenhab', 'issue']",{'issue': 100}
"['issue', 'patch']",{'issue': 100}
"['initialisation', 'zwavezwavefibaro', 'openhab', 'sensor', 'motion', 'issue']",{'issue': 100}
"['fibaro', 'sensoropenhab', 'issue']",{'issue': 100}
"['wrong', 'actual', 'maxcubefalse', 'value', 'issue', 'similaraddition', 'valve']",{'issue': 100}
"['cdcafe', 'mergemerge', 'master', 'initialisation', 'zwavemastergeneration', 'property', 'addedissue', 'insteonplm', 'support', 'bindingactual', 'dominicdesu', 'comment', 'issueformatter', 'appliedrevert', 'eclipse', 'formatterformatter', 'eclipse', 'support', 'maxcube', 'manualissue', 'maxcubemeter', 'protocol', 'landisremovedupdate', 'configuration', 'default', 'alarm', 'bindingfixedcomment', 'example', 'providedscale', 'correction', 'factorisation', 'search', 'issue']",{'issue': 100}
"['initialisation', 'zwavezwaveupdate', 'productupdate', 'product', 'issue', 'openhab']",{'issue': 100}
"['update', 'productopenhab', 'issue']",{'issue': 100}
"['dominicdesu', 'comment', 'issue']",{'issue': 100}
"['scale', 'correction', 'factorisation', 'search', 'issue']",{'issue': 100}
"['mergemerge', 'master', 'initialisation', 'zwavecommits', 'insteonplm', 'cfrede', 'conditionbenext', 'openhab', 'dimmer', 'issue', 'builtopenhab', 'alarm', 'issue', 'fortrezzpaste', 'fixedinsteonplm', 'reflect', 'optiontemplate', 'optioninitial', 'checkin', 'supportdependency', 'object', 'removedreview', 'comment', 'master', 'openhab', 'weather', 'documentation', 'maxcube', 'configuseless', 'message', 'option']",{'issue': 100}
"['mergemerge', 'master', 'initialisation', 'zwavecommits', 'mastererror', 'client', 'message', 'event', 'reason', 'inclusion', 'sendingerror', 'packet', 'exclusion', 'request', 'exclude', 'handlingconfiguration', 'event', 'handler', 'openhab', 'exclusion', 'timer', 'inclusion', 'issue', 'pilightchange', 'share', 'exectutor', 'staic', 'class', 'sensor', 'syntax', 'license', 'headerentry', 'expiredgroup', 'philio', 'multisensorreview', 'teichstareview', 'thingcleanupmaster', 'initial', 'bindingduplicate', 'protocol', 'direction', 'device', 'author', 'javadoc', 'javadoc', 'downgradedconflictcommandclass', 'internal', 'openhab', 'zwave', 'protocol', 'bundle']",{'issue': 100}
"['handlingconfiguration', 'event', 'handler', 'exclusion', 'timer', 'inclusionopenhab', 'issue']",{'issue': 100}
"['benextopenhab', 'issue']",{'issue': 100}
"['alarm', 'fortrezzopenhab', 'issue']",{'issue': 100}
"['initial', 'checkin', 'bridgedevice', 'expose', 'access', 'ability', 'expose', 'controllervariable', 'state', 'command', 'invoke', 'single', 'device', 'control', 'parametercurrent', 'execution', 'state', 'invoke', 'scene', 'control', 'counterpart', 'interface', 'remote', 'controllerbetter', 'javadoc', 'leveltransform', 'command', 'openhab', 'example', 'transformationvarious', 'datatype', 'original', 'snippet']",{'expose': 100}
"['initial', 'checkin', 'bridgedevice', 'expose', 'access', 'ability', 'expose', 'controllervariable', 'state', 'command', 'invoke', 'single', 'device', 'control', 'parametercurrent', 'execution', 'state', 'invoke', 'scene', 'control', 'counterpart', 'interface', 'remote', 'controllerbetter', 'javadoc', 'leveltransform', 'command', 'openhab', 'example', 'transformationvarious', 'datatype', 'original', 'snippet']",{'expose': 100}
"['center', 'synch', 'telldus']",{'synch': 100}
"['setpointtypeopenhab', 'issue']",{'issue': 100}
"['datapoints', 'generation']",{'generation': 100}
"['update', 'smackolder', 'security', 'version', 'smack', 'vulnerability', 'knownexception', 'previous', 'smack', 'comparedtarget', 'duplicationcatch', 'block', 'multi', 'sincefeature', 'language']",{'Security': 100}
"['mergeopenhabcfg', 'space', 'issue', 'whitespaces']",{'issue': 100}
"['issue', 'whitespaces']",{'issue': 100}
"['initial', 'addition', 'ecolinkcdjackson', 'issue', 'habmin']",{'issue': 100}
"['issue', 'module', 'resolvedconfiguration', 'speech', 'dispatcher']",{'issue': 100}
"['configuration', 'timeout', 'equal', 'parameterconfiguration', 'timeout', 'specify', 'value', 'incorrect']",{'incorrect': 100}
"['master', 'zwavemasterresolve', 'conflictexception', 'handlingnever', 'lastsent', 'determination', 'health', 'information', 'allowsconstructor', 'event', 'endpoint', 'zwaveevent', 'default', 'addedmanual', 'openhab', 'issue', 'druciak', 'eecdcendpoint', 'distinction', 'openhab', 'instance', 'initial', 'default', 'multi', 'value', 'issue', 'allowsinitialise', 'class', 'endpoint', 'commandreset', 'startup', 'versiongetter', 'class', 'setter', 'update', 'method', 'deserialiser', 'information', 'avoidsinitial', 'deserialisation', 'commitconflictinternal', 'openhab', 'zwave', 'protocol', 'bundle']",{'issue': 100}
"['master', 'zwavemasterupdate', 'formattingreformattingrfxcom', 'message', 'lightingnicolas', 'bonnefond', 'thanks', 'device', 'itempexception', 'handlingconstructor', 'event', 'endpoint', 'zwaveevent', 'default', 'addedmanual', 'openhab', 'issue', 'druciak', 'eecdcendpoint', 'distinction', 'openhab', 'instance', 'initial', 'default', 'multi', 'value', 'issue', 'allowsinitialise', 'class', 'endpoint', 'commandgroup', 'associationreset', 'startup', 'versiongetter', 'class', 'setter', 'update', 'method', 'deserialiser', 'information', 'avoidsinitial', 'deserialisation', 'commitconflictinternal', 'openhab', 'zwave', 'protocol', 'bundle']",{'issue': 100}
"['failedopenhab', 'issue']",{'issue': 100}
"['master', 'zwavecommits', 'masteropenhab', 'issue', 'workaround', 'jmdnslabel', 'merten', 'controller', 'remoteparams', 'message', 'order', 'standard', 'debug', 'format', 'cleanupassoications', 'changeddefault', 'configmessage', 'retry', 'priority', 'pushover', 'requireddebug', 'opensprinkler', 'library', 'instancepointer', 'exception', 'openhab', 'fixedastro', 'error', 'getrange', 'datetimeutilmeter', 'sendingupdateupdatemysql', 'templateerror', 'message', 'parsingupdate', 'debug', 'prdoct', 'alternativeconflictinternal', 'openhab', 'initialization', 'zwave', 'protocol', 'bundle']",{'issue': 100}
"['openhab', 'issue', 'workaround', 'jmdns']",{'issue': 100}
"['eecdcopenhab', 'issue']",{'issue': 100}
"['initial', 'default', 'endpointendpoint', 'distinction', 'instance', 'allowsopenhab', 'issue']",{'issue': 100}
"['credential', 'issue']",{'issue': 100}
"['openhab', 'issue', 'workaround', 'jupnpkreuzer', 'github', 'kaikreuzer']",{'issue': 100}
"['update', 'converter', 'request', 'thermostatopenhab', 'issue']",{'issue': 100}
"['basic', 'setup', 'device', 'sonos', 'network', 'issue']",{'issue': 100}
"['duplicate', 'leviton', 'dimmer', 'incorrect', 'jasco']",{'incorrect': 100}
"['command', 'leviton', 'product', 'dimmer', 'incorrect', 'support']",{'incorrect': 100}
"['insensitive', 'player', 'address']",{'Sensitive': 90}
"['valid', 'regexp', 'check', 'underscorewuellueb', 'issue', 'openhab']",{'issue': 100}
"['request', 'zwavecommand', 'exception', 'number', 'incorrect', 'format']",{'incorrect': 100}
"['request', 'timeoutstale', 'issue', 'connection', 'refresh']",{'issue': 100}
"['possible', 'issue', 'concurrent', 'modification', 'logic']","{'issue': 100, 'concurrent': 100}"
"['modififcation', 'concurrent']",{'concurrent': 100}
"['sonos', 'issue']",{'issue': 100}
"['sonos', 'issue']",{'issue': 100}
"['mergemerge', 'request', 'digitaldan', 'issue', 'memoryissue', 'address', 'memory']",{'issue': 100}
"['command', 'exception', 'number', 'incorrect', 'format']",{'incorrect': 100}
"['eeafba', 'mergesonosfix', 'request', 'kgoderissonos', 'issue', 'bindingprovider']",{'issue': 100}
"['mergemerge', 'request', 'atmosphere', 'digitaldan', 'issue', 'memoryatmosphere']",{'issue': 100}
"['sonos', 'issue']",{'issue': 100}
"['jetty', 'experience', 'redirect', 'openhab', 'logic', 'issue']",{'issue': 100}
"['length', 'ensure', 'check']",{'length': 100}
"['request', 'hmerkclean', 'building', 'target', 'address', 'problem', 'length', 'different', 'install']",{'length': 100}
"['address', 'problem', 'location', 'length']",{'length': 100}
"['client', 'timeout', 'request', 'configurable', 'initial', 'header', 'issue']",{'issue': 100}
"['small', 'issue', 'credit', 'avoidsinline', 'credit', 'message', 'asleep', 'device', 'credit', 'fallenaccount', 'method', 'transmit', 'removal', 'sequenceensure', 'message', 'sequence', 'register']",{'issue': 100}
"['concurrency', 'exception']",{'concurren': 90}
"['association', 'building', 'optional', 'consistent', 'issue']",{'issue': 100}
"['verification', 'sensible', 'length']",{'length': 100}
"['length', 'parse']",{'length': 100}
"['issue', 'module']",{'issue': 100}
"['client', 'timeout', 'request', 'configurable', 'initial', 'header', 'issue']",{'issue': 100}
"['issue', 'performance']",{'issue': 100}
"['roller', 'shutter', 'optionopenhab', 'issue']",{'issue': 100}
"['reset', 'thread', 'removedopenhab', 'issue']","{'thread': 100, 'issue': 100}"
"['request', 'zwavestart', 'reset', 'thread']",{'thread': 100}
"['reset', 'thread', 'removedopenhab', 'issue']","{'thread': 100, 'issue': 100}"
"['message', 'conversion', 'sensor', 'debug', 'updateopenhab', 'issue']",{'issue': 100}
"['meter', 'optionopenhab', 'issue']",{'issue': 100}
"['issue', 'detection', 'input']",{'issue': 100}
"['issue', 'detection', 'input']",{'issue': 100}
"['mergemerge', 'request', 'mastercould', 'interval', 'network', 'issue', 'health', 'refresh']",{'issue': 100}
"['update', 'issue', 'rfxcom']",{'issue': 100}
"['configuration', 'issue', 'update', 'swegon']",{'issue': 100}
"['update', 'issue', 'energy']",{'issue': 100}
"['update', 'issue']",{'issue': 100}
"['issue', 'bundle', 'orderservice', 'recalculation']",{'issue': 100}
"['issue', 'bundle', 'ordercondition', 'method']",{'issue': 100}
"['issue', 'status', 'alarm']",{'issue': 100}
"['request', 'squeezebox', 'concurrency', 'issuebundle', 'reconnection', 'squeezebox', 'server']",{'concurren': 90}
"['eadaamerge', 'request', 'cdeadlock', 'masterconfiguration', 'insteon', 'device', 'insteonplm', 'morninglinc']",{'deadlock': 94}
"['concurrency', 'startup']",{'concurren': 90}
"['thread', 'reconnect']",{'thread': 100}
"['becec', 'mergemerge', 'master', 'zwavecommits', 'masterdistribution', 'series', 'comment', 'update', 'documenation', 'sourcesmall', 'improvement', 'functionality', 'sonos', 'issue', 'assertsinteger', 'exception', 'format', 'value', 'issue', 'thrownanswer', 'commandsimpler', 'addition', 'template', 'device', 'featureaddress', 'urtsi', 'device', 'daisy', 'featuredevice', 'labelrecordupdate', 'informationinformation', 'suport', 'controllerversion', 'upstreammaster', 'changedstellaz', 'thermostatconstantsensorimprovement', 'connection', 'reconnectingformat', 'standardise']",{'issue': 100}
"['request', 'planetrenner', 'martin', 'formatterinteger', 'conversion', 'pattern', 'float', 'bugfix', 'value', 'issue']",{'issue': 100}
"['issue', 'asserts']",{'issue': 100}
"['integer', 'exception', 'format', 'value', 'issue', 'thrown']","{'integer': 100, 'issue': 100}"
"['request', 'planetrenner', 'martin', 'formatternumeric', 'flexible', 'value', 'issue']",{'issue': 100}
"['request', 'issue', 'socketimprovement']",{'issue': 100}
"['mergemerge', 'master', 'startup', 'zwavecommits', 'masterupdateofficial', 'oauth', 'configmistake', 'configuration', 'filter', 'spellingtukey', 'outlier', 'robust', 'style', 'onewire', 'point', 'featureconfiguration', 'mongodbmultitouch', 'brickletmultitouch', 'oauth', 'callback', 'behavior', 'resource', 'thread', 'oauth', 'parameter', 'mongodb', 'persistenceremove', 'unnecessary', 'version', 'number', 'bindinglicense', 'headermultitouch', 'brickletmultitouch', 'brickletinclude', 'documentation', 'small', 'changegeneration', 'debian', 'openhab', 'package']",{'thread': 100}
"['flexible', 'value', 'issue']",{'issue': 100}
"['urgent', 'freeswitch', 'issue', 'report']",{'issue': 100}
"['thread', 'refreshresource']",{'thread': 100}
"['interval', 'network', 'issue', 'health', 'refresh']",{'issue': 100}
"['mergemerge', 'master', 'zwavecommits', 'masterversion', 'placeholder', 'actionerror', 'fixedplayer', 'state', 'small', 'command', 'restore', 'playuri', 'sonos', 'playline', 'adjustment', 'individual', 'implementstate', 'ensures', 'title', 'volume', 'radio', 'update', 'informationchange', 'supportenergenie', 'group', 'setting', 'supportsubtypesinteger', 'squeezebox', 'crash', 'volume', 'valueopenhab', 'service', 'reflect', 'fixedreference', 'controllerkeyword', 'persistence', 'condition', 'spike']",{'crash': 100}
"['request', 'mattwiresqueezeserver', 'state', 'volume', 'crash', 'update']",{'crash': 100}
"['integer', 'squeezebox', 'crash', 'volume', 'value']","{'integer': 100, 'crash': 100}"
"['integer', 'squeezebox', 'crash', 'volume', 'value']","{'integer': 100, 'crash': 100}"
"['logic', 'issue']",{'issue': 100}
"['mergemerge', 'master', 'zwavecommits', 'mastercomment', 'review', 'findingclasspath', 'honeywell', 'databaseinstead', 'colon', 'cleanup', 'threadcatch', 'error', 'disconnet', 'avoidstatement', 'cleanupconvienence', 'watchdog', 'thread', 'abstract', 'additional', 'method', 'channel', 'string', 'equality', 'addedwaittimeout', 'optionupdate', 'mysql', 'loggingextra', 'device']",{'thread': 100}
"['setting', 'cleanup', 'thread']",{'thread': 100}
"['watchdog', 'thread', 'abstract', 'additional', 'method']",{'thread': 100}
"['issue', 'pointstatement', 'restructuredstatement']",{'issue': 100}
"['mergemerge', 'master', 'zwavemasterupdateenables', 'revert', 'enhancementrevert', 'inclusioncreateinclusionconfiguration', 'usage', 'ostts', 'audio', 'contains', 'platform', 'enhancement', 'available', 'parameter', 'enablesmodule', 'appliance', 'zwave', 'databasefibaro', 'everspringreceipt', 'request', 'update', 'applicationhdanywhere', 'issue', 'parsingimprovement', 'plugwise', 'message', 'network', 'output', 'enable', 'number', 'zigbee', 'condition', 'retries', 'extensive', 'parameter', 'sendingbricklet', 'device', 'remote', 'cleanup', 'switchmessage', 'debug', 'plugwise', 'remote', 'switchdevice', 'switch', 'bricklet', 'remotebricklet', 'tinkerforge', 'remote', 'update', 'switchconflictinternal', 'openhab', 'zwave', 'protocol', 'bundle']",{'issue': 100}
"['wakeup', 'network', 'monitor', 'update', 'issue']",{'issue': 100}
"['request', 'kgoderishdanywhere', 'issue']",{'issue': 100}
"['hdanywhere', 'issue']",{'issue': 100}
"['request', 'mysql', 'bugfixmysql', 'length', 'problem', 'string']",{'length': 100}
"['bdafcd', 'ffadbmerge', 'request', 'security', 'teichsta', 'external']",{'Security': 100}
"['mysql', 'length', 'problem', 'string']",{'length': 100}
"['issue', 'plugwise']",{'issue': 100}
"['issue', 'plugwise']",{'issue': 100}
"['daecbamerge', 'request', 'planetrenner', 'martin', 'unsupporteddatapoints', 'issue']",{'issue': 100}
"['error', 'configuration', 'message', 'issue', 'contains']",{'issue': 100}
"['shorten', 'length']",{'length': 100}
"['request', 'kaikreuzerwidget', 'attribute', 'issue', 'optional', 'video']",{'issue': 100}
"['mergemerge', 'master', 'setup', 'zwavecommits', 'mastertarget', 'member', 'class', 'registry', 'function', 'monitor', 'energy', 'removedcustom', 'parameter', 'configprepare', 'improvement', 'pollingthread', 'abstract', 'volume', 'management', 'openhab', 'playlist', 'sonos', 'control', 'network', 'citizen', 'direction', 'quartz', 'issue', 'support', 'removedinclude', 'unpack', 'instructionupdate', 'wakup', 'classcommentcommand', 'scene', 'class', 'activation', 'zwavedevice', 'frame', 'informationbetter', 'battery', 'wakeup', 'devicechart', 'servlet', 'specific', 'place', 'class', 'holder', 'device', 'supporthomematic', 'fixednibegw', 'space', 'sourceusage', 'rfxcom', 'transmitcolour', 'standard', 'sitemapsconverter', 'state', 'dependency', 'itemregistry']",{'issue': 100}
"['issue', 'method']",{'issue': 100}
"['people', 'friendlier', 'bindingnative', 'library', 'boardno', 'thread']",{'thread': 100}
"['termperatures', 'thermostat', 'issue', 'setpoint']",{'issue': 100}
"['incorrect', 'error', 'parameter', 'switch']",{'incorrect': 100}
"['incorrect', 'check']",{'incorrect': 100}
"['thread', 'backgroundpotential', 'improvement', 'boardnum']",{'thread': 100}
"['variable', 'value', 'number', 'bigdecimal', 'length']",{'length': 100}
"['request', 'peutercometvisu', 'issue', 'backend']",{'issue': 100}
"['thanks', 'thread']",{'thread': 100}
"['security', 'rfxcomsecurity', 'command', 'enablealarm', 'remote', 'system']",{'Security': 100}
"['detail', 'issue', 'openhab']",{'issue': 100}
"['issue', 'timeout', 'fritzaha']",{'issue': 100}
"['eebfbaa', 'mergedvanherbergen', 'requestpointer', 'issue']",{'issue': 100}
"['nullpointer', 'issue', 'delay']",{'issue': 100}
"['issue', 'licence']",{'issue': 100}
"['sitemap', 'quote', 'attribute', 'string', 'issue']",{'issue': 100}
"['security', 'comment']",{'Security': 100}
"['bindinglatest', 'issue', 'comment']",{'issue': 100}
"['request', 'kgoderiscitizen', 'issue']",{'issue': 100}
"['request', 'owserverpotential', 'exception', 'pointer', 'interface', 'incorrect']",{'incorrect': 100}
"['buffer', 'warning']",{'buffer': 100}
"['limit', 'message', 'overflow']",{'overflow': 100}
"['issue', 'plugwise']",{'issue': 100}
"['issue', 'persistence', 'support', 'postgresql']",{'issue': 100}
"['issue', 'image']",{'issue': 100}
"['openhab', 'issue', 'digitalstrom']",{'issue': 100}
"['willem', 'patch', 'thanks', 'zwave', 'issue']",{'issue': 100}
"['openhab', 'designer', 'startup', 'issue']",{'issue': 100}
"['designer', 'issue', 'launch']",{'issue': 100}
"['thomas', 'letsch', 'thanks', 'enocean', 'issue']",{'issue': 100}
"['false', 'persistence', 'result', 'changedsince', 'issue']",{'issue': 100}
"['crash', 'issue', 'serial']","{'crash': 100, 'issue': 100}"
"['concurrency', 'issue', 'deadlock']","{'concurren': 90, 'issue': 100, 'deadlock': 100}"
"['issue', 'homematic', 'error']",{'issue': 100}
"['device', 'issue', 'support']",{'issue': 100}
"['issue', 'milight']",{'issue': 100}
"['issue', 'thanks', 'digitalstrom']",{'issue': 100}
"['dimmer', 'update', 'issue', 'temperatureopenhab', 'issue', 'detail']",{'issue': 100}
"['string', 'issue', 'habdroid']",{'issue': 100}
"['string', 'issue', 'habdroid']",{'issue': 100}
"['classic', 'problem', 'issue', 'ampersand']",{'issue': 100}
"['autoreconnect', 'issue']",{'issue': 100}
"['sonos', 'default', 'issue', 'config']",{'issue': 100}
"['modification', 'issue', 'thanks']",{'issue': 100}
"['ansgar', 'issue', 'multi', 'thanks']",{'issue': 100}
"['toggle', 'command', 'rollershutter', 'issue', 'switch']",{'issue': 100}
"['itemprovider', 'startup', 'synchronization', 'issue', 'bundle']",{'issue': 100}
"['twitter', 'making', 'available', 'issue']",{'issue': 100}
"['error', 'state', 'message', 'novelanheatpump', 'issue']",{'issue': 100}
"['timer', 'issue']",{'issue': 100}
"['itemprovider', 'startup', 'synchronization', 'issue', 'bundle']",{'issue': 100}
"['itemprovider', 'startup', 'synchronization', 'issue', 'bundle']",{'issue': 100}
"['value', 'issue', 'default']",{'issue': 100}
"['jetty', 'issue']",{'issue': 100}
"['proxy', 'widget', 'video', 'issue', 'image']",{'issue': 100}
"['servlet', 'exception', 'chart', 'number', 'issue']",{'issue': 100}
"['proxy', 'widget', 'video', 'issue', 'image']",{'issue': 100}
"['twitter', 'message', 'length']",{'length': 100}
"['issue', 'parameter']",{'issue': 100}
"['checkin', 'tobias', 'thanks', 'initial', 'contribution', 'issue', 'pulseaudio']",{'issue': 100}
"['additional', 'issue', 'exception']",{'issue': 100}
"['issue', 'persistence']",{'issue': 100}
"['issue', 'eclipse']",{'issue': 100}
"['issue', 'framework']",{'issue': 100}
"['issue', 'itemprovider', 'synchronization', 'problem']",{'issue': 100}
"['issue', 'initialization']",{'issue': 100}
"['status', 'group', 'address', 'readable', 'datapoint', 'issue', 'groupaddress']",{'issue': 100}
"['footer', 'update', 'issue', 'disappears', 'switch']",{'issue': 100}
"['issue', 'service']",{'issue': 100}
"['issue', 'shoutcast', 'support', 'stream']",{'issue': 100}
"['issue', 'linux']",{'issue': 100}
"['error', 'startup', 'crash', 'issue', 'bluetooth']","{'crash': 100, 'issue': 100}"
"['return', 'state', 'historicvalue', 'modify', 'value', 'issue']",{'issue': 100}
"['issue', 'historicvalue']",{'issue': 100}
"['startup', 'issue', 'prefill']",{'issue': 100}
"['startup', 'issue', 'prefill']",{'issue': 100}
"['designer', 'order', 'startup', 'issue']",{'issue': 100}
"['folder', 'issue', 'configuration', 'config']",{'issue': 100}
"['folder', 'issue', 'configuration', 'config']",{'issue': 100}
"['error', 'generation', 'manifest']",{'generation': 100}
"['status', 'issue', 'support']",{'issue': 100}
"['issue', 'clock']",{'issue': 100}
"['chart', 'issue', 'error']",{'issue': 100}
"['review', 'solution', 'cyril', 'concurrency']",{'concurren': 90}
"['generation', 'launch']",{'generation': 100}
"['clause', 'property', 'issue', 'drool']",{'issue': 100}
"['undefined', 'issue', 'value']",{'issue': 100}
"['issue', 'drool']",{'issue': 100}
"['issue', 'logic']",{'issue': 100}
"['openhab', 'issue', 'detail', 'response', 'delay']",{'issue': 100}
"['request', 'forum', 'uqlfviiawa', 'synchronization', 'issue']",{'issue': 100}
"['security', 'configuration']",{'Security': 100}
"['issue', 'comet', 'connection', 'suspendedlistener']",{'issue': 100}
"['security', 'mihail', 'suggestion', 'enhancement']",{'Security': 100}
"['issue', 'group']",{'issue': 100}
"['issue', 'comet', 'socketolivermazur', 'detail', 'bedcaaddaaea', 'websocket', 'comet', 'source']",{'issue': 100}
"['security', 'optional', 'dependency']",{'Security': 100}
"['security', 'optional', 'dependency']",{'Security': 100}
"['issue', 'jsonp']",{'issue': 100}
"['issue', 'sitemap']",{'issue': 100}
"['issue', 'sitemap']",{'issue': 100}
"['current', 'sitemap', 'attribute', 'label', 'issue']",{'issue': 100}
"['security', 'launch', 'enablement']",{'Security': 100}
"['issue', 'jsonp']",{'issue': 100}
"['issue', 'jsonp', 'request', 'callback']",{'issue': 100}
"['issue', 'error', 'sitemaps']",{'issue': 100}
"['checkin', 'security', 'basic', 'initial', 'issue']","{'Security': 100, 'issue': 100}"
"['terminal', 'generation']",{'generation': 100}
"['generation', 'classpath', 'directory', 'cleanup']",{'generation': 100}
"['daemon', 'thread', 'refreshthread']",{'thread': 100}
"['monitor', 'thread']",{'thread': 100}
"['issue', 'widget']",{'issue': 100}
"['thread', 'serial']",{'thread': 100}
"['folder', 'issue', 'imageexistence']",{'issue': 100}
"['folder', 'issue', 'image']",{'issue': 100}
"['folder', 'issue', 'image']",{'issue': 100}
"['initial', 'issue']",{'issue': 100}
"['accident', 'service', 'issue']",{'issue': 100}
"['issue', 'fritzbox']",{'issue': 100}
"['screen', 'issue', 'splash']",{'issue': 100}
"['issue', 'level']",{'issue': 100}
"['designer', 'issue', 'distribution', 'linux']",{'issue': 100}
"['issue', 'widget', 'webapp', 'dimmer']",{'issue': 100}
"['issue', 'frame', 'subpages', 'background']",{'issue': 100}
"['concurrency', 'problem']",{'concurren': 90}
"['observer', 'thread']",{'thread': 100}
"['configopenhab', 'issue', 'detail']",{'issue': 100}
