message,fuzzy
"['recovery', 'consumerclose', 'refresh', 'broker', 'metadata', 'issue', 'internal', 'socket', 'scheduleclientid', 'distinguish', 'client', 'messagereconnect', 'event', 'failure', 'broker', 'issue', 'initialize', 'emittedrefresh', 'metadata', 'request', 'controller']",{'issue': 100}
"['string', 'buffer']",{'buffer': 100}
"['broker', 'metadata', 'issue']",{'issue': 100}
"['consumergroup', 'issue']",{'issue': 100}
"['orderchain', 'response', 'fetch', 'making', 'previous', 'partitionprocessedsystem', 'introducescould', 'processing', 'meaning', 'buffer', 'ensure', 'guard', 'fetchoffset', 'stale', 'fetchresult', 'request', 'fetchdisconnection', 'groupdifferent', 'request', 'fetchpartition', 'consumer', 'responsible', 'membership', 'grouptopic', 'partition', 'messagemembership', 'fetchstate', 'handler', 'ensure', 'group', 'validator', 'messagesince', 'response', 'membership', 'ignore', 'request', 'fetchunknownoffset', 'return', 'oldertopic', 'messagecontainedresponse', 'messageabnormal', 'place', 'guaranteeissue', 'eslintprocess', 'fetchprocess', 'decode', 'messagepartition', 'error', 'unexpected', 'messageretain', 'partition', 'error', 'variable', 'mutablebinary', 'mutate', 'parser']",{'buffer': 100}
"['double', 'queue', 'buffer', 'array', 'message']",{'buffer': 100}
"['partition', 'producer', 'issue']",{'issue': 100}
"['rebalance', 'event', 'commitrebalance', 'event', 'commitresolverejoin', 'rebalance', 'group', 'commitcommits', 'generation', 'kafka', 'allowedimplementors', 'onrebalance', 'option', 'commitimplementors', 'commits', 'method', 'finishrebalance', 'commitspecial', 'separate', 'behavior', 'setting', 'autocommit', 'checkingalready', 'flush', 'commitbubble', 'callback', 'error']",{'generation': 100}
"['internal', 'support', 'present', 'security', 'applies', 'endpoint']",{'Security': 100}
"['consumer', 'recovery', 'networkrecoverable', 'network', 'error', 'consumergroup', 'recovery', 'operationalrecover', 'timeout', 'kafkaclient', 'consumergroup', 'update', 'request', 'attempthandler', 'consume', 'response', 'network', 'broker', 'issueerror', 'networkcallback', 'broker', 'issue', 'calledreconnect', 'event']",{'issue': 100}
"['issue', 'request']",{'issue': 100}
"['issue', 'clientmichael']",{'issue': 100}
"['ready', 'connection', 'kafkaclient', 'issue']",{'issue': 100}
"['revertlength', 'revert', 'processing', 'buffer', 'checkreverts', 'commitcrzidea', 'request', 'revert', 'mergereverts', 'commitchangechange', 'docker']",{'buffer': 100}
"['buffer', 'length', 'check', 'processing']","{'buffer': 100, 'length': 100}"
"['issue', 'github', 'template']",{'issue': 100}
"['common', 'issue', 'address']",{'issue': 100}
"['security', 'vulnerability', 'dependency']",{'Security': 100}
"['consumer', 'issue', 'kafka', 'stall']",{'issue': 100}
"['consumer', 'error', 'expose', 'group']",{'expose': 100}
"['error', 'stack', 'support', 'upgrade']",{'stack': 100}
"['issue', 'group']",{'issue': 100}
"['offset', 'fromoffset', 'consumergroup', 'fallback', 'migrator', 'issue']",{'issue': 100}
"['previous', 'consumergroup', 'migrator', 'issue']",{'issue': 100}
"['recovery', 'issue', 'connection', 'register', 'rebalance', 'zookeeperbehavior', 'reconnect', 'addedmethodcoverage', 'refactor', 'partition', 'ownership', 'checkpartition', 'ownership', 'consumer', 'check', 'group']",{'issue': 100}
"['rebalance', 'issuerebalancefourth', 'unassignedpartition', 'rebalance', 'consumer', 'issue', 'rebalance', 'issue', 'partition', 'release', 'consumer', 'unregister', 'grouperror', 'groupimprove', 'rebalance', 'stablenessconsumer']",{'issue': 100}
"['reconnect', 'profile', 'brokerreconnect', 'event', 'issue', 'reconnects', 'clientchange', 'broker', 'profile', 'clientmatch', 'broker', 'lookup', 'socket', 'profile']",{'issue': 100}
"['issue', 'snappy', 'security']","{'issue': 100, 'Security': 100}"
"['broker', 'issue', 'socket', 'nodejs']",{'issue': 100}
"['undefined', 'propertyconnection', 'possible', 'metadata', 'socket', 'loadmetadata', 'callback', 'error', 'extract', 'refreshmetadataproperty', 'extra', 'addedconsumer', 'close', 'connectionconnection', 'consumer', 'kafka', 'debugsocketsocket', 'kafka', 'client', 'debugkafka', 'client', 'refreshmetadatakafka', 'client', 'kafka', 'client', 'debugtypeerrorproperty', 'loadavg', 'uptime', 'native', 'local', 'typeerror', 'kafka', 'heaptotal', 'function', 'column', 'execpath', 'undefined', 'version', 'error', 'stack', 'anonymous', 'method', 'trace']",{'stack': 100}
"['mergebatch', 'carlessistare', 'async', 'requestasync', 'batch', 'buffer', 'producer']",{'buffer': 100}
"['mergecallback', 'duplicate', 'request', 'wenismancallback', 'issue', 'duplicate']",{'issue': 100}
"['server', 'issue', 'kafkaissue']",{'issue': 100}
"['async', 'batch', 'buffer', 'producerpossibility', 'producer', 'kafka', 'batch', 'increase', 'optional', 'async', 'client', 'order', 'configurate', 'server', 'message', 'connector', 'performance', 'doesntoptionbatchbatch', 'miliseconds']",{'buffer': 100}
"['offsetoffset', 'issue', 'autocommit']",{'issue': 100}
"['offset', 'optimizeoffset', 'ready', 'event', 'issue', 'betterconnection', 'optimize', 'initialize']",{'issue': 100}
"['issue', 'strict']",{'issue': 100}
"['error', 'generation']",{'generation': 100}
"['mergemaster', 'request', 'quiiver', 'mergebuffermaker', 'support', 'buffer']",{'buffer': 100}
"['buffermaker', 'support', 'buffer']",{'buffer': 100}
