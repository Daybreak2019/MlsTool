message,fuzzy
"['issue', 'drool', 'concurrencydifferent', 'kiesessions', 'issue', 'drool', 'consequence', 'concurrencydrool', 'expression', 'evaluation', 'accumulate', 'concurrencyconcurrencytoshiya', 'kobayashi']",{'issue': 100}
"['model', 'drool', 'executable', 'expression', 'generation']",{'generation': 100}
"['github', 'action', 'concurrency', 'bxmsprod']",{'concurren': 90}
"['droolenable', 'window', 'issue', 'drool']",{'issue': 100}
"['compilation', 'fireuntilhalt', 'drool', 'thread']",{'thread': 100}
"['drool', 'codegen', 'scorecard', 'modeldrool', 'refactordrool', 'workingdrool', 'cleanupdrool', 'workingdrool', 'cleanuppopulate', 'field', 'drool', 'target', 'segment', 'modelfield', 'default', 'drool', 'target', 'field', 'defualt', 'drool', 'target', 'drool', 'behavior', 'target', 'modification', 'management', 'overall', 'drool', 'targetdrool', 'goingdrool', 'kiepmmltarget', 'modeldrool', 'prediction', 'modify', 'successfullyfield', 'management', 'drool', 'targetoutputfields', 'pmmlresult', 'pmmlruntimeimplpopulation', 'regression', 'drool', 'class', 'drool', 'class', 'preprocessdrool', 'outputfieldbegin', 'codegen', 'implementationbegin', 'codegen', 'implementationalmost', 'codegen', 'workingdrool', 'workingdrool', 'workingimplement', 'reference', 'drool', 'evaluation', 'staticdrool', 'workingdrool', 'status', 'workingdrool', 'cleanupinitial', 'crationdrooldrooldrooldrool', 'refactoreddrool', 'refactoreddrool', 'refactoreddrool', 'drool', 'reviewmerge', 'mastercharacteristic', 'actual', 'workingpredicate', 'number', 'score', 'generation', 'accumulationenums', 'common', 'scorecard', 'movedexcept', 'workingworkingimplementation', 'drool', 'codegen', 'scorecard', 'modeldrool', 'kiepmmlutildrooldrool', 'suggestiondrool', 'drool', 'workingdrool', 'population', 'regression', 'drool', 'outputfield', 'drool', 'ignoreddrool', 'derivedfields', 'managedrool', 'derivedfields', 'managedrool', 'derivedfields', 'manage', 'updateddrool', 'derivedfields', 'modelutilstest', 'retrievingdatatype', 'modelutilstest', 'retrieval', 'drooldrool', 'cleanupdrool', 'workingdrool', 'source', 'comparison', 'refactordrool', 'place', 'drool', 'place', 'drool', 'place', 'drool', 'drool', 'request']",{'generation': 100}
"['issue', 'drool', 'mvelparser', 'issue', 'drool', 'mvelparser', 'variable', 'parenthesisclean']",{'issue': 100}
"['model', 'memory', 'drool', 'executable', 'allocation', 'optimizemodel', 'memory', 'drool', 'executable', 'generation', 'allocation', 'optimizereparse', 'externalization', 'lambda', 'expression']",{'generation': 100}
"['multiple', 'drool', 'executable', 'generation', 'modelkbase', 'drool', 'project', 'multi', 'executable', 'generation', 'declaration', 'model']",{'generation': 100}
"['parallelize', 'drool', 'executable', 'generation', 'model']",{'generation': 100}
"['archetype', 'drool', 'structure', 'modeldrool', 'execution', 'dummy', 'modeldirty', 'compute', 'super', 'drool', 'modeldrool', 'snapshot', 'version', 'updatesingle', 'drool', 'class', 'componentsource', 'drool', 'codegeneration', 'hardcodeddrool', 'class', 'template', 'hardcodedpartial', 'drool', 'codegendrool', 'codegen', 'modeldrool', 'removedrool', 'initializationdrool', 'factor', 'adjustment', 'computerefactor', 'drool', 'enums', 'aggregate', 'function', 'compareimprove', 'drooldrool', 'enums', 'interfacedrool', 'class', 'missingdrool', 'dependency', 'modeldrool', 'snapshotdroolimprove', 'droolimprove', 'field', 'integer', 'drool', 'modeldrool', 'clusterdrool', 'updatedrool', 'updatedrool', 'updatedrooldrool', 'implementfield', 'input', 'limitation', 'drool', 'mentiondrool', 'snapshot']",{'integer': 100}
"['drool', 'generati', 'executable', 'modelmodel', 'drool', 'executable', 'oopath', 'generation']",{'generation': 100}
"['method', 'expose', 'public', 'pmmlrulemapper', 'retrieval', 'kogito']",{'expose': 100}
"['issue', 'droolinsteadunknown', 'consequenceruledescr', 'acceptlambdaoncall']",{'issue': 100}
"['execu', 'declaration', 'drool', 'pojos', 'generationmodel', 'declaration', 'drool', 'executable', 'pojos', 'generation']",{'generation': 100}
"['permission', 'xstreamdetaildrool', 'browse']",{'permission': 100}
"['inner', 'class', 'usage', 'drool', 'executable', 'generation', 'static']",{'generation': 100}
"['score', 'generation', 'modeldrool', 'refactordrool', 'workingdrool', 'cleanupdrool', 'workingdrool']",{'generation': 100}
"['option', 'drool', 'thread', 'kiesessionoption', 'drool', 'thread', 'kiesession']",{'thread': 100}
"['drool', 'thread', 'syntax', 'fireallrules']",{'thread': 100}
"['integration', 'drool', 'executable', 'compiler', 'failure', 'issue', 'drool']",{'issue': 100}
"['integertoshort', 'drool', 'issue', 'function', 'improvedfails', 'rewrite', 'reproducer', 'consequence', 'usinginteger']",{'issue': 100}
"['drool', 'project', 'generation']",{'generation': 100}
"['integer', 'promotion', 'support', 'drool', 'executable', 'variable', 'bigdecimal', 'modelreproducerinteger', 'promotion', 'support', 'executable', 'variable', 'bigdecimal', 'model']",{'integer': 100}
"['constant', 'drool', 'executable', 'generation', 'value', 'model']",{'generation': 100}
"['field', 'localdatetime', 'reference', 'issue', 'drool']",{'issue': 100}
"['access', 'drool', 'concurrent', 'namesgenerator', 'executable', 'model']",{'concurrent': 100}
"['argument', 'incorrect', 'declaration', 'order']",{'incorrect': 100}
"['model', 'class', 'drool', 'executable', 'generation', 'staticmodel', 'class', 'drool', 'instantiation', 'executable', 'generation', 'kogito', 'static']",{'generation': 100}
"['drool', 'accumulate', 'pattern', 'function', 'executable', 'static', 'generation']",{'generation': 100}
"['modulefield', 'source', 'memory', 'compilationstart', 'compilingcompilingspecific', 'compilednetwork', 'threfore', 'objecttypenode', 'avoidingsmall', 'refactorempty', 'compilingcompilednetworkaccessingkiemodulecoverage', 'drool', 'movedmultiple', 'example', 'service', 'kiebaseupdaterfactory', 'kiebaseupdater', 'splitfirst', 'draftfirst', 'draftmemory', 'updateupdate', 'alpha', 'network', 'compiler', 'correctcoverage', 'drool', 'dependency', 'unusedoption', 'configurationupdateavoid', 'deadlockupdater', 'outsiderebaseslimmer', 'updaters', 'context', 'additionaldefault', 'moveddefaultrevertrevert', 'default', 'movedreverts', 'commitinmemory', 'runninginmemory', 'runningoption', 'drool', 'alpha', 'network', 'compileraddedmodule', 'movedgenerator', 'additional', 'modelexperiment', 'callbabck', 'kiebaserevert', 'callbabck', 'experiment', 'kiebasereverts', 'commitremoveloadingmaven', 'plugin', 'configuration', 'abstract', 'instantiateclass', 'silentlyclass', 'stablesource', 'regeneration', 'generator', 'source', 'whole', 'source', 'commentmaven', 'source', 'plugin', 'variableremovedavoid', 'enque', 'comment', 'releasesingletonlist']",{'generation': 91}
"['dtable', 'method', 'expose', 'configuration', 'kogito', 'retrive']",{'expose': 100}
"['right', 'equal', 'drool', 'index', 'constraint', 'executable', 'generation', 'assignable', 'model']",{'generation': 100}
"['large', 'drool', 'executable', 'generation']",{'generation': 100}
"['transformation', 'drool', 'drool', 'pmmlassemblerimplement', 'dynamic', 'resourcetype', 'drool', 'switchretrieval', 'drool', 'setting', 'property', 'pmmlconstants', 'fixingdrool', 'implementation', 'workingfunctionality', 'dependency', 'runtime', 'drool', 'glassfish', 'compiler', 'environment', 'maintainspecific', 'message', 'drool', 'drool', 'workaround', 'drooldrool', 'replaceddrool', 'stack', 'transformation', 'drool', 'compilermanagement', 'implementation', 'transformation', 'drool', 'transformation', 'drool', 'final', 'localdrool', 'pmmlcontextimpl', 'return', 'unmodifiabledrool', 'factory', 'modelconsistence', 'current', 'drool', 'modulespecific', 'implementation', 'drool', 'expression', 'codegendrool', 'javadocs', 'generateddrool', 'relevant', 'method', 'updatedrool', 'relevant', 'method', 'updatedatatype', 'drool', 'definition', 'droolmethod', 'drool', 'common', 'implementeddrool', 'regressiondrool', 'minormethod', 'drool', 'common', 'implementedintegration', 'scorecard', 'transformation', 'drool', 'treemodeldrool', 'management', 'transformation', 'drool', 'parameter', 'drool', 'drool', 'updateddrool', 'constantdrool', 'population', 'movedclean', 'drool', 'management', 'transformation', 'drool', 'management', 'transformation', 'drool', 'insidebuild', 'drool', 'fixingreview', 'drool', 'method', 'management', 'drool', 'aritydrool', 'updateddrool', 'pmmlruntime', 'propagatingdrool', 'environment', 'kogito', 'adaptingdrool', 'integration', 'workingdrool', 'cleanuppropagation', 'drool', 'pmmlruntime', 'drool', 'suggestiondrool', 'package', 'resolution', 'fixingupdatemortari', 'matteo', 'authoredupdatemortari', 'matteo', 'authoredupdatemortari', 'matteo', 'authoredinternal', 'utils', 'updatemortari', 'matteo', 'authoredinternal', 'utils', 'updatemortari', 'matteo', 'authoredinternal', 'utils', 'updatemortari', 'matteo', 'authoredinternal', 'utils', 'updatemortari', 'matteo', 'drool', 'suggestionmortari', 'matteo']",{'stack': 100}
"['transformation', 'drool', 'drool', 'pmmlassemblerimplement', 'dynamic', 'resourcetype', 'drool', 'switchretrieval', 'drool', 'setting', 'property', 'pmmlconstants', 'fixingdrool', 'implementation', 'workingfunctionality', 'dependency', 'runtime', 'drool', 'glassfish', 'compiler', 'environment', 'maintainspecific', 'message', 'drool', 'drool', 'workaround', 'drooldrool', 'replaceddrool', 'stack', 'transformation', 'drool', 'compilermanagement', 'implementation', 'transformation', 'drool', 'transformation', 'drool', 'final', 'localdrool', 'pmmlcontextimpl', 'return', 'unmodifiabledrool', 'factory', 'modelconsistence', 'current', 'drool', 'modulespecific', 'implementation', 'drool', 'expression', 'codegendrool', 'javadocs', 'generateddrool', 'relevant', 'method', 'updatedrool', 'relevant', 'method', 'updatedatatype', 'drool', 'definition', 'droolmethod', 'drool', 'common', 'implementeddrool', 'regressiondrool', 'minormethod', 'drool', 'common', 'implementedintegration', 'scorecard', 'transformation', 'drool', 'treemodeldrool', 'management', 'transformation', 'drool', 'parameter', 'drool', 'drool', 'updateddrool', 'constantdrool', 'population', 'movedclean', 'drool', 'management', 'transformation', 'drool', 'management', 'transformation', 'drool', 'insidebuild', 'drool', 'fixingreview', 'drool', 'method', 'management', 'drool', 'aritydrool']",{'stack': 100}
"['transformation', 'drool', 'drool', 'pmmlassemblerimplement', 'dynamic', 'resourcetype', 'drool', 'switchretrieval', 'drool', 'setting', 'property', 'pmmlconstants', 'fixingdrool', 'implementation', 'workingfunctionality', 'dependency', 'runtime', 'drool', 'glassfish', 'compiler', 'environment', 'maintainspecific', 'message', 'drool', 'drool', 'workaround', 'drooldrool', 'replaceddrool', 'stack', 'transformation', 'drool', 'compilermanagement', 'implementation', 'transformation', 'drool', 'transformation', 'drool', 'final', 'localdrool', 'pmmlcontextimpl', 'return', 'unmodifiabledrool', 'factory', 'modelconsistence', 'current', 'drool', 'modulespecific', 'implementation', 'drool', 'expression', 'codegendrool', 'javadocs', 'generateddrool', 'relevant', 'method', 'updatedrool', 'relevant', 'method', 'updatedatatype', 'drool', 'definition', 'droolmethod', 'drool', 'common', 'implementeddrool', 'regressiondrool', 'minormethod', 'drool', 'common', 'implementedintegration', 'scorecard', 'transformation', 'drool', 'treemodeldrool', 'management', 'transformation', 'drool', 'parameter', 'drool', 'drool', 'updateddrool', 'constantdrool', 'population', 'movedclean', 'drool', 'management', 'transformation', 'drool', 'management', 'transformation', 'drool', 'insidebuild', 'drool', 'fixingreview', 'drool', 'method', 'management', 'drool', 'aritydrool', 'droolsplit', 'class', 'drool', 'getters', 'drool', 'reviewobject', 'drool', 'defaultdrool', 'propagatingmerge', 'drool', 'fixingdrool', 'pmmls', 'transformationdrool', 'parameterreference', 'object', 'equal', 'definefunctions', 'comparison', 'transformationremove', 'method', 'drool']",{'stack': 100}
"['transformation', 'drool', 'drool', 'pmmlassemblerimplement', 'dynamic', 'resourcetype', 'drool', 'switchretrieval', 'drool', 'setting', 'property', 'pmmlconstants', 'fixingdrool', 'implementation', 'workingfunctionality', 'dependency', 'runtime', 'drool', 'glassfish', 'compiler', 'environment', 'maintainspecific', 'message', 'drool', 'drool', 'workaround', 'drooldrool', 'replaceddrool', 'stack', 'transformation', 'drool', 'compilermanagement', 'implementation', 'transformation', 'drool', 'transformation', 'drool', 'final', 'localdrool', 'pmmlcontextimpl', 'return', 'unmodifiabledrool', 'factory', 'modelconsistence', 'current', 'drool', 'modulespecific', 'implementation', 'drool', 'expression', 'codegendrool', 'javadocs', 'generateddrool', 'relevant', 'method', 'updatedrool', 'relevant', 'method', 'updatedatatype', 'drool', 'definition', 'droolmethod', 'drool', 'common', 'implementeddrool', 'regressiondrool', 'minormethod', 'drool', 'common', 'implementedintegration', 'scorecard', 'transformation', 'drool', 'treemodeldrool', 'management', 'transformation', 'drool', 'parameter', 'drool', 'drool', 'updateddrool', 'constantdrool', 'population', 'movedclean', 'drool', 'management', 'transformation', 'drool', 'management', 'transformation', 'drool', 'insidebuild', 'drool', 'fixingreview', 'drool', 'method', 'management', 'drool', 'aritydrool', 'droolsplit', 'class', 'drool', 'getters', 'drool', 'reviewobject', 'drool', 'defaultdrool', 'propagatingmerge', 'drool']",{'stack': 100}
"['transformation', 'drool', 'drool', 'pmmlassemblerimplement', 'dynamic', 'resourcetype', 'drool', 'switchretrieval', 'drool', 'setting', 'property', 'pmmlconstants', 'fixingdrool', 'implementation', 'workingfunctionality', 'dependency', 'runtime', 'drool', 'glassfish', 'compiler', 'environment', 'maintainspecific', 'message', 'drool', 'drool', 'workaround', 'drooldrool', 'replaceddrool', 'stack', 'transformation', 'drool', 'compilermanagement', 'implementation', 'transformation', 'drool', 'transformation', 'drool', 'final', 'localdrool', 'pmmlcontextimpl', 'return', 'unmodifiabledrool', 'factory', 'modelconsistence', 'current', 'drool', 'modulespecific', 'implementation', 'drool', 'expression', 'codegendrool', 'javadocs', 'generateddrool', 'relevant', 'method', 'updatedrool', 'relevant', 'method', 'updatedatatype', 'drool', 'definition', 'droolmethod', 'drool', 'common', 'implementeddrool', 'regressiondrool', 'minormethod', 'drool', 'common', 'implementedintegration', 'scorecard', 'transformation', 'drool', 'treemodeldrool', 'management', 'transformation', 'drool', 'parameter', 'drool', 'drool', 'updateddrool', 'constantdrool', 'population', 'movedclean', 'drool', 'management', 'transformation', 'drool', 'management', 'transformation', 'drool', 'insidebuild', 'drool', 'fixingreview', 'drool', 'method', 'management', 'drool', 'aritydrool', 'droolsplit', 'class', 'drool', 'getters', 'drool', 'reviewdrool', 'assertion']",{'stack': 100}
"['transformation', 'drool', 'drool', 'pmmlassemblerimplement', 'dynamic', 'resourcetype', 'drool', 'switchretrieval', 'drool', 'setting', 'property', 'pmmlconstants', 'fixingdrool', 'implementation', 'workingfunctionality', 'dependency', 'runtime', 'drool', 'glassfish', 'compiler', 'environment', 'maintainspecific', 'message', 'drool', 'drool', 'workaround', 'drooldrool', 'replaceddrool', 'stack', 'transformation', 'drool', 'compilermanagement', 'implementation', 'transformation', 'drool', 'transformation', 'drool', 'final', 'localdrool', 'pmmlcontextimpl', 'return', 'unmodifiabledrool', 'factory', 'modelconsistence', 'current', 'drool', 'modulespecific', 'implementation', 'drool', 'expression', 'codegendrool', 'javadocs', 'generateddrool', 'relevant', 'method', 'updatedrool', 'relevant', 'method', 'updatedatatype', 'drool', 'definition', 'droolmethod', 'drool', 'common', 'implementeddrool', 'regressiondrool', 'minormethod', 'drool', 'common', 'implementedintegration', 'scorecard', 'transformation', 'drool', 'treemodeldrool', 'management', 'transformation', 'drool', 'parameter', 'drool', 'drool', 'updateddrool', 'constantdrool', 'population', 'movedclean', 'drool', 'management', 'transformation', 'drool', 'management', 'transformation', 'drool', 'insidebuild', 'drool', 'fixingreview', 'drool', 'method', 'management', 'drool', 'arity']",{'stack': 100}
"['overall', 'drool', 'workflow', 'transformation', 'drool', 'drool', 'pmmlassemblerimplement', 'dynamic', 'resourcetype', 'drool', 'switchretrieval', 'drool', 'setting', 'property', 'pmmlconstants', 'fixingdrool', 'implementation', 'workingfunctionality', 'dependency', 'runtime', 'drool', 'glassfish', 'compiler', 'environment', 'maintainspecific', 'message', 'drool', 'drool', 'workaround', 'drooldrool', 'replaceddrool', 'stack', 'transformation', 'drool', 'compilermanagement', 'implementation', 'transformation', 'drool', 'transformation', 'drool', 'final', 'localdrool', 'pmmlcontextimpl', 'return', 'unmodifiabledrool', 'factory', 'modelconsistence', 'current', 'drool', 'modulespecific', 'implementation', 'drool', 'expression', 'codegendrool', 'javadocs', 'generateddrool', 'relevant', 'method', 'updatedrool', 'relevant', 'method', 'updatedatatype', 'drool', 'definition', 'droolmethod', 'drool', 'common', 'implementeddrool', 'regressiondrool', 'minormethod', 'drool', 'common', 'implementedintegration', 'scorecard', 'transformation', 'drool', 'treemodeldrool', 'management', 'transformation', 'drool', 'parameter', 'drool', 'drool', 'updateddrool', 'constantdrool', 'population', 'movedclean', 'drool', 'management', 'transformation', 'drool', 'management', 'transformation', 'drool', 'insidebuild', 'drool', 'fixingreview', 'drool']",{'stack': 100}
"['drool', 'stack', 'method', 'stack', 'transformation', 'drool', 'transformation', 'drool', 'final', 'localdrool', 'pmmlcontextimpl', 'return']",{'stack': 100}
"['warning', 'spring', 'drool', 'incorrect', 'package']",{'incorrect': 100}
"['equinox', 'container', 'class', 'issue', 'drool']",{'issue': 100}
"['model', 'accumulates', 'drool', 'processing', 'inline', 'executable', 'generation']",{'generation': 100}
"['drool', 'typesafemultiple', 'index', 'supportmovedperiod', 'supportfield', 'lowersonarcloudmodel', 'generation', 'nullsafeaccessor', 'space', 'propertyannotate', 'getter', 'propertyevery', 'revertedevaluationevaluation', 'revertedtypesafe', 'everywrong', 'creationsuperclass', 'anotherdmntypesafetest', 'parametrizebasic', 'field', 'collection', 'supportstrict', 'everycheck', 'fieldisbasicregressionregressiondurationsimpler', 'indexcompile', 'disabledevery', 'revert', 'revertedreverts', 'commitevery', 'revert', 'revertedreverts', 'committypesafe', 'revert', 'revertedcorrect', 'setproperty', 'generationdmntypesafetest', 'typesafe']",{'generation': 100}
"['executable', 'literal', 'generation']",{'generation': 100}
"['letter', 'field', 'setter', 'drool', 'getters', 'incorrect']",{'incorrect': 100}
"['drool', 'timeout', 'concurrency', 'raisedrool', 'timeout', 'concurrency', 'raisedrool', 'revertingdrool', 'timeout', 'concurrency']",{'concurren': 90}
"['class', 'extract', 'drool', 'lambda', 'modelclass', 'lamba', 'creationrefactorsingle', 'lambda', 'parameterremove', 'classlambda', 'convertionsearch', 'lambdaexprmodelwriter', 'lambda', 'twicedrool', 'predicateoverride', 'lambdaoverrideinstance', 'method', 'timeoutdirty', 'state', 'generation', 'exceptioncreate', 'predicateextractor', 'commentedconstraint', 'testcustomerpredicate', 'extractor', 'separatednamespace', 'extractorcorrect', 'extractorconsequnceconsequence', 'replaceconsequence', 'lambda', 'parameterfixedclear', 'singleton', 'lambdaavoid', 'field', 'static', 'predicate', 'import', 'staticdeclaration', 'class', 'parallel', 'startupconsequence', 'predicate', 'refactorconsequence', 'predicate', 'refactorrefactorextractor', 'refactorprocessor', 'refactorfailingfailinglambda', 'extractoravoid', 'bitmask', 'drool', 'consequencecompilation', 'visitoraccumulate', 'lambda', 'rewrite', 'failingthrowstaticpreserve', 'originalcorrect', 'import', 'staticevery', 'passingpackagemodel', 'share', 'lambdabettercharset', 'configurationindexedindexedconsequence', 'processing', 'lambdareproducerreproduceraccumulate', 'problemindexinglambda', 'replacemessage', 'lambda', 'stateaccumulate', 'replacesysout', 'removeremovedtimeout', 'revertedrevertedremovedrevertcompilation', 'rebasepattern', 'conflictingdisable', 'externalization', 'lambdaaccumulate', 'replacingdrool', 'class', 'lambda', 'annotate', 'lambda']",{'generation': 100}
"['uppercase', 'property', 'drool', 'index', 'executable', 'generation', 'model']",{'generation': 100}
"['stack', 'accumulates', 'drool', 'executable', 'ensure', 'expression', 'model']",{'stack': 100}
"['compilation', 'update', 'kiemodule', 'drool', 'issue', 'classloader', 'align', 'executable', 'kiebases', 'incremental', 'model']",{'issue': 100}
"['drool', 'thread']",{'thread': 100}
"['unable', 'drool', 'fieldsupportsupportenumgeneratoranymore', 'pojogenerator', 'staticrefactorgeneratorgenerator', 'package', 'generation', 'movedequal', 'separatedconstructor', 'generatedconstructor', 'annotation', 'processor', 'splitconstruction', 'generation', 'commentnoconstructorannotation', 'ignore', 'empty', 'passingrefactorenumdescr', 'generationrefactorsonarlintmessage', 'regression', 'error']",{'generation': 100}
"['deadlock', 'fireumtilhalt', 'drool', 'session']",{'deadlock': 100}
"['specific', 'drool', 'accumulate', 'function', 'integspecific', 'integer', 'drool', 'accumulate', 'function', 'longsspecific', 'integer', 'drool', 'accumulate', 'function', 'longs']",{'integer': 100}
"['integer', 'drool', 'short', 'errorhelper', 'numeric', 'expression', 'usingstill', 'reproducer', 'errorhelper', 'method', 'number', 'comparison', 'checkhelper', 'alwaysrenamedcomparisonvalid', 'overload', 'compilerwithout']",{'integer': 100}
"['drool', 'field', 'integer', 'containeddrool', 'field', 'integer', 'quote', 'numeric', 'generateddrool']",{'integer': 100}
"['sonarcloud', 'issue', 'blocker', 'sonarcloud', 'issue', 'droolcritical', 'sonarcloud', 'drool', 'issuemajor', 'sonarcloud', 'drool', 'issuemajor', 'sonarcloud', 'drool', 'issuemajor', 'sonarcloud', 'drool', 'issuedrool']",{'issue': 100}
"['operator', 'drool', 'incorrect', 'result', 'filledoperator', 'drool', 'incorrect', 'result', 'filleddrool', 'cleanup']",{'incorrect': 100}
"['external', 'class', 'dependency', 'generation']",{'generation': 100}
"['refresh', 'policydrool', 'security', 'policy', 'unignore']",{'Security': 100}
"['knowledge', 'class', 'store', 'drool', 'concurrent', 'declaration']",{'concurrent': 100}
"['class', 'drool', 'concurrent', 'track']",{'concurrent': 100}
"['integer', 'power', 'support', 'function']",{'integer': 100}
"['integration', 'narayana', 'persistence', 'introduceproper', 'database', 'startsource', 'expose', 'class', 'interface', 'wrapper']",{'expose': 100}
"['various', 'drool', 'issue', 'serializationvarious', 'drool', 'issue', 'serialization']",{'issue': 100}
"['constructor', 'model', 'drool', 'constraint', 'executable', 'generation']",{'generation': 100}
"['dynamic', 'drool', 'executable', 'declaration', 'attribute', 'generation']",{'generation': 100}
"['integer', 'division', 'drool', 'constraint']",{'integer': 100}
"['security', 'manager', 'permission', 'checksecurity', 'manager', 'stream', 'parallel', 'check']","{'Security': 100, 'permission': 100}"
"['various', 'model', 'drool', 'executable', 'generation']",{'generation': 100}
"['issue', 'drool']",{'issue': 100}
"['drool', 'decisionservice', 'backportbrokenbrokenlogic', 'service', 'invocation', 'decision', 'usingdependency', 'decision', 'event', 'managersmall', 'refactorsinputdata', 'parameter', 'input', 'createspecific', 'typecheck', 'dependency', 'refactor', 'collectioninherent', 'typecheckevaluation', 'decisionoutput', 'singleton', 'coercion', 'default', 'overridemessage', 'small', 'refactoringsmall', 'refactoringservice', 'expose', 'comment', 'unnecessaryreview']",{'expose': 100}
"['external', 'drool', 'accumulate', 'executable', 'generation', 'declaration', 'model']",{'generation': 100}
"['bunch', 'findbugs', 'drool', 'problemblock', 'findbugs', 'doprivilegedinitialization', 'import', 'findbugs', 'accumulate', 'correctuncallable', 'method', 'class', 'findbugs', 'anonymousimpossible', 'findbugsspecific', 'compareto', 'findbugs', 'value', 'attempt', 'findbugs', 'compute', 'valuefindbugs', 'nullcheckfield', 'method', 'findbugs', 'equal', 'symmetric', 'superclass', 'overridepossible', 'dereference', 'pointer', 'findbugsinner', 'class', 'findbugs', 'staticnever', 'method', 'private', 'findbugs', 'callediterator', 'findbugs', 'entryset', 'inefficient', 'keyset', 'insteadnever', 'method', 'private', 'findbugs', 'calledconcatenates', 'method', 'findbugs', 'string', 'usingconstructor', 'method', 'invokes', 'findbugs', 'findbugs', 'parse', 'primitive', 'method', 'findbugs', 'primitive', 'allocatesfindbugssequence', 'findbugs', 'concurrent', 'abstraction', 'atomicfield', 'possible', 'findbugs', 'double', 'checkexception', 'findbugs', 'method', 'releasedefine', 'class', 'findbugsignores', 'return', 'method', 'findbugs', 'exceptional', 'valuefindbugs', 'method', 'branchfield', 'method', 'instance', 'findbugs', 'staticinstanceof', 'revert', 'comparison']",{'concurrent': 100}
"['model', 'drool', 'executable', 'generation']",{'generation': 100}
"['context', 'drool', 'closure', 'issue']",{'issue': 100}
"['droolnumber', 'drool', 'issue', 'literal', 'expression', 'original', 'roundingdrool', 'return', 'behaviourdrool', 'default', 'returningdrool', 'argument', 'functioncallfilter', 'drool', 'index', 'report', 'error']",{'issue': 100}
"['compilation', 'coverage', 'drool', 'initial', 'generation']",{'generation': 100}
"['different', 'model', 'drool', 'scope', 'executable', 'variable', 'presence', 'generation']",{'generation': 100}
"['support', 'drool', 'accumulate', 'pattern', 'function', 'executable', 'generation', 'argument', 'model']",{'generation': 100}
"['partial', 'model', 'query', 'drool', 'executable', 'generation']",{'generation': 100}
"['partial', 'model', 'query', 'drool', 'executable', 'generation']",{'generation': 100}
"['various', 'model', 'drool', 'executable', 'generation']",{'generation': 100}
"['various', 'model', 'drool', 'executable', 'generationclass', 'drool', 'consequence', 'executable', 'modelvarious', 'model', 'drool', 'executable', 'generation']",{'generation': 100}
"['clause', 'drool', 'executable', 'generation', 'modelclause', 'drool', 'executable', 'generation', 'modelimplement', 'clause', 'drool', 'executable', 'variable', 'modelinstanceof', 'model', 'drool', 'executable', 'expression', 'parsingmodel', 'drool', 'executable', 'evaltests']",{'generation': 100}
"['class', 'generation']",{'generation': 100}
"['executor', 'drool', 'thread']",{'thread': 100}
"['model', 'compilation', 'management', 'drool', 'globals', 'constraint', 'error', 'generation']",{'generation': 100}
"['miningmodel', 'average', 'weightedfunctionality', 'field', 'retrieve', 'generation', 'application', 'generate', 'average', 'weightedaverage', 'template', 'weightedminingmodeltest']",{'generation': 100}
"['process', 'kiebase', 'share', 'property', 'drool', 'consequence', 'package', 'executable', 'generation', 'model']",{'generation': 100}
"['supportdrool', 'generate', 'metadataissue', 'class', 'loaderclass', 'loader', 'issue', 'manifest', 'usinginstead', 'classloader', 'correctcontext', 'class']",{'issue': 100}
"['timeouts', 'drool', 'concurrency']",{'concurren': 90}
"['model', 'predicate', 'clause', 'process', 'drool', 'reacton', 'accessible', 'metadata', 'property', 'executable', 'generation']",{'generation': 100}
"['event', 'random', 'drool', 'generator', 'generation']",{'generation': 100}
"['minor', 'drool', 'executable', 'generation']",{'generation': 100}
"['complex', 'model', 'refactor', 'drool', 'constraint', 'executable', 'generation']",{'generation': 100}
"['expose', 'maven', 'kiemodule', 'plugin', 'drool']",{'expose': 100}
"['model', 'statement', 'drool', 'accumulate', 'pattern', 'executable', 'generation']",{'generation': 100}
"['bigdecimaltests', 'drool', 'index', 'generation']",{'generation': 100}
"['model', 'drool', 'pattern', 'executable', 'expression', 'oopath', 'generation']",{'generation': 100}
"['model', 'drool', 'pattern', 'index', 'executable', 'generation']",{'generation': 100}
"['model', 'drool', 'reactivity', 'executable', 'property', 'generation']",{'generation': 100}
"['drool', 'thread', 'iteration']",{'thread': 100}
"['model', 'query', 'unification', 'custom', 'drool', 'accumulate', 'executable', 'generation']",{'generation': 100}
"['model', 'drool', 'executable', 'generation']",{'generation': 100}
"['model', 'window', 'drool', 'constraint', 'executable', 'declaration', 'generation']",{'generation': 100}
"['drool', 'pattern', 'regression', 'generation', 'model']",{'generation': 100}
"['model', 'pattern', 'executable', 'generation']",{'generation': 100}
"['model', 'pattern', 'accumulate', 'constraint', 'executable', 'generation']",{'generation': 100}
"['pattern', 'accumulate', 'executable', 'generation', 'model']",{'generation': 100}
"['model', 'level', 'package', 'executable', 'declaration', 'generation']",{'generation': 100}
"['expression', 'accumulate', 'branchgeneric', 'double', 'accumulate', 'function', 'presentexecution', 'query', 'generation', 'genericflowtestcompilationgreenfinal']",{'generation': 100}
"['scenario', 'coverage', 'drool', 'concurrency', 'extendkiesessions', 'coverage', 'concurrent', 'kiebasesfunctionquerysession', 'concurrency', 'refactorsession', 'concurrency', 'refactor']","{'concurren': 90, 'concurrent': 100}"
"['hashcode', 'level', 'annotation', 'generation']",{'generation': 100}
"['model', 'maven', 'plugin', 'support', 'pluginmultiple', 'allowanother', 'package', 'moveddifferent', 'signaturedifferent', 'packakgesmodel', 'generation', 'splitavoid', 'generation', 'source', 'phase', 'generation', 'modelclass', 'declaration', 'cross']",{'generation': 100}
"['model', 'canonical', 'kiebase', 'generation']",{'generation': 100}
"['minor', 'redeclaration', 'generation']",{'generation': 100}
"['pattern', 'generation']",{'generation': 100}
"['pmmlcompiler', 'version', 'updatepossible', 'conversion', 'score', 'checkpointclean', 'header', 'licensefunctionality', 'kiebuilderimpl', 'processor', 'modeltowards', 'miningmodel', 'operationalcheckpoint', 'building', 'specific', 'machinekiebuilderimpl', 'crash', 'drool', 'module', 'scorecardkiebuilderimpl', 'crash', 'revert', 'classpath', 'compilerreverts', 'commitseparate', 'module', 'movedcontains', 'drool', 'module', 'scorecardcontain', 'version', 'moduleappropriate', 'version', 'check', 'kiebuilderimpl']",{'crash': 100}
"['typemetainfo', 'expose', 'maven', 'plugin', 'visibility']",{'expose': 100}
"['security', 'framework', 'xstream', 'drool', 'configure']",{'Security': 100}
"['coverage', 'drool', 'session', 'concurrentcoverage', 'session', 'concurrent']",{'concurrent': 100}
"['session', 'concurrent']",{'concurrent': 100}
"['drool', 'thread']",{'thread': 100}
"['drool', 'class', 'generationclass', 'generationclass', 'startuppercaseclass', 'filesystems', 'insensitive']",{'Sensitive': 90}
"['issue', 'drool', 'fixingpolicy', 'decision', 'tableoutput', 'issue', 'drool', 'table', 'decision']",{'issue': 100}
"['expose', 'drool']",{'expose': 100}
"['bytecode', 'invoker', 'class', 'lookup', 'loader', 'drool', 'unnecessary', 'generation']",{'generation': 100}
"['drool', 'concurrent', 'dispose']",{'concurrent': 100}
"['stack', 'timeout', 'listener', 'thread', 'trace', 'append', 'junit']","{'stack': 100, 'thread': 100}"
"['listener', 'thread', 'junittimeout', 'listener', 'thread', 'junit']",{'thread': 100}
"['namespace', 'drool', 'incorrect', 'resolution', 'localnamespace', 'drool', 'incorrect', 'resolution', 'localnamespace', 'resolution', 'wrong', 'baseline', 'local', 'usingresolvetype', 'inputclauserevertreverts', 'commitnamespace', 'drool', 'revert', 'incorrect', 'resolution', 'localreverts', 'commitexhibit', 'problemnamespace', 'resolution', 'wrong', 'baseline', 'local', 'usingresolvetype', 'modelclassclassclassclassclassclassclassproblemissue', 'exhibit', 'preparingdemonstrate', 'prefix', 'problem']",{'incorrect': 100}
"['message', 'regression', 'generation']",{'generation': 100}
"['rhbrms', 'issue', 'reproducerdifferent', 'rhbrms', 'alpha', 'package']",{'issue': 100}
"['deadlock', 'fireuntilhalt', 'action']",{'deadlock': 100}
"['class', 'dependency', 'issue', 'drool', 'duplicatedclass', 'containsuberjar', 'class', 'bundle', 'basicallyproperdrool', 'dependencyalltogether', 'common', 'excludeloggingclass', 'distribution', 'checkuberjar', 'class']",{'issue': 100}
"['overflow', 'drool', 'serialization', 'kbase']",{'overflow': 100}
"['optional', 'injection', 'support']",{'injection': 100}
"['insteadcontent', 'length', 'returnunable', 'locatebackedreturnwildflycondition', 'check', 'exists']",{'length': 100}
"['incorrect', 'constraint', 'literal', 'template']",{'incorrect': 100}
"['releaseid', 'custom', 'issue', 'droolserver', 'custom', 'givenimplementationstack', 'trace']",{'issue': 100}
"['inner', 'drool', 'accumulate', 'thread']",{'thread': 100}
"['incorrect', 'value', 'guvnor', 'template']",{'incorrect': 100}
"['findbugs', 'infinite', 'drool', 'recursion', 'issue']",{'issue': 100}
"['dynamic', 'expose', 'validation', 'datamodeloracle', 'guvnor']",{'expose': 100}
"['registration', 'listener', 'stateless', 'drool', 'session', 'thread']",{'thread': 100}
"['expose', 'kiemodule']",{'expose': 100}
"['drool', 'thread']",{'thread': 100}
"['issue', 'compilation', 'target', 'source']",{'issue': 100}
"['drool', 'workaround', 'javadoc', 'error', 'generation']",{'generation': 100}
"['issue', 'entesb', 'workaroundbundle', 'distributedquite', 'package', 'versionproperlyoverride', 'drool', 'testedwithout', 'version', 'explicit', 'dependencylatest', 'availablepropery', 'eclipse', 'pursuade', 'resultspecific', 'packagedrool', 'metadata', 'version', 'compiler']",{'issue': 100}
"['expose', 'drool', 'runtime', 'property']",{'expose': 100}
"['hourlysurefire', 'executeorder', 'alphabeticalorder', 'alphabetical', 'reversebrings', 'level', 'predictability', 'certainorderleast', 'issue', 'detectorder', 'exeuctiondependentsurefire', 'runorder', 'maven', 'pluginmachine', 'timeouts', 'accomodate']",{'issue': 100}
"['machine', 'interaction', 'drool', 'thread', 'state']",{'thread': 100}
"['machine', 'interaction', 'drool', 'thread', 'state']",{'thread': 100}
"['reference', 'group', 'process', 'concurrent', 'systout']",{'concurrent': 100}
"['standard', 'resource', 'treatdtables', 'issue', 'compilation', 'behavior', 'compiledrepresentation', 'resource', 'abstraction', 'formatconverterdifferent', 'behavior', 'resourcedifferent', 'resource', 'reportedintegration']",{'issue': 100}
"['store', 'cache', 'drool', 'thread', 'kmodules', 'kierepository']",{'thread': 100}
"['drool', 'thread', 'kierepository']",{'thread': 100}
"['compilation', 'deadlock', 'drool']",{'deadlock': 100}
"['stack', 'interceptor', 'rollback']",{'stack': 100}
"['substitution', 'parameter', 'drool', 'incorrect', 'decision', 'sheet']",{'incorrect': 100}
"['drool', 'concurrency']",{'concurren': 90}
"['generation', 'model']",{'generation': 100}
"['support', 'backend', 'generation', 'model']",{'generation': 100}
"['issue', 'drool', 'compilation']",{'issue': 100}
"['execution', 'reference', 'group', 'process', 'concurrent']",{'concurrent': 100}
"['various', 'operation', 'parameter', 'remote', 'issue', 'revert', 'special', 'characterreverts']",{'issue': 100}
"['various', 'operation', 'parameter', 'remote', 'issue', 'special', 'charactercherry']",{'issue': 100}
"['concurrent', 'exection']",{'concurrent': 100}
"['message', 'classloader', 'thread', 'local', 'error']",{'thread': 100}
"['unable', 'integer', 'option', 'template']",{'integer': 100}
"['deadlock', 'drool', 'unnecessary', 'synchronization', 'lefttuplesets']",{'deadlock': 100}
"['primary', 'integer', 'sessioninfo']",{'integer': 100}
"['drool', 'knowledge', 'refactoreddrool', 'knowledge', 'pluggable', 'encapsulatedpoint', 'entry', 'handledrool', 'knowledge', 'pluggable', 'encapsulatednegconstraint', 'cloningdrool', 'knowledge', 'pluggable', 'encapsulatednegatable', 'injection', 'support', 'constraintdrool', 'knowledge', 'pluggable', 'encapsulatedpipeline', 'betterdrool', 'knowledge', 'pluggable', 'encapsulatedpipeline', 'betterseparate', 'objectstore']",{'injection': 100}
"['exception', 'concurrent', 'synchronization']",{'concurrent': 100}
"['transaction', 'duplicate', 'container', 'concurrent', 'sycnhronization']",{'concurrent': 100}
"['modification', 'iterator', 'exception', 'concurrent']",{'concurrent': 100}
"['issue', 'performance']",{'issue': 100}
"['command', 'bpmspl', 'generation']",{'generation': 100}
"['expose', 'kiecommands', 'interface', 'drool', 'command']",{'expose': 100}
"['field', 'string', 'integer']",{'integer': 100}
"['drool', 'incorrect', 'invalid', 'result']",{'incorrect': 100}
"['library', 'workitemhandler', 'issue', 'party', 'custom']",{'issue': 100}
"['drool', 'thread', 'configure']",{'thread': 100}
"['score', 'generation']",{'generation': 100}
"['class', 'issue']",{'issue': 100}
"['issue', 'salience', 'scorecard', 'compilercherry']",{'issue': 100}
"['decimal', 'integer', 'drool', 'table', 'formatters', 'decision', 'excellocale', 'dataformatter', 'force', 'number', 'english', 'format', 'error']",{'integer': 100}
"['optional', 'kiecdiextension', 'injection', 'enhance']",{'injection': 100}
"['event', 'overflow', 'drool', 'expiration', 'calculation']",{'overflow': 100}
"['thread', 'single', 'executor']",{'thread': 100}
"['issue', 'constraint']",{'issue': 100}
"['source', 'import', 'drool', 'generation', 'resource', 'scorecard', 'model']",{'generation': 100}
"['security', 'policy']",{'Security': 100}
"['issue', 'module', 'occurs']",{'issue': 100}
"['multiple', 'maven', 'drool', 'issue', 'getinstance', 'static']",{'issue': 100}
"['remote', 'support', 'issue', 'thread']","{'issue': 100, 'thread': 100}"
"['issue', 'drool']",{'issue': 100}
"['hierarchy', 'drool', 'trait', 'registry', 'generation']",{'generation': 100}
"['possible', 'issue', 'serialization', 'avoidingcherry']",{'issue': 100}
"['expose', 'drool', 'compilation', 'error']",{'expose': 100}
"['process', 'drool', 'initial', 'trigger', 'generation']",{'generation': 100}
"['query', 'deadlock', 'drool']",{'deadlock': 100}
"['event', 'expose', 'drool', 'expiration']",{'expose': 100}
"['large', 'issue', 'datamodeloracle', 'model']",{'issue': 100}
"['large', 'issue', 'datamodeloracle', 'model']",{'issue': 100}
"['cherry', 'bfdcfcabeedba', 'bugfixes', 'concurrency', 'regard', 'pickedconcurrent', 'environmentimpl', 'hashmapclass', 'persistence', 'entity', 'level']",{'concurren': 90}
"['large', 'issue', 'datamodeloracle', 'model']",{'issue': 100}
"['issue', 'libre']",{'issue': 100}
"['mergemswiderski', 'deploy', 'issue', 'request', 'mergesecond', 'snapshot', 'visible', 'kiecontainer', 'deployment']",{'issue': 100}
"['compilation', 'stack', 'process', 'errorusable', 'process', 'identify', 'definition', 'informationerror']",{'stack': 100}
"['cherry', 'support', 'session', 'thread', 'environment', 'pickedfield', 'reentrantlockunneccessary', 'transaction', 'level', 'perssimistic', 'takenbottom', 'method']",{'thread': 100}
"['large', 'address', 'drool', 'issuesafety', 'issue', 'drool', 'thread', 'bitmasks']","{'issue': 100, 'thread': 100}"
"['reproducer', 'issue', 'pattern', 'order']",{'issue': 100}
"['possible', 'insert', 'entrypoint', 'thread']",{'thread': 100}
"['possible', 'window', 'issue', 'concurrency']","{'issue': 100, 'concurren': 90}"
"['drool', 'concurrency', 'segment']",{'concurren': 90}
"['fireuntilhalt', 'drool', 'concurrency']",{'concurren': 90}
"['drool', 'container', 'injection']",{'injection': 100}
"['issue', 'package']",{'issue': 100}
"['issue', 'drool', 'switchcherry']",{'issue': 100}
"['stack', 'compilation', 'unification', 'drool', 'pattern', 'anticipate']",{'stack': 100}
"['maven', 'plugin', 'generation']",{'generation': 100}
"['stack', 'agenda', 'agendagroup', 'focus']",{'stack': 100}
"['maven', 'plugin', 'issue', 'droolsjbpm', 'version', 'compiler', 'antrun']",{'issue': 100}
"['model', 'kbase', 'support', 'project', 'jbrules', 'generation']",{'generation': 100}
"['project', 'generation', 'jbrules', 'modelkbase']",{'generation': 100}
"['project', 'generation', 'jbrules', 'modelproject']",{'generation': 100}
"['project', 'generation', 'jbrules', 'model']",{'generation': 100}
"['project', 'generation', 'jbrules']",{'generation': 100}
"['project', 'generation', 'jbrules', 'modelsynthetic']",{'generation': 100}
"['project', 'generation', 'jbrules', 'modelextension']",{'generation': 100}
"['project', 'generation', 'jbrules', 'model']",{'generation': 100}
"['project', 'generation', 'jbrules', 'model']",{'generation': 100}
"['project', 'generation', 'jbrules', 'model']",{'generation': 100}
"['project', 'generation', 'jbrules', 'model']",{'generation': 100}
"['project', 'generation', 'jbrules', 'model']",{'generation': 100}
"['transaction', 'access', 'rollback', 'concurrent', 'failure']",{'concurrent': 100}
"['issue', 'pacman', 'thread']","{'issue': 100, 'thread': 100}"
"['project', 'generation', 'jbrules', 'model']",{'generation': 100}
"['point', 'entry', 'window', 'issue', 'concurrency', 'jbrulescherry', 'bfabbfbbbafef']","{'issue': 100, 'concurren': 90}"
"['editor', 'issue', 'context', 'eclipse', 'jbideconflictdrool', 'compilerdrool', 'compilerdrool', 'compilerdrool', 'compilerdrool', 'compilercompiler', 'builder', 'drool', 'dialect', 'parsercompiler', 'builder', 'drool', 'dialect', 'parserconflictdrool', 'compilerdrool', 'compilerdrool', 'compilerdrool', 'compilerdrool', 'compilercompiler', 'builder', 'drool', 'dialect', 'parsercompiler', 'builder', 'drool', 'dialect', 'parser']",{'issue': 100}
"['pseudoclock', 'deadlock', 'fireuntilhalt', 'jbrules', 'usingcherry', 'pickedconflictdrool', 'compiler']",{'deadlock': 100}
"['deadlock', 'instertions', 'concurrent', 'jbrules', 'ksession']","{'deadlock': 100, 'concurrent': 100}"
"['reference', 'class', 'loader', 'consequence', 'thread', 'context', 'jbrulesmethod', 'finalize', 'removingcherry']",{'thread': 100}
"['compilion', 'window', 'class', 'issue', 'package', 'jbrules', 'eclipse']",{'issue': 100}
"['compilion', 'window', 'class', 'issue', 'package', 'jbrules', 'eclipse']",{'issue': 100}
"['mergemerge', 'geffrey', 'request', 'jbrulesdifferent', 'foreign', 'crash', 'testcase', 'jbrules', 'platform']",{'crash': 100}
"['thread', 'jbrules']",{'thread': 100}
"['mergemerge', 'request', 'sherlcksdocumentation', 'expert', 'drool', 'language', 'incorrect', 'jbrules']",{'incorrect': 100}
"['documentation', 'expert', 'drool', 'language', 'incorrect', 'jbrulesindicate', 'language']",{'incorrect': 100}
"['grammar', 'generation']",{'generation': 100}
"['issue', 'jbrules']",{'issue': 100}
"['upgradable', 'jbrules', 'deadlock']",{'deadlock': 100}
"['thread', 'concurrent']","{'thread': 100, 'concurrent': 100}"
"['resize', 'jbrules', 'commits', 'incorrect', 'resultcorruptioncorruption', 'introducedprevious']",{'incorrect': 100}
"['enable', 'length', 'window']",{'length': 100}
"['issue', 'package', 'jbrules', 'dialect', 'classload']",{'issue': 100}
"['incorrect', 'jbrules', 'composite']",{'incorrect': 100}
"['issue', 'guvnor', 'locale']",{'issue': 100}
"['crash', 'example', 'drool', 'pacman', 'jbrules']",{'crash': 100}
"['exception', 'concurrent', 'jbrules']",{'concurrent': 100}
"['jbrules', 'usingprevious', 'incorrect', 'jbrules', 'collection']",{'incorrect': 100}
"['issue', 'jbrules']",{'issue': 100}
"['issue', 'inline', 'jbrules']",{'issue': 100}
"['current', 'class', 'loader', 'thread', 'context', 'jbrules']",{'thread': 100}
"['current', 'class', 'loader', 'thread', 'context', 'jbrules']",{'thread': 100}
"['expose', 'packageregistry', 'dialect']",{'expose': 100}
"['issue', 'classloader', 'guvnor']",{'issue': 100}
"['issue', 'pacmanexample']",{'issue': 100}
"['issue', 'parser', 'minor', 'fixing']",{'issue': 100}
"['current', 'logger', 'crash', 'stacktraces', 'comment']",{'crash': 100}
"['exceptioninner', 'group', 'element', 'networkpassedsumemintvalue', 'numberintvalue', 'integer', 'accumulateintvalue', 'integer']",{'integer': 100}
"['salience', 'update', 'thread', 'concurrency']","{'thread': 100, 'concurren': 90}"
"['dynamic', 'incorrect', 'jbrules', 'expression', 'evaluationfails']",{'incorrect': 100}
"['nullpointer', 'issue', 'annotation', 'jbrules', 'declaration']",{'issue': 100}
"['default', 'document', 'issue', 'jbrules']",{'issue': 100}
"['expose', 'sessioninfo', 'jbrules']",{'expose': 100}
"['expose', 'sessioninfo', 'jbrules']",{'expose': 100}
"['column', 'number', 'column', 'attribute', 'error', 'ignoredpriority', 'integer', 'comment', 'descriptionattribute', 'valid', 'currentlyavoidheader', 'entry', 'column', 'snippet', 'attributeenhancementattribute', 'rulesetentry', 'level', 'querydocumentation', 'section']",{'integer': 100}
"['incorrect', 'jbrules', 'incompletetrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['grammar', 'generation', 'fixingtrunk', 'jbossrules', 'dafcab', 'repos']",{'generation': 100}
"['group', 'incorrect', 'capturingspace', 'boundarytrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['crash', 'javancss', 'equal', 'reporttrunk', 'jbossrules', 'dafcab', 'repos']",{'crash': 100}
"['issue', 'constraint', 'jbrules', 'valuetrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'drool', 'concurrency', 'jbrules', 'occasionalobject', 'store', 'issue', 'concurrency', 'insteadtrunk', 'jbossrules', 'dafcab', 'repos']","{'issue': 100, 'concurren': 90}"
"['issue', 'jbrules', 'jbossorg', 'switch', 'commenttrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['incrorrect', 'query', 'object', 'nullpointer', 'jbrules', 'errorissue', 'fixedtrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 95}
"['issue', 'comment', 'releasetrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'platformbugdatabasetrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'platformbugdatabasetrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'platformbugdatabasetrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'platformbugdatabasetrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['drool', 'issue', 'jbrulestrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'insidetrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'jbrules', 'patchtrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['problem', 'concurrency', 'jbrules', 'fixingtrunk', 'jbossrules', 'dafcab', 'repos']",{'concurren': 90}
"['knowledge', 'event', 'expose', 'agent', 'jbrulesexposetrunk', 'jbossrules', 'dafcab', 'repos']",{'expose': 100}
"['exception', 'concurrent', 'jbrulestrunk', 'jbossrules', 'dafcab', 'repos']",{'concurrent': 100}
"['reproduce', 'machine', 'thread', 'multi', 'catch', 'local', 'errortrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 100}
"['issue', 'jbrules', 'conversion', 'comparaisonescapedtrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['action', 'issue', 'abort', 'cancelingtrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['specific', 'verifier', 'jbrules', 'compilingverifierimpl', 'entry', 'expose', 'error', 'checktrunk', 'jbossrules', 'dafcab', 'repos']",{'expose': 100}
"['ready', 'jbrulesdirectory', 'multiple', 'class', 'issue', 'wouldtrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['incorrect', 'importtrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['thread', 'query', 'jbrulesquery', 'lockedtrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 100}
"['import', 'mveldialect', 'incorrect', 'jbrules', 'package', 'passingtrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['import', 'mveldialect', 'pakage', 'incorrect', 'jbrules', 'updatetrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['console', 'guvnor', 'jbrules', 'supportconsole', 'update', 'process', 'issue', 'folder', 'guvnor', 'variabletrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['resubmit', 'jbrulessmall', 'incorrect', 'logictrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['classloaders', 'jbrules', 'deadlock', 'fixingtrunk', 'jbossrules', 'dafcab', 'repos']",{'deadlock': 100}
"['right', 'memory', 'input', 'jbrules', 'concurentright', 'introduce', 'input', 'initial', 'concurrent', 'tryingdetects', 'memory', 'implementation', 'righttuples', 'concurrentinitial', 'righttupleliststrunk', 'jbossrules', 'dafcab', 'repos']",{'concurrent': 100}
"['session', 'drool', 'jbrules', 'persistencetransaction', 'issue', 'session', 'usingtrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'result', 'definition', 'commenttrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['variable', 'fixing', 'concurrent', 'jbrules', 'syntax', 'firexxx', 'usingtrunk', 'jbossrules', 'dafcab', 'repos']",{'concurrent': 100}
"['paste', 'incorrect', 'integerdatatype', 'errortrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['method', 'import', 'issue', 'validate', 'wrong', 'override', 'parenttrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['contains', 'character', 'foreach', 'issue', 'expression', 'illegal', 'collectiontrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['operator', 'array', 'contains', 'double', 'issue', 'jbrules', 'collectionmemberof', 'array', 'containsintegregration', 'extensivetrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['operator', 'array', 'contains', 'double', 'issue', 'jbrules', 'collectiontrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['operator', 'array', 'contains', 'double', 'issue', 'jbrules', 'collectiontrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['accumulate', 'generation', 'jbrules', 'fixingtrunk', 'jbossrules', 'dafcab', 'repos']",{'generation': 100}
"['problem', 'jbrules', 'deadlock', 'fixingtrunk', 'jbossrules', 'dafcab', 'repos']",{'deadlock': 100}
"['debug', 'issue', 'variabletrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'invocation', 'fireallrulesextendedtrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'concurrent', 'resourcerequest', 'problemtrunk', 'jbossrules', 'dafcab', 'repos']","{'issue': 100, 'concurrent': 100}"
"['ruleflow', 'action', 'plugin', 'jbrules', 'editing', 'eclipseeditor', 'editing', 'timer', 'issue', 'constrainttrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'constraint', 'illegal', 'character', 'containedtrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['execution', 'activation', 'queue', 'issue', 'activetrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'concurrency', 'jbrulestrunk', 'jbossrules', 'dafcab', 'repos']","{'issue': 100, 'concurren': 90}"
"['creates', 'ruleagent', 'deadlock', 'refreshes', 'thread', 'statefulsession', 'jbrules', 'anothertrunk', 'jbossrules', 'dafcab', 'repos']","{'deadlock': 100, 'thread': 100}"
"['creates', 'ruleagent', 'deadlock', 'refreshes', 'thread', 'statefulsession', 'jbrules', 'anothertrunk', 'jbossrules', 'dafcab', 'repos']","{'deadlock': 100, 'thread': 100}"
"['creates', 'ruleagent', 'deadlock', 'refreshes', 'thread', 'statefulsession', 'jbrules', 'anothertrunk', 'jbossrules', 'dafcab', 'repos']","{'deadlock': 100, 'thread': 100}"
"['issue', 'drool', 'runtimes', 'eclipseeclipse', 'supporttrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['minor', 'issue', 'jbrules', 'serializationtrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['jbrules', 'compositealready', 'point', 'entry', 'issue', 'linkedtrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'drool', 'result', 'mergetrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['length', 'fixingtrunk', 'jbossrules', 'dafcab', 'repos']",{'length': 100}
"['rulebase', 'thread', 'controltrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 100}
"['partition', 'thread', 'multi', 'workingtrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 100}
"['issue', 'jbrules', 'additionaltrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'jbrulestrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['propagation', 'support', 'thread', 'concurrent', 'multitrunk', 'jbossrules', 'dafcab', 'repos']","{'thread': 100, 'concurrent': 100}"
"['dataloader', 'generation', 'jbrules', 'modelmodeltrunk', 'jbossrules', 'dafcab', 'repos']",{'generation': 100}
"['concurrency', 'fixingtrunk', 'jbossrules', 'dafcab', 'repos']",{'concurren': 90}
"['stack', 'assigningtrunk', 'jbossrules', 'dafcab', 'repos']",{'stack': 100}
"['issue', 'jbrulestrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['incorrect', 'package', 'jbrules', 'dialectleast', 'creates', 'merges', 'incorrect', 'addpackage', 'revertedtrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['incorrect', 'package', 'jbrules', 'dialectfield', 'class', 'reader', 'internaltrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['incorrect', 'package', 'jbrules', 'dialectglobal', 'rulebase', 'information', 'correctlytrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['dataloader', 'generation', 'jbrules', 'modeltrunk', 'jbossrules', 'dafcab', 'repos']",{'generation': 100}
"['dataloader', 'generation', 'jbrules', 'compilertrunk', 'jbossrules', 'dafcab', 'repos']",{'generation': 100}
"['incorrect', 'package', 'jbrules', 'dialecttrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['common', 'uploadspecify', 'security', 'version', 'trans', 'eclipse', 'problemtrunk', 'jbossrules', 'dafcab', 'repos']",{'Security': 100}
"['generation', 'fixingtrunk', 'jbossrules', 'dafcab', 'repos']",{'generation': 100}
"['forager', 'refactortrunk', 'jbossrules', 'dafcab', 'repos']",{'forger': 92}
"['jbrulespackage', 'functionboolean', 'mveldialectdata', 'setdirtydirty', 'package', 'function', 'dialectdatastack', 'overflow', 'reducedtrunk', 'jbossrules', 'dafcab', 'repos']",{'overflow': 100}
"['usage', 'optimization', 'jbrulesobject', 'readobject', 'reading', 'movedobject', 'movedbetanode', 'writeexternal', 'movedintensive', 'stack', 'movedintensive', 'reteoorulebase', 'stack', 'numbertrunk', 'jbossrules', 'dafcab', 'repos']",{'stack': 100}
"['point', 'entry', 'workingmemory', 'thead', 'jbrulescurrentlytrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 91}
"['point', 'entry', 'workingmemory', 'thead', 'jbrulestransient', 'entrypointnodetrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 91}
"['point', 'entry', 'workingmemory', 'thead', 'jbrulestransient', 'entrypointnodetrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 91}
"['point', 'entry', 'workingmemory', 'thead', 'jbrulesspreadsheet', 'mockedtrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 91}
"['point', 'entry', 'workingmemory', 'thead', 'jbrulestrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 91}
"['point', 'entry', 'workingmemory', 'thead', 'jbrulestrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 91}
"['issue', 'jbrules', 'serialization', 'fixingtrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['class', 'multithread', 'issue', 'jbrules', 'extractortrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['assignment', 'implementation', 'equal', 'minor', 'issue', 'package', 'jbrulestrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['thread', 'space', 'changetrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 100}
"['string', 'concurrency', 'jbrules', 'problemtrunk', 'jbossrules', 'dafcab', 'repos']",{'concurren': 90}
"['concurrent', 'jbrules', 'collectiontrunk', 'jbossrules', 'dafcab', 'repos']",{'concurrent': 100}
"['thread', 'multi', 'jbrulestrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 100}
"['concurrency', 'jbrules', 'problemtrunk', 'jbossrules', 'dafcab', 'repos']",{'concurren': 90}
"['thread', 'multi', 'jbrules', 'problemtrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 100}
"['thread', 'context', 'concurrency', 'jbrules', 'concurrent', 'problemtrunk', 'jbossrules', 'dafcab', 'repos']","{'thread': 100, 'concurren': 90, 'concurrent': 100}"
"['hashkey', 'thread', 'jbrulesinstance', 'createstrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 100}
"['thread', 'dialect', 'tweak', 'safety', 'catch', 'theorytrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 100}
"['concurrency', 'jbrulestrunk', 'jbossrules', 'dafcab', 'repos']",{'concurren': 90}
"['concurrency', 'jbrulestrunk', 'jbossrules', 'dafcab', 'repos']",{'concurren': 90}
"['iterators', 'issue', 'thread', 'javadocs', 'safteytrunk', 'jbossrules', 'dafcab', 'repos']","{'issue': 100, 'thread': 100}"
"['sequential', 'incorrect', 'statementtrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['thread', 'safety', 'templatetrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 100}
"['fixme', 'janino', 'thread', 'safety', 'changedtrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 100}
"['thread', 'jbrulessynchronisestrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 100}
"['thread', 'jbrules', 'safetytrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 100}
"['clear', 'thread', 'picture', 'avoidingtrunk', 'jbossrules', 'dafcab', 'repos']",{'thread': 100}
"['equal', 'shadow', 'issue', 'jbrulestrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['dynamic', 'crash', 'proxy', 'drool', 'package', 'jbrules', 'checktrunk', 'jbossrules', 'dafcab', 'repos']",{'crash': 100}
"['security', 'websphere', 'classloader', 'jbrules', 'uneededtrunk', 'jbossrules', 'dafcab', 'repos']",{'Security': 100}
"['security', 'websphere', 'classloader', 'jbrules', 'uneededtrunk', 'jbossrules', 'dafcab', 'repos']",{'Security': 100}
"['security', 'websphere', 'classloader', 'jbrules', 'problemtrunk', 'jbossrules', 'dafcab', 'repos']",{'Security': 100}
"['security', 'websphere', 'classloader', 'jbrules', 'problemtrunk', 'jbossrules', 'dafcab', 'repos']",{'Security': 100}
"['security', 'websphere', 'classloader', 'jbrules', 'problemtrunk', 'jbossrules', 'dafcab', 'repos']",{'Security': 100}
"['issue', 'concurrent', 'objecttypeconf', 'jbrules', 'buildcacheobjecthashmap', 'iterator', 'single', 'newiterator', 'network', 'threadedtrunk', 'jbossrules', 'dafcab', 'repos']","{'issue': 100, 'concurrent': 100}"
"['issue', 'concurrent', 'objecttypeconf', 'jbrules', 'buildcachetrunk', 'jbossrules', 'dafcab', 'repos']","{'issue': 100, 'concurrent': 100}"
"['issue', 'concurrent', 'objecttypeconf', 'jbrules', 'buildcachetrunk', 'jbossrules', 'dafcab', 'repos']","{'issue': 100, 'concurrent': 100}"
"['incorrect', 'configtrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['issue', 'fixedtrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['jbrrules', 'ruleflow', 'event', 'expose', 'enterruleflow', 'event', 'audit', 'group', 'supportrealtime', 'jbrules', 'auditrealtime', 'ruleflow', 'minorruleflow', 'deactivate', 'empty', 'instance', 'lookup', 'ruleflow', 'interfacetrunk', 'jbossrules', 'dafcab', 'repos']",{'expose': 100}
"['jbrrules', 'ruleflow', 'event', 'expose', 'enterruleflow', 'event', 'audit', 'group', 'supportrealtime', 'jbrules', 'auditrealtime', 'ruleflow', 'minorruleflow', 'deactivate', 'empty', 'instance', 'lookup', 'ruleflow', 'interfacetrunk', 'jbossrules', 'dafcab', 'repos']",{'expose': 100}
"['jbrrules', 'ruleflow', 'event', 'expose', 'enterruleflow', 'event', 'audit', 'group', 'supportrealtime', 'jbrules', 'auditrealtime', 'ruleflow', 'minorruleflow', 'deactivate', 'empty', 'instance', 'lookup', 'ruleflow', 'interfacetrunk', 'jbossrules', 'dafcab', 'repos']",{'expose': 100}
"['integration', 'jbrulessalience', 'builder', 'issue', 'request', 'dialect', 'specifcallytrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['accumulate', 'concurrent', 'jbrules', 'problemtrunk', 'jbossrules', 'dafcab', 'repos']",{'concurrent': 100}
"['event', 'agenda', 'expose', 'group', 'jbrulesaddedtrunk', 'jbossrules', 'dafcab', 'repos']",{'expose': 100}
"['event', 'agenda', 'expose', 'group', 'jbrulesstill', 'integration', 'event', 'agenda', 'support', 'poppedtrunk', 'jbossrules', 'dafcab', 'repos']",{'expose': 100}
"['event', 'agenda', 'expose', 'group', 'jbrulesstill', 'integration', 'event', 'agenda', 'support', 'poppedtrunk', 'jbossrules', 'dafcab', 'repos']",{'expose': 100}
"['issue', 'fixingtrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'parser', 'jbrules', 'fixingtrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'fixingtrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['consumption', 'memory', 'issue', 'parsertrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'jbrules', 'generationtrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'serialization', 'fixingtrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'assertiontrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'assertiontrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'serializationtrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['issue', 'serializationtrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['everywhere', 'integer', 'changedtrunk', 'jbossrules', 'dafcab', 'repos']",{'integer': 100}
"['incorrect', 'jbrules', 'network', 'integrationtrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['incorrect', 'jbrules', 'network', 'definitionattachquery', 'equal', 'hashcodetrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['incorrect', 'jbrules', 'foundbuilder', 'equal', 'xstream', 'gethtml', 'visitortrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['incorrect', 'jbrules', 'foundbuilder', 'equal', 'xstream', 'gethtml', 'visitortrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['incorrect', 'jbrules', 'foundcolumn', 'element', 'index', 'ofcourse', 'countertrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['incorrect', 'jbrules', 'foundcolumn', 'element', 'index', 'ofcourse', 'countertrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['minor', 'issue', 'setpropertytrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['incorrect', 'versiontrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['length', 'array', 'source', 'wrong', 'resolvetrunk', 'jbossrules', 'dafcab', 'repos']",{'length': 100}
"['implementation', 'concurrent', 'strippedtrunk', 'jbossrules', 'dafcab', 'repos']",{'concurrent': 100}
"['integration', 'issue', 'resolvetrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['parser', 'issue', 'swallow', 'pickedtrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['integration', 'issue', 'resolvetrunk', 'jbossrules', 'dafcab', 'repos']",{'issue': 100}
"['incorrect', 'althoughtrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['field', 'incorrect', 'importtrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['class', 'incorrect', 'generatedtrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
"['declaration', 'necessay', 'refactorassumeextends', 'expose', 'recency', 'facthandlereteoo', 'basemannerstesttrunk', 'jbossrules', 'dafcab', 'repos']",{'expose': 100}
"['expose', 'functiontrunk', 'jbossrules', 'dafcab', 'repos']",{'expose': 100}
"['incorrect', 'javadoctrunk', 'jbossrules', 'dafcab', 'repos']",{'incorrect': 100}
