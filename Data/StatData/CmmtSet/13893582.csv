message,fuzzy
"['issue', 'coverage']",{'issue': 100}
"['travis', 'concurrency']",{'concurren': 90}
"['issue', 'troubleshoot', 'prometheus']",{'issue': 100}
"['issue', 'eslint']",{'issue': 100}
"['injection', 'stringify']",{'injection': 100}
"['injection', 'stringify']",{'injection': 100}
"['suite', 'server', 'cipher', 'overridingissue', 'bbyars', 'mountebank']",{'cipher': 100}
"['mergemerge', 'cfaccabfcbee', 'request', 'bbyarsupgrade', 'travis', 'security']",{'Security': 100}
"['mergemerge', 'request', 'bbyars', 'acbfeebbdcaefbupgrade', 'travis', 'security']",{'Security': 100}
"['mergemerge', 'request', 'bbyars', 'bfbceacfdeupgrade', 'travis', 'security']",{'Security': 100}
"['mergemerge', 'request', 'bbyarsupgrade', 'travis', 'security']",{'Security': 100}
"['mergemerge', 'adadfacdef', 'request', 'bbyarsupgrade', 'security', 'yargs']",{'Security': 100}
"['format', 'injection']",{'injection': 100}
"['travisci', 'issue']",{'issue': 100}
"['issue', 'eperm']",{'issue': 100}
"['predicatestate', 'proof', 'incorrect', 'researchingreason']",{'incorrect': 100}
"['mergeoperator', 'request', 'generation', 'predicate', 'cgraddeepequals', 'operator', 'predicate', 'override', 'generator']",{'generation': 100}
"['mergebranch', 'operator', 'generation', 'predicate', 'master']",{'generation': 100}
"['policy', 'security', 'update']",{'Security': 100}
"['constructor', 'buffer']",{'buffer': 100}
"['mergemerge', 'master', 'request', 'ohmrefreshmountebank', 'issue', 'bbyars']",{'issue': 100}
"['injection', 'predicate', 'generator']",{'injection': 100}
"['mountebank', 'issue', 'bbyars']",{'issue': 100}
"['injection', 'interfaceissue', 'bbyars', 'mountebank']",{'injection': 100}
"['injection', 'response', 'predicate', 'parameter', 'object', 'field', 'interfadeissue', 'bbyars', 'mountebank']",{'injection': 100}
"['injection', 'response']",{'injection': 100}
"['security', 'reason', 'allowinjection']",{'Security': 100}
"['security', 'enforcedissue', 'bbyars', 'mountebank']",{'Security': 100}
"['protocol', 'crash', 'implementationissue', 'bbyars', 'mountebank']",{'crash': 100}
"['style', 'constructor', 'buffer']",{'buffer': 100}
"['recordrequests', 'imposter', 'expose', 'retrievalissue', 'bbyars']",{'expose': 100}
"['issue', 'timeoutarrow', 'function', 'describe']",{'issue': 100}
"['bcbcbdmerge', 'request', 'issue', 'marioupgrade', 'issue']",{'issue': 100}
"['sensitivity', 'issue', 'predicate', 'jsonpath', 'matchissue', 'bbyars', 'mountebank']",{'issue': 100}
"['issue', 'permission', 'install', 'runningissue', 'bbyars', 'mountebank']","{'issue': 100, 'permission': 100}"
"['mergeupgrade', 'request', 'issue', 'jsdom', 'marioversion']",{'issue': 100}
"['mergeupgrade', 'parse', 'request', 'issue']",{'issue': 100}
"['mergemerge', 'master', 'ethome', 'requestupgrade', 'security', 'proxy', 'agent', 'vulnerability']",{'Security': 100}
"['upgrade', 'security', 'proxy', 'agent', 'vulnerabilityissue', 'bbyars', 'mountebank']",{'Security': 100}
"['mergemerge', 'master', 'request', 'request', 'issue']",{'issue': 100}
"['cfbfdmerge', 'master', 'request', 'iamamexists', 'value', 'object', 'integer', 'predicate']",{'integer': 100}
"['value', 'integer']",{'integer': 100}
"['exists', 'value', 'object', 'integer', 'predicate', 'handleissue']",{'integer': 100}
"['mergemerge', 'request', 'issue', 'mariorequest', 'support', 'preflight']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'marioimposter']",{'issue': 100}
"['travisci', 'buffer']",{'buffer': 100}
"['vulnerability', 'engine', 'avoidrelease', 'cqwlkl', 'security']",{'Security': 100}
"['sensitive', 'namespace', 'xpath', 'selectorletterissue', 'bbyars', 'mountebank']",{'Sensitive': 100}
"['generation', 'predicate', 'level', 'xpath', 'jsonpath', 'parameter', 'generation', 'predicate', 'largelyissue', 'bbyars', 'mountebank']",{'generation': 100}
"['generation', 'predicate', 'xpath', 'jsonpath', 'matchissue', 'bbyars', 'mountebank']",{'generation': 100}
"['parse', 'generation', 'predicate', 'loggerissue', 'bbyars', 'mountebank']",{'generation': 100}
"['request', 'generation', 'predicate', 'xpath', 'jsonpathcurrent', 'jsonpath', 'behaviorissue', 'bbyars', 'mountebank']",{'generation': 100}
"['issue', 'xmlpath', 'jsonpath', 'support']",{'issue': 100}
"['issue', 'xmlpath', 'jsonpath', 'support']",{'issue': 100}
"['issue', 'connection']",{'issue': 100}
"['agnibrata', 'issue', 'close', 'mountebank']",{'issue': 100}
"['codeclimate', 'issue']",{'issue': 100}
"['issue', 'markdown']",{'issue': 100}
"['issue', 'coverallissue', 'bbyars', 'mountebank']",{'issue': 100}
"['issue', 'codacy']",{'issue': 100}
"['directory', 'security']",{'Security': 100}
"['circular', 'buffer', 'repeat']",{'buffer': 100}
"['response', 'length', 'content']",{'length': 100}
"['circular', 'buffer', 'previous', 'simplyhidden', 'circular', 'response', 'buffer', 'blown', 'maintainingprotocol', 'processing', 'fooledissue', 'bbyars', 'mountebankissue', 'bbyars', 'mountebank']",{'buffer': 100}
"['insecure', 'proxy', 'cipherissue', 'bbyars', 'mountebank']",{'insecure': 100}
"['sensitive', 'filesystems']",{'Sensitive': 100}
"['abecdmerge', 'master', 'njenan', 'requestresponse', 'issue', 'support']",{'issue': 100}
"['repeat', 'behavior', 'issue']",{'issue': 100}
"['injection', 'contract']",{'injection': 100}
"['issue', 'install', 'shrinkwrap']",{'issue': 100}
"['issue', 'installissue', 'bbyars', 'mountebank']",{'issue': 100}
"['shrinkwrap', 'issue', 'install', 'misconfiguredcommitcomment', 'bbyars', 'bcdfebabccbccc', 'mountebank']",{'issue': 100}
"['global', 'object', 'response', 'injection', 'process', 'accessissue', 'bbyars', 'mountebank']",{'injection': 100}
"['issue', 'window', 'install']",{'issue': 100}
"['issue', 'weird', 'install']",{'issue': 100}
"['asynchronous', 'injection', 'comment', 'documentation', 'jsonpath']",{'injection': 100}
"['travis', 'eaddrnotavail', 'container', 'issue']",{'issue': 100}
"['issue', 'rawheaders', 'support']",{'issue': 100}
"['static', 'issue']",{'issue': 100}
"['window', 'issue']",{'issue': 100}
"['dedupe', 'issue']",{'issue': 100}
"['window', 'issue']",{'issue': 100}
"['package', 'permission']",{'permission': 100}
"['window', 'issue']",{'issue': 100}
"['powershell', 'issue', 'quotingwindow', 'unzip', 'amazing', 'command']",{'issue': 100}
"['window', 'issue']",{'issue': 100}
"['issue', 'static', 'codacy', 'analysis']",{'issue': 100}
"['codacy', 'issue']",{'issue': 100}
"['issue', 'replacement']",{'issue': 100}
"['supporttravis', 'issue']",{'issue': 100}
"['issue', 'static', 'codacy', 'analysis']",{'issue': 100}
"['proxy', 'response', 'supportmountebank', 'issue', 'bbyars']",{'issue': 100}
"['decoratormountebank', 'issue', 'bbyars']",{'issue': 100}
"['minor', 'injection', 'improvement', 'readability']",{'injection': 100}
"['issue', 'static', 'codacy', 'analysis']",{'issue': 100}
"['proxy', 'response', 'supportmountebank', 'issue', 'bbyars']",{'issue': 100}
"['decoratormountebank', 'issue', 'bbyars']",{'issue': 100}
"['minor', 'injection', 'improvement', 'readability']",{'injection': 100}
"['mergemerge', 'master', 'request', 'ndrwdnstdout', 'proxy', 'issue']",{'issue': 100}
"['logger', 'terminal', 'console', 'background', 'consolecould', 'whole', 'kernel', 'buffer']",{'buffer': 100}
"['logger', 'terminal', 'console', 'background', 'consolecould', 'whole', 'kernel', 'buffer']",{'buffer': 100}
"['issue', 'gruntbuild', 'linux']",{'issue': 100}
"['manage', 'issue', 'github', 'product', 'movedmilestone']",{'issue': 100}
"['issue', 'bbyars', 'reference', 'mountebank']",{'issue': 100}
"['mergemerge', 'patch', 'request', 'issue', 'reference']",{'issue': 100}
"['issue', 'bbyars', 'reference', 'mountebank']",{'issue': 100}
"['release', 'heroku', 'unable', 'source', 'version', 'issue']",{'issue': 100}
"['login', 'issue']",{'issue': 100}
"['difference', 'express', 'strangecharsets', 'length', 'content']",{'length': 100}
"['whitespace', 'issue']",{'issue': 100}
"['isdryrun', 'requestexample', 'injection']",{'injection': 100}
"['example', 'injection']",{'injection': 100}
"['validation', 'injection']",{'injection': 100}
"['issue', 'predicatebinary']",{'issue': 100}
"['asynchronous', 'injection', 'support']",{'injection': 100}
