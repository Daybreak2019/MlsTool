message,fuzzy
"['messagecommit', 'incorrect', 'anyhow', 'noticedcommit', 'message', 'amendleastcommit', 'changewrong', 'ratio', 'rewritealone', 'ratio']",{'incorrect': 100}
"['issue', 'compatibility', 'result', 'improvement', 'relatedtcheckmodulo', 'result', 'tcheckexception', 'error', 'wrappedolder', 'throwable', 'continuetchecksimilar', 'resultweird', 'result', 'ternaryfunction', 'exceptionanymore', 'existprotocol', 'result']",{'issue': 100}
"['warning', 'tcheck', 'warning', 'event', 'spurious', 'avoidcompilednamespace', 'clojurescript', 'macronamespace', 'source', 'eligible', 'compilationclojurescript', 'analyzerundefinedassert', 'broad', 'defineenvironment', 'clojurescript', 'definition', 'hostedcompiledpatch', 'javascript', 'reference', 'multifunctionclojurescript', 'reference', 'multifunctioncompiler', 'macro', 'employingdirect', 'farther', 'hostedclojurescript', 'supportpatch', 'issue', 'address', 'testingwould', 'complainchecknamespace', 'definedsolution', 'macro', 'hostedclojurescript', 'definition', 'macro', 'placesince', 'clojure', 'defmethod', 'guard', 'hostedmacro', 'check', 'ensures']",{'issue': 100}
"['refactor', 'keyword', 'generator', 'symbolstructure', 'generator', 'followingeffectconsistency', 'keywords', 'length', 'symbolcolon', 'symbol', 'generatedkeyword', 'generatedkeywords', 'length', 'improvingperformance', 'keywords', 'generator', 'compositesymbol', 'keyword', 'roundtriprobustexception', 'tcheck']",{'length': 100}
"['recursivestill', 'issue', 'example', 'parameter', 'tightenederror', 'stack', 'regression']","{'issue': 100, 'stack': 100}"
"['collection', 'issue', 'generator', 'distinctcollection', 'generator', 'distinctparticular', 'generate', 'boolean', 'concretedistinction', 'target', 'minimum', 'generate', 'successfullystill']",{'issue': 100}
"['preservation', 'randomness']",{'randomness': 100}
"['rename', 'namespaces', 'changedifferent', 'reason', 'necessaryrequires', 'namespaces', 'codebase', 'movingwould', 'incorrect', 'filenameboilerplate', 'writingnamespace', 'conditionals', 'declaration']",{'incorrect': 100}
"['global', 'state', 'function', 'generator', 'successive', 'systemmultiple', 'thread', 'similarlymoreover', 'independent', 'effect', 'global', 'defaultseems', 'system', 'reasonableseedless', 'startup', 'globalrandom']",{'thread': 100}
"['comment', 'incorrect']",{'incorrect': 100}
"['negative', 'integer', 'positiveequal', 'vector', 'optional', 'length']","{'integer': 100, 'length': 100}"
