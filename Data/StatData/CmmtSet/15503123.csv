message,fuzzy
"['issue', 'transportclose', 'connection', 'update', 'commitclass', 'object', 'sshconnection', 'updateobject', 'connection', 'previous', 'properlycancellation']",{'issue': 100}
"['algorithm', 'issue', 'documentation']",{'issue': 100}
"['string', 'problem', 'value', 'configconfig', 'value', 'issue', 'commitsubstitution', 'percent', 'supportthanks']",{'issue': 100}
"['pylint', 'version', 'address', 'update', 'issue']",{'issue': 100}
"['algorithm', 'encryption', 'support']",{'encryption': 100}
"['issue', 'channelcondition', 'client', 'potential', 'channel', 'foreverrequest', 'client']",{'issue': 100}
"['couple', 'issue', 'rmtree', 'potentialchange', 'number', 'limit', 'rmtree', 'method', 'commitavoid', 'concurrenthandle', 'number', 'limit', 'exception', 'potentiallyerror', 'others', 'retrievedcallercallback']",{'issue': 100}
"['maximum', 'lengthmaximum', 'limit', 'length', 'commitattack', 'possible', 'service', 'asyncssh', 'server', 'activity']",{'length': 100}
"['expiration', 'varies', 'expiration', 'openssl', 'recent', 'versionremove']",{'OpenSSL': 100}
"['pathlib', 'object', 'supportobject', 'pathlib', 'issue', 'source', 'singleissue', 'ratherpathlib', 'matchingobject', 'pathlib', 'improves', 'commitreduce', 'refactors']",{'issue': 100}
"['local', 'listener', 'connectionlistener', 'track', 'connection', 'causinglistener', 'server', 'previouslyconnection', 'cleanedlocal', 'listener', 'issue', 'commitconnection', 'tunnel', 'connectclose', 'connection', 'cleanup', 'conditionauthentication']",{'issue': 100}
"['enableprivate', 'openssl', 'supportenables', 'commitasyncssh', 'openssl', 'opensshopenssh', 'format']",{'OpenSSL': 100}
"['certificate', 'supportcertificate', 'support', 'openssl', 'support']",{'OpenSSL': 100}
"['update', 'support', 'minorimplicit', 'commitoption', 'connection', 'retrieveblock', 'event', 'activity', 'asyncioadvantage', 'function', 'commitmodule', 'filter', 'ratherasyncssh', 'particularlytoken', 'number', 'large', 'security', 'consideroption', 'connection', 'considerevent', 'application']",{'Security': 100}
"['minimum', 'python', 'update', 'versionpython', 'depedency', 'update', 'optional', 'commitminimum', 'version', 'includespackage', 'thread', 'blockingasyncio', 'event']",{'thread': 100}
"['couple', 'framework', 'commitcouple', 'server', 'setting', 'certificate', 'issue', 'properlyanother', 'making', 'windowframework', 'version']",{'issue': 100}
"['refactor', 'signature', 'crypto', 'levelsignature', 'algorithm', 'commitcrypto', 'level', 'mappingsignature', 'level', 'algorithm', 'highercrypto', 'function', 'asyncsshcrypto', 'asyncssh', 'needingprovides', 'sshkey', 'signature', 'crypto', 'value', 'level', 'returningcertificate', 'import', 'function', 'commitprivate', 'import', 'chain', 'certificate', 'preparation', 'security']","{'crypto': 100, 'Security': 100}"
"['authentication', 'issue', 'certificateaddress', 'problem', 'asyncssh', 'commitalgorithm', 'signature', 'reject', 'pkixsshmatch', 'authentication', 'publicsignature', 'openssh', 'regularalgorithm', 'alwayssignature', 'algorithm', 'alternate', 'supportmight', 'opensshsignature', 'mightsignature', 'algorithmsupportedsignature', 'actual', 'algorithm', 'showingreject', 'authentication', 'pkixsshalgorithm', 'signature', 'certificaterequest', 'authenticationauthentication', 'certificatealgorithm', 'certificatesignature', 'algorithm']",{'issue': 100}
"['issue', 'coverage']",{'issue': 100}
"['interval', 'parsercount', 'interval', 'parser', 'commitspecification', 'series', 'numeric', 'value', 'allowinggigabyte', 'intervalfollowparse', 'limit', 'asyncssh', 'generation', 'commitrelative', 'interval', 'parservalidity', 'setting', 'certificate']",{'generation': 100}
"['cleanup', 'issue', 'potentialcopier', 'class', 'attempt', 'commitclose', 'source', 'destinationerror']",{'issue': 100}
"['tuple', 'function', 'string', 'issue', 'passingtuple', 'source', 'problem', 'passingmcopy', 'functionreduce', 'refactors', 'issue', 'analysis']",{'issue': 100}
"['security', 'enhance', 'supportenhances', 'number', 'asyncssh', 'support', 'certificate', 'openssh', 'touch', 'certificate', 'securitytouch', 'security', 'enforcementerror']",{'Security': 100}
"['module', 'python', 'support', 'security', 'updateasyncssh', 'support', 'security', 'update', 'commitpython', 'libfido', 'available', 'sourceinstallbenefit', 'necessary', 'library', 'supportasyncssh', 'extra', 'optional', 'installedinstall', 'asyncssh', 'supportcontinue', 'supportecdsa', 'versionsignaturesupport', 'openssh', 'opensshasyncssh', 'supportfeature', 'openssh', 'resident', 'foundfuture']",{'Security': 100}
"['space', 'server', 'issuefilename', 'space', 'problem', 'committhanks', 'copeland', 'stephen', 'server', 'issue', 'previouslyregular', 'string']",{'issue': 100}
"['check', 'security', 'support', 'compatible', 'official', 'compatibleenjoy', 'commitsignature', 'ecdsa', 'algorithmtouch', 'option', 'generation', 'requiregeneration', 'signedopenssh', 'format', 'certificate', 'compatible', 'writeopenssh', 'access', 'management', 'agentcompatibility', 'middleware', 'openssh', 'libfido', 'provider', 'additionimplementation', 'supportsince', 'openssh', 'asyncssh', 'supportadvantage', 'client', 'server']","{'Security': 100, 'generation': 100}"
"['certificatehandle', 'asyncssh', 'reading', 'issue', 'commitnewline', 'openssh', 'format', 'consistent', 'value', 'multiple', 'certificate']",{'issue': 100}
"['pylint', 'version', 'pylint', 'address', 'clean', 'issue', 'commitpylint']",{'issue': 100}
"['issue', 'attempt', 'openssl', 'travisci', 'update', 'version']","{'issue': 100, 'OpenSSL': 100}"
"['issue', 'connectionknown', 'exception', 'commitaddress', 'hostname', 'potentiallysince', 'lookup', 'client', 'addressaddress', 'knownaddress', 'destinationtunnel', 'numerichandle', 'setting', 'target', 'commitlistener', 'reverse', 'remote', 'systemwhatever', 'hostname', 'tunnel', 'reportinbound']",{'issue': 100}
"['certificate', 'support', 'parseraccept', 'import', 'function', 'asyncssh', 'certificate', 'update', 'commitbegin', 'openssl', 'delimiter', 'certificateadditional', 'trust', 'information', 'certificate', 'discardedwithout']",{'OpenSSL': 100}
"['additional', 'issueasyncssh', 'issue', 'commitsupportcolon', 'letter', 'followeddrive', 'remote', 'window', 'letter', 'ratherlocal', 'basename', 'sourcebackslashes', 'drive', 'letter', 'properlycolon', 'remote', 'lettersftpserver', 'chroot', 'normalization', 'pathname', 'issuefilename', 'client', 'windowdrive', 'contains']",{'issue': 100}
"['chacha', 'version', 'supportsupport', 'implementation', 'commitchacha', 'available', 'version', 'ciphercryptography', 'openssl', 'packageasyncssh', 'libsodium', 'libnaclchacha', 'implementation']",{'OpenSSL': 100}
"['fallback', 'restore', 'support', 'libnacl', 'curveability', 'restores', 'libsodiumavailable', 'openssl', 'version', 'curvecryptography', 'packagecommitalgorithm']",{'OpenSSL': 100}
"['fedora', 'failure', 'rawhideprivate', 'update', 'commiterror', 'fedora', 'openssl', 'unknownplatform', 'trigger', 'openssl', 'versionissue', 'runninggeorg', 'thanks', 'sauthof', 'platform', 'envrionment', 'issue', 'debug']","{'OpenSSL': 100, 'issue': 100}"
"['exchange', 'curve', 'supportclient', 'support', 'commitreplaces', 'implementation', 'libnaclcryptography', 'versionlater', 'openssl']",{'OpenSSL': 100}
"['creation', 'asyncssh', 'logger', 'update', 'issue', 'aroundavoids', 'commitappearsasyncssh', 'value', 'installedthanks', 'offering']",{'issue': 100}
"['client', 'server', 'support', 'server', 'supportasyncssh', 'asyncssh', 'withoutclient', 'accessallow', 'asyncssh', 'future', 'systemavoid', 'access', 'asyncssh', 'directactingminor', 'issue', 'addition', 'commitcertificate', 'openssh', 'source', 'address', 'usernames', 'handlingcouple', 'string']",{'issue': 100}
"['error', 'arcfour', 'private', 'openssh', 'encryption', 'formaterror', 'crypto', 'arcfour', 'openssh', 'formatcatch', 'checkin', 'opensshtravis', 'testingcaught']","{'encryption': 100, 'crypto': 100}"
"['rework', 'crypto', 'supportreworks', 'separate', 'packet', 'crypto', 'asyncssh', 'support', 'commitdecryption', 'encryption', 'connection', 'flattens', 'logicmodule', 'structure', 'crypto', 'cleanup', 'agent', 'minorfunction']","{'crypto': 100, 'encryption': 100}"
"['timeout', 'couple', 'issue', 'remainsdelimitercould', 'excception', 'address', 'condition', 'coroutineinstead', 'chance', 'exception', 'asynciosimultaneous', 'serialize', 'multiplesimultaneous', 'issue', 'stillreceive', 'delimiter', 'windowfuture']",{'issue': 100}
"['algorithm', 'chacha', 'cipher', 'cipher', 'debug', 'commitalgorithm', 'chacha', 'algorithm', 'value']",{'cipher': 100}
"['symmetric', 'cipher', 'simplifyclass', 'simplifies', 'factory', 'symmetric', 'cipher', 'factory', 'storeblock', 'cipher', 'symmetric', 'instance']",{'cipher': 100}
"['issue', 'python']",{'issue': 100}
"['number', 'commitprivate', 'openssh', 'bcrypt', 'encryption', 'round', 'format', 'runningnumber', 'setting', 'default', 'round', 'factorbcrypt', 'warning', 'versionunless', 'round', 'number', 'includedepends', 'asyncsshlater', 'argument', 'specify', 'version', 'withoutexplicit', 'update', 'version']","{'bcrypt': 100, 'encryption': 100}"
"['update', 'usage', 'commitcertificatesignature', 'entity', 'agreement', 'certificate', 'provideflexibility', 'possible', 'additional', 'exchangecertificatelonger', 'enity', 'certificateextension', 'openssl', 'keycertsign', 'problem', 'aroundextension', 'usageentity', 'certificate', 'previouslyaddress', 'state', 'violatesfield', 'basic', 'constraintkeycertsignentity']",{'OpenSSL': 100}
"['certificate', 'update', 'sensitive', 'ascii', 'commitcharacter', 'field', 'commentoptional', 'methodspecifies', 'paramtercomment', 'unicode', 'methodreturn', 'unicode', 'withoutasyncssh', 'certificate', 'string', 'unicode', 'comment', 'string', 'avoidconform', 'specificcomment', 'retrieve', 'method']",{'Sensitive': 100}
"['openssh', 'agent', 'update', 'issue', 'aroundagent', 'update', 'commitreturn', 'passingagent', 'openssh', 'fatalerror', 'invalid', 'acceptasyncssh', 'agent', 'result', 'sometimeserror', 'process', 'systemopenssh', 'longerchange', 'openssh', 'fixedprevent', 'meantime', 'asyncssh']",{'issue': 100}
"['openssh', 'supportmethod', 'commitsends', 'message', 'openssh', 'supportedterminatecommit', 'cosmetic', 'issue', 'placereference', 'sphinx', 'section', 'includeanchor', 'visible', 'sectionreference', 'explicit', 'rewritten']",{'issue': 100}
"['function', 'issuer', 'certificate', 'optional', 'generationargument', 'function', 'issuer', 'optional', 'commitgenerate']",{'issue': 91}
"['bcrypt', 'warning', 'round', 'value', 'update']",{'bcrypt': 100}
"['private', 'openssh', 'encryption', 'default', 'value', 'round', 'increasemodule', 'private', 'openssh', 'bcrypt', 'round', 'value', 'generates', 'commitincrease', 'default', 'roundstrength', 'scale', 'encryptionfactor', 'password', 'bcrypt']","{'encryption': 100, 'bcrypt': 100}"
"['middle', 'connection', 'exception', 'connection', 'callback', 'asynchronous', 'waitingempty', 'password', 'issue']",{'issue': 100}
"['pylint', 'version', 'address', 'issue']",{'issue': 100}
"['window', 'gssapi', 'authentication', 'exchange', 'gssapi', 'support', 'commitmodule', 'pywinunlike', 'supportdeterminemechanism', 'security', 'gssapi', 'client', 'server', 'capable', 'commitavailable', 'server', 'exchange', 'privileged', 'applicationcredential']",{'Security': 100}
"['environment', 'issue', 'updatingprocess', 'environment', 'child', 'properlyavoid', 'process', 'child', 'value', 'problem', 'insideenvironment']",{'issue': 100}
"['group', 'expose', 'overridable', 'server', 'format', 'methodmethod', 'commitsftpserver', 'custom', 'caller', 'providegroup', 'default', 'value', 'remainsmodule', 'numeric', 'value', 'stringsuggestion', 'thanks', 'leslie']",{'expose': 100}
"['permission', 'appveyor', 'virtualenv', 'problem']",{'permission': 100}
"['openssl', 'library']",{'OpenSSL': 100}
"['enable', 'windowimplementation', 'asyncssh', 'update', 'changeserver', 'advertise', 'supportstatvfs', 'fstatvfs', 'functionexisterror', 'checkingdefault', 'functiondrive', 'window', 'server', 'letter', 'updatedbackslash', 'absolute', 'startdrive', 'windowattribute', 'setting', 'windowratherrename', 'posix', 'changedwindow', 'symlink', 'argumentallow', 'symlink', 'changeavoid', 'issue', 'cleaningpermission', 'avoidedclose', 'statvfscheck', 'runningcreate', 'permissionsymlinkposixpath', 'changedinstead', 'return']",{'issue': 100}
"['check', 'document', 'certificate', 'permission', 'update', 'reflectupdate', 'documentation', 'support', 'agent']",{'permission': 100}
"['public', 'withoutchange', 'public', 'commitfound', 'openssl', 'keygen', 'binaryimport', 'asyncssh', 'certificate', 'testingrather']",{'OpenSSL': 100}
"['generate', 'asyncssh', 'openssl', 'native']",{'OpenSSL': 100}
"['expose', 'class', 'reference', 'sshagentkeypair']",{'expose': 100}
"['algorithm', 'alternate', 'signature', 'support', 'reworkreworks', 'alternate', 'signature', 'support', 'commitalgorithm', 'argument', 'signature', 'additional', 'passingalgorithm', 'separate', 'reduces', 'authentication', 'issue', 'publicattempt']",{'issue': 100}
"['ecdsa', 'generation', 'certificateclass', 'handler', 'certificate', 'commitecdsa', 'certificate', 'problemoptional', 'argumentdeclaration', 'opensshreturn', 'value', 'function']",{'generation': 100}
"['supportcertificate', 'support', 'openssh', 'certificatecertificate', 'import', 'previous', 'supportfunctionality', 'clean', 'issue']",{'issue': 100}
"['private', 'generation', 'supportfunction', 'commitcreate', 'privateprivate']",{'generation': 100}
"['methodadvantage', 'crypto', 'wrapper', 'update']",{'crypto': 100}
"['dependency', 'bcryptchange', 'bcrypt', 'dependency', 'optional', 'commitpackage', 'support', 'modern', 'bcrypt']",{'bcrypt': 100}
"['check', 'bcrypt', 'function', 'update']",{'bcrypt': 100}
"['bcrypt', 'version', 'commitimplement', 'functionprivate', 'update', 'encryption', 'openssherror', 'available', 'raisedsupport']","{'bcrypt': 100, 'encryption': 100}"
"['install', 'bcrypt', 'linux', 'script', 'dependency', 'libnacl', 'libsodium']",{'bcrypt': 100}
"['update', 'linuxfound', 'couple', 'issue', 'commitlinuxmtime', 'atime', 'local', 'value', 'fractionalvalue', 'listingresult', 'thing']",{'issue': 100}
"['issue', 'minorelement', 'withoutlistdir', 'update', 'default', 'implementationspecial', 'return', 'server', 'directorymatch', 'pattern', 'directory']",{'issue': 100}
"['custom', 'validity', 'string', 'versioncustom', 'stricter', 'length', 'total', 'version', 'exceedcheck']",{'length': 100}
"['parallel', 'request', 'committhroughput', 'parallel', 'issue', 'multiplelatency', 'different', 'block']",{'issue': 100}
"['server', 'clienterror', 'silent', 'ratherconnection', 'clientlisten', 'argument', 'function', 'address', 'removefound', 'check', 'conditional', 'disablesinteractive', 'keyboard', 'cipher', 'passwordallow', 'coverage', 'conditional']",{'cipher': 100}
"['issue', 'cleanclose', 'connection', 'global', 'request', 'common', 'refactoredlistener', 'socket', 'domain', 'parent', 'sharedremove']",{'issue': 100}
"['miscellaneous', 'cleanup', 'issueexception', 'handler', 'commiterror', 'object', 'occurs', 'creates', 'sshagentclient', 'resource', 'warning', 'commitconditional', 'unnecessaryupdate', 'documentationindicate', 'permission', 'agent']",{'permission': 100}
"['pylint', 'warningpylint', 'issue', 'commitpositive', 'others', 'issue', 'falsefound', 'issue']",{'issue': 100}
"['openssl', 'conditional', 'version', 'available', 'commitconditional', 'version', 'skippingnecessary', 'version', 'support']",{'OpenSSL': 100}
"['openssl', 'conditional', 'version', 'available', 'commitconditional', 'version', 'skippingnecessary', 'version', 'support']",{'OpenSSL': 100}
"['listener', 'issue', 'forwardingacknowledges', 'response', 'request', 'message', 'commitcancel', 'forwardingunblock', 'caller', 'request', 'responseerror', 'middle', 'robust', 'occurs']",{'issue': 100}
"['interactive', 'keyboard', 'client', 'password', 'conversionautomatic', 'conversion', 'client', 'issue', 'commitinteractive', 'keyboard', 'passwordautomatic', 'client', 'password', 'conversionoverride', 'possible', 'authenticate', 'challenge', 'server']",{'issue': 100}
"['check', 'libnacl', 'update', 'bcryptdepend', 'bcrypt', 'installationcheck', 'libnacl', 'library', 'presence', 'properlycheck']",{'bcrypt': 100}
"['bcryptprivate', 'check', 'decryption', 'encryption', 'commitwhether', 'available', 'function', 'bcrypterror', 'passphrase', 'specifiedcipher']",{'encryption': 100}
"['update', 'publicexpands', 'public', 'commiterror', 'signature', 'private', 'encryption', 'commitlonger', 'package', 'pycrypto']",{'encryption': 100}
"['crypto', 'asyncssh', 'dependency', 'support', 'updatecryptography', 'asyncssh', 'dependency', 'update', 'commitlater', 'version', 'oldercipher', 'libsodium', 'libnacldonna', 'diffie', 'curve', 'hellmanlibsodium', 'libnacltightens', 'ecdsa', 'refactors', 'supportimplementation', 'exchange', 'support', 'curve', 'exchange', 'implementationerror', 'making', 'exchange', 'checkingsignature', 'length', 'extramessageoptional', 'implementation', 'changedprivate', 'parameter', 'performance']","{'crypto': 100, 'length': 100}"
"['additional', 'coverageerror', 'additional', 'excludes', 'commitmodule', 'reference', 'optionalasyncssh', 'table', 'cipher']",{'cipher': 100}
"['encryption', 'excludeprivate', 'encryption', 'excludes']",{'encryption': 100}
"['block', 'consecutivecreate', 'cipher', 'commitdecrypt', 'block', 'encrypt', 'consecutive', 'multiplestate']",{'cipher': 100}
"['finish', 'publiccertificate', 'commitplace', 'methodsymmetric', 'class', 'cipher', 'dependingversionexclusion', 'handful']",{'cipher': 100}
"['public', 'problem', 'uncoveredextends', 'import', 'issue', 'uncoveredinvalid', 'properlyhandle', 'sequence', 'properlyimport', 'empty', 'attempt', 'public', 'string', 'properlyhandle', 'header', 'properlycheck', 'openssh', 'mismatch', 'report', 'passphraseinstead', 'return', 'keyimporterror']",{'issue': 100}
"['pylint', 'cleanupcleanup', 'issue', 'finaldocstrings']",{'issue': 100}
"['import', 'package', 'curvedh', 'cryptoavoid', 'pylint', 'crypto', 'dependency', 'curvecommit']",{'crypto': 100}
"['enhance', 'supportoffset', 'parameter', 'sftpfile', 'optional', 'commitposition', 'writeuseful', 'caller', 'multiple', 'operationposition', 'certainpreserve', 'sftpclient', 'argument', 'commitpreserve', 'permission', 'methodmodification']",{'permission': 100}
"['simplifiedaround', 'wrapper', 'updatemajority', 'client', 'examplecouple', 'issue', 'stream']",{'issue': 100}
"['check', 'optional', 'packagecheck', 'presence', 'bcrypt', 'commitoptional', 'package', 'automaticallychange', 'comment', 'cipher']","{'bcrypt': 100, 'cipher': 100}"
"['openssh', 'encryption', 'chacha', 'update', 'reflectchacha', 'cipher', 'opensshprivate', 'openssh', 'encryption']","{'encryption': 100, 'cipher': 100}"
"['bcrypt', 'dependency', 'libnacl', 'extra', 'optionallibnacl', 'bcrypt', 'commitpackage', 'installs']",{'bcrypt': 100}
"['chacha', 'openssh', 'cipher', 'supportcommit', 'cipher', 'support', 'chacha', 'available', 'libnaclwrapper']",{'cipher': 100}
"['private', 'openssh', 'format', 'supportprivate', 'support', 'public', 'commitprivate', 'introduces', 'import', 'openssh', 'format', 'neededpython', 'dependency', 'wrapper', 'libnaclpython', 'import', 'package', 'bcrypt', 'supportprivate', 'openssh', 'formatimport', 'support', 'commitprivate', 'ecdsa', 'opensshprivate', 'improvement', 'supportecdsa', 'explicit', 'ecparameters', 'rathermatch', 'parameter']",{'bcrypt': 100}
"['couple', 'condition', 'sshchannelcouple', 'condition', 'commitoccurs', 'channel', 'crash', 'problem', 'secondcallback', 'channel', 'arrivesthanks', 'keller', 'michael']",{'crash': 100}
"['interactive', 'authentication', 'client', 'keyboard', 'defaultinteractive', 'keyboard', 'default', 'connection', 'password', 'firstwrong', 'function', 'retrieveinteractive', 'keyboard', 'loosens', 'device', 'ciscoinstead', 'issue', 'crook', 'debug']",{'issue': 100}
"['master', 'development', 'support', 'preparemaster', 'commitnumber', 'release', 'versionavailable', 'cipher', 'support']",{'cipher': 100}
"['crypto', 'asyncssh', 'abstractsymmetric', 'abstract', 'combinationcryptographic', 'dependencysupport', 'commitencryption', 'function']",{'crypto': 100}
"['spurious', 'permission']",{'permission': 100}
