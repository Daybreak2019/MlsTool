message,fuzzy
"['readme', 'renderedgithub', 'markdown', 'renderersince', 'insteadbullet', 'point', 'channel', 'specifyingplace', 'issue', 'resolvedwebsite']",{'issue': 100}
"['consistent', 'buffer']",{'buffer': 100}
"['payee', 'issue', 'relatedcheck', 'payee']",{'issue': 100}
"['regressionutility', 'function', 'balance', 'expose', 'commitsplit', 'separateprocess', 'statementshown', 'leadingsmaller', 'display']",{'expose': 100}
"['grammar', 'issue']",{'issue': 100}
"['library', 'issue']",{'issue': 100}
"['testcase', 'issue']",{'issue': 100}
"['regression', 'issuewrong', 'correction', 'behavior', 'causedquery', 'parens', 'expressionreport', 'issue']",{'issue': 100}
"['python', 'output', 'buffer', 'python', 'unbuffer', 'stdio', 'output', 'stuckstdout', 'issue', 'shutdown', 'usage', 'ledgerremovedledger', 'expectationexample', 'ledger', 'buffer', 'output', 'flush', 'large', 'unlessbaseline', 'ledgerclassbaseline', 'verifyotherwise', 'appearboost', 'issue', 'ledgerclasspython', 'tutorial']","{'buffer': 100, 'issue': 100}"
"['python', 'conversion', 'argument', 'indexdestination', 'buffer', 'potential', 'overflow']","{'buffer': 100, 'overflow': 100}"
"['integer', 'return']",{'integer': 100}
"['balance', 'expose', 'utility', 'function']",{'expose': 100}
"['stack', 'option', 'routine', 'overflowcreate', 'stack', 'possible', 'overflowlonger', 'option', 'buffer', 'parsinglength', 'string', 'inputinput', 'string', 'issue', 'length', 'preventoption', 'issuethanks', 'yeong']","{'stack': 100, 'buffer': 100, 'issue': 100, 'length': 100}"
"['routine', 'overflowcreate', 'stack', 'possible', 'overflowlonger', 'buffer', 'parsinginput', 'string', 'memory', 'argument', 'string', 'issue']","{'stack': 100, 'buffer': 100, 'issue': 100}"
"['parsingresult', 'transaction', 'vulnerability', 'referenceobject', 'account', 'issue', 'thanksinitialtalos']",{'issue': 100}
"['effective', 'parsingduplantis', 'integer', 'execution', 'resultingprovidedgrocery', 'expenseduplantis', 'great', 'issue', 'detail', 'describedcisco', 'issue', 'description', 'foundtalos']","{'integer': 100, 'issue': 100}"
"['wiegley', 'issue', 'commitattempt', 'value', 'invert']",{'issue': 100}
"['concurrent', 'check']",{'concurrent': 100}
"['multiple', 'timelog', 'accountmultiple', 'account', 'error', 'throwrequires', 'multiple', 'check', 'account', 'checkingparameter', 'issue', 'acountwhereas', 'constructor', 'account', 'argument', 'position']",{'issue': 100}
"['mergerequest', 'christoph', 'issue', 'mergetoken']",{'issue': 100}
"['token', 'removetokenizer', 'digit', 'integer', 'classifiescontext', 'causeenough', 'tokenizer', 'informationdistinguish', 'integerclassify', 'tokenizer', 'integerdetermine', 'digit', 'heuristicplace']",{'integer': 100}
"['mergerequest', 'kylef', 'mergepython', 'expose']",{'expose': 100}
"['journal', 'expose', 'python']",{'expose': 100}
"['mergerequest', 'kylef', 'mergejournal', 'expose', 'python']",{'expose': 100}
"['journal', 'expose', 'python']",{'expose': 100}
"['manual', 'computation', 'method', 'insteadslash', 'error', 'character', 'incorrect', 'backward', 'computation']",{'incorrect': 100}
"['register', 'report', 'command', 'ledgerreport', 'ledger', 'custom', 'register', 'commitreport', 'ledger', 'attempt', 'transaction', 'controlentry', 'report', 'buffer', 'originalreport', 'controlprepend', 'formatprimary', 'motivation', 'implementationformat', 'ledger', 'prepend', 'support', 'registercommand', 'report', 'ledger', 'register', 'special', 'alwaysprevent', 'ability', 'report', 'prepend', 'format', 'passedprovides']",{'buffer': 100}
"['ledger', 'error', 'ledger', 'error', 'insert', 'handleerror', 'inhibit', 'buffer', 'alreadypermit']",{'buffer': 100}
"['maximum', 'length', 'increase']",{'length': 100}
"['version', 'boostbuild', 'issue', 'ledger']",{'issue': 100}
"['mergerequest', 'regex', 'mergeregex', 'integer']",{'integer': 100}
"['regex', 'integer', 'capturedgroup', 'digit', 'capturedresult', 'incorrect', 'reportingbroken', 'length', 'amountquote', 'decimal', 'group']","{'integer': 100, 'incorrect': 100, 'length': 100}"
"['ledgerplace', 'buffer', 'newline', 'inserterror', 'previous', 'occursstart', 'movedsuperfluous', 'expressionbecase', 'transaction', 'behavior', 'removingbreak', 'transaction', 'emacs', 'ledger']",{'buffer': 100}
"['bcacad', 'mergerequest', 'issue', 'jwakelyoptional', 'object', 'boost']",{'issue': 100}
"['emacsreconcile', 'option', 'bufferdefault', 'reconcile', 'ledgerjustifieddefault', 'ledgermigratelinux', 'package', 'buffer', 'documentation', 'buffer', 'alreadyworkflow']",{'buffer': 100}
"['header', 'reconcile', 'buffer', 'ledger', 'emacs']",{'buffer': 100}
"['emacshappens', 'subtle', 'block', 'babelhappens', 'buffer', 'ledger', 'fontify', 'startpoint', 'block', 'point', 'fontifypoint', 'original', 'insteadregular', 'reproducedefun', 'fontifyledgercurrent', 'buffercreate', 'bufferfontification', 'ledgermajor', 'funcall', 'unlessbuffer', 'eraseinsertbuffer', 'fontifyswitch', 'fontification', 'buffer', 'ledgerbuffer', 'fontify']",{'buffer': 100}
"['mergejmgpena', 'compilation', 'request', 'issue', 'cygwin']",{'issue': 100}
"['issue', 'cygwin', 'compilation', 'setenv', 'function', 'stdlibpopen']",{'issue': 100}
"['mergerequest', 'mergetrace', 'crash']",{'crash': 100}
"['travis', 'changedmatch', 'includeexecutable', 'permission']",{'permission': 100}
"['trace', 'crash', 'usingtypedef']",{'crash': 100}
"['keyword', 'document', 'buffer']",{'buffer': 100}
"['mergerequest', 'mergeresult', 'empty', 'crash']",{'crash': 100}
"['result', 'empty', 'crash', 'usingcause', 'segmentation']",{'crash': 100}
"['layout', 'emacs', 'issue', 'compilation']",{'issue': 100}
"['position', 'emacs', 'insteadleave', 'buffer', 'buffer', 'ensure']",{'buffer': 100}
"['buffer', 'ledger', 'ledger', 'tends', 'transaction', 'region']",{'buffer': 100}
"['alive', 'switch', 'reconcile', 'buffer']",{'buffer': 100}
"['integer', 'thursday']",{'integer': 100}
"['buffer', 'ledger']",{'buffer': 100}
"['equity', 'issue']",{'issue': 100}
"['whitespace', 'issue']",{'issue': 100}
"['ledger', 'report', 'buffer']",{'buffer': 100}
"['header', 'refactor', 'format', 'reconcile', 'separate', 'buffer']",{'buffer': 100}
"['cccaddthdox', 'request', 'reconcile', 'buffer', 'mergerestore', 'keyboard', 'reconcile', 'shortcut', 'buffer']",{'buffer': 100}
"['reconcile', 'buffer', 'ledger']",{'buffer': 100}
"['payee', 'issue', 'possible', 'ledger', 'complete', 'space']",{'issue': 100}
"['schedule', 'buffer']",{'buffer': 100}
"['namespace', 'highlight', 'overlay', 'ledger', 'prefixvariable', 'local', 'level', 'buffer', 'commitvariable', 'ledger']",{'buffer': 100}
"['reconcile', 'buffer']",{'buffer': 100}
"['issue', 'jenkinssymlink']",{'issue': 100}
"['buffer', 'cleanup']",{'buffer': 100}
"['reconcile', 'buffer', 'ledger', 'update']",{'buffer': 100}
"['rename', 'optionexplicit', 'download', 'newcomer', 'single', 'reasoning', 'rename', 'option', 'cryptic', 'mastery', 'information', 'reader', 'advancedoption', 'format', 'option', 'issue', 'makeinfo', 'balance', 'title', 'sectionoption', 'consistency']",{'issue': 100}
"['buffer', 'ledger', 'point', 'failure']",{'buffer': 100}
"['performance', 'buffer']",{'buffer': 100}
"['attempt', 'point', 'buffer']",{'buffer': 100}
"['context', 'regex', 'generation']",{'generation': 100}
"['account', 'marker', 'status', 'buffer']",{'buffer': 100}
"['window', 'error', 'buffer']",{'buffer': 100}
"['align', 'buffer']",{'buffer': 100}
"['ledger', 'integer', 'commodity', 'balance']",{'integer': 100}
"['transaction', 'toggle', 'entry', 'incorrect']",{'incorrect': 100}
"['buffer', 'ledger']",{'buffer': 100}
"['bufferreconcile', 'buffer', 'ledger', 'leger', 'cleanupbetter']",{'buffer': 100}
"['reconcile', 'buffer', 'ledger', 'ensure', 'track']",{'buffer': 100}
"['history', 'buffer']",{'buffer': 100}
"['region', 'limit', 'buffer', 'ledger']",{'buffer': 100}
"['ledger', 'problem', 'buffer']",{'buffer': 100}
"['reconcilesaround', 'dirty', 'causedroutine', 'ledger', 'local', 'buffer']",{'buffer': 100}
"['account', 'reconcile', 'buffer', 'point', 'reconciliation', 'reposition']",{'buffer': 100}
"['reconcile', 'buffer', 'ledger', 'ensure']",{'buffer': 100}
"['window', 'reconcile', 'ledgermight', 'reconcile', 'ledger', 'indirectlymight', 'example', 'buffer']",{'buffer': 100}
"['reconcile', 'buffer', 'ledger']",{'buffer': 100}
"['transaction', 'unclear', 'reconciliation', 'buffer']",{'buffer': 100}
"['buffer', 'overlay']",{'buffer': 100}
"['buffer', 'ensure', 'adequate', 'reconciliation', 'cleanup']",{'buffer': 100}
"['efeacrequest', 'reconcile', 'vanicatreconcile', 'buffer', 'random', 'delete']",{'buffer': 100}
"['reconcile', 'buffer', 'random', 'delete']",{'buffer': 100}
"['ability', 'buffer', 'ledger', 'point', 'recon', 'track', 'windowcontrollable', 'reconcile', 'buffer', 'ledger', 'track']",{'buffer': 100}
"['reconcile', 'buffer', 'ledger']",{'buffer': 100}
"['improvement', 'reconcile', 'windowingheight', 'place', 'reconcile', 'bottom', 'ledger', 'minimizes', 'recon', 'windowinforms', 'reconcile', 'bottom', 'buffer', 'ledger', 'transaction', 'window']",{'buffer': 100}
"['format', 'buffer']",{'buffer': 100}
"['mergeaccount', 'enderw', 'request', 'reconcile', 'ledger', 'mergeaccount', 'reconcile', 'ability', 'buffer', 'recon']",{'buffer': 100}
"['reconcile', 'ability', 'buffer', 'recon', 'withoutbalance', 'commanddocumentation', 'update']",{'buffer': 100}
"['ddfecrequest', 'kljohann', 'mergebuild', 'issue']",{'issue': 100}
"['option', 'incorrect']",{'incorrect': 100}
"['print', 'friendlyincludes', 'issue', 'correctright', 'ledger']",{'issue': 100}
"['crash', 'python', 'transaction', 'abort', 'ledger', 'error', 'messagetypeerror', 'string', 'class', 'python', 'boost', 'optionaltransaction', 'callpolicy']",{'crash': 100}
"['issue', 'report', 'ledger']",{'issue': 100}
"['guard', 'assert', 'incorrect']",{'incorrect': 100}
"['proof', 'issue']",{'issue': 100}
"['insensitive', 'metadata']",{'Sensitive': 90}
"['emacscause', 'issue']",{'issue': 100}
"['frame', 'building', 'fomitimpossible', 'trace', 'stack']",{'stack': 100}
"['issue', 'report', 'speed', 'commodity']",{'issue': 100}
"['issue', 'performance']",{'issue': 100}
"['mergerequest', 'oneiric', 'slackoramaoneiric', 'issue']",{'issue': 100}
"['oneiric', 'issue']",{'issue': 100}
"['limit', 'assertion', 'length']",{'length': 100}
"['thanks', 'ledgertransaction', 'whenevercastlerecognize', 'functiontransaction', 'incorrect', 'sincemessage']",{'incorrect': 100}
"['incorrect', 'proof']",{'incorrect': 100}
"['sensitive', 'query', 'separate', 'argumenthappens', 'mimicks', 'mimickshappens', 'command']",{'Sensitive': 100}
"['issue', 'typename']",{'issue': 100}
"['stack', 'context', 'parser']",{'stack': 100}
"['issue', 'reference']",{'issue': 100}
"['method', 'pythonquery', 'journal', 'standard', 'report', 'ledgercollection', 'exampleimport', 'reference', 'countingjournal', 'object', 'destroyedfailswhole', 'crash']",{'crash': 100}
"['python', 'expose']",{'expose': 100}
"['error', 'incorrect']",{'incorrect': 100}
"['issue', 'period', 'string']",{'issue': 100}
"['display', 'issue', 'report']",{'issue': 100}
"['overflow', 'warning']",{'overflow': 100}
"['problem', 'space', 'trailingsingle', 'issue', 'space', 'causedneither']",{'issue': 100}
"['overrun', 'buffer']","{'overrun': 100, 'buffer': 100}"
"['system', 'acprep', 'issue']",{'issue': 100}
"['report', 'buffer', 'ledgerreport', 'buffer', 'ledgerresult', 'report', 'buffer', 'ledgerbuffer', 'function', 'ledger', 'creatededitable', 'report', 'report', 'alters']",{'buffer': 100}
"['report', 'bufferindicate', 'report', 'buffer']",{'buffer': 100}
"['report', 'buffer']",{'buffer': 100}
"['column', 'issue']",{'issue': 100}
"['aware', 'filter', 'contextcertain', 'issue']",{'issue': 100}
"['amount', 'integer']",{'integer': 100}
"['doxygen', 'option', 'generation']",{'generation': 100}
"['python', 'expose', 'commodity']",{'expose': 100}
"['outstanding', 'issue']",{'issue': 100}
"['outstanding', 'issue']",{'issue': 100}
"['string', 'ledger', 'parameter', 'length', 'insteadconst']",{'length': 100}
"['skeleton', 'issue', 'initialevery', 'issue']",{'issue': 100}
"['issue', 'contains']",{'issue': 100}
"['incorrect', 'emacs', 'statement']",{'incorrect': 100}
"['crash', 'memory']",{'crash': 100}
"['valuemember', 'expose']",{'expose': 100}
"['properbuffer', 'ledger', 'reconcile', 'refresh', 'bufferreconcile', 'refresh', 'buffer', 'ledger', 'refresh']",{'buffer': 100}
"['reconcile', 'buffer', 'ledger', 'insteadwrite']",{'buffer': 100}
"['buffer', 'static']",{'buffer': 100}
"['comparison', 'issue']",{'issue': 100}
"['improvement', 'exposure', 'python']",{'Exposure': 100}
