message,fuzzy
"['lookahead', 'happensposition', 'token', 'stack', 'currentfails', 'empty', 'empty', 'reducewithout', 'lookahead', 'tokenassignment', 'reduction', 'movingerror']",{'stack': 100}
"['position', 'incorrect', 'varvar']",{'incorrect': 100}
"['insensitive', 'check', 'keyword', 'emulation']",{'Sensitive': 90}
"['reflection', 'vendor', 'potential', 'framework', 'infection', 'conflict', 'target', 'project', 'mutation', 'suite', 'avoidnamespaces', 'example', 'calld', 'project', 'humbug', 'prefix', 'character', 'scoperabc', 'infection', 'scoper', 'folder', 'mutator', 'vendor', 'mutant', 'vendor', 'class', 'parser', 'gettype', 'nodeabstract', 'prefixingphpparser', 'number', 'length', 'hardcodedphpparsersubstr', 'rtrim', 'return', 'strtrlittle', 'dynamic', 'extractscoperabc', 'phpparser']",{'length': 100}
"['incorrect', 'classexample', 'incorrect', 'alias', 'importsomeclass', 'thingydefine', 'classsomeclass', 'abstract', 'classconflict', 'class', 'abstract', 'alias', 'import']",{'incorrect': 100}
"['lexer', 'tokenoffset', 'encounter', 'error', 'issue']",{'issue': 100}
"['interface', 'method', 'nodevisitorexample', 'update', 'incorrect']",{'incorrect': 100}
"['stack', 'attribute']",{'stack': 100}
"['error', 'emptyresolve', 'issue']",{'issue': 100}
"['function', 'signatureresolve', 'enternode', 'issue']",{'issue': 100}
"['psalm', 'issue']",{'issue': 100}
"['offset', 'support', 'length']",{'length': 100}
"['lexer', 'attributecause', 'multiple', 'issue']",{'issue': 100}
"['special', 'check', 'insensitive', 'class']",{'Sensitive': 90}
"['assignment', 'clarify', 'attributeassign', 'stack', 'attributeplace', 'firstassign', 'position', 'stack', 'positionassign', 'clarify', 'comment', 'attributeinstead']",{'stack': 100}
"['action', 'method', 'semantic', 'attributeminor', 'access', 'performance', 'improvementthough', 'granulity', 'attributecurrentlyaccess', 'stack', 'positionsemstack', 'passedattribute', 'accessible']",{'stack': 100}
"['builder', 'stringarray', 'component', 'supportedarray', 'incorrect', 'usage', 'wouldvariadics']",{'incorrect': 100}
"['reference', 'generation', 'variable', 'prettyprinterdefault']",{'generation': 100}
"['lexer', 'emulativetokenizer', 'incorrect']",{'incorrect': 100}
"['resolver', 'insensitive', 'class']",{'Sensitive': 90}
"['pretty', 'printer', 'associativity', 'pretty', 'printer', 'parenthesisprecedence', 'operator', 'closure', 'issue', 'anotherparenthesis', 'wrappedfunctionprintedfunctionprecedence', 'ordinal', 'closuresystem', 'contains', 'predencemapprint', 'associativity', 'precedence', 'method', 'precedence', 'associativitysimpler', 'pinfixop', 'pprefixop', 'usage', 'pprecclosure', 'issue']",{'issue': 100}
"['switch', 'subnode', 'ordercould', 'issue']",{'issue': 100}
"['expression', 'reference', 'assignrefassign', 'insteadclose', 'issue']",{'issue': 100}
"['generalize', 'generation', 'attributearray', 'lexer', 'token', 'startattributes']",{'generation': 100}
"['lexer', 'injection', 'method']",{'injection': 100}
"['generation', 'finish']",{'generation': 100}
"['float', 'overflow', 'integerfloat', 'integer']","{'overflow': 100, 'integer': 100}"
"['moriyoshi', 'kmyacc', 'issue']",{'issue': 100}
"['number', 'incorrect', 'extraction']",{'incorrect': 100}
"['incorrect', 'usage']",{'incorrect': 100}
"['pretty', 'issue']",{'issue': 100}
"['pretty', 'issue']",{'issue': 100}
"['static', 'access', 'incorrect', 'property', 'dynamic', 'creation']",{'incorrect': 100}
"['access', 'array', 'issue', 'object']",{'issue': 100}
