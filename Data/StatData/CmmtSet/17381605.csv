message,fuzzy
"['zippy', 'buffer', 'optimization', 'revertpiperorigin', 'revid']",{'buffer': 100}
"['platformsnappy', 'issue', 'multi', 'methodportable', 'allocates', 'methodrelies', 'method', 'valid', 'memcpywidth', 'representation', 'integer', 'binary', 'unsignedvalue', 'compile', 'invalid', 'validpointer', 'method', 'addressdereferences', 'expectedhardware', 'instruction', 'compileunless', 'caveat', 'behavior', 'instruction', 'hardware', 'architecturetrigger', 'access', 'hardware', 'pointerblock', 'ifdef', 'attempt', 'restrictsupport', 'method', 'platformseparate', 'instruction', 'architectureexplicit', 'compiler', 'clang', 'wrapping', 'pointer', 'structsremove', 'compiler', 'method', 'enoughcaveat', 'instruction', 'withoutmodern', 'optimizesingle', 'instruction', 'gzgfkpiperorigin', 'revid']","{'issue': 100, 'integer': 100}"
"['sensitive', 'number', 'reworkdynamic', 'snappybenchmark', 'protocol', 'decompressingslightest', 'significant', 'performanceseveral', 'reasonable', 'compiler', 'typicallyoptimization', 'triggeredlayout', 'optimization', 'header', 'cloningfluctuation', 'minor', 'fairlyoptimization', 'preventperformancerelease', 'unblockimprovement', 'optimizer', 'contains', 'genericweakness', 'rotation', 'sensitivity', 'uncoversparticularsimpler', 'terminal', 'condition', 'providesingle', 'versionbenchmark', 'enoughbranch', 'generate', 'protocol', 'buffer', 'structurebenchmark', 'decompressiontrigger', 'simple', 'structuringsevere', 'performance', 'bubblemanage', 'analysissimilar', 'micro', 'architecturecycle', 'removeprevious', 'decompression', 'opportunity', 'changeoptimization', 'generic', 'release', 'disableseemsshown', 'samplebenchmark', 'profile', 'seemsregression', 'release', 'decompressingprotocol', 'bufferregression', 'current', 'release', 'protocol', 'source', 'smallrelease', 'elsewherewithoutbuffer', 'release', 'protocol', 'regress']","{'Sensitive': 100, 'buffer': 100}"
"['library', 'cmake', 'support', 'statichomebrew', 'issue']",{'issue': 100}
"['compiler', 'array', 'wordmask', 'stack', 'internalconvert', 'global', 'array', 'optimization', 'stack', 'temporary', 'changeglobal', 'array', 'stack', 'global', 'array', 'stacktransformation', 'performanceworkingconversionpatch', 'temporary', 'pleasearray', 'source', 'importantallow', 'compiler', 'project', 'global', 'array', 'stack', 'element', 'constassume', 'const', 'compiler', 'enoughaffect', 'significant', 'changeconstant', 'array', 'different', 'initialization', 'slightlydirectlyarraynoise']",{'stack': 100}
"['speed', 'zippy', 'decompression', 'penalty', 'removingglobal', 'arraywhereas', 'global', 'array', 'instructionsingle', 'instruction', 'withoutaccess', 'withoutaccess', 'instructionaccesscause', 'zippy', 'global', 'wordmaskrelative', 'equivalentinstruction', 'increase', 'dynamic', 'countsimilar', 'cycle', 'redactedcausingsmall', 'technique', 'mitigation', 'arraysingle', 'access', 'stack', 'downside', 'pointerfunction', 'extra', 'array', 'stack', 'instructionsmall', 'movingwordmask', 'stack', 'performance', 'number', 'dynamic', 'instruction', 'countalmost', 'prettyregression', 'ivybridge', 'perflab', 'numbermultiple', 'machine', 'improvement', 'numberpositiveblaze', 'binary', 'buildbenchmark', 'insns', 'cyclereasonable', 'problem', 'performance', 'aroundmeasurement', 'update', 'changenumbertestedperformance']",{'stack': 100}
"['bytesource', 'issue', 'varints', 'invalidfailure', 'potential']",{'issue': 100}
"['compiler', 'warning', 'warning', 'studio', 'unsignedvalue', 'return', 'string', 'integer']",{'integer': 100}
"['public', 'issue', 'particular', 'canterbury', 'othersreplacement', 'public', 'domain', 'corpus', 'clearlycharacteristic', 'exactuseful', 'enoughtrunk']",{'issue': 100}
"['public', 'autoconf', 'issue', 'resolvewould', 'problem', 'solvenatural', 'typedef', 'placejsbelltrunk']",{'issue': 100}
"['unsignedpublic', 'issue', 'warning', 'slightlysince', 'comment', 'explanatoryopportunity', 'explainassembler', 'stylistic']",{'issue': 100}
"['public', 'issue', 'document', 'particularstate', 'source', 'appropriatesanjaytrunk']",{'issue': 100}
"['public', 'issue', 'check', 'configuresince', 'seeminglysanjaytrunk']",{'issue': 100}
"['issue', 'platformboard', 'littlereactivate', 'platformreasonsanjaytrunk']",{'issue': 100}
"['public', 'issue', 'warning', 'defaultstillimplementation', 'sourcewould', 'detect', 'erroravoid', 'significant', 'withoutslightlycompression', 'large', 'enable', 'blockstill', 'supportedtrunk']",{'issue': 100}
"['issue', 'update', 'actuallysanjaytrunk']",{'issue': 100}
"['public', 'issue', 'byteswap', 'genericsolaris', 'freebsd', 'includecsilverstrunk']",{'issue': 100}
"['public', 'issue', 'comma', 'removecompiler', 'patch', 'travistrunk']",{'issue': 100}
"['public', 'issue', 'cleanup', 'comment', 'patch', 'patricksanjaytrunk']",{'issue': 100}
"['offset', 'description', 'public', 'issue', 'formatlongest', 'offset', 'insteadinconsistency', 'section', 'headingpatch', 'patrickcsilverstrunk']",{'issue': 100}
"['public', 'issue', 'definition', 'declarationregardingsolaris', 'compiler', 'disregard', 'qualifiersanjaytrunk']",{'issue': 100}
"['issue', 'documentation', 'formatearlier', 'tarantov']",{'issue': 100}
"['public', 'issue', 'mediansince']",{'issue': 100}
"['public', 'issue', 'microbenchmark', 'frameworkgettimeofday', 'return', 'standresult', 'backwards', 'division', 'adjustsnumber', 'iteration', 'platformadjustment', 'window', 'robust', 'clock', 'alreadylater']",{'issue': 100}
"['public', 'issue', 'gettimeofday', 'usingreplace']",{'issue': 100}
"['public', 'issue', 'trickery', 'resetsystem']",{'issue': 100}
"['public', 'issue', 'snappy', 'inclusionautomake']",{'issue': 100}
"['allocation', 'reallocation', 'public', 'issue', 'memoryexcept', 'speed', 'measure', 'snappy', 'algorithm', 'smallreallocation', 'measurement']",{'issue': 100}
"['mingw', 'crash', 'microbenchmark']",{'crash': 100}
"['public', 'issue', 'google', 'gflags', 'google', 'package', 'properlymartin']",{'issue': 100}
"['public', 'issue']",{'issue': 100}
"['public', 'issue', 'werrorautomake']",{'issue': 100}
"['public', 'autodetection', 'issue']",{'issue': 100}
"['public', 'issue', 'somethingcommand', 'libtool']",{'issue': 100}
"['public', 'issue', 'quote']",{'issue': 100}
"['public', 'issue']",{'issue': 100}
