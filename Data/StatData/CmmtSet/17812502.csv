message,fuzzy
"['kotlin', 'updateupdatedchangelogchangelogchangelogdepends', 'kotlin', 'kotlinx', 'datetime', 'sincevalue', 'class', 'kotlin', 'kotlinx', 'datetime', 'issue', 'experimental', 'inline', 'durationvalue', 'kotlin', 'legacymonori', 'antal', 'anthonymonori']",{'issue': 100}
"['close', 'issue']",{'issue': 100}
"['legacy', 'kotlin', 'supportworkaround', 'introduces', 'compiler', 'limitationfunction', 'value', 'parameter', 'default', 'invokedissuereturn', 'close', 'issue']",{'issue': 100}
"['tabledokka', 'issue', 'kotlin']",{'issue': 100}
"['cipher', 'issue', 'androidcipher', 'issue', 'androidsegment', 'completemartin']","{'cipher': 100, 'issue': 100}"
"['hashingsink', 'hashingsource', 'commonhashingsink', 'hashingsource', 'support', 'commonfunction', 'hashingsink', 'common', 'hashingsource', 'supportelement', 'complete', 'hashingimplement', 'hashfunctionworkaround', 'issue', 'restore', 'hashingtestchange', 'implementation', 'random', 'differentchange', 'kotlin', 'expectedbroken', 'kotlin', 'friendly', 'conversionimplementation', 'hashingsourceemptyprivate', 'factory', 'methodhmactest', 'weird', 'internal', 'visibilityktlint', 'issueremove', 'usage', 'experimentalmartin']",{'issue': 100}
"['common', 'buffer']",{'buffer': 100}
"['status', 'threadcheck', 'status', 'threadcheck', 'status', 'threadcheck', 'status', 'thread']",{'thread': 100}
"['ciphersource', 'ciphersinkciphersinkciphersourcesimplify', 'ciphersourcesimplify', 'cipher', 'blocksingle', 'cipher', 'updatecipher', 'source', 'failingwrong', 'segmentempty', 'cipherfailingcondition', 'simplify', 'cipher', 'closemethod', 'dofinal', 'cipher', 'extractrandomcipher', 'failingcipher', 'revert', 'failingreverts', 'commitwould', 'point', 'supportdifficult', 'blockcipher', 'parameterizedocumentation', 'cipher', 'blockdofinal', 'cipher', 'minor', 'stream', 'optimizationreturn', 'getoutputsizestructure', 'standardinlinejavadoccipher', 'sourceclass', 'privatecipher', 'update', 'issue', 'segment', 'usingcomment', 'missingpaddinguseless', 'restriction', 'visibilityconstructor', 'class', 'internal', 'point', 'sinceissuedocumentation', 'cryptographycheckfeedback', 'request', 'applymartin']","{'cipher': 100, 'issue': 100}"
"['mergeegorand', 'square', 'requestactual', 'issue', 'update', 'typealias']",{'issue': 100}
"['actual', 'issue', 'update', 'typealias']",{'issue': 100}
"['removeempty', 'check', 'buffer', 'segment']",{'buffer': 100}
"['buffer', 'native', 'implementation', 'kotlin']",{'buffer': 100}
"['return', 'minimum', 'result', 'numbercontract', 'return', 'close', 'issue']",{'issue': 100}
"['trivial', 'request', 'squaretrivial', 'buffer', 'implementation']",{'buffer': 100}
"['trivial', 'buffer', 'implementation']",{'buffer': 100}
"['buffer', 'class', 'extract', 'timeout']",{'buffer': 100}
"['mergemerge', 'egorand', 'ktlint', 'request', 'squareplatform', 'ktlint', 'issue', 'module']",{'issue': 100}
"['platform', 'ktlint', 'issue', 'module']",{'issue': 100}
"['mergemerge', 'egorand', 'ktlint', 'request', 'squarektlint', 'issue', 'module']",{'issue': 100}
"['ktlint', 'issue', 'module']",{'issue': 100}
"['kotlin', 'egorand', 'request', 'squarekotlinize', 'buffer']",{'buffer': 100}
"['kotlinize', 'buffer']",{'buffer': 100}
"['mergemerge', 'static', 'incorrect', 'egorand', 'request', 'squarejvmstatic', 'couple', 'incorrect', 'usage']",{'incorrect': 100}
"['jvmstatic', 'couple', 'incorrect', 'usage']",{'incorrect': 100}
"['buffer', 'consistent', 'exception', 'consistency', 'bufferrelease', 'signature']",{'buffer': 100}
"['native', 'kotlinplatform', 'consistent', 'acrossaware', 'commonclass', 'buffer']",{'buffer': 100}
"['mergejakew', 'square', 'requestplatform', 'update', 'specific', 'issue', 'annotation']",{'issue': 100}
"['platform', 'update', 'specific', 'issue', 'annotation']",{'issue': 100}
"['integration', 'channel', 'samplefirst', 'sample', 'sourceunsafecursor', 'direct', 'access', 'channelsegment', 'buffer', 'internal', 'wrappingadvantage', 'direct', 'transferto', 'accessbuffer', 'givingbytebuffers']",{'buffer': 100}
"['requestremove', 'method', 'buffer', 'segmentsizes']",{'buffer': 100}
"['method', 'buffer', 'segmentsizesmethod', 'replacedmethod', 'buffer']",{'buffer': 100}
"['usability', 'kotlin', 'improveoperator', 'buffer', 'function']",{'buffer': 100}
"['requestkotlin', 'buffer', 'migrate']",{'buffer': 100}
"['kotlin', 'buffer', 'migratefirst', 'default', 'jvmoverloads']",{'buffer': 100}
"['requestprepare', 'kotlin', 'buffer']",{'buffer': 100}
"['buffer', 'unsafecursor', 'sample', 'sample', 'basicallowwritten', 'accesscircular']",{'buffer': 100}
"['lookingimplement', 'implementingpretty', 'upside', 'interoprequiresquare', 'close', 'issue']",{'issue': 100}
"['unusedminimum', 'length', 'segment', 'amountbehavior', 'validate', 'catch']",{'length': 100}
"['search', 'backwards', 'segment', 'allowproject', 'access', 'oftenrelative', 'buffer', 'insteadspecificallyheavy', 'buffer', 'latestonebyteatatime', 'source', 'method', 'longersecondbehavior', 'benchmark', 'createdsignificant']",{'buffer': 100}
"['performance', 'buffer', 'cursorbuffer', 'cursor', 'backwards', 'efficientcloser', 'current', 'cursor', 'offsetcurrent', 'backwards', 'offsetbuffer', 'cursor', 'benchmark']",{'buffer': 100}
"['unsafe', 'access', 'segmentbuffer', 'access', 'arraylevel', 'appropriateintegration', 'encryption', 'compressionsquare', 'close', 'issue']","{'encryption': 100, 'issue': 100}"
"['correctefficient', 'problem', 'particularboundary', 'iteration', 'segmentsegment', 'necessary', 'smallsegment', 'close', 'issue']",{'issue': 100}
"['string', 'methodsquare', 'close', 'issue']",{'issue': 100}
"['unlikely', 'current', 'reader', 'useful', 'guaranteedifficult', 'certainsquare', 'close', 'issue']",{'issue': 100}
"['mergeericedens', 'master', 'branchericedens', 'masterlimit', 'specify', 'length', 'maximum', 'return']",{'length': 100}
"['limit', 'specify', 'length', 'maximum', 'return']",{'length': 100}
"['throughouthashingsourceforgone', 'polymporphism', 'hashingsink', 'hashingsourceconvincedsquare', 'close', 'issue']",{'issue': 100}
"['respect', 'majorsquare', 'close', 'issue']",{'issue': 100}
"['encode', 'decodesquare', 'close', 'issue']",{'issue': 100}
"['thread', 'watchdogclass', 'people', 'possibleclass', 'unload', 'loader', 'containingsquare', 'close', 'issue']","{'thread': 100, 'issue': 100}"
"['close', 'issue']",{'issue': 100}
"['large', 'readingreproduce', 'square', 'issue']",{'issue': 100}
"['requestbuilt', 'length', 'document']",{'length': 100}
"['length', 'document']",{'length': 100}
"['deflater', 'expose']",{'expose': 100}
"['requestlarge', 'hashingsource', 'incorrect', 'major']",{'incorrect': 100}
"['large', 'hashingsource', 'incorrect', 'majorsegment', 'traversingbuffer', 'problem', 'althoughuniform', 'bufferuniform']",{'incorrect': 100}
"['endswith', 'startswith', 'indexofsquare', 'close', 'issue']",{'issue': 100}
"['close', 'issue']",{'issue': 100}
"['close', 'issue']",{'issue': 100}
"['maximumwrites', 'timeouts', 'large', 'entire', 'couldsingle', 'subject', 'writewrite', 'chunk', 'splittimeout', 'granular', 'chunkfails', 'trigger', 'completesquare', 'okhttp', 'issue']",{'issue': 100}
"['socketcompatible', 'backwardsextends', 'changechange', 'addresssquare', 'okhttp', 'issue']",{'issue': 100}
"['digit', 'empty', 'eofexception', 'composingokhttp', 'square', 'close', 'issue']",{'issue': 100}
"['writablesegment', 'everyempty', 'important', 'segmentaround', 'insidesquare', 'close', 'issue']",{'issue': 100}
"['sharedowner', 'sharedwritten', 'segmentowner', 'segment', 'falsebuffer', 'share', 'array', 'backingimmutable', 'random', 'instance', 'reading', 'supportrandom', 'efficient', 'segmentefficiency', 'significantbuffer', 'single', 'important', 'operation', 'whenever', 'rightwritten', 'buffer', 'multipleprivate', 'buffer', 'copytoarray', 'segment']",{'buffer': 100}
"['cdedc', 'mergebenchmark', 'tinkerware', 'buffer', 'benchmark']",{'buffer': 100}
"['buffer', 'benchmarkbuffer', 'response', 'common', 'microbenchmarks', 'measure', 'benchmark', 'operation', 'request', 'scenario', 'server', 'performancebuffer', 'metal', 'regression', 'pedal', 'useful', 'subtle', 'realistic', 'performance', 'otherwisesimulates', 'response', 'assumption', 'service', 'worker', 'performance', 'configurable', 'assumes', 'preference', 'server', 'reasonable', 'withoutbuffer', 'response', 'responsefactor', 'number']",{'buffer': 100}
"['requestimplement', 'buffer']",{'buffer': 100}
"['buffer', 'revert', 'sourcereverts']",{'buffer': 100}
"['ascii', 'consistingfaster', 'desktopruntime', 'length', 'linear', 'benchmarknativeencodergetbytesnativeencodergetbytesfaster', 'dalvikvm', 'substantiallyruntime', 'length', 'linear', 'benchmarkgetbytesnativeencodergetbytesnativeencoder']",{'length': 100}
"['mergelayer', 'buffer', 'request', 'squarebuffer', 'source']",{'buffer': 100}
"['buffer', 'source']",{'buffer': 100}
"['wrapper', 'versionbehavior', 'semantics', 'ensures', 'buffer']",{'buffer': 100}
"['buffer', 'fulfillwould']",{'buffer': 100}
"['request', 'square', 'arrayvariant', 'length', 'parity']",{'length': 100}
"['length', 'parity']",{'length': 100}
"['requestimplement', 'buffer', 'output']",{'buffer': 100}
"['buffer', 'output']",{'buffer': 100}
"['socket', 'writesocket', 'watchdogsquare', 'okhttp', 'issue']",{'issue': 100}
"['requestexternal', 'buffer']",{'buffer': 100}
"['requestexternal', 'buffer']",{'buffer': 100}
"['exhaust', 'gzipsourcesquare', 'okhttp', 'issue']",{'issue': 100}
"['contains', 'input', 'decodingpaddingdetail', 'issue', 'performance', 'array', 'outputwhenever']",{'issue': 100}
"['stillcombine', 'datainputstream', 'method', 'bunchrefill', 'buffer', 'actingfollow', 'migrate', 'continuesimplify']",{'buffer': 100}
"['buffer', 'stuff', 'indexoftimeout', 'linear', 'indexof']",{'buffer': 100}
