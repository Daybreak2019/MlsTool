message,fuzzy
"['mergerequest', 'chapsuk', 'readme', 'example', 'generation']",{'generation': 100}
"['readme', 'example', 'generation']",{'generation': 100}
"['string', 'issue']",{'issue': 100}
"['optimizeshort', 'storywritebyte', 'application', 'buffer', 'functionexample', 'buffer', 'lexer', 'providingfflexer', 'ffjson', 'pquerna', 'fflibbuffer', 'ffjson', 'pquerna', 'fflibbuffer', 'ffjson', 'pquerna', 'fflibfflexer', 'ffjson', 'pquerna', 'fflibffjson', 'pquerna', 'fflib', 'ffreaderbuffer', 'ffjson', 'pquerna', 'fflibffjson', 'pquerna', 'fflibfflexer', 'ffjson', 'pquerna', 'investigationlexer', 'writebyte', 'heavilylexnumber', 'hotspot', 'parsingwritebyte', 'character', 'number', 'timestamps', 'document', 'containednumberwritebyte', 'patch', 'character', 'entire', 'similarchange', 'profilefflexer', 'ffjson', 'pquerna', 'fflibfflexer', 'ffjson', 'pquerna', 'fflibffjson', 'pquerna', 'fflib', 'ffreaderffjson', 'pquerna', 'fflibbuffer', 'ffjson', 'pquerna', 'fflibfflexer', 'ffjson', 'pquerna', 'fflibbuffer', 'ffjson', 'pquerna', 'fflibbuffer', 'ffjson', 'pquerna']",{'buffer': 100}
"['original', 'force', 'package', 'regeneration']",{'generation': 91}
"['original', 'force', 'package', 'regeneration']",{'generation': 91}
"['internal', 'buffer', 'avoidslice', 'string', 'writejson']",{'buffer': 100}
"['mergeklauspost', 'encoder', 'request', 'buffer', 'fallbackbuffer', 'encoder', 'fallback']",{'buffer': 100}
"['mergeklauspost', 'encoder', 'buffer', 'ffjson']",{'buffer': 100}
"['mergepquerna', 'encoder', 'buffer', 'master', 'ffjson']",{'buffer': 100}
"['wrong', 'buffer']",{'buffer': 100}
"['issue', 'ffjson', 'pquerna']",{'issue': 100}
"['badcascratch', 'pquerna', 'request', 'formatscratch', 'format', 'buffer', 'power']",{'buffer': 100}
"['deaadpquerna', 'klauspost', 'reuse', 'request', 'buffer', 'mergebuffer']",{'buffer': 100}
"['buffer', 'stress', 'reuseaddition', 'reusecustom', 'separate', 'usingrequire', 'fflib']",{'buffer': 100}
"['string', 'issue', 'omitemptyissue', 'pquerna', 'pointer', 'value', 'ffjson', 'omitemptyissue', 'pquerna', 'different', 'value', 'ffjsonissue', 'pquerna', 'string', 'pointer', 'ffjsonissue', 'disabledissue', 'pquerna', 'decoder', 'decode', 'value', 'ffjson', 'attemptingissue', 'pquerna', 'string', 'decoder', 'support']",{'issue': 100}
"['issue', 'nodecoder', 'noencoder', 'commandline', 'generation', 'ffjson', 'optiondisable', 'struct', 'comment', 'commandline', 'option']","{'issue': 100, 'generation': 100}"
"['klauspost', 'request', 'generation']",{'generation': 100}
"['simple', 'generation']",{'generation': 100}
"['mergeklauspost', 'request', 'order', 'outputconsistent', 'generation', 'output']",{'generation': 100}
"['expose', 'structs', 'delete']",{'expose': 100}
"['integer', 'input']",{'integer': 100}
"['error', 'overrun', 'buffer']","{'overrun': 100, 'buffer': 100}"
"['expose', 'interface']",{'expose': 100}
"['buffer', 'number']",{'buffer': 100}
"['situation', 'interface', 'buffer', 'pointer']",{'buffer': 100}
"['buffer', 'local', 'output']",{'buffer': 100}
"['buffer', 'default', 'output']",{'buffer': 100}
"['float', 'generation', 'array']",{'generation': 100}
