message,fuzzy
"['comment', 'length']",{'length': 100}
"['nginx', 'configs', 'update', 'sample', 'utilizenginx', 'openssl']",{'OpenSSL': 100}
"['ffccf', 'mergerequest', 'cleanup', 'policy', 'stackstorm', 'mergemethod', 'clean', 'concurrency']",{'concurren': 90}
"['cleanup', 'changelog', 'policy', 'concurrency', 'entry']",{'concurren': 90}
"['clean', 'concurrencymethod', 'concurrency', 'policy', 'removemethod']",{'concurren': 90}
"['vulnerability', 'eventlet', 'security', 'version', 'revertreverts', 'commitsince', 'eventlet', 'upgrade', 'gunicorn', 'reverteventlet']",{'Security': 100}
"['security', 'version', 'eventlet', 'vulnerabilitysince', 'functionality', 'utilize', 'websockets']",{'Security': 100}
"['config', 'registration', 'expose', 'update', 'optionfunctionparse', 'placeimport', 'option', 'affectaffect', 'legacy', 'import', 'option', 'workaround', 'comment', 'workaroundrequire']",{'expose': 100}
"['befaa', 'mergerequest', 'support', 'issue', 'template', 'stackstorm', 'mergesupport', 'issue', 'template']",{'issue': 100}
"['support', 'issue', 'template']",{'issue': 100}
"['issue', 'virtualenv']",{'issue': 100}
"['issue', 'nginx']",{'issue': 100}
"['fixate', 'updatefixate', 'update', 'simplejson', 'pythonrednose', 'version', 'update', 'attemptedrandomwords', 'version', 'update', 'ipaddr', 'module', 'ipaddress', 'updateupdate', 'considers', 'multiple', 'requirement', 'versionversion', 'multiple', 'dependency', 'multiple', 'dependency', 'multiple', 'dependency', 'multiple', 'dependency', 'multiple', 'dependency', 'requirementversion', 'updateinstall', 'libyaml', 'pyyamlpyparsingimport', 'exceptolder', 'modify', 'requirement', 'completelyexplicit', 'removeconflict', 'resolver', 'legacy', 'exact', 'specify', 'versionrequest', 'conflict', 'urllib', 'security', 'specifyingrequest', 'conflict', 'urllib', 'security', 'specifyingsttests', 'version', 'updateisort', 'updatevirtualenv', 'updateinstate', 'setuptools', 'upgrade', 'virtualenv', 'versionvirtualenv', 'reviewcognifloyd', 'jacob', 'trailingupdaterequirement', 'updateforce', 'check', 'updateauthoredcognifloyd', 'jacob']",{'Security': 100}
"['message', 'unncessary', 'churn', 'incorrect', 'removeactionexception', 'error']",{'incorrect': 100}
"['update', 'routerrequest', 'invalid', 'contains', 'incorrectlyscenario', 'original', 'previouslystack', 'error', 'traceissue', 'relatedwebapp', 'issue']",{'issue': 100}
"['mergeorchestral', 'request', 'nginx', 'ashwini', 'configuration', 'nginx', 'header', 'security']",{'Security': 100}
"['issue', 'format']",{'issue': 100}
"['issue', 'format']",{'issue': 100}
"['configuration', 'nginx', 'header', 'security']",{'Security': 100}
"['issue', 'trigger', 'workaround']",{'issue': 100}
"['config', 'expose', 'option', 'constant', 'patch', 'levelperform', 'compatibility']",{'expose': 100}
"['issue', 'address']",{'issue': 100}
"['mergerequest', 'russell', 'master', 'christopher', 'mergecrash', 'depth', 'mongodb', 'issue', 'ststream', 'ticket']",{'issue': 100}
"['patch', 'troubleshoot', 'issue', 'temporary', 'travis']",{'issue': 100}
"['astroid', 'pylint', 'version', 'updateaddress', 'issue', 'pylint', 'update', 'dependency', 'astroid', 'version']",{'issue': 100}
"['sample', 'generation', 'option', 'configorder', 'deterministic', 'option']",{'generation': 100}
"['minor', 'issue', 'stauth']",{'issue': 100}
"['permission', 'stackstorm', 'contributor']",{'permission': 100}
"['issue', 'stackstorm', 'orquesta']",{'issue': 100}
"['mergestackstorm', 'request', 'mergedefault', 'expose']",{'expose': 100}
"['default', 'expose']",{'expose': 100}
"['baffa', 'fdafd', 'mergerequest', 'stackstorm', 'codecove', 'hotfix', 'coverage', 'mergecodecov', 'issue']",{'issue': 100}
"['codecov', 'issue']",{'issue': 100}
"['aacbfab', 'mergerequest', 'issue', 'bugfix', 'bishopbm']",{'issue': 100}
"['aacbfab', 'mergebranch', 'issue', 'master', 'bugfix']",{'issue': 100}
"['github', 'issue', 'permission', 'minimal', 'stackstorm', 'triage', 'contributor']","{'issue': 100, 'permission': 100}"
"['acffec', 'mergebranch', 'issue', 'master', 'bugfix']",{'issue': 100}
"['mergebranch', 'issue', 'master', 'bugfix']",{'issue': 100}
"['version', 'orquesta', 'retry', 'updatefailure', 'appropriate', 'patch', 'issue', 'transition', 'update', 'orquesta', 'version']",{'issue': 100}
"['mergerequest', 'issue', 'filter', 'winem']",{'issue': 100}
"['mergebranch', 'issue', 'filter', 'winem']",{'issue': 100}
"['mergebranch', 'issue', 'filter', 'master']",{'issue': 100}
"['issue', 'string', 'bugfix', 'unicodepossible', 'return', 'wrongissue', 'happensubstitution', 'string', 'unicode', 'pythonseparate', 'solutionmisterpah']",{'issue': 100}
"['flake', 'stcommon', 'issue', 'updatecognifloyd', 'jacob']",{'issue': 100}
"['issue', 'version', 'setuptools']",{'issue': 100}
"['message', 'troubleshoot', 'concurrent', 'error', 'return']",{'concurrent': 100}
"['permission', 'workaround', 'travis', 'integrationpossible', 'permission', 'adjustparent']",{'permission': 100}
"['permission', 'workaround']",{'permission': 100}
"['permission', 'workaround', 'xenial']",{'permission': 100}
"['stackstorm', 'issue', 'updatecontribute', 'stackstorm']",{'issue': 100}
"['various', 'connection', 'updateerror', 'connectionlower', 'value', 'wouldsimilar', 'error', 'fatal', 'ensure', 'timeout']",{'fatal': 100}
"['fdecb', 'mergerequest', 'sendmail', 'issue', 'stevemuskiewicz']",{'issue': 100}
"['length', 'assertequal']",{'length': 100}
"['streactor', 'utilize', 'concurrency', 'update']",{'concurren': 90}
"['fcaea', 'mergebranch', 'remote', 'origin', 'issue', 'master']",{'issue': 100}
"['mergerequest', 'issue', 'stackstorm', 'install', 'mergeinstall']",{'issue': 100}
"['mergecontent', 'infinity', 'request', 'bugfix', 'length', 'nmaludy', 'mergecontent', 'message', 'generator', 'value', 'return', 'length']",{'length': 100}
"['mergebranch', 'content', 'infinity', 'master', 'bugfix', 'length']",{'length': 100}
"['mergestackstorm', 'request', 'mergegithub', 'issue', 'template', 'security']","{'issue': 100, 'Security': 100}"
"['mergebranch', 'content', 'infinity', 'master', 'bugfix', 'length']",{'length': 100}
"['issue', 'improvement', 'github']",{'issue': 100}
"['mergebranch', 'content', 'infinity', 'master', 'bugfix', 'length']",{'length': 100}
"['concurrency', 'orquesta', 'cancelation', 'integration', 'delete', 'concurrent', 'orquesta', 'concurrency', 'subset']","{'concurren': 90, 'concurrent': 100}"
"['returnvalue', 'content', 'message', 'generator', 'chain', 'length']",{'length': 100}
"['minor', 'issue', 'optional', 'argument', 'minor', 'issue', 'argument']",{'issue': 100}
"['request', 'changelog', 'library', 'upgrade', 'requirement', 'entryrequest', 'issue', 'upgrade', 'entrylibrary', 'requirement']",{'issue': 100}
"['update', 'library', 'versionrequest', 'issue', 'update', 'library', 'requirement', 'version']",{'issue': 100}
"['empty', 'value', 'string', 'orquesta', 'returnempty', 'patch', 'issue', 'datastore', 'return', 'stackstorm', 'string', 'value', 'orquesta', 'error', 'function', 'nonetype']",{'issue': 100}
"['mergestackstorm', 'request', 'mergeshell', 'injection', 'action', 'command']",{'injection': 100}
"['status', 'policy', 'constant', 'altogether', 'unncessary', 'policy', 'action', 'execution', 'record', 'scheduler', 'traffic', 'concurrency']",{'concurren': 90}
"['possible', 'injection', 'shell']",{'injection': 100}
"['nginx', 'incorrect', 'example', 'rewrite', 'stream', 'controller']",{'incorrect': 100}
"['permission', 'check', 'correctstackstorm']",{'permission': 100}
"['error', 'permission']",{'permission': 100}
"['decryption', 'update', 'datastore', 'scopedjinja', 'value']",{'encryption': 90}
"['dependency', 'bcrypt']",{'bcrypt': 100}
"['baada', 'mergestackstorm', 'request', 'mergephase', 'service', 'error', 'fatal', 'debug', 'bootstrap']",{'fatal': 100}
"['internal', 'service', 'trigger', 'error', 'fatal', 'startupdebug', 'registration']",{'fatal': 100}
"['issue', 'sseclient', 'upgrade', 'revert', 'reportedsseclient', 'btubbs']",{'issue': 100}
"['ecffc', 'mergestackstorm', 'request', 'mergeregistry', 'issue', 'registration', 'temporary', 'service']",{'issue': 100}
"['stderr', 'issue', 'stdout', 'string', 'pythonnever']",{'issue': 100}
"['mergestackstorm', 'request', 'mergetreat', 'driver', 'statsd', 'fatal', 'metric']",{'fatal': 100}
"['generic', 'notifier', 'service', 'regression', 'trigger', 'state', 'custom', 'completedoption', 'configissue', 'inadverentlystackstormhiroyasu', 'ohyama', 'issue', 'userlocalhost']",{'issue': 100}
"['incorrect', 'integrationorder', 'integrationinstallcreate', 'virtualenvtestcase']",{'incorrect': 100}
"['incorrect', 'renderaddeddummy']",{'incorrect': 100}
"['issue', 'stackstorm', 'incorrect', 'rendercauseparent', 'configuration', 'action', 'differentparent', 'configuration', 'child', 'reference', 'action']","{'issue': 100, 'incorrect': 100}"
"['config', 'expose', 'travis', 'update', 'configure', 'rabbitmqlistenerdefault']",{'expose': 100}
"['process', 'refactor', 'schedulerproper', 'scheduler', 'thread', 'retries', 'connection', 'handler', 'refactor', 'process', 'return']",{'thread': 100}
"['mergerequest', 'scheduler', 'stackstorm', 'concurrency', 'mergepolicy', 'concurrency', 'scheduler']",{'concurren': 90}
"['policy', 'concurrency', 'schedulerfailure', 'current', 'policy', 'result', 'concurrency']",{'concurren': 90}
"['update', 'service', 'exclude', 'bootstrap', 'entryaudit', 'message', 'levelmessage', 'issue', 'audit', 'duplicate', 'production', 'avoiddeployment', 'default', 'level', 'productionservice', 'audit', 'messageaudit', 'levelalready', 'audit', 'auditmessage', 'audit', 'service', 'leveldebug']",{'issue': 100}
"['function', 'correctlyunicode', 'incorrect', 'length', 'resultedencryption', 'actualthanks', 'dswebbthg', 'reportingresolve']","{'incorrect': 100, 'length': 100}"
"['vulnerability', 'security', 'upgrade', 'gnupg', 'dependency', 'pythonvulnerability', 'gnupg', 'pythonsecurity', 'library', 'tarball', 'debug', 'isolatedpassphrase']",{'Security': 100}
"['issue', 'permission', 'travis']","{'issue': 100, 'permission': 100}"
"['permission', 'travis', 'workaround', 'xenial', 'revertreverts']",{'permission': 100}
"['xenial', 'permission', 'workaround', 'travis']",{'permission': 100}
"['xenial', 'permission', 'workaround', 'travis']",{'permission': 100}
"['install', 'openssl']",{'OpenSSL': 100}
"['issue', 'filewatchsensormitigate', 'tailer', 'avoidinitializeddispatch', 'trigger', 'usinginvalid', 'trigger', 'reference']",{'issue': 100}
"['mergestackstorm', 'request', 'mergeissue', 'report', 'section', 'security', 'readme']",{'Security': 100}
"['section', 'issue', 'security', 'report']","{'issue': 100, 'Security': 100}"
"['method', 'expose', 'update', 'consistent']",{'expose': 100}
"['overflow', 'fibonacci', 'sensorlargelarger']",{'overflow': 100}
"['bdcefd', 'mergestackstorm', 'request', 'mergedefinition', 'issue', 'loader', 'compatibility', 'python']",{'issue': 100}
"['definition', 'issue', 'loader', 'compatibility', 'python']",{'issue': 100}
"['fbdfea', 'mergerequest', 'policy', 'stackstorm', 'concurrency', 'mergerandom', 'concurrency', 'policy', 'failure']",{'concurren': 90}
"['global', 'class', 'reset', 'coordinatorsince', 'setup', 'global', 'reset', 'coordinator', 'default', 'return', 'concurrency', 'ensure']",{'concurren': 90}
"['random', 'concurrency', 'policy', 'failurerobustness', 'mechanism', 'coordinator', 'policy', 'concern', 'failure', 'driver', 'processing', 'publisher', 'queue']",{'concurren': 90}
"['runner', 'mistralsetup', 'teardown', 'thread', 'point', 'process', 'handler', 'scheduler', 'globals', 'liveaction', 'entry', 'delay', 'assumes', 'refactor']",{'thread': 100}
"['migrate', 'scheduler', 'queuequeuer', 'thread', 'createsqueuer', 'action', 'queue', 'placeschedule', 'queue', 'handler']",{'thread': 100}
"['issue', 'changelog']",{'issue': 100}
"['ccdcecb', 'mergebranch', 'master', 'mergecommits', 'mastercheck', 'version', 'distro', 'pythoncompile', 'updateaccount', 'check', 'present', 'stctl', 'mistral', 'block', 'flask', 'serverargument', 'developer', 'allowdepends', 'flask', 'sensorfibonacci', 'python', 'sensorpythonmongo', 'instrumentation', 'rabbit', 'revertexecution', 'exception', 'version', 'raising', 'action', 'orquesta', 'result', 'conditional', 'timerconfig', 'timer', 'issue', 'option', 'enginecommon', 'timer', 'option', 'stnotifier', 'timezone', 'class', 'localdebug', 'removepython']",{'issue': 100}
"['block', 'flask', 'serversince', 'thread']",{'thread': 100}
"['acdac', 'mergebranch', 'master', 'mergemasterspecify', 'timerconfig', 'timer', 'issue', 'option', 'enginecommon', 'timer', 'option', 'stnotifier', 'timezone', 'class', 'launchdevgunicorn', 'launchdev', 'launchdev', 'virtualenv', 'variableconfig', 'option', 'garbagevirtualenv', 'environment', 'variable', 'allowinvoke', 'orquesta', 'workflow', 'completion', 'runnerworkflow', 'cascade', 'orquesta', 'contextfailure', 'minor', 'troubleshootmethod', 'iterate', 'stcommon']",{'issue': 100}
"['acdac', 'cccab', 'mergebranch', 'master', 'mergemasterspecify', 'timerconfig', 'timer', 'issue', 'option', 'enginecommon', 'timer', 'option', 'stnotifier', 'timezone', 'class', 'launchdevgunicorn', 'launchdev', 'launchdev', 'virtualenv', 'variableconfig', 'option', 'garbagevirtualenv', 'environment', 'variable', 'allowmethod', 'iterate', 'stcommon']",{'issue': 100}
"['config', 'timer', 'issue', 'option', 'enginesection', 'advertise', 'timersengine', 'preferredconfig', 'timer', 'service', 'wouldspecify', 'timersengine', 'section', 'optiondefault', 'section', 'option', 'explicitlytimersengine', 'precedencestreactor', 'ababafeababdecf', 'stackstorm']",{'issue': 100}
"['concurrent', 'action', 'execution', 'schedulingexecution', 'record', 'conflict', 'control', 'schedule', 'action', 'multiple', 'decorator', 'granular', 'retry']",{'concurrent': 100}
"['mergeparamiko', 'request', 'upgrade', 'stackstorm', 'mergeparamiko', 'vulnerable', 'version', 'update']",{'vulnerable': 100}
"['vulnerable', 'version', 'update']",{'vulnerable': 100}
"['datastore', 'rename', 'module', 'cryptorename', 'crypto', 'module']",{'crypto': 100}
"['counterobject', 'issue', 'cache', 'memory', 'causescenario', 'unique', 'counter']",{'issue': 100}
"['content', 'length', 'support', 'histogram', 'gaugemetric']",{'length': 100}
"['generation', 'prefix']",{'generation': 100}
"['instance', 'script', 'trigger', 'injection', 'comparedindicates', 'paralell', 'script', 'likelydesiredthroughput']",{'injection': 100}
"['cryptography', 'update', 'library', 'security', 'versionefbfbffacfabef', 'commits', 'cryptography']",{'Security': 100}
"['default', 'value', 'changeoption', 'configpayload', 'webhook', 'trigger', 'configsince', 'issue', 'various', 'catch']",{'issue': 100}
"['aebfe', 'mergebranch', 'master', 'mergemastercontent', 'simplifyupdatecontent', 'multipart', 'webhooks', 'blacklist', 'endpointeventlet', 'workaroundconductor', 'state', 'support', 'update', 'orchestra', 'refactor', 'interface', 'machine']",{'blacklist': 100}
"['mergeconfig', 'request', 'permission', 'stackstorm', 'mergedirectory', 'permission', 'config']",{'permission': 100}
"['mergebranch', 'config', 'permission', 'master']",{'permission': 100}
"['badbb', 'mergerequest', 'check', 'issue', 'orchestra', 'stackstorm', 'mergeorchestra']",{'issue': 100}
"['refactor', 'permission', 'weird']",{'permission': 100}
"['permission', 'tweak', 'weird']",{'permission': 100}
"['ddeff', 'mergebranch', 'config', 'permission', 'master']",{'permission': 100}
"['mergebranch', 'check', 'issue', 'orchestra', 'master']",{'issue': 100}
"['mergebranch', 'check', 'issue', 'orchestra', 'master']",{'issue': 100}
"['adaecf', 'mergebranch', 'config', 'permission', 'master']",{'permission': 100}
"['baaba', 'mergebranch', 'config', 'permission', 'master']",{'permission': 100}
"['mergebranch', 'config', 'permission', 'master']",{'permission': 100}
"['bceeee', 'mergebranch', 'config', 'permission', 'master']",{'permission': 100}
"['directory', 'permission', 'insecure', 'config']","{'permission': 100, 'insecure': 100}"
"['mergestackstorm', 'request', 'mergekeyczar', 'decryption', 'cryptography', 'library', 'symmetric', 'encryption']",{'encryption': 100}
"['issue', 'template']",{'issue': 100}
"['crypto', 'generate', 'update', 'cryptography', 'symmetric', 'utiliturandom', 'generate', 'symmetric', 'primitivekeyczar', 'compatible']",{'crypto': 100}
"['dedff', 'mergerequest', 'integration', 'issue', 'stackstorm', 'metric', 'mergeinitial', 'metric']",{'issue': 100}
"['eccacaf', 'mergerequest', 'issue', 'stackstorm', 'metric', 'mergecollection', 'metric']",{'issue': 100}
"['eccacaf', 'mergebranch', 'issue', 'stackstorm', 'master', 'metric']",{'issue': 100}
"['fbabd', 'daaae', 'mergebranch', 'issue', 'stackstorm', 'master', 'metric']",{'issue': 100}
"['mergebranch', 'issue', 'stackstorm', 'master', 'metric']",{'issue': 100}
"['mergestackstorm', 'request', 'update', 'issue', 'readme']",{'issue': 100}
"['cefef', 'mergebranch', 'issue', 'stackstorm', 'master', 'metric']",{'issue': 100}
"['permission', 'isolation', 'resource']",{'permission': 100}
"['permission', 'isolation']",{'permission': 100}
"['mergebranch', 'issue', 'stackstorm', 'master', 'metric']",{'issue': 100}
"['template', 'issue']",{'issue': 100}
"['mergebranch', 'issue', 'stackstorm', 'master', 'metric']",{'issue': 100}
"['template', 'issue']",{'issue': 100}
"['mergebranch', 'issue', 'stackstorm', 'master', 'metric']",{'issue': 100}
"['mergestackstorm', 'request', 'mergegroup', 'issue', 'remote', 'local', 'concurrent', 'authentication']","{'issue': 100, 'concurrent': 100}"
"['stauth', 'concurrent', 'group', 'handler']",{'concurrent': 100}
"['mergebranch', 'issue', 'stackstorm', 'master', 'metric']",{'issue': 100}
"['ddbbb', 'mergebranch', 'issue', 'stackstorm', 'master', 'metric']",{'issue': 100}
"['dcbcdd', 'mergebranch', 'master', 'mergemasterrelease', 'changelog', 'updatesttests', 'encryption', 'value', 'configcomment', 'foundupdatestrictergrant', 'observer']",{'encryption': 100}
"['ffefc', 'mergesttests', 'stackstorm', 'request', 'mergesttests', 'encryption', 'value', 'config']",{'encryption': 100}
"['sttests', 'encryption', 'value', 'configprovides', 'config', 'patch', 'sttests', 'encryption']",{'encryption': 100}
"['mergestackstorm', 'request', 'mergegrant', 'observer', 'permission']",{'permission': 100}
"['permission', 'isolation']",{'permission': 100}
"['execution', 'isolation', 'permission', 'action', 'resource']",{'permission': 100}
"['execption', 'permission']",{'permission': 100}
"['permission', 'isolation']",{'permission': 100}
"['edcdae', 'mergebranch', 'issue', 'stackstorm', 'master', 'metric']",{'issue': 100}
"['mergebranch', 'issue', 'stackstorm', 'master', 'metric']",{'issue': 100}
"['mergebranch', 'issue', 'stackstorm', 'master', 'metric']",{'issue': 100}
"['support', 'database', 'coordinatedmodel', 'mongodb', 'thread', 'multiple', 'condition', 'revision']",{'thread': 100}
"['cdcdbbd', 'mergebranch', 'issue', 'stackstorm', 'master', 'metric']",{'issue': 100}
"['ccdda', 'mergebranch', 'issue', 'stackstorm', 'master', 'metric']",{'issue': 100}
"['adffae', 'mergebranch', 'issue', 'stackstorm', 'master', 'metric']",{'issue': 100}
"['efaee', 'mergeparams', 'request', 'stdin', 'issue', 'stackstorm', 'large', 'mergestdin', 'params']",{'issue': 100}
"['mergebranch', 'params', 'stdin', 'issue', 'stackstorm', 'master']",{'issue': 100}
"['issue', 'pythonpathdelete', 'entry', 'activate']",{'issue': 100}
"['ffadab', 'mergebranch', 'params', 'stdin', 'issue', 'stackstorm', 'master']",{'issue': 100}
"['variable', 'incorrect']",{'incorrect': 100}
"['mergebranch', 'params', 'stdin', 'issue', 'stackstorm', 'master']",{'issue': 100}
"['method', 'endpoint', 'argumentperform', 'permission', 'check']",{'permission': 100}
"['mergerequest', 'nikosvlagoidis', 'integer', 'mergesensor', 'example', 'update', 'flask']",{'integer': 100}
"['mergebranch', 'master', 'nikosvlagoidis', 'integer']",{'integer': 100}
"['cache', 'logger', 'update', 'utility', 'functionmessage', 'issue', 'runner', 'python']",{'issue': 100}
"['permission', 'reference', 'updateparticular']",{'permission': 100}
"['global', 'exception', 'permission', 'resourceoperate', 'particular', 'resource']",{'permission': 100}
"['issue', 'return', 'endpoint', 'errorcontain']",{'issue': 100}
"['dependency', 'function', 'removeparty', 'issue', 'library', 'compatibility', 'breakrunner', 'python']",{'issue': 100}
"['common', 'support', 'expose']",{'expose': 100}
"['parent', 'permission', 'inquiry', 'inheritance', 'workflowoswalt']",{'permission': 100}
"['permission', 'description', 'inquiry', 'updatedoswalt']",{'permission': 100}
"['permission', 'inquiry', 'global', 'changedoswalt']",{'permission': 100}
"['extra', 'issue', 'inquiry', 'subcommands', 'fixedoswalt']",{'issue': 100}
"['clearer', 'refactor', 'permission', 'logicoswalt']",{'permission': 100}
"['schema', 'permission', 'inquiryoswalt']",{'permission': 100}
"['issue', 'changelog', 'shutdown', 'mistral', 'entryissue', 'changelog', 'upstream', 'shutdown', 'mistral', 'systemd', 'entry']",{'issue': 100}
"['stderr', 'reading', 'stdout', 'processfunctionalitygreen', 'reading', 'thread', 'finishstderr', 'streamsometimes', 'outputthread', 'stream', 'greenaction', 'timeout']",{'thread': 100}
"['function', 'permission']",{'permission': 100}
"['stream', 'permission', 'stackstorm', 'cherry']",{'permission': 100}
"['resume', 'mistral', 'pause', 'runnersupport', 'patch', 'resume', 'functionality', 'expose', 'mistral', 'pause']",{'expose': 100}
"['stream', 'permission']",{'permission': 100}
"['mergerequest', 'issue', 'stclient', 'stackstorm', 'stream', 'mergeability', 'stream']",{'issue': 100}
"['remote', 'origin', 'issue', 'stclient', 'master', 'stream']",{'issue': 100}
"['permission', 'revertreverts']",{'permission': 100}
"['mergebranch', 'issue', 'stclient', 'master', 'stream']",{'issue': 100}
"['behaviour', 'limitation', 'security', 'modify', 'setting', 'cookeimplementation', 'inconsistency', 'whole', 'concept', 'responsiveness', 'community', 'browserproblem', 'wildcard', 'origin', 'access', 'control']",{'Security': 100}
"['mergebranch', 'issue', 'stclient', 'master', 'stream']",{'issue': 100}
"['fedace', 'mergebranch', 'remote', 'origin', 'issue']",{'issue': 100}
"['remote', 'origin', 'issue']",{'issue': 100}
"['issue', 'changelog', 'github', 'number']",{'issue': 100}
"['syntax', 'changelog', 'issue']",{'issue': 100}
"['febdcff', 'mergerequest', 'parse', 'issue', 'stackstorm', 'percent', 'mergemessage', 'various', 'debug']",{'issue': 100}
"['mergebranch', 'parse', 'issue', 'master', 'percent']",{'issue': 100}
"['mergebranch', 'issue', 'stclient', 'master', 'stream']",{'issue': 100}
"['corresponding', 'update', 'endpointgrantquery', 'output', 'usefulgrant', 'permission']",{'permission': 100}
"['permission', 'update']",{'permission': 100}
"['constant', 'timer', 'permission', 'introduce', 'resourceinsteadwebhooks', 'consistent']",{'permission': 100}
"['description', 'permission', 'update', 'return', 'controllerpermission']",{'permission': 100}
"['policy', 'permission', 'resolver', 'resource']",{'permission': 100}
"['aacefb', 'mergerequest', 'issue', 'payload', 'stackstorm', 'context', 'mergetrigger']",{'issue': 100}
"['aacefb', 'badddf', 'mergebranch', 'remote', 'origin', 'issue', 'payload', 'context']",{'issue': 100}
"['webhooks', 'permission', 'check']",{'permission': 100}
"['webhooks', 'permission']",{'permission': 100}
"['mergebranch', 'issue', 'payload', 'master', 'context']",{'issue': 100}
"['constant', 'timer', 'permission', 'utilize', 'endpointsince', 'timer']",{'permission': 100}
"['timer', 'resolver', 'permission', 'trigger', 'resource']",{'permission': 100}
"['permission', 'globalbelong', 'parent', 'resourcescope', 'global', 'permission', 'senseperform', 'check', 'permission', 'previouslyalways']",{'permission': 100}
"['permission', 'resolver']",{'permission': 100}
"['dabdc', 'mergerequest', 'check', 'permission', 'stackstorm', 'permission', 'check']",{'permission': 100}
"['permission', 'checkwithout', 'example', 'error', 'workflow']",{'permission': 100}
"['ccdad', 'feeffa', 'mergestackstorm', 'request', 'mergerouter', 'security', 'endpoint', 'check']",{'Security': 100}
"['router', 'security', 'endpoint', 'check']",{'Security': 100}
"['propagate', 'exception', 'expose', 'backend', 'doesntgrooup', 'group', 'retrieve', 'information', 'succesfulhappens', 'check', 'runtime', 'stauth', 'alreadyerror', 'operator', 'startsafety']",{'expose': 100}
"['configscreate', 'introduce', 'permission', 'globalpermission']",{'permission': 100}
"['concurrency', 'upgrade', 'allowolder', 'logic', 'result', 'version']",{'concurren': 90}
"['cipher', 'removal', 'changelog', 'update', 'medium', 'strength']",{'cipher': 100}
"['mergestackstorm', 'nginx', 'request', 'mergemedium', 'cipher', 'strength']",{'cipher': 100}
"['medium', 'cipher', 'strength']",{'cipher': 100}
"['verifies', 'permission']",{'permission': 100}
"['global', 'valid', 'permission', 'action', 'alias']",{'permission': 100}
"['permission', 'globalpermission', 'globalpermission']",{'permission': 100}
"['invalid', 'permission']",{'permission': 100}
"['mergestackstorm', 'request', 'mergeexecution', 'policy', 'action', 'duplication', 'concurrency']",{'concurren': 90}
"['policy', 'concurrency', 'checkpublish', 'state', 'check']",{'concurren': 90}
"['execution', 'policy', 'action', 'duplication', 'concurrencypublish', 'state', 'patch', 'policy', 'action', 'concurrency']",{'concurren': 90}
"['concurrency', 'mistral', 'callback', 'mistral']",{'concurren': 90}
"['policy', 'concurrency', 'comment']",{'concurren': 90}
"['mistral', 'policy', 'workflow', 'concurrencycancel', 'mistral', 'subtask', 'workflow', 'concurrency']",{'concurren': 90}
"['search', 'insensitive', 'default', 'controller']",{'Sensitive': 90}
"['issue', 'stackstorm']",{'issue': 100}
"['length', 'value', 'limit', 'contributor']",{'length': 100}
"['permission', 'introduce', 'index']",{'permission': 100}
"['search', 'index', 'improvementsearch', 'error', 'incorrect']",{'incorrect': 100}
"['issue', 'address']",{'issue': 100}
"['cbdbd', 'mergebranch', 'storm', 'master', 'mergemasterupdatemethod', 'expose', 'relfect', 'retry', 'publicdescription', 'parameter', 'decoratorretry', 'connectionupdatedelete', 'argument', 'usingaccidental', 'changelog', 'updatechangelog', 'update']",{'expose': 100}
"['method', 'expose', 'relfect']",{'expose': 100}
"['additional', 'default', 'place', 'symlinks', 'touch', 'incorrect', 'parameter']",{'incorrect': 100}
"['marker', 'issue']",{'issue': 100}
"['nosec', 'pragrams', 'security']",{'Security': 100}
"['check', 'existance', 'directory', 'permission']",{'permission': 100}
"['token', 'permission', 'warning', 'printedothers', 'permission']",{'permission': 100}
"['issue', 'filter', 'jinja', 'renderingfilter', 'jinjarenderingmethod', 'decidedexpression', 'jinja', 'renderable', 'validdependency', 'filterdependency', 'jinja', 'variablemarker', 'jinja', 'presence', 'detectexpression', 'jinja']",{'issue': 100}
"['model', 'execution', 'expose', 'field']",{'expose': 100}
"['aliasexecutions', 'issue', 'jinja', 'internal', 'error']",{'issue': 100}
"['mergestackstorm', 'request', 'mergeperform', 'specify', 'policy', 'action', 'concurrency']",{'concurren': 90}
"['functionality', 'policy', 'duplication', 'concurrency']",{'concurren': 90}
"['ignore', 'issue']",{'issue': 100}
"['failure', 'register', 'stctl', 'supportfailure', 'register', 'pretty', 'expose', 'stctl', 'reload', 'option', 'stackstorm', 'community', 'setup', 'story', 'trigger', 'ansible', 'register', 'reload', 'error', 'deploys', 'management', 'stctl', 'returnregister', 'script']",{'expose': 100}
"['common', 'crypto', 'signature', 'update', 'functionmessage', 'plaintextcrypto', 'ciphertext']",{'crypto': 100}
"['mergebranch', 'master', 'mergecommits', 'variableclass', 'insert', 'permission', 'updaterunnermethod', 'update', 'resource', 'consistentupdateassertion', 'update', 'assertionmethod', 'friendly', 'update', 'developer', 'utilize', 'assertionmethod', 'permission', 'update', 'assertionmethod', 'update', 'assertion', 'attribute', 'update', 'runnertypedb', 'attribute', 'runner']",{'permission': 100}
"['class', 'insert', 'permission', 'update']",{'permission': 100}
"['method', 'grant', 'permission', 'update', 'assertionaffectedmethod', 'return', 'bettersince', 'assertionerror', 'message', 'meaning', 'false', 'errortrack']",{'permission': 100}
"['permission', 'resolver']",{'permission': 100}
"['permission', 'value']",{'permission': 100}
"['afffb', 'mergestackstorm', 'request', 'mergeimplementation', 'custom', 'issue', 'worker']",{'issue': 100}
"['check', 'criterion', 'explicitlybroken', 'value', 'comparison', 'falsyboolean', 'integer']",{'integer': 100}
"['ubuntu', 'cache', 'permission', 'reset']",{'permission': 100}
"['issue', 'clarify']",{'issue': 100}
"['mergepixelrebel', 'request', 'issue', 'mergeisearchregex']",{'issue': 100}
"['bfccbd', 'mergebranch', 'issue', 'stackstorm', 'master']",{'issue': 100}
"['implementation', 'custom', 'issue', 'worker', 'monkey', 'eventlet']",{'issue': 100}
"['mergestackstorm', 'request', 'mergesetup', 'insecure', 'mistral', 'property', 'cacert']",{'insecure': 100}
"['setup', 'insecure', 'mistral', 'property', 'cacert']",{'insecure': 100}
"['import', 'issue']",{'issue': 100}
"['monkey', 'patch', 'debugger', 'thread', 'module', 'providedparent', 'directlyparent', 'check', 'thread', 'sensor', 'patchedbroke']",{'thread': 100}
"['debugger', 'thread', 'monkeypatch', 'module']",{'thread': 100}
"['cdaef', 'mergerequest', 'mistral', 'stackstorm', 'concurrency', 'mergeconcurrency', 'timing', 'mistral']",{'concurren': 90}
"['concurrency', 'timing', 'mistral', 'adjustexecution', 'accomodate', 'timing']",{'concurren': 90}
"['argument', 'expose', 'update', 'action', 'utilizesdatastore', 'management', 'action', 'whole', 'consistent', 'interface', 'sensor']",{'expose': 100}
"['check', 'stctl', 'service', 'incorrect']",{'incorrect': 100}
"['bfaaa', 'mergerequest', 'kannan', 'storm', 'lakshmi', 'mergedependency', 'bcrypt', 'stauth']",{'bcrypt': 100}
"['dependency', 'bcrypt']",{'bcrypt': 100}
"['space', 'issue']",{'issue': 100}
"['colonobject', 'attribute', 'incorrect']",{'incorrect': 100}
"['space', 'issue']",{'issue': 100}
"['space', 'newline', 'issue']",{'issue': 100}
"['mergebranch', 'master', 'mergecommits', 'masterparams', 'runner', 'updatepiningaddress', 'commentgrant', 'permission', 'handledeletechangelog', 'bumpingrelease', 'changelog', 'settingrelease', 'stclient', 'version', 'settingrelease', 'version', 'stcommon', 'settingissue', 'renderuploads', 'bintray', 'enableupdatepermission', 'enforcementbroken', 'changechange', 'synchronize', 'packageenforcementfilter', 'enforcementstatus', 'mistral', 'entry']",{'permission': 100}
"['grant', 'permission']",{'permission': 100}
"['permission', 'enforcement']",{'permission': 100}
"['permission', 'controller']",{'permission': 100}
"['additional', 'accomdate', 'insecure', 'authenticate']",{'insecure': 100}
"['update', 'chain', 'chainchain', 'runnercommon', 'issue', 'speed', 'developmenttaske', 'static']",{'issue': 100}
"['protocol', 'oneliner', 'changestill', 'insecure', 'temporary', 'connection', 'redirect', 'upgrade']",{'insecure': 100}
"['itests', 'container', 'permission', 'issue']","{'permission': 100, 'issue': 100}"
"['mergelogikal', 'request', 'patch', 'mergeinstall', 'stack', 'reference']",{'stack': 100}
"['install', 'stack', 'reference', 'correctstworkroom', 'stack', 'stackstorm', 'master', 'stexpress']",{'stack': 100}
"['generate', 'permission']",{'permission': 100}
"['content', 'permission', 'action', 'resolvers', 'common', 'class', 'functionality', 'refactor']",{'permission': 100}
"['class', 'action', 'permission', 'resolver']",{'permission': 100}
"['permission', 'update', 'generates', 'script']",{'permission': 100}
"['exclusive', 'sleep', 'interval', 'reduceunnecessary', 'retrieval', 'message', 'sleepingsince', 'yield', 'length', 'oprativepromise', 'largerability']",{'length': 100}
"['whole', 'traceback', 'stack', 'trace', 'important', 'stackattribute', 'addition']",{'stack': 100}
"['mergetgermain', 'request', 'patch', 'mergedependency', 'request', 'security']",{'Security': 100}
"['update', 'runner', 'actualexception', 'error', 'meantsince', 'issue']",{'issue': 100}
"['private', 'common', 'utility', 'refactor', 'duplication', 'reducegrant', 'multipledifferent', 'permission', 'resource']",{'permission': 100}
"['generate', 'permission']",{'permission': 100}
"['grant', 'optional', 'permission']",{'permission': 100}
"['definition', 'permission', 'validation', 'updatewithout']",{'permission': 100}
"['permission', 'decorator']",{'permission': 100}
"['generate', 'permission']",{'permission': 100}
"['acdfbf', 'mergerequest', 'stackstorm', 'security', 'revert', 'mergerequest', 'library', 'option', 'security', 'revert']",{'Security': 100}
"['library', 'option', 'security', 'revert']",{'Security': 100}
"['mergesecurity', 'stackstorm', 'request', 'mergerequest', 'library', 'option', 'security']",{'Security': 100}
"['library', 'option', 'securityplatform', 'support', 'insecure']",{'insecure': 100}
"['execution', 'permission', 'check']",{'permission': 100}
"['fbaae', 'mergebranch', 'master', 'mergecommits', 'masterinherit', 'clear', 'classteardownclass', 'context', 'resetaction', 'creation', 'leveldefinition', 'particular', 'grant', 'permission', 'update', 'samplegenerate', 'permissionbehind', 'permission', 'modify', 'endpoint', 'missingsince', 'grant', 'reference', 'update', 'examplecreate', 'behingcreate', 'permission', 'implementmissingretrieve', 'apiuidmixin', 'robust', 'classprivate', 'common', 'functionality', 'refactor', 'reduceaction', 'permission', 'jsexpose', 'update', 'default', 'resource', 'providedutility']",{'permission': 100}
"['definition', 'grant', 'permission', 'update', 'sampleparticular']",{'permission': 100}
"['permission', 'modify', 'endpoint', 'purpose', 'modify', 'endpoint', 'sensorcreate', 'delete', 'endpoint']",{'permission': 100}
"['action', 'permission', 'resolver']",{'permission': 100}
"['permission', 'function']",{'permission': 100}
"['mergebranch', 'master', 'mergecommits', 'masterprivilege', 'preservescript', 'stcommon', 'installeddefinition', 'stcommon', 'script', 'updatedefault', 'option', 'configpermission', 'exampleswitchstctl', 'reloadchmod', 'clarifyassign', 'permission', 'installedinstall', 'permission', 'expectedremove', 'unusedmessage', 'settingdefinition', 'trigger', 'creation', 'registeringupdatemistral', 'update', 'handlersupport', 'mistral', 'endpoint', 'runner']",{'permission': 100}
"['permission', 'example']",{'permission': 100}
"['stctl', 'reloadstctl', 'permission', 'stackstorm']",{'permission': 100}
"['mergestackstorm', 'request', 'mergeinstall', 'permission']",{'permission': 100}
"['permission', 'installedsomehow', 'permission', 'explicit', 'anywayversion', 'permission', 'incase', 'assigndefault']",{'permission': 100}
"['install', 'permission', 'package', 'permission', 'rightinstall', 'starter', 'tryingapproach']",{'permission': 100}
"['issue', 'command']",{'issue': 100}
"['daabae', 'mergebranch', 'master', 'mergecommits', 'masterfilter', 'unique', 'broadgenerate', 'permission', 'availableissue', 'changelogsample', 'assignmentsamplestcommon', 'update', 'assignment', 'sample', 'install', 'updaterenameupdateupdateupdateremove', 'operator', 'throwchangelogchangelogwsgify', 'stapimessage']",{'permission': 100}
"['stackstormhowever', 'brute', 'likely', 'entropy', 'significantpassword']",{'entropy': 100}
"['generate', 'permission']",{'permission': 100}
"['issue', 'changelog']",{'issue': 100}
"['permission', 'trigger']",{'permission': 100}
"['limitation', 'issue', 'security']","{'issue': 100, 'Security': 100}"
"['check', 'permission', 'trigger', 'requiredaction']",{'permission': 100}
"['generate', 'permission']",{'permission': 100}
"['permission', 'webhook']",{'permission': 100}
"['generation', 'permission', 'update']","{'generation': 100, 'permission': 100}"
"['permission', 'update']",{'permission': 100}
"['permission', 'update']",{'permission': 100}
"['delete', 'permission', 'update', 'resolvers', 'modifygrant', 'permission']",{'permission': 100}
"['definition', 'permission']",{'permission': 100}
"['mergebranch', 'master', 'mergecommits', 'package', 'sitelib', 'pythonwithout', 'sense', 'startuperrorsuperuser', 'checkdefinition', 'updateupdategenerate', 'permission', 'availablebreak', 'removeclass', 'permission', 'update', 'resolversbranch', 'github', 'version', 'mistral', 'basedstyle', 'coverall', 'checkmistral', 'travis', 'available', 'robust', 'duplication', 'enable', 'messagemissingexecution', 'permissionmethod', 'return']",{'permission': 100}
"['badabcb', 'mergestackstorm', 'request', 'mergevarious', 'execution', 'improvement', 'permission']",{'permission': 100}
"['generate', 'permission']",{'permission': 100}
"['permission', 'update', 'resolversmultiple', 'update', 'allowpermission']",{'permission': 100}
"['execution', 'permission']",{'permission': 100}
"['execution', 'permission']",{'permission': 100}
"['execution', 'permission']",{'permission': 100}
"['mergebranch', 'master', 'mergecommits', 'includemethod', 'argument', 'abusingupdateexecution', 'filter', 'result', 'returnlimit', 'simple', 'filteringlimit', 'value', 'offsetchangelog', 'includemistral', 'example', 'deadlock', 'removechangelog', 'message', 'improvechangelog', 'updatedescription', 'runner', 'cleanuppiece', 'message', 'betterparam', 'material', 'runner', 'handlematerial', 'private', 'support']",{'deadlock': 100}
"['permission', 'resource']",{'permission': 100}
"['class', 'resolver', 'permission', 'value', 'resourcesupport', 'permission', 'resourceoperation', 'return']",{'permission': 100}
"['paramiko', 'issue', 'script', 'runner']",{'issue': 100}
"['bfbde', 'mergestackstorm', 'request', 'issue', 'regression', 'pecan', 'install']",{'issue': 100}
"['issue', 'regression', 'pecan', 'installissue', 'slack', 'community']",{'issue': 100}
"['generation', 'permission', 'update', 'script']","{'generation': 100, 'permission': 100}"
"['permission', 'description', 'availablemethod']",{'permission': 100}
"['mergepolicy', 'stackstorm', 'request', 'mergepolicy', 'concurrency']",{'concurren': 90}
"['policy', 'concurrency']",{'concurren': 90}
"['concurrency', 'example', 'mistralconcurrency', 'option', 'example']",{'concurren': 90}
"['validate', 'permission', 'update', 'function', 'consistentresource']",{'permission': 100}
"['permission', 'sensor']",{'permission': 100}
"['permission', 'sensor']",{'permission': 100}
"['permission', 'resolvers', 'implementfollow', 'action']",{'permission': 100}
"['resolver', 'permission']",{'permission': 100}
"['permission', 'controller']",{'permission': 100}
"['simplify', 'permission', 'separate', 'sensorsensor']",{'permission': 100}
"['introduce', 'endpoint', 'permission', 'sensorpermission']",{'permission': 100}
"['permission', 'value', 'check']",{'permission': 100}
"['instrument', 'permission']",{'permission': 100}
"['mergebranch', 'master', 'mergecommits', 'masterbackend', 'authenticate', 'consistentsupport', 'container', 'process', 'documentation', 'basicchangelog', 'updatedocumentation', 'robustfalse', 'togglescope', 'channel', 'variablefailure', 'generation', 'channel', 'switch', 'connnecions', 'connection', 'creation', 'original', 'trigger', 'acquisition', 'infact', 'original', 'avoidmanagement', 'cluster', 'betterconflict']",{'generation': 100}
"['concurrency', 'limit', 'value']",{'concurren': 90}
"['mkdir', 'expose', 'parallel', 'client']",{'expose': 100}
"['method', 'paramiko', 'mkdir', 'expose', 'client']",{'expose': 100}
"['security', 'issue', 'directory', 'point', 'entrydirectory']","{'Security': 100, 'issue': 100}"
"['issue', 'resolvebetter', 'check', 'script', 'error']",{'issue': 100}
"['check', 'permission', 'resource', 'controller']",{'permission': 100}
"['instrument', 'permission', 'value', 'controller']",{'permission': 100}
"['permission', 'assert', 'action', 'alias']",{'permission': 100}
"['permission', 'resolver']",{'permission': 100}
"['permission', 'resolvers']",{'permission': 100}
"['action', 'permission']",{'permission': 100}
"['action', 'permission']",{'permission': 100}
"['method', 'permission']",{'permission': 100}
"['valid', 'permission', 'single']",{'permission': 100}
"['stack', 'trace', 'internal', 'error', 'level']",{'stack': 100}
"['modify', 'permission']",{'permission': 100}
"['attribute', 'introduce', 'error', 'global', 'permission', 'specific', 'functionparticular', 'resource']",{'permission': 100}
"['permission', 'module']",{'permission': 100}
"['additional', 'trustedissue', 'stcontrib', 'stackstorm', 'reportedenvironment', 'scenario', 'customvalidation', 'connectioncommit', 'configure', 'detail', 'pythonrequest', 'custom', 'library', 'bundle', 'openssl', 'trusttophat', 'araline']",{'OpenSSL': 100}
"['grant', 'permission', 'validation', 'resource']",{'permission': 100}
"['validate', 'permission']",{'permission': 100}
"['validate', 'permission']",{'permission': 100}
"['method', 'permission']",{'permission': 100}
"['mergestackstorm', 'chatops', 'request', 'mergeexample', 'incorrect']",{'incorrect': 100}
"['stackstorm', 'request', 'mergepolicy', 'concurrency']",{'concurren': 90}
"['minor', 'issue', 'array']",{'issue': 100}
"['cfccc', 'ecbcbfa', 'mergestackstorm', 'concurrency', 'request', 'mergeconcurrency', 'status', 'increase']",{'concurren': 90}
"['mergestackstorm', 'concurrency', 'request', 'mergepolicy', 'concurrency']",{'concurren': 90}
"['policy', 'concurrency']",{'concurren': 90}
"['attribute', 'concurrency', 'policy']",{'concurren': 90}
"['policy', 'action', 'concurrency']",{'concurren': 90}
"['issue', 'revertreverts']",{'issue': 100}
"['mergestackstorm', 'request', 'mergetoken', 'permission', 'check']",{'permission': 100}
"['directory', 'permission']",{'permission': 100}
"['beeaf', 'mergestackstorm', 'request', 'mergewrite', 'token', 'permission', 'update', 'stclient', 'explode']",{'permission': 100}
"['stclient', 'permission', 'update', 'explodealways', 'retrieve', 'authenticate']",{'permission': 100}
"['method', 'shutdown', 'thread', 'worker']",{'thread': 100}
"['extra', 'attribute', 'value', 'approach', 'blacklist']",{'blacklist': 100}
"['issue', 'indentation']",{'issue': 100}
"['mergestackstorm', 'request', 'check', 'mergesetup', 'check', 'permission']",{'permission': 100}
"['setup', 'check', 'permission']",{'permission': 100}
"['cdfdedc', 'mergerequest', 'mistral', 'storm', 'stackstorm', 'callback', 'mergenumber', 'itests', 'mistral', 'concurrent', 'workflow']",{'concurrent': 100}
"['number', 'itests', 'mistral', 'concurrent', 'workflow']",{'concurrent': 100}
"['mergestackstorm', 'request', 'mergecomment', 'incorrect']",{'incorrect': 100}
"['comment', 'incorrect']",{'incorrect': 100}
"['formatexample', 'incorrect', 'small', 'quickcreation', 'section', 'separate', 'command', 'description', 'operatordescribe', 'operator', 'static', 'likelylocation', 'creation']",{'incorrect': 100}
"['concurrent', 'mistral', 'integration']",{'concurrent': 100}
"['sensitive', 'execution', 'parameter']",{'Sensitive': 100}
"['action', 'output', 'local', 'supportcause', 'stdout', 'deadlocal', 'usingblock', 'child', 'warning', 'process', 'describedempty', 'child', 'buffer', 'processquite', 'reading', 'priorsolution', 'system', 'startscopecommunicate', 'challenge', 'timeouthandle', 'action', 'avoidprocess', 'shell', 'command', 'specificparent', 'procs', 'child', 'implies']",{'buffer': 100}
"['jsutilsperform', 'issue', 'string', 'place', 'translation', 'control', 'upsidedownside', 'outputaround', 'support', 'human']",{'issue': 100}
"['operator', 'check', 'equality', 'insensitive', 'iequal']",{'Sensitive': 90}
"['issue', 'schema', 'action']",{'issue': 100}
"['behave', 'datastore', 'value', 'modify', 'endpointexpose', 'valueoperation', 'delete', 'expose', 'updateindex', 'unique', 'primaryhidden']",{'expose': 100}
"['issue', 'ascii', 'value', 'string', 'unicode']",{'issue': 100}
"['issue', 'registration', 'exists', 'runnerobject', 'update', 'skippingobject', 'update', 'woulddefinition', 'reflect', 'runner']",{'issue': 100}
"['dispatcher', 'instance', 'class', 'sensordispatcher', 'provider', 'interface', 'resultmethod', 'expose', 'class', 'sensor']",{'expose': 100}
"['shell', 'argument', 'injection', 'potential', 'command', 'preventdirectory']",{'injection': 100}
"['issue', 'invalid']",{'issue': 100}
"['expose', 'sensor', 'description']",{'expose': 100}
"['exeception', 'expose', 'trigger', 'sensor']",{'expose': 100}
"['specify', 'header', 'length']",{'length': 100}
"['issue', 'trigger', 'sensorissue', 'trigger', 'sensor']",{'issue': 100}
"['aeeccb', 'mergestackstorm', 'request', 'mergebuild', 'issue', 'script']",{'issue': 100}
"['issue', 'script']",{'issue': 100}
"['action', 'expose', 'directory']",{'expose': 100}
"['method', 'return', 'expose', 'actionmethod', 'service', 'containerreturn', 'action', 'script']",{'expose': 100}
"['content', 'sensorcontent', 'parse', 'class', 'directorycontent', 'sensormanager', 'common', 'issue']",{'issue': 100}
"['dadce', 'mergestackstorm', 'storm', 'request', 'mergeconfig', 'cleanup', 'expose', 'comment', 'interval', 'sensor']",{'expose': 100}
"['config', 'cleanup', 'expose', 'comment', 'interval']",{'expose': 100}
"['mergestackstorm', 'request', 'mergefailure', 'import', 'issue']",{'issue': 100}
"['import', 'issue']",{'issue': 100}
"['valid', 'trigger', 'issue', 'reason', 'multiple', 'relation', 'sensor', 'rulesengine', 'modification', 'dispatch', 'queue', 'event', 'picture']",{'issue': 100}
"['method', 'jsonschema', 'expose', 'decorator']",{'expose': 100}
"['crash', 'setup']",{'crash': 100}
"['insensitive', 'criterion', 'operator']",{'Sensitive': 90}
"['control', 'action', 'storm', 'complete', 'reportedevery', 'design', 'current', 'action', 'reportrestriction', 'imposesactionaction', 'runner', 'result', 'specificmaximum', 'result', 'multiple', 'fidelitydownside', 'opening', 'control', 'action', 'result', 'completeextra', 'representation', 'resultsimplifies', 'issue', 'pecan']",{'issue': 100}
"['ability', 'register', 'storm', 'triggerwebhook', 'trigger', 'stanley', 'sensorregister', 'trigger', 'correspondingoperation', 'endpoint', 'expose', 'triggerproper', 'testcases', 'error']",{'expose': 100}
"['cbbadfd', 'mergestackstorm', 'storm', 'request', 'thread', 'eventlet']",{'thread': 100}
"['speed', 'thread', 'eventlet']",{'thread': 100}
"['green', 'dispatch', 'thread', 'instance', 'trigger']",{'thread': 100}
"['storm', 'actionrunner', 'controlleractiontype', 'support', 'addingactiontype', 'populate', 'creationbasedclose', 'issue', 'liveaction', 'comment', 'controlleractiontype', 'implementingactiontype']",{'issue': 100}
"['mergestackstorm', 'storm', 'request', 'mergemethod', 'facilitate', 'registration', 'expose', 'trigger', 'sensor']",{'expose': 100}
"['method', 'expose', 'update', 'sensor']",{'expose': 100}
"['effdb', 'mergestackstorm', 'storm', 'request', 'mergestorm', 'runner', 'stack', 'implementimplementation', 'action', 'liveaction']",{'stack': 100}
"['storm', 'runner', 'stack', 'implementimplementation', 'action', 'liveaction', 'draftcontrollerstorm']",{'stack': 100}
