message,fuzzy
"['locale', 'switch', 'thread', 'current', 'parse']",{'thread': 100}
"['support', 'backdoortimesync', 'plugin', 'backdoorfunction', 'update', 'backdoorerror', 'backdoor', 'handler', 'gettime']",{'backdoor': 100}
"['asyncsocket', 'introducesocket', 'similar', 'drainhowever', 'length', 'requestedsocket']",{'length': 100}
"['issue', 'macos', 'forkingaround', 'credential']",{'issue': 100}
"['simplify', 'thread']",{'thread': 100}
"['coverity', 'issue']",{'issue': 100}
"['issuerelease', 'header', 'insidecompilation', 'encounter', 'extern', 'blockversion', 'impactedinclude', 'extern', 'deprecatedversion', 'newerreturn', 'result', 'valuedummy', 'warning', 'return', 'valuevalue', 'debug', 'returnedrequest', 'vmwareaddress', 'issue', 'vmwareaddress', 'issue', 'vmware']",{'issue': 100}
"['miscellaneous', 'messagemessage', 'primitive', 'functioninsteadwrong', 'position', 'message', 'specifiedparsingmessage', 'issue', 'message', 'error']",{'issue': 100}
"['variable', 'issue']",{'issue': 100}
"['warning', 'option', 'vgauth', 'message', 'alongsidemessage', 'warning', 'enable', 'vgauth', 'alongsidestage', 'error', 'thrown', 'configure', 'abortedenable', 'vgauth', 'message', 'configurewithout', 'enablegithub', 'issue', 'vmware']",{'issue': 100}
"['linux', 'dependency', 'command', 'ifconfig', 'netstat', 'recentscript', 'support', 'linux', 'release', 'updatecommandfallback', 'availableifconfigroutenetstataddress', 'issue', 'vmware']",{'issue': 100}
"['multiple', 'issue', 'generatedsends', 'sysimage', 'deploy', 'failure', 'statussends', 'plugin', 'notice', 'failurewindow', 'guest', 'plugin', 'notice', 'failurefailure']",{'issue': 100}
"['rotation', 'crash', 'parsevalid', 'scanf']",{'crash': 100}
"['thread', 'process', 'discovrey', 'child', 'serviceargument', 'warning', 'order']",{'thread': 100}
"['properlyaddress', 'issue', 'vmware']",{'issue': 100}
"['properlyaddress', 'issue', 'vmware']",{'issue': 100}
"['example', 'configuration', 'permission', 'changingsmall', 'consistency', 'makefile']",{'permission': 100}
"['argument', 'cmdfilesmall', 'cmdline', 'windowargument', 'expose', 'cmdfileinput', 'allowsargument', 'datasets']",{'expose': 100}
"['stack', 'scope', 'issue']","{'stack': 100, 'issue': 100}"
"['global', 'duplicate', 'removedefinition', 'duplicate', 'unusedaddress', 'issue', 'vmware']",{'issue': 100}
"['handler', 'appinfohandler', 'vmotionlogicmiscellaneous', 'issue', 'appinforeturn', 'proper', 'statement', 'paramdocumentation', 'functionreorganize']",{'issue': 100}
"['global', 'duplicate', 'removedefinition', 'duplicate', 'unusedaddress', 'issue', 'vmware']",{'issue': 100}
"['memory', 'sigint', 'binary', 'issue', 'vmtoolsdmemory', 'sigint', 'valgrind', 'issue', 'complains', 'sigusrhappens', 'service', 'releasedshutdown', 'major', 'signal']",{'issue': 100}
"['resubmit', 'openssl', 'vgauth']",{'OpenSSL': 100}
"['previous', 'vgauth', 'backout', 'openssl']",{'OpenSSL': 100}
"['openssl', 'vgauth']",{'OpenSSL': 100}
"['plugin', 'issue', 'appinforeturn', 'proper', 'statement', 'paramdocumentation']",{'issue': 100}
"['share', 'check', 'linux', 'server', 'accesscheck', 'linux', 'incorrect', 'server', 'failure', 'statusshare', 'failureunless', 'eacess', 'error', 'creation', 'enoentcheckeacces', 'status']",{'incorrect': 100}
"['rpcchannel', 'macro', 'message', 'permission', 'returnedrpcchannel', 'errorreturn', 'permissionerrorerror', 'macro', 'changesetresult', 'callermessage', 'reuse']",{'permission': 100}
"['fallback', 'backdoorrpcout', 'backdoorvmtoolsd', 'permanentlyreset', 'standingchannel', 'reset', 'changedeither', 'channel', 'handlingswitch', 'vsocketswitch', 'reset', 'vsocket', 'supposedvmtoolsd', 'alwaysunless', 'backdoor', 'vsocket', 'backdoor', 'desirableprivilegedchannel', 'retry', 'vsocketevery', 'vsocketoverheadincrease', 'latency', 'connectionbackoff', 'retry', 'delay', 'vsocketchannel', 'rpcchannel', 'caller', 'backdoordifferentiate', 'usagechannel', 'caller', 'fallback', 'mutable', 'fallback', 'vsocketrestore', 'caller', 'backdoormutable', 'creates', 'backdoorbackdoorconnects', 'disconnect', 'vmxloggerchannel', 'privileged', 'backdoorfrequent', 'vsocketstoprpcout', 'interface']",{'backdoor': 100}
"['fallback', 'backdoorrpcout', 'backdoorvmtoolsd', 'permanentlyreset', 'standingchannel', 'reset', 'changedeither', 'channel', 'handlingswitch', 'vsocketswitch', 'reset', 'vsocket', 'supposedvmtoolsd', 'alwaysunless', 'backdoor', 'vsocket', 'backdoor', 'desirableprivilegedchannel', 'retry', 'vsocketevery', 'vsocketoverheadincrease', 'latency', 'connectionbackoff', 'retry', 'delay', 'vsocketchannel', 'rpcchannel', 'caller', 'backdoordifferentiate', 'usagechannel', 'caller', 'fallback', 'mutable', 'fallback', 'vsocketrestore', 'caller', 'backdoormutable', 'creates', 'backdoorbackdoorconnects', 'disconnect', 'vmxloggerchannel', 'privileged', 'backdoorfrequent', 'vsocketstoprpcout', 'interface']",{'backdoor': 100}
"['localization', 'issue', 'windowfield', 'goptioncontextargument']",{'issue': 100}
"['index', 'integer']",{'integer': 100}
"['localization', 'issue', 'vmware', 'vgauthdefault', 'folder', 'msgcatalog', 'catalogrename', 'vgauthcli', 'sincevgauthclilocalization', 'issue']",{'issue': 100}
"['index', 'integer']",{'integer': 100}
"['coverityoverrun', 'report', 'buffer', 'coverityproblemconsists', 'specify', 'buffer', 'variable', 'single', 'characterliteral', 'character', 'nullbyterather', 'equivalent', 'sizeofnulbyte', 'sizeof']",{'buffer': 100}
"['crash', 'xerrorerror']",{'crash': 100}
"['special', 'issue', 'timeouts', 'delay', 'minimizespretty', 'cleanenobufs', 'sleep', 'logic', 'retry', 'returnedconnect']",{'issue': 100}
"['applicable', 'sourceprocmgr', 'librarycommand', 'target', 'retrieveprocmgr', 'remote', 'thread', 'process', 'library', 'target', 'createsapproach', 'getcommandline', 'executesbuilt', 'application', 'proper', 'creatingremote', 'thread', 'order', 'remote', 'threadargument', 'procmgr', 'inputapproach', 'procmgrcommand', 'target', 'plugin', 'approachhonorguestoperations', 'followingdefault', 'plugin', 'procmgr', 'plugin', 'appinfoplugin', 'appinfo']",{'thread': 100}
"['backdoorforce', 'interface', 'backdoor', 'undefinenecessarychange']",{'backdoor': 100}
"['crashcause', 'identification', 'certain', 'crash', 'guest', 'vmtoolsdversion', 'recentcommandoption', 'longerchange', 'whenever', 'check', 'failureissue', 'vmware']",{'crash': 100}
"['issue', 'coverityequal', 'alwaysgetlastdirname', 'function']",{'issue': 100}
"['issue', 'coveritymhggetlisttime', 'member', 'static', 'class', 'constructorconstructor', 'solutionequal', 'alwaysgetlastdirname', 'function']",{'issue': 100}
"['device', 'directory', 'singlelocate', 'logic', 'currenttypical', 'device', 'structure', 'class', 'blockimmediate', 'formatlocate', 'vmtoolsd', 'avoidaddress', 'issue', 'vmware']",{'issue': 100}
"['crashcause', 'identification', 'certain', 'crash', 'guest', 'vmtoolsdversion', 'recentcommandoption', 'longerchange', 'whenever', 'check', 'failureissue', 'vmware']",{'crash': 100}
"['assert', 'clang', 'specific', 'introduceclang', 'assert', 'introduce', 'analyzer', 'definedcompilation', 'clangexample', 'statement', 'example', 'assertionreport', 'analyzerpointer', 'parent', 'assert', 'ignore', 'pointerfunction', 'helper', 'checker', 'debugexampledvskeeper', 'methodfault', 'exception', 'getmethodfault', 'faultexception', 'methodfaultnullptrgetfault', 'faultsystemerror', 'faultwould', 'generate', 'warning', 'warning', 'object', 'pointersystemerror', 'reachablewarningexampledvskeeper', 'methodfault', 'exception', 'getmethodfault', 'faultassert', 'nullptrexception', 'methodfaultnullptrgetfault', 'faultsystemerror', 'reachablewarningunreachable', 'whole', 'branchexampledvskeeper', 'methodfault', 'exception', 'getmethodfault', 'faultassert', 'nullptrexception', 'methodfaultassert', 'nullptrnullptrgetfault', 'faultsystemerror', 'faultwarningexampledvskeeper', 'methodfault', 'exception', 'getmethodfault', 'faultassert', 'nullptrexception', 'methodfaultnullptrgetfault', 'faultsystemerror', 'analyzer', 'evaluateswrongwould', 'example', 'leastimpact', 'analyzerdvskeeper', 'methodfault', 'exception', 'getmethodfault', 'faultexception', 'methodfaultnullptrgetfault', 'faultassert', 'nullptrsystemerror', 'reachablewarningcould', 'problem', 'analyzereither', 'issue', 'impactwould', 'minimal']",{'issue': 100}
"['issue', 'resource', 'variable', 'storage', 'scope', 'errorreturn', 'point', 'malloc', 'fclose']",{'issue': 100}
"['address', 'issue', 'coverityintent', 'making', 'reworkeliminates', 'falsereturn', 'warning', 'check', 'posixunlink', 'value']",{'issue': 100}
"['coverity', 'check', 'deploypkg', 'issue', 'toctouchange', 'mkdir', 'check']",{'issue': 100}
"['unchecked', 'issue', 'valuereturn', 'value', 'uncheckedreturn', 'value', 'callingreturn', 'value', 'unchecked', 'libraryreturn', 'lseekreturn', 'error', 'library', 'functionreturn', 'value', 'unchecked', 'librarywithout', 'fcntl', 'callingreturn', 'function', 'error', 'library']",{'issue': 100}
"['address', 'issue', 'coveritystatic', 'class', 'uninitializedmemorypotential', 'pointer']",{'issue': 100}
"['coverity', 'address', 'issue', 'issue', 'coverity', 'annotatefollowsreference', 'failure', 'pointerdereferences', 'check', 'pointerfalse', 'positive', 'annotateassert', 'false', 'positive', 'annotate']",{'issue': 100}
"['complaint', 'systemdgithub', 'address', 'issue', 'requestsubstiution', 'systemd', 'variablepermissionvmware']",{'issue': 100}
"['coverity', 'couple', 'false', 'alarm', 'fileloggeropen', 'suppressrotate', 'systemdanger', 'rotation', 'checkdecision', 'serviceignores', 'process', 'rename', 'returnprocess', 'error', 'condition', 'alreadycontext', 'crash', 'recursion', 'handlingstderr', 'stdout', 'sincestderr', 'process', 'stdout', 'issue', 'coverity']","{'crash': 100, 'issue': 100}"
"['issue', 'coverity', 'deploypkgsecurity', 'relatedcongruential', 'compliant', 'algorithm', 'linearnumber', 'urandom', 'randomgeneration', 'cryptography']",{'issue': 100}
"['device', 'directory', 'singlelocate', 'logic', 'currenttypical', 'device', 'structure', 'class', 'blockimmediate', 'formatlocate', 'vmtoolsd', 'avoidaddress', 'issue', 'vmware']",{'issue': 100}
"['issue', 'coverityequal', 'alwaysgetlastdirname', 'function']",{'issue': 100}
"['issue', 'coveritymhggetlisttime', 'member', 'static', 'class', 'constructorconstructor', 'solutionequal', 'alwaysgetlastdirname', 'function']",{'issue': 100}
"['address', 'issue', 'issue', 'coveritythird', 'annotateaddress', 'validate', 'siginfo', 'address', 'comment', 'breakreporteddereference', 'intentional', 'annotate']",{'issue': 100}
"['strncpy', 'warning', 'avoidvgauth', 'input', 'check', 'library', 'buffer', 'addedreturn']",{'buffer': 100}
"['coverity', 'couple', 'false', 'alarm', 'fileloggeropen', 'suppressrotate', 'systemdanger', 'rotation', 'checkdecision', 'serviceignores', 'process', 'rename', 'returnprocess', 'error', 'condition', 'alreadycontext', 'crash', 'recursion', 'handlingstderr', 'stdout', 'sincestderr', 'process', 'stdout', 'issue', 'coverity']","{'crash': 100, 'issue': 100}"
"['complaint', 'systemdgithub', 'address', 'issue', 'requestsubstiution', 'systemd', 'variablepermissionvmware']",{'issue': 100}
"['checker', 'codacy', 'qualitybunch', 'issue', 'bundledscope', 'issue', 'major']",{'issue': 100}
"['checker', 'codacy', 'qualitybunch', 'issue', 'bundledvalue', 'issue', 'major']",{'issue': 100}
"['issue', 'scannerdereference', 'pointer', 'redundant', 'condition', 'possibleissue']",{'issue': 100}
"['coverity', 'timesync', 'potentialtimesyncperiod', 'expression', 'issue', 'potentiallycontext', 'evaluatedexpects', 'expressionexplict']",{'issue': 100}
"['issue', 'referencearound', 'support', 'compilerstatic']",{'issue': 100}
"['issue', 'coverity']",{'issue': 100}
"['coverity', 'annotation', 'issue', 'coverity', 'classifyuseful', 'internal', 'annotationpartner', 'coverity']",{'issue': 100}
"['advantage', 'largerworkstation', 'fusion', 'buffer']",{'buffer': 100}
"['annotation', 'coverityannotation', 'issue', 'issue', 'classifyuseful', 'internal', 'annotationpartner', 'coverity']",{'issue': 100}
"['annotation', 'coverityannotation', 'issue', 'classifyuseful', 'internal', 'annotationpartner', 'coverity']",{'issue': 100}
"['address', 'issue', 'coverityminor', 'function', 'memoryreturn', 'unchecked', 'annotation', 'function', 'valuecoverity', 'issue', 'classifyuseful', 'intentional', 'annotation', 'internalpartner', 'coverity']",{'issue': 100}
"['coverity', 'annotation', 'sourceannotation', 'certain', 'classify', 'issue', 'servememorialize', 'classificationpartner', 'reference', 'internalcoverity']",{'issue': 100}
"['issue', 'coveritysuperfluous', 'check', 'pointerpotential', 'dereference', 'pointer']",{'issue': 100}
"['dndcp', 'coverity', 'issue']",{'issue': 100}
"['dndcp', 'coverity', 'issue']",{'issue': 100}
"['coverity', 'vgauth', 'issue', 'serviceimpl']",{'issue': 100}
"['command', 'linuxprocmgr', 'command', 'library', 'attributeprocess', 'listingcmdline', 'startingcommand', 'absolutecommand', 'result', 'incorrectexampleworker', 'autologin', 'sessionignore', 'absolutecommand', 'retrievedcmdlinefailsstatuschangeset', 'issue', 'parsingapproach']",{'issue': 100}
"['coverity', 'warning', 'unnecessaryfound', 'issue', 'coverity', 'patchfalse', 'specific', 'issue', 'outbuf', 'freedbetter']",{'issue': 100}
"['variable', 'coverity', 'hgfsserver', 'issue', 'requestid', 'uninitializedvariable', 'coverity', 'requestid', 'uninitializedpacket', 'request', 'passingextraction', 'functionprotocol', 'assert']",{'issue': 100}
"['setting', 'length', 'client', 'fedoraissue', 'vmwarestatvfs', 'length', 'setting', 'structure', 'validfolder', 'application']",{'length': 100}
"['memory', 'coverity', 'memory', 'double', 'error', 'similar', 'functionpointer', 'overall', 'buffer', 'tmpbufversion', 'nextbuf', 'tmpbuf', 'computedcomputation', 'recordbuf', 'followingknown', 'formerlyvariable', 'distinguish', 'attempt', 'clearlychangenextbuf', 'abort', 'evidentresult', 'scope']",{'buffer': 100}
"['setup', 'issue', 'coverity', 'vgauth']",{'issue': 100}
"['dynamic', 'buffer', 'function']",{'buffer': 100}
"['memory', 'asyncsocket', 'latencyviolation', 'blast', 'scale', 'exception', 'encounter', 'service', 'accessasyncsocketasock', 'refcount', 'inlinelatency', 'invocationdecrement', 'asock', 'invocationerrorhandler', 'invoke', 'close', 'asock', 'freeinghappen', 'asyncwebsocket', 'issue', 'guardedtransporttransportasock', 'reference', 'release', 'inlineinvocation']",{'issue': 100}
"['support', 'security', 'directory', 'guestsensitive', 'contains', 'directory', 'guestexposesupport', 'privilege', 'runningadmin', 'ramification', 'aware', 'guest']",{'Security': 100}
"['support', 'building', 'securityremove', 'support', 'building', 'vmtools', 'security', 'sincerequirement', 'security', 'xercesdroppedconfigure', 'cleanup', 'handlingoption']",{'Security': 100}
"['security', 'issue', 'directory', 'directory', 'vmwaredndvmwarednd', 'regular', 'malicious', 'createcurrent', 'symbolic', 'point', 'desktop', 'directorydesktop', 'directory', 'laterdirectory', 'initiate', 'desktop', 'malicious', 'accesssolutionalready', 'directory', 'wrong', 'directory']","{'Security': 100, 'issue': 100}"
"['permission', 'security', 'issue', 'directory', 'vmwaredndvmwarednd', 'regular', 'malicious', 'createpoint', 'symbolicaccessdirectory', 'permissionwrong', 'permission', 'exists', 'directory']","{'permission': 100, 'Security': 100, 'issue': 100}"
"['warningtohost', 'function', 'warningtoguestchange', 'security', 'warning', 'vmware', 'library', 'forwardedmessage']",{'Security': 100}
"['plugins', 'previouswithout', 'subtle', 'trust', 'issue']",{'issue': 100}
"['linux', 'issue', 'world', 'deploypkg']",{'issue': 100}
"['message', 'issue', 'systemremote', 'specifiedcausemultiple', 'dragenter', 'remotedropsource', 'dataobject', 'dragleave', 'message', 'dragenter', 'dragleave', 'handlingsolutionseveral', 'issue', 'multiple', 'handlingdndcontroller', 'reset', 'state', 'handlingmessage', 'agent', 'previousready', 'state', 'dodragdrop', 'cancelledresponse', 'event', 'timeout', 'cancellingcreate', 'dndthread', 'timeout', 'dragbegindragbegin', 'previous', 'conflictingprefix', 'virtual', 'method', 'getdata']",{'issue': 100}
"['memoryfunction', 'deploypkg', 'pkgname', 'freedsubmit', 'thread']",{'thread': 100}
"['securitycommand', 'security', 'artifact', 'loggedchange', 'createsmessage', 'duplication', 'minimize', 'different', 'loggingsecurity', 'instance', 'issue']","{'Security': 100, 'issue': 100}"
"['logic', 'detectiondetector', 'thread', 'createatomic', 'decrement', 'schedulereset', 'counter', 'timer', 'checkincountereventcounter', 'recoveryeventprevious', 'order', 'recovery', 'order', 'condition', 'handledetector', 'threadshutdown', 'toolsd', 'function', 'threadfunction', 'function', 'terminateshutdown', 'toolsd', 'commandrecovery', 'event']",{'thread': 100}
"['share', 'permission', 'linux', 'rename', 'server', 'deletecoverity', 'share', 'permission', 'argumeentsthough', 'rename', 'togethercould', 'statementwrite', 'argument', 'share', 'permission', 'reverse']",{'permission': 100}
"['kernel', 'overflow', 'linux', 'handlekernel', 'linux', 'alwayshandle', 'current', 'stats']",{'overflow': 100}
"['share', 'permission', 'linux', 'rename', 'server', 'deletecoverity', 'share', 'permission', 'argumeentsthough', 'rename', 'togethercould', 'statementwrite', 'argument', 'share', 'permission', 'reverse']",{'permission': 100}
"['kernel', 'overflow', 'linux', 'handlekernel', 'linux', 'alwayshandle', 'current', 'stats']",{'overflow': 100}
"['applicable', 'headerversion', 'window', 'vgauth', 'product', 'propertyworkstation', 'vgauth', 'product', 'binary', 'vmwareproduct', 'experimental', 'versionversion', 'product', 'experimental', 'number', 'fieldsense', 'security', 'officialchange', 'field', 'version', 'productworkstation', 'product', 'vmwareproduct', 'version', 'buildauthentication', 'product', 'vmware', 'guestproduct', 'version']",{'Security': 100}
"['configuration', 'update', 'securedefault', 'issue', 'setting', 'secureinherits', 'setting', 'default']",{'issue': 100}
"['configuration', 'update', 'securedefault', 'issue', 'setting', 'secureinherits', 'setting', 'default']",{'issue': 100}
"['message', 'debugmessage', 'debugpotential', 'issue', 'logginghtonll', 'version', 'visual', 'local', 'studio']",{'issue': 100}
"['memoryplugin', 'retrieves', 'script', 'powerconfig', 'freederrorwrong', 'operation', 'guest', 'executedevery', 'failure', 'centosplace', 'couple', 'minor', 'issue', 'value', 'vgerr']",{'issue': 100}
"['existingtoolsd', 'setting', 'mechansimmessage', 'problem', 'savedwhatever', 'setting', 'guest', 'exisingeither', 'local', 'guesterror', 'issue', 'additioinal', 'existingsupport', 'order', 'existingstatic', 'globalseasier', 'design', 'simplifiesreason', 'state', 'logic', 'actuallyglobal', 'external', 'processing', 'invokes', 'addedmultiple', 'update', 'guest', 'loghandler', 'loghandler', 'removedalready', 'loghandler', 'sincevmtoolslog', 'callerglobal', 'early', 'statefirsterrorlocal', 'setting', 'stillchallenginghandler', 'setting', 'order', 'sendingreplace', 'logger', 'local', 'specifieddefault', 'handler', 'settingshall', 'honoredshall', 'support', 'fallback', 'enterhandler', 'level', 'settingsetup', 'multipleinitial', 'enable', 'start', 'possibleoption', 'level', 'designatedchannelsignal', 'config', 'timer', 'procssingsetup', 'handlervmxguestlog', 'recursivesuite', 'debug', 'warning', 'rpcchannelthrown', 'rpcchannel', 'internal', 'issue', 'function', 'system', 'thrown', 'domain', 'vmtoolsdbeginnnig', 'requiresusername', 'vmsvc', 'sincevmusr', 'process', 'vmwarewould', 'permission', 'causereturn', 'concern', 'mightlocal', 'accoutsleavingproblem', 'exists', 'sincealready']","{'issue': 100, 'permission': 100}"
"['socket', 'timeout', 'issue', 'namespacetool', 'multiple', 'fixedcommand', 'namespacetoolsocket', 'connection']",{'issue': 100}
"['potential', 'crash', 'desktopevent', 'solution', 'pluginseveral', 'plugin', 'distros', 'centosneither', 'development', 'crashreproduce', 'local', 'issuexfetchname', 'document', 'badwindow', 'generate', 'stateargument', 'value', 'badwindow', 'suggests', 'handlingxfetchname', 'windowsuppress', 'error', 'avoiddefine', 'grabbing', 'temporarilyhandler', 'intercept', 'error', 'local', 'badwindowreturn', 'error', 'currentreinstate', 'straightforward']",{'crash': 100}
"['clipboard', 'content', 'loadedclick', 'linux', 'dndcp', 'plugin', 'creates', 'monitorcause', 'application', 'specific', 'accessfield', 'update', 'threadwakeup', 'wrong', 'thread', 'thread', 'field', 'solution', 'update']",{'thread': 100}
"['potential', 'crash', 'desktopevent', 'solution', 'pluginseveral', 'plugin', 'distros', 'centosneither', 'development', 'crashreproduce', 'local', 'issuexfetchname', 'document', 'badwindow', 'generate', 'stateargument', 'value', 'badwindow', 'suggests', 'handlingxfetchname', 'windowsuppress', 'error', 'avoiddefine', 'grabbing', 'temporarilyhandler', 'intercept', 'error', 'local', 'badwindowreturn', 'error', 'currentreinstate', 'straightforward']",{'crash': 100}
"['freebsdlibunwind', 'header', 'availablelibunwind', 'package', 'devel', 'installedlibunwind', 'chain', 'functionprogram', 'enable', 'definedavoid', 'headerclang', 'member', 'warning', 'compiler', 'issue', 'warning', 'error', 'structure', 'address', 'cflagsclang']",{'issue': 100}
"['dndcp', 'thread', 'buildnecessary', 'dndcp', 'plugin', 'recentpthread']",{'thread': 100}
"['guest', 'click', 'clipboard', 'contentcauseapplication', 'thread', 'dndcp', 'plugin', 'creates', 'monitorcause', 'specific', 'thread', 'accesswakeup', 'field', 'update', 'causewrong', 'threadsolutionwakeup', 'field', 'update', 'thread']",{'thread': 100}
"['freebsdlibunwind', 'header', 'availablelibunwind', 'package', 'devel', 'installedlibunwind', 'chain', 'functionprogram', 'enable', 'definedavoid', 'headerclang', 'member', 'warning', 'compiler', 'issue', 'warning', 'error', 'structure', 'address', 'cflagsclang']",{'issue': 100}
"['dndcp', 'thread', 'buildnecessary', 'dndcp', 'plugin', 'recentpthread']",{'thread': 100}
"['linux', 'locale', 'issue', 'vgauthreturn', 'setlocale', 'earlierdefault', 'msgcatalog', 'linux', 'locationnormal']",{'issue': 100}
"['increase', 'buffer', 'mxuserhistodumparray', 'mxuserhistodump', 'noticedformat', 'large', 'enoughslack', 'accommodate']",{'buffer': 100}
"['specific', 'check', 'virtualpc', 'hypervisors', 'happenhypervisor', 'vmware', 'workingvmware', 'backdoorhypervisor', 'vmware', 'backdoor', 'runningchannel', 'disabledtoolbox', 'checkvm', 'vmware', 'version', 'number', 'vmwaredetect', 'hypervisor', 'microsofthypervisor', 'vmware', 'backdoor', 'microsoft', 'latersignature', 'oracle', 'vendor', 'unique', 'cpuid']",{'backdoor': 100}
"['improper', 'getpwent', 'sysconf', 'buffer', 'freebsdvmtoolsdsysconf', 'limit', 'buffer', 'incorrectchange', 'sysconf', 'vmsoft', 'plugins', 'serviceshare', 'author', 'creditvmware']","{'improper': 100, 'buffer': 100}"
"['issue', 'performanceissue', 'vmware', 'guest', 'tunnel', 'preconfigure', 'network', 'serviceprevious', 'vmtools', 'regression', 'utilization', 'release', 'opposedmemory', 'vmtools', 'issue', 'utilization']",{'issue': 100}
"['security', 'location', 'attribute', 'accesscreates', 'current', 'windowgiven', 'subdir', 'unexpected', 'insidedefault', 'dacls', 'restrictivecaller', 'introduce', 'ensures', 'dacls', 'subdir']",{'Security': 100}
"['overrun', 'bufferstruct', 'asock', 'copiedmemcpycallersizeofcaught']",{'overrun': 100}
"['tweak', 'guestos', 'issue', 'compliant', 'specificprovide', 'return', 'coverage', 'specificensure', 'detaults']",{'issue': 100}
"['transport', 'socket', 'overhead', 'vigor', 'drainingprevious', 'memory', 'vigorpollimpl', 'asyncsocketperformance', 'parallel', 'reconfiguration', 'regressionconnection', 'sourcesource', 'regression', 'reconnect', 'destinationhappens', 'disconnect', 'buffer', 'drainedregister', 'unregister', 'callback', 'logic', 'potentiallyfunction', 'multiple', 'asyncsocketreduces', 'manipulationreduces', 'effect']",{'buffer': 100}
"['issue', 'performanceissue', 'vmware', 'guest', 'tunnel', 'preconfigure', 'network', 'serviceprevious', 'vmtools', 'regression', 'utilization', 'release', 'opposedmemory', 'vmtools', 'issue', 'utilization']",{'issue': 100}
"['vigorpollimpl', 'callbackprevious', 'reveals', 'attempt', 'anothersharedstream', 'owner', 'release', 'boostwrite', 'operation', 'async', 'cancelsimple', 'creatinghostd', 'limit', 'system', 'limitprevious', 'descriptionchange', 'linux', 'issue', 'originalwould', 'release', 'laterwould', 'register', 'callbackreset', 'delayedsharedstream', 'callbackfd', 'invoke', 'object', 'woudl', 'callbackoriginal', 'descriptionreproduce', 'asyncsocket', 'variationvigorpollimpl', 'callbackthread', 'unregister', 'behaviordisconnect', 'detection', 'callbackreference', 'potential', 'callbackasyncsocket', 'disconnection', 'happensasyncsocket', 'callbacksecond', 'callback', 'asyncsocket', 'mostlyunregister', 'error', 'disconnect', 'periodic', 'level', 'behavior', 'ivmdbpollreturn', 'unregister', 'reregister', 'runningwould', 'callbackreference', 'callback', 'scenariounregister', 'asycnsocket', 'callbackreference', 'threadwould', 'distinguish', 'callbackrelease', 'order', 'consideringsupport', 'multi', 'callbackchange', 'callbacksupport', 'asyncsocket', 'vigorpollimplwould', 'ivmdbpoll', 'createwould', 'minimize']",{'issue': 100}
"['vmuser', 'crash', 'issue', 'vmtoolsd', 'stoppingunload', 'stoppingsignal', 'startingplugin', 'unloadchannel', 'processing', 'signalexists', 'assert', 'check', 'whetheravoid']","{'crash': 100, 'issue': 100}"
"['vmuser', 'crash', 'issue', 'vmtoolsd', 'stoppingunload', 'stoppingsignal', 'startingplugin', 'unloadchannel', 'processing', 'signalexists', 'assert', 'check', 'whetheravoid']","{'crash': 100, 'issue': 100}"
"['backout', 'issue', 'clean', 'anothercleanuponerror']",{'issue': 100}
"['window', 'timesync', 'support', 'issue', 'resyncchange', 'support', 'command', 'issue', 'resynctimesync', 'configuration', 'order', 'vmware', 'wtime', 'reconfigureexternal', 'force']",{'issue': 100}
"['insensitive', 'versionchange', 'common', 'header']",{'Sensitive': 90}
"['message', 'duplicate', 'issue', 'deploypkgprevent', 'message', 'process', 'duplicate', 'linebuffer']",{'issue': 100}
"['common', 'thread', 'factor', 'assignment']",{'thread': 100}
"['callback', 'table', 'serverthree', 'server', 'different', 'callbacknofify', 'notification', 'tableinstead', 'callback', 'watchstoreddefault', 'setting', 'enablewould', 'assert', 'causedetailnotification', 'callback', 'table', 'creates', 'servernotify', 'thread', 'async', 'callback', 'reflect', 'function', 'argumentargument', 'subscriber', 'function', 'callbackmodule', 'event', 'notify', 'callback', 'table', 'servercontext', 'event', 'submodulethread', 'event', 'module', 'register', 'notify', 'module', 'unregister', 'event']",{'thread': 100}
"['convertvthreadbase', 'thread', 'sincebehave', 'functionconvert', 'vthreadids', 'locationremove']",{'thread': 100}
"['minor', 'removalgettid', 'vthreadbase', 'modifyavailablecomputation', 'thread', 'child', 'dependencyvthreadidconvert', 'lookup', 'vthreadfreeid', 'vthreadfreebecome', 'field', 'cleanup', 'priority', 'earlierreplace']",{'thread': 100}
"['comment', 'sleeprandomization', 'prevents', 'cadence', 'issue']",{'issue': 100}
"['overflow', 'checkoverflow', 'protential', 'mightinsane', 'string']",{'overflow': 100}
"['thread', 'prototypechange', 'prototypevthreadidvthread', 'constvthread', 'constreturn', 'prototypeimportant', 'advancement', 'field', 'child', 'neatlycondition', 'child', 'interestingstart', 'createthread', 'function', 'runningreturn', 'design', 'style', 'preferredcreatethread', 'system', 'posix']",{'thread': 100}
"['vmware', 'virtualpc', 'checkworkaround', 'random', 'crash', 'vmtoolsd', 'runningensures', 'virtualpc', 'vmware']",{'crash': 100}
"['snapshot', 'synchronization', 'server', 'callbacksnapshot', 'serversynchronization', 'notify', 'manager', 'callback', 'regardless', 'synchronization', 'callback', 'serverglobal', 'server', 'callbackserver', 'track', 'return', 'withouttransport', 'server', 'connection', 'requiresnotification', 'order', 'session', 'extractevent', 'component', 'sessionregister', 'thread', 'unregister', 'callback', 'serverphysmem', 'transportchangefolder', 'serverenabledchannel', 'transport', 'session', 'callback', 'table', 'serverquiescereplaces', 'callbackexportedquiesce', 'serverimplementation', 'serverchannel', 'transport', 'manager', 'guestimplement', 'quiesce', 'session']",{'thread': 100}
"['pointer', 'datagram', 'reset', 'buffer', 'dealloccrash', 'specific', 'version', 'drivermoduledatagram', 'datagrams', 'attempt', 'buffer', 'delivertaskletguard', 'scheduleddatagram', 'reset', 'buffer', 'pointerindicate']",{'buffer': 100}
"['overflow', 'issue', 'cleannumber', 'goingextraproduce']","{'overflow': 100, 'issue': 100}"
"['transport', 'memory', 'assert', 'interfacetransport', 'function', 'memory', 'extract', 'accesspacket', 'protocol', 'processing', 'serverthread', 'operation', 'interfaceaddition', 'unregister', 'registerinitial', 'transport', 'trigger', 'henceassert', 'function', 'registerfailure', 'assertionunregister', 'transport', 'interface', 'transport', 'callbacktransport', 'server', 'backdoor', 'sincefunction', 'memory', 'callback', 'accesschannel', 'packet', 'backdoorroutedchange', 'followingunregister', 'channel', 'register', 'callbackchannel', 'initialize', 'register', 'unregister', 'callback', 'table', 'function', 'callbackchannel', 'function', 'pointer', 'backdoor', 'modifiedunregister', 'register', 'callbacknotification', 'register', 'unregister', 'directory', 'callback', 'ifdef', 'statement', 'directorychannel', 'notification', 'register', 'function', 'unregister']",{'backdoor': 100}
"['enable', 'clean', 'servermacro', 'servermodify', 'source', 'difficultimplementation', 'suffers', 'currentlysmall', 'couple', 'private', 'header', 'source', 'captureinterface', 'transport', 'policy', 'backdoorhgfsserver', 'statement', 'buildsevice', 'upgrader', 'application', 'daemon', 'instance', 'vmtoolsddebug', 'setting', 'check', 'backdoor']",{'backdoor': 100}
"['vthreadissue', 'buildempty', 'compiler', 'adjustmentvalue', 'adjusteddefault', 'value', 'local', 'thread', 'cache']",{'thread': 100}
"['macro', 'vthreadbase', 'headerstorage', 'thread', 'support', 'helpful', 'locallogic', 'detectionbonus', 'cleanup', 'inline']",{'thread': 100}
"['local', 'storage', 'thread', 'entirelystore', 'previous', 'thread', 'vthreadbasemobile', 'storage', 'platform', 'thread', 'local', 'exceptstorage', 'field', 'removehandle', 'structure', 'mostlywould', 'preservedcomplexity']",{'thread': 100}
"['local', 'vthread', 'storage', 'thread', 'memorylocal', 'vthreadids', 'storage', 'threadhardestremove', 'storagechangeimplementation', 'local', 'thread', 'pretty', 'initialization', 'thoughstorage', 'thread', 'platform', 'point', 'local', 'commentdifferent', 'comment', 'large', 'solution', 'platform', 'thread', 'unnamedeffort']",{'thread': 100}
"['kernel', 'daemon', 'mount', 'version', 'kernelvmhgfs', 'handler', 'mount', 'unavailable', 'clientkernel', 'folder', 'runningvmhgfs', 'kernel', 'mount', 'usingkernel', 'clientkernel', 'linux', 'component', 'check', 'return', 'success', 'kernel', 'option', 'olderkernel', 'return', 'valuekernel', 'mount', 'client', 'value', 'returnedresult', 'custom', 'buildingkernel', 'newerkernel', 'script', 'config', 'runningkernel', 'scriptkernel', 'handler', 'daemon', 'folder', 'client', 'runninghandler', 'daemon', 'issue', 'address']",{'issue': 100}
"['vthread', 'storage', 'thread', 'local', 'updatedefault', 'simplifies', 'initialization']",{'thread': 100}
"['issue', 'intentional', 'value', 'question', 'sincenever', 'assert', 'entry', 'function']",{'issue': 100}
"['message', 'security', 'optionenable', 'message', 'suitedenable', 'message', 'option', 'option', 'xmlsecurity', 'securitymaintain', 'enable', 'order']",{'Security': 100}
"['issue', 'extern']",{'issue': 100}
"['monotonic', 'reallyreturn', 'solaris', 'issue', 'value', 'returnedlower', 'return', 'function']",{'issue': 100}
"['xmlsec', 'centos', 'xmlsec', 'distros', 'dynamicaround', 'issue', 'redhat', 'packagebuilt', 'properlyresult', 'different', 'structure', 'xmlsecsizereference', 'tendschange', 'field']",{'issue': 100}
"['vgauth', 'openssl', 'source', 'compilation', 'updatenumber', 'release', 'opensslseveral', 'product', 'impact', 'sourceupdatedmanmaster', 'availablemessage', 'impact', 'digeststack', 'local']",{'OpenSSL': 100}
"['signal', 'malloc', 'malloc', 'vthreadbasesignal', 'stillhandler', 'problem', 'signal', 'malloc', 'insideconsider', 'mallocsignal', 'malloc', 'corruption', 'handleroverall', 'mallocpoint', 'linux', 'behavior', 'sinceversion', 'minimumsignal', 'available', 'handlertricky', 'littlemacos', 'androidspecific', 'constructor', 'destructormanage', 'dependent', 'strategyunload', 'library', 'destructorremove', 'function', 'destructorwould', 'destructorsmall', 'current', 'threadcorrect', 'stack', 'preserveremove', 'deserve', 'settingsignal', 'handlerimplementation', 'signal', 'check', 'whetherfuture', 'result', 'memory', 'signal', 'future', 'thread']","{'stack': 100, 'thread': 100}"
"['xmlsecswitchdefault', 'seccurity', 'stuff', 'clientinstead', 'building']",{'Security': 94}
"['unhappy', 'functionespeciallydiscovertopology', 'reason', 'generallymatterinstead', 'report', 'enumeration', 'removepackage', 'ncores', 'reallyversus', 'expose']",{'expose': 100}
"['dictionary', 'growth', 'limitdictionary', 'input', 'length', 'sinceunknown', 'dynbuf', 'parsingmemoryinitial', 'dynbuf', 'waste', 'large', 'space', 'allocationrarelyappends', 'preallocate', 'buffer', 'dictionaryprevent']","{'length': 100, 'buffer': 100}"
"['argument', 'check', 'security', 'servercommon', 'argument', 'verification', 'complete', 'addingpacket', 'request', 'writecatch', 'attempt', 'request', 'clientargument', 'writepacket', 'buffer']","{'Security': 100, 'buffer': 100}"
"['argument', 'check', 'security', 'serverargument', 'consolidate', 'verification', 'common', 'argument', 'verification', 'operation', 'callingperform', 'specific', 'platform']",{'Security': 100}
"['validate', 'security', 'basic', 'serverroutine', 'protocol', 'requestoperation', 'writeargument', 'validationspecific', 'platform']",{'Security': 100}
"['security', 'server', 'cleanwrite', 'renames', 'minor', 'security', 'cleanargument', 'local', 'variableargument', 'preparation', 'common', 'movingcommon', 'check', 'routine', 'verifywrite']",{'Security': 100}
"['condition', 'assert', 'rpcinchannel', 'asserts', 'rpcin', 'service', 'stress', 'guestreset', 'service', 'causedchannel', 'reset', 'checkstart', 'channel', 'modifiedchannel', 'global', 'thread', 'sendingplugin', 'diskwipe', 'restartacquires', 'issue', 'channelchannel', 'thread']","{'thread': 100, 'issue': 100}"
"['minor', 'clean', 'serverpreparation', 'operation', 'security']",{'Security': 100}
"['various', 'patchincludedwould', 'scheme', 'versionsecurity', 'library', 'widelyrelevant', 'security', 'handful', 'pickedchange', 'ticket', 'errorimplement', 'ticket', 'subpart', 'policyconsume', 'validticket', 'buffer', 'terminateminus', 'flushingticketloadingmemcpy', 'ticket', 'memmovepointer', 'source', 'invalidticket', 'insteadoverflow', 'bufferticket', 'error', 'potentialconverter', 'isciivalue', 'segmentation', 'ticket', 'issue', 'faultticket', 'pivotingticket', 'avoidrewrite', 'mostlyambiguous', 'propagate', 'alias', 'warning', 'ticketconverter', 'openingticket', 'safety', 'threadticket', 'sourceoverrun', 'comment', 'ticket', 'buffer', 'diffs', 'changeticket', 'foundchangeset', 'revisionrevision', 'numeric', 'correspondingreturn', 'checkedinvolve', 'includedcondition']","{'Security': 100, 'buffer': 100, 'issue': 100}"
"['verification', 'crash', 'vgauthchecker', 'reference', 'check']",{'crash': 100}
"['client', 'backdoor', 'availableerror', 'client', 'backdoor', 'server', 'protocol', 'migratedmislead', 'enablingmismatch', 'client', 'protocolpoint', 'transport', 'entry', 'messagemount', 'failsprevent', 'functioninitial', 'transport', 'generate', 'failsfeature', 'server', 'disabledmount', 'error', 'laterexist', 'mount', 'umount', 'laterreport', 'accessible', 'mount', 'leftovertransport', 'previous', 'error', 'endpoint', 'connectederror', 'protocol']",{'backdoor': 100}
"['assert', 'vsock', 'reference', 'vmsvc', 'familykernel', 'vsock', 'devicevalid', 'assert', 'vsock', 'upstreamedreferencefamilyreference', 'driver', 'upstreamedvmusr', 'vsock', 'reference', 'addressupgrade', 'vmusrgiven', 'issue', 'avoidreference', 'service', 'limitinitialize']",{'issue': 100}
"['vmtoolsd', 'replacevmtoolsd', 'backdoor']",{'backdoor': 100}
"['datamap', 'input', 'field', 'length', 'check', 'buffer']","{'length': 100, 'buffer': 100}"
"['issue', 'coverity', 'couple']",{'issue': 100}
"['issue', 'additionalissue']",{'issue': 100}
"['mount', 'point', 'freezelinux', 'issue', 'mount', 'order', 'systemproblematic', 'mount', 'pointloopback', 'mount', 'order', 'dependency', 'honormount', 'order', 'reverse', 'pointgetmntent', 'interface', 'foundpoint', 'mount', 'passingproblem', 'string', 'mount']",{'issue': 100}
"['issue', 'clientanalysis', 'header', 'prefastbuffer']",{'issue': 100}
"['string', 'check', 'boundary', 'buffer', 'improvement']",{'buffer': 100}
"['overflow', 'buffer']","{'overflow': 100, 'buffer': 100}"
"['number', 'debug', 'usefultoken', 'error', 'request', 'basicnoise', 'concern', 'security']",{'Security': 100}
"['pointer', 'datagram', 'reset', 'buffer', 'deallocpotential', 'crash', 'guest', 'specific', 'version', 'driverdeliver', 'unload', 'attempt', 'moduledatagram', 'datagrams', 'buffertaskletdatagram', 'reset', 'guard', 'buffer', 'pointerlonger']","{'buffer': 100, 'crash': 100}"
"['pointer', 'invalid', 'provider', 'class', 'accesssnapshot', 'customer', 'vmwareprovidercause', 'pointer', 'invalid', 'initialization', 'class', 'initialization', 'provider', 'issue', 'statusinitialization']",{'issue': 100}
"['asyncsocket', 'updatereturn', 'string', 'caller', 'integer', 'returningutilize', 'getnameinfotorokhov']",{'integer': 100}
"['different', 'corruption', 'partialwrite', 'thread', 'customer', 'corruptedhandle', 'linux', 'interferesrevalidation', 'attribute', 'mishandleddifferent', 'modification', 'cachethrown', 'valid', 'causeblock', 'differs', 'server', 'cache', 'returnedvalue', 'inodeproblem', 'buggyminimal', 'settingpartial', 'linux', 'source', 'reference', 'favoritetorokhov']",{'thread': 100}
"['inode', 'client', 'linux', 'blockclient', 'linux', 'number', 'block', 'count', 'number', 'blockretrieves', 'block', 'incorrect', 'application', 'structuretorokhov']",{'incorrect': 100}
"['linux', 'client', 'symlinkskernel', 'symlink', 'buffer', 'freedcorruption', 'symlink', 'lookup', 'hgfsputlink', 'releaseretrieves', 'release', 'structureclear', 'layertarget', 'object']",{'buffer': 100}
"['packet', 'callback', 'server', 'cleanpacket', 'usage', 'abstraction', 'cleaningpacket', 'argument', 'callback', 'serverargument', 'packet', 'buffer', 'unusedargument', 'packet', 'extractedargument']",{'buffer': 100}
"['packet', 'server', 'abstractionpacket', 'reply', 'brokenpacket', 'separate', 'reply', 'packet', 'reply', 'bufferhgfspacket', 'field', 'reply', 'reply', 'bufferchannel', 'transport', 'extract', 'routine', 'replydetail', 'buffer', 'packet', 'objectchannel', 'function', 'callbackseparatepacket', 'reply', 'functionreplychannel', 'guestpacket', 'total', 'reply', 'overwrittenwritten', 'functionpacket', 'transfermemory', 'guest', 'reply', 'essentiallytorokhov']",{'buffer': 100}
"['channel', 'guestrpc', 'commandsecure', 'command', 'manager', 'namespace', 'sincechange', 'backdoor', 'connection', 'vsocket', 'handlechangesinature', 'functiontorokhov']",{'backdoor': 100}
"['supportlspcilspcibetter', 'crash', 'parameterworse', 'corruptchangelspci', 'runcmdlspci', 'runcmdlspci', 'runcmdtorokhov']",{'crash': 100}
"['packet', 'server', 'abstractionfield', 'buffer', 'makingtransitional', 'anothervalid', 'totalpacket', 'forthtransport', 'switch', 'header', 'supportpacket']",{'buffer': 100}
"['linuxchange', 'vthread', 'linuxstore', 'thread', 'pointer', 'valueconsistent', 'thread', 'behaviordestruction', 'destructor', 'pthreads', 'result', 'noisyfaith', 'contentclaim', 'thinkdifficult', 'ugliness', 'confinedtorokhov']",{'thread': 100}
"['packet', 'server', 'abstraction', 'cleaninflexibility', 'inconsistency', 'cleanpacket', 'buffer', 'headerargument', 'commmandutility', 'multiple', 'sincearray', 'buffer', 'allocatedsecond', 'functionality', 'unmap', 'routinearray', 'countcomponent', 'hgfspacket', 'track', 'availableassumption', 'getbufbuffer', 'totalallowoptimal', 'buffer', 'movementtorokhov']",{'buffer': 100}
"['dereference', 'thread', 'memory', 'current', 'avoidcouple', 'discussion', 'various', 'structure', 'thread', 'pointercould', 'local', 'thread', 'avoidedvalue', 'threadlocal', 'thread', 'callingcheck', 'initializedinitialize', 'threadvalue', 'local', 'checkcould', 'client', 'check', 'forcedinitialize', 'function', 'thread', 'callingimplementation', 'linux', 'pthreadlinux', 'windowalternative', 'local', 'storage', 'threadimplementation', 'providespretty', 'overhead', 'workload', 'particular', 'introduces', 'variable', 'thread', 'store', 'localstructure', 'threadcould', 'verifycould', 'useful', 'statechange', 'threadimportant', 'respect', 'pthreadensures', 'thread', 'allowsthreadwrinkle', 'threaddefault', 'value', 'state', 'uninitializedvthread', 'valid', 'insteadstore', 'thread', 'incrementeddefault', 'value', 'uninitializedmeantime']",{'thread': 100}
"['rpcin', 'fallback', 'backdoor', 'startingtorokhov']",{'backdoor': 100}
"['ioctlsecurity', 'concious', 'customer', 'allowsrestrict', 'permission', 'devicetorokhov']",{'permission': 100}
"['unlikely', 'vmotion', 'possibilityconflict', 'virtual', 'machine', 'runningprevent', 'communication', 'entire', 'queue', 'allowingstill', 'queuecontext', 'guest', 'driverdatagram', 'destinationcontext', 'valid', 'updatedeliver', 'context', 'datagram', 'wrongcheck', 'support', 'integer', 'vigorcontext', 'value', 'ttylinux', 'proposedversion', 'patchtorokhov']",{'integer': 100}
"['upstream', 'vsocketioctl', 'address', 'expose', 'driver', 'sincegiven', 'address', 'upstream', 'driverstillupstream', 'causeversion', 'headerresult', 'cachesuite', 'common', 'cachetorokhov']",{'expose': 100}
"['request', 'header', 'cleanup', 'serverdetail', 'individual', 'header', 'cleanup', 'firstroutine', 'session', 'informationparams', 'unpack', 'routine', 'cleanupvalidate', 'header', 'header', 'incorrect', 'value', 'fielspacket', 'headerpacket', 'transport', 'server', 'sessionfunction', 'parent', 'input', 'server', 'paramsparent', 'unpack', 'functionreceive', 'routine', 'server', 'messagevariable', 'input', 'request', 'const', 'unpack', 'functionpacket', 'functioncorrect', 'header', 'function', 'declarationtorokhov']",{'incorrect': 100}
"['linux', 'issue', 'performance', 'clientoccurs', 'revalidation', 'alwaysplace', 'attribute', 'different', 'placeregular', 'direnttorokhov']",{'issue': 100}
"['overflow', 'balloon', 'windowoverflow', 'macro', 'windowcould']",{'overflow': 100}
"['server', 'directory', 'windowcurrent', 'directory', 'implementation', 'server', 'handlingresult', 'efficient', 'system', 'entry', 'returnedresult', 'particular', 'performance', 'breakingunnecessary', 'native', 'windowinstead', 'sense', 'structure', 'structure', 'nativelarge', 'number', 'buffer', 'entry', 'sufficientlyreturn', 'native', 'record', 'client', 'information', 'returnediterate', 'entireclose', 'record', 'search', 'directory', 'entryfoldersearch', 'returnedfolder', 'virtual', 'sharefolder', 'share', 'vmwarevirtual', 'drive']",{'buffer': 100}
"['alive', 'vmbackup', 'error', 'timertimer', 'error', 'occurs', 'keepalivetimer', 'crash', 'callbackgbackupstatetorokhov']",{'crash': 100}
"['channel', 'server', 'characteristic', 'creation', 'cleanup', 'sessionpacket', 'return', 'session', 'servertransport', 'protocol', 'reply', 'alwaysallow', 'differentiate', 'clienttransport', 'setting', 'field', 'order', 'detect', 'server', 'clientvalue', 'transport', 'indeedpacket', 'ignore', 'client', 'olderchange', 'session', 'notificationadditional', 'check', 'returnedchange', 'support', 'server', 'notificationrequest', 'individual', 'opcoderemove', 'server', 'prevents', 'opcodes', 'client', 'issue']",{'issue': 100}
"['channel', 'characteristic', 'server', 'sessionobject', 'session', 'client', 'returnedconstant', 'session', 'protocolfuture', 'client', 'releasedchannel', 'session', 'backdoorpacket', 'constantchannel', 'server', 'specificserver', 'createtransport', 'object', 'session', 'serversessioncompatibility', 'issue', 'backward', 'laterprotocol', 'client', 'sessionpacket', 'version', 'maximum', 'servercorrectness', 'session', 'replytorokhov']",{'issue': 100}
"['posix', 'incorrect', 'conversionrecord', 'entry', 'directory', 'field', 'wholerecord', 'length', 'directory', 'value', 'entryrecord', 'valid', 'totalrecord', 'requisite', 'copiedrecord', 'valid', 'routine', 'conversiontorokhov']","{'incorrect': 100, 'length': 100}"
"['string', 'nasty', 'nasty', 'stack', 'removepanic', 'stack', 'parameter']",{'stack': 100}
"['previous', 'version', 'protocolchange', 'servercorrectness', 'compatibility', 'issue', 'backwardsremain', 'fielddefault', 'value']",{'issue': 100}
"['stale', 'information', 'directory', 'readdir', 'withinparental', 'folder', 'uptodate', 'referencerefresh', 'folder', 'issue', 'readdir', 'handletorokhov']",{'issue': 100}
"['system', 'vmmemctl', 'advertise', 'ballooncapability', 'advertisenegotiate', 'balloonstart', 'capability', 'guest', 'sendingreturn', 'capabilityunlock', 'unbatchedunlock', 'batchedbackward', 'compatible', 'protocolprotocol', 'issue', 'unusedtorokhov']",{'issue': 100}
"['simple', 'little', 'threadseparate', 'manager', 'simple', 'writev', 'readvrespect', 'multiple', 'pattern', 'threadmainmem', 'sinceeither', 'background', 'threadreplaces', 'thread', 'preadv', 'pwritevpwritev', 'return', 'manager', 'simplefunction', 'fileio', 'number']",{'thread': 100}
"['potential', 'crash', 'filerotatebynewfilenameargument', 'presentprevent', 'corruption', 'memory', 'potential']",{'crash': 100}
"['error', 'client', 'linux', 'failure', 'accessreturn', 'permission', 'check', 'epermtorokhov']",{'permission': 100}
"['invalid', 'string', 'message', 'crash', 'mightmessage', 'assert', 'debugpointer', 'invalid', 'error', 'generic', 'releasemessage', 'stringtorokhov']",{'crash': 100}
"['toolbox', 'mount', 'shrinkutility', 'toolbox', 'vmware', 'providesshrink', 'executesutility', 'entry', 'check', 'mount', 'utlity', 'specific', 'matchrobust', 'approach', 'causemount', 'issue', 'multiple', 'entryfirst', 'entry', 'current', 'partition', 'entryreturn']",{'issue': 100}
"['visibility', 'issue', 'function', 'createspecific', 'permissiontorokhov']",{'issue': 100}
"['overflow', 'integersecurity', 'dynbufoverflow', 'detect', 'return', 'integerplace', 'stack', 'cleantorokhov']","{'overflow': 100, 'stack': 100}"
"['channel', 'packet', 'large', 'example', 'atomic', 'performpacket', 'buffer', 'receivekernel', 'fulfil', 'allocationsmaller', 'chunk', 'atomicsignal', 'potential', 'downsidedgram', 'signal', 'writingpacket', 'headersufficientpacket', 'sendschange', 'interfacepacket', 'splitchunk', 'actualtorokhov']",{'buffer': 100}
"['resolutionsetworkstation', 'forum', 'trouble', 'thread', 'seeingwould', 'return', 'functionxrrconfigxrrscreensize', 'xrrconfigsizes', 'xrrsizespoint', 'member', 'xrrsizesxrrconfigreturn', 'width', 'xrrsizes', 'heightlonger', 'xrrsizessucceeds', 'xfree', 'implementation', 'contentmemory', 'freedthreadreturn']",{'thread': 100}
"['improper', 'asserts', 'cpuid', 'handlingtrigger', 'asserts', 'input', 'cpuid', 'guest', 'valueinput', 'level', 'range', 'valid', 'withinsecond', 'level', 'assert', 'triggertopology', 'value', 'level', 'rangehandle', 'value', 'runtimecoupletorokhov']",{'improper': 100}
"['vmuser', 'uninstall', 'crash', 'stoppinguninstall', 'launchvmusrhowever', 'instance', 'existingcould', 'crash', 'thereforeprocess', 'vmuser', 'existingprocess', 'problem', 'uninstallproceeds', 'removeregistry', 'entryassert', 'assert', 'registry', 'entryinstaller', 'process', 'finish', 'launchtorokhov']",{'crash': 100}
"['network', 'servicefirst', 'opensuse', 'distros', 'serviceapproach', 'network', 'servicereturn', 'network', 'service', 'statussuspend', 'issue', 'network', 'service', 'returnedstatus', 'service', 'avoidedtorokhov']",{'issue': 100}
"['table', 'support', 'injectingtable', 'support', 'guestprocess', 'legacy', 'release', 'availableplatform', 'vendor', 'setting', 'functionalitytable', 'matchtableoption', 'usable', 'mainlystuff', 'request', 'expose', 'randomprovidesoption', 'table', 'addingexampletableoption', 'table', 'removingsignature', 'example', 'removeremoveprocessedreplace', 'mechanism', 'injectingtable', 'vital', 'blacklistmaybe', 'firmware', 'guest', 'availableimportant', 'slicvendor', 'exclusionvendor', 'buildoverriden', 'restriction', 'configtorokhov']",{'expose': 100}
"['overhead', 'statistic', 'adjustable', 'mxuserapparent', 'almostvariable', 'mechanical', 'entirelyroutine', 'statistic', 'timer', 'mxuseroverhead', 'statistic', 'system', 'mxusertunable', 'statistic', 'basic', 'heavy', 'lighttypical', 'performance', 'linux', 'number', 'runningtimer', 'issue', 'kevinfiledtorokhov']",{'issue': 100}
"['compilation', 'issue', 'incompatible', 'initialization']",{'issue': 100}
"['string', 'allocatedassume', 'asprintf', 'malloc', 'vanzin', 'marcelo', 'mvanzin']",{'Sprintf': 93}
"['restore', 'issue', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['security', 'issuepacket', 'headerpacket', 'check', 'header', 'vanzin', 'marcelo', 'mvanzin']",{'Security': 100}
"['potential', 'issue', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['kernel', 'linuxkernel', 'inode', 'linux', 'structinode', 'const', 'structure', 'attributeattribute', 'accesslinux', 'inode', 'startingfunctionkernel', 'version', 'functionmodifiedkernel', 'changeset', 'functionresolve', 'process', 'linux', 'issue', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['tweak', 'support', 'ubuntu', 'unitycommit', 'detect', 'refresh', 'detect', 'vmware', 'insteadenvironment', 'desktopsemantics', 'return', 'changedalphanumeric', 'success', 'string', 'insensitive', 'vanzin', 'marcelo', 'mvanzin']",{'Sensitive': 90}
"['entireifdef', 'default', 'workingcompatiblediscoveredwould', 'product', 'thing', 'linuxcontainedrandom', 'crash', 'boundary', 'provingunexpectedcould', 'ifdef', 'search', 'vanzin', 'marcelo', 'mvanzin']",{'crash': 100}
"['logger', 'thread', 'giochannelmedicine', 'issue', 'safety', 'vanzin', 'marcelo', 'mvanzin']","{'thread': 100, 'issue': 100}"
"['vmwarectrl', 'randr', 'topologytopology', 'object', 'screen', 'differentiate', 'vmwgfx', 'guest', 'driver', 'informedkernel', 'layout', 'system', 'security', 'theory', 'layout', 'information', 'server', 'update', 'vanzin', 'marcelo', 'mvanzin']",{'Security': 100}
"['issue', 'failure', 'recursive', 'ability', 'facility', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['linux', 'library', 'system', 'uninitializedrather', 'expose', 'vanzin', 'marcelo', 'mvanzin']",{'expose': 100}
"['input', 'space', 'skippingoverflow', 'message', 'layer', 'buffer', 'vanzin', 'marcelo', 'mvanzin']",{'buffer': 100}
"['importinvalid', 'operation', 'guest', 'login', 'executessegmentation', 'process', 'signal', 'crash', 'fault', 'vmtoolsdstack', 'tracesymbol', 'loadedlibrary', 'vanzin', 'marcelo', 'mvanzin']",{'crash': 100}
"['thread', 'window', 'reclaimedthread', 'unique', 'amount', 'vanzin', 'marcelo', 'mvanzin']",{'thread': 100}
"['argument', 'component', 'individualdynbuf', 'ascii', 'serialization', 'libraryreturn', 'backdoor', 'representation', 'individual', 'originaldefer', 'transport', 'serialization', 'vanzin', 'marcelo', 'mvanzin']",{'backdoor': 100}
"['local', 'conformantstick', 'stack', 'scopecorrect', 'people', 'vanzin', 'marcelo', 'mvanzin']",{'stack': 100}
"['detection', 'deviceseems', 'issue', 'reorg', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['string', 'length', 'vestige', 'fixedaround', 'guestinfo', 'technique', 'length', 'assertionchange', 'vanzin', 'marcelo', 'mvanzin']",{'length': 100}
"['utility', 'unzip', 'folder', 'archivedouble', 'click', 'invokes', 'finder', 'requestrequest', 'server', 'forwardedinstead', 'operation', 'backdoor', 'request', 'usingprotocol', 'thereforeempty', 'circuit', 'client', 'length', 'request', 'vanzin', 'marcelo', 'mvanzin']","{'backdoor': 100, 'length': 100}"
"['empty', 'vendor', 'issue', 'trackerserver', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['issue', 'discovedspecific', 'check', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['screen', 'issue', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['original', 'descriptioncomplete', 'crash', 'serverpacket', 'cleancomplete', 'server', 'vanzin', 'marcelo', 'mvanzin']",{'crash': 100}
"['branchconfusion', 'buffer', 'hgfsnodeinfo', 'invalidate', 'inode', 'vanzin', 'marcelo', 'mvanzin']",{'buffer': 100}
"['incorrect', 'usleep', 'windowreturn', 'usleep', 'function', 'posixsuccess', 'window', 'sleep', 'errnoreturn', 'primitive', 'vanzin', 'marcelo', 'mvanzin']",{'incorrect': 100}
"['state', 'servicethread', 'servicetrigger', 'thread', 'manager', 'control', 'state', 'servicestate', 'state', 'serviceknown', 'vanzin', 'marcelo', 'mvanzin']",{'thread': 100}
"['packet', 'memcpy', 'request', 'reducepacket', 'routine', 'alwaysbuffer', 'request', 'memorywritable', 'directory', 'memoryrequest', 'unnecessarypacket', 'routine', 'reasonrequest', 'guest', 'memoryinstead', 'reply', 'writewrite', 'option', 'buffer', 'accesspacket', 'writememcpy', 'vanzin', 'marcelo', 'mvanzin']",{'buffer': 100}
"['logger', 'ensuredefault', 'syslog', 'message', 'release', 'buildsyslog', 'handler', 'defaulthandler', 'config', 'specifiedwould', 'system', 'command', 'resetsyslog', 'containersyslogger', 'openlog', 'issue', 'ident', 'freedreconfigure', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['increase', 'bufferscope', 'increase', 'previouscover', 'buffer', 'guest', 'space', 'vanzin', 'marcelo', 'mvanzin']",{'buffer': 100}
"['prefix', 'unity', 'desktop', 'guessconsidershare', 'appdirdirectory', 'assignedbasenamesubdirectory', 'assignedsubdirreturn', 'sprintf', 'basenameexampledesktopdesktopproblem', 'ideallycompile', 'prefix', 'application', 'vanzin', 'marcelo', 'mvanzin']",{'Sprintf': 100}
"['crash', 'callingrpcinloop', 'rpcin', 'state', 'callbackchannel', 'struct', 'timerhappen', 'rpcinloop', 'crashthread', 'window', 'message', 'queue', 'insideresponse', 'sincestruct', 'rpcin', 'shouldstop', 'channel', 'insteadrpcinloop', 'shouldstop', 'rpcinloop', 'obviouslyrpcin', 'threadpoint', 'problem', 'vanzin', 'marcelo', 'mvanzin']",{'crash': 100}
"['thread', 'mutex', 'deadlock', 'macosmutex', 'result', 'system', 'method', 'vnode', 'callingacquireparticulary', 'table', 'vnodehgfsfreefile', 'invokes', 'functionreclaim', 'vnode', 'inavtivateimplementation', 'holdingresult', 'increase', 'vanzin', 'marcelo', 'mvanzin']","{'thread': 100, 'deadlock': 100}"
"['wrapper', 'vmblock', 'vmware', 'toggleutility', 'utilizestartup', 'manipulation', 'ownership', 'check', 'permissons', 'vanzin', 'marcelo', 'mvanzin']",{'permission': 90}
"['disagreement', 'buffer', 'guestbuffer', 'vanzin', 'marcelo', 'mvanzin']",{'buffer': 100}
"['function', 'register', 'hgfsseekplease', 'check', 'ubuntushare', 'functionfunction', 'operation', 'explicit', 'llseekcould', 'issue', 'design', 'function', 'hgfsseekwrapper', 'registeroperation', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['noise', 'reducepossible', 'spottedposixen', 'threadalready', 'thread', 'aforementioned', 'threadsuppress', 'warning', 'error', 'vanzin', 'marcelo', 'mvanzin']",{'thread': 100}
"['rewrite', 'resolutionset', 'randrrewritten', 'number', 'issue', 'randr', 'vmwarectrl', 'check', 'randr', 'deadlock', 'vmwarectrl', 'vmtoolsd', 'freezeseems', 'changeset', 'issue', 'randr', 'deadlock', 'error', 'recoveryresolution', 'calculation', 'output', 'dimension', 'pixel', 'incorrect', 'error', 'recovery', 'minor', 'vmwgfx', 'vmwarectrl', 'vanzin', 'marcelo', 'mvanzin']","{'issue': 100, 'deadlock': 100, 'incorrect': 100}"
"['useless', 'cleancheckvm', 'backdoor', 'inlinegetopt', 'vanzin', 'marcelo', 'mvanzin']",{'backdoor': 100}
"['worker', 'vmtoolsd', 'threadlifecycle', 'thread', 'vanzin', 'marcelo', 'mvanzin']",{'thread': 100}
"['unicode', 'review', 'commentfunction', 'length', 'point', 'vanzin', 'marcelo', 'mvanzin']",{'length': 100}
"['unicode', 'length', 'vanzin', 'marcelo', 'mvanzin']",{'length': 100}
"['internal', 'correctnesspoint', 'length', 'vanzin', 'marcelo', 'mvanzin']",{'length': 100}
"['useful', 'expose', 'functionunicode', 'problem', 'serious', 'exposingrather', 'vanzin', 'marcelo', 'mvanzin']",{'expose': 100}
"['issue', 'causechannel', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['solaris', 'guestd', 'crash', 'vmxnetlibdnet', 'return', 'address', 'vmxnetconvert', 'crash', 'vanzin', 'marcelo', 'mvanzin']",{'crash': 100}
"['initialize', 'unity', 'desktop', 'guest', 'mappingunity', 'writtencertain', 'layout', 'desktop', 'guest', 'memory', 'event', 'issue', 'guestcurrent', 'desktop', 'guest', 'identity', 'guest', 'createdesktop', 'thing', 'consideredinitialization', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['capabilitysecond', 'instance', 'issue', 'claim', 'vmtoolsdchannel', 'communicate', 'unregisterwould', 'capability', 'state', 'overwriteinstance', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['fakeevent', 'unityupdateenumerates', 'unityproperty', 'windowhandler', 'event', 'propertypropertydeleteinitial', 'stack', 'vanzin', 'marcelo', 'mvanzin']",{'stack': 100}
"['capability', 'advertise', 'maskinginitial', 'implementationcertain', 'issue', 'performance', 'vmxnetemulation', 'maskingsuffers', 'problem', 'performanceadvertise', 'maskingselective', 'module', 'parameter', 'disabledefault', 'insteadknown', 'performance', 'linux', 'issue', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['searchsearch', 'issue', 'entry', 'attribute', 'entry', 'regularcause', 'attribute', 'fieldhgfilecopy', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['console', 'attachingmessage', 'ensures', 'domain', 'detachedconsole', 'issue', 'configuredapplication', 'config', 'console', 'attachinghandler', 'issue', 'invalidcould', 'assert', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['plugin', 'minorprovider', 'issue', 'incompatible', 'productionwithout', 'changecurrent', 'versionchangeprovide', 'plugin', 'registration', 'pointerplugin', 'provider', 'allowserror', 'callbackfunction', 'plugins', 'information', 'print', 'state', 'inlineconsistentmacro', 'convenienceshutdown', 'provider', 'plugins', 'sendingwithout', 'stateshutdown', 'reference', 'handlerplugin', 'plugins', 'regular', 'debugsignal', 'safer', 'plugins', 'registerright', 'complicatedallow', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['error', 'nonblock', 'incorrect', 'dgram', 'sendingerror', 'destinationwould', 'linux', 'assert', 'length', 'buffervalid', 'vanzin', 'marcelo', 'mvanzin']","{'incorrect': 100, 'length': 100}"
"['interface', 'ignore', 'guest', 'invalidinterface', 'bringinginterface', 'plugin', 'guest', 'ifacecause', 'crash', 'structure', 'plugin', 'vanzin', 'marcelo', 'mvanzin']",{'crash': 100}
"['crash', 'backdoordetect', 'provider', 'checkcheck', 'backdoor', 'vmtoolsdinitialize', 'plugin', 'channel', 'vanzin', 'marcelo', 'mvanzin']","{'crash': 100, 'backdoor': 100}"
"['timerfunny', 'state', 'sleepthough', 'figure', 'modifymonotonic', 'preference', 'basedimportant', 'quick', 'timer', 'firingtimer', 'coarser', 'pointerguest', 'gatherrpcin', 'library', 'plugin', 'alongplace', 'timerrpcin', 'iteration', 'delayreproduce', 'issue', 'originalbehave', 'linux', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['maximum', 'enforceversion', 'protocol', 'buffer', 'minor', 'revision', 'guestlibfield', 'layout', 'vanzin', 'marcelo', 'mvanzin']",{'buffer': 100}
"['extra', 'space', 'possiblepoint', 'argbufptr', 'argbufargbufptr', 'strlen', 'character', 'argbufargument', 'stringargbufptr', 'overrun', 'bufferremove', 'extra', 'space', 'vanzin', 'marcelo', 'mvanzin']",{'overrun': 100}
"['kernel', 'address', 'memorychange', 'problemkernel', 'return', 'module', 'memory', 'linux', 'structure', 'incorrect', 'sizeofgettingelement', 'state', 'vanzin', 'marcelo', 'mvanzin']",{'incorrect': 100}
"['legacy', 'probelmspacket', 'length', 'vanzin', 'marcelo', 'mvanzin']",{'length': 100}
"['message', 'length', 'maximum', 'handleprovide', 'maximum', 'length', 'messagemxuser', 'statistic', 'minormessage', 'stack', 'vanzin', 'marcelo', 'mvanzin']","{'length': 100, 'stack': 100}"
"['kevlar', 'breakcomment', 'original', 'barrierbullet', 'proof', 'barrieroften', 'barrierbarrierbarriersmall', 'amount', 'variablefunny', 'possible', 'schedulersecond', 'thread', 'strangewould', 'detect', 'original', 'barriercatch', 'version', 'thread', 'vanzin', 'marcelo', 'mvanzin']",{'thread': 100}
"['piece', 'functionality', 'provideunicode', 'string', 'length', 'point', 'characterreturn', 'string', 'vanzin', 'marcelo', 'mvanzin']",{'length': 100}
"['solaris', 'ballon', 'crash', 'finish', 'cleanup', 'space', 'balloonmodule', 'crash', 'vanzin', 'marcelo', 'mvanzin']",{'crash': 100}
"['problem', 'processing', 'warning', 'mechanism', 'initializer', 'message', 'logwritelogfile', 'queue', 'thread', 'invent', 'writer', 'radical', 'stuff', 'rotation', 'practical', 'criterion', 'simple', 'solution', 'vanzin', 'marcelo', 'mvanzin']",{'thread': 100}
"['inlinereaction', 'issue', 'encounteredrequest', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['nativevthreadid', 'usage', 'removeincludes', 'prevents', 'chicken', 'problem', 'aroundchange', 'orderstatistic', 'thread', 'vanzin', 'marcelo', 'mvanzin']",{'thread': 100}
"['vmmemctl', 'solaris', 'userspaceinstead', 'thread', 'program', 'userspacekernel', 'solaris', 'proper', 'createstart', 'vmmemctld', 'vanzin', 'marcelo', 'mvanzin']",{'thread': 100}
"['return', 'threadspace', 'glibcstack', 'munmaps', 'thread', 'memoryimplementationhittingavoid', 'threadmanualpretty', 'enoughwithout', 'automaticremove', 'install', 'cleanupglobal', 'thread', 'activerecycle', 'vanzin', 'marcelo', 'mvanzin']",{'thread': 100}
"['switch', 'format', 'specific', 'stats', 'vmmemctl', 'methodcommon', 'statistic', 'output', 'routine', 'ballooningsolraris', 'awkward', 'linux', 'kstatswrapper', 'additional', 'introduceevery', 'snprintf', 'generateparticular', 'stats', 'vanzin', 'marcelo', 'mvanzin']",{'Sprintf': 93}
"['support', 'linux', 'guestmemory', 'mechanism', 'support', 'operation', 'support', 'control', 'memorystartup', 'guest', 'sends', 'allocatesrecycles', 'number', 'guest', 'sends', 'guestsends', 'number', 'guest', 'obligesprocessrequest', 'containchain', 'requestchainingchain', 'startcontains', 'length', 'chain', 'processedterminate', 'request', 'guest', 'session', 'vanzin', 'marcelo', 'mvanzin']",{'length': 100}
"['watchdog', 'thread', 'condvar', 'operation', 'mxuserpanic', 'thread', 'crash', 'vanzin', 'marcelo', 'mvanzin']","{'thread': 100, 'crash': 100}"
"['failure', 'assertion', 'condvar', 'attemptcondvar', 'thread', 'freedthread', 'assertion', 'condvar', 'failure', 'anotheroccurproblem', 'increment', 'lockedreference', 'condvar', 'native', 'vanzin', 'marcelo', 'mvanzin']",{'thread': 100}
"['level', 'crash', 'domainsourceforgedetail', 'vanzin', 'marcelo', 'mvanzin']",{'crash': 100}
"['press', 'separation', 'mxuserregister', 'function', 'sinceprovide', 'function', 'possible', 'expose', 'mxuseruserland', 'functionalityinclude', 'thing', 'tweakedeither', 'vanzin', 'marcelo', 'mvanzin']",{'expose': 100}
"['gmtime', 'thread', 'localtimechange', 'gmtime', 'vanzin', 'marcelo', 'mvanzin']",{'thread': 100}
"['toolbox', 'command', 'refactorbetter', 'source', 'mechanicalcommand', 'handler', 'specificclear', 'interface', 'sourcecommand', 'messy', 'minor', 'parameter', 'issue', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['threadignores', 'thread', 'unsafelocal', 'variant', 'check', 'definedbuffer', 'vanzin', 'marcelo', 'mvanzin']",{'thread': 100}
"['printf', 'multi', 'threadmxuserfunction', 'thread', 'windowallocate', 'vanzin', 'marcelo', 'mvanzin']",{'thread': 100}
"['context', 'propercontext', 'pointerstruct', 'rqcontext', 'structure', 'definetrick', 'expose', 'vanzin', 'marcelo', 'mvanzin']",{'expose': 100}
"['tolerate', 'windowcorrect', 'windowreturn', 'operation', 'handlingprocess', 'thread', 'targettedparent', 'directory', 'anotherprocess', 'threadproblem', 'retriesamount', 'retries', 'duration', 'attempt', 'sleep', 'retriesrather', 'retry', 'vanzin', 'marcelo', 'mvanzin']",{'thread': 100}
"['purge', 'unity', 'successful', 'buffer', 'updatechannel', 'update', 'unityproblem', 'surface', 'buffer', 'update', 'removebuffer', 'update', 'mightwindowpath', 'removefirst', 'doubleresult', 'window', 'appearedafterward', 'vanzin', 'marcelo', 'mvanzin']",{'buffer': 100}
"['interface', 'guestchange', 'consistlinux', 'interfacepacket', 'contiguous', 'request', 'interface', 'guest', 'buffercontiguous', 'linux', 'buffer', 'guest', 'struct', 'slicedpassedpacket', 'transport', 'buffersizevariablelinux', 'interfaceimplement', 'hgfsserver', 'communication', 'interfacetransport', 'earlierthought', 'complicatedversionmemcpy', 'useful', 'systemrelease', 'vanzin', 'marcelo', 'mvanzin']",{'buffer': 100}
"['simple', 'wcrtomb', 'threadingprintf', 'wcrtomb', 'windowthread', 'thread', 'thinkdefine', 'wcrtomb', 'comment', 'availablesandbox', 'builddefine', 'wcrtomb', 'thread', 'stillsetlocale', 'thread', 'vanzin', 'marcelo', 'mvanzin']",{'thread': 100}
"['tweakavoid', 'static', 'simplify', 'buffer', 'implementationseveral', 'charset', 'vanzin', 'marcelo', 'mvanzin']",{'buffer': 100}
"['rotationsupport', 'logger', 'configurable', 'extendrotation', 'update', 'workingdocumentation', 'reflect', 'configdouble', 'bonus', 'issue', 'vmware', 'message', 'newlines', 'embedsunless', 'logger', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['issue', 'couplelevel', 'thing', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['outbound', 'cleanupchannel', 'defers', 'operation', 'outboundchannel', 'creation', 'rpcin', 'rpcin', 'operation', 'availablemessage', 'issuechannel', 'rpcin', 'conflictpossible', 'issue', 'amongrpcchannel', 'private', 'structurerpcchannelexpose', 'structure', 'header', 'minimumallow', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['rpcout', 'rpcchannel', 'channel', 'threadrpcout', 'minor', 'backdoor', 'vanzin', 'marcelo', 'mvanzin']",{'backdoor': 100}
"['error', 'compilerreporteddshandlemessage', 'vmcrosstalk', 'common', 'functionvmcrosstalk', 'common', 'pointer', 'warning', 'targetargument', 'differ', 'signedness', 'dslookupactiondshandlemessage', 'making', 'changingwritten', 'vanzin', 'marcelo', 'mvanzin']",{'signedness': 100}
"['backedwithout', 'changedifference', 'functional', 'introduces', 'whatsoever', 'library', 'functionoriginal', 'descriptionstrerror', 'version', 'threadthread', 'memory', 'error', 'reuses', 'thread', 'requiresmanage', 'caller', 'functionlocal', 'error', 'storage', 'threadfunction', 'vanzin', 'marcelo', 'mvanzin']",{'thread': 100}
"['signedness', 'compile', 'warning', 'pvscsiexpects', 'proper', 'numbershuts', 'compile', 'warning', 'vanzin', 'marcelo', 'mvanzin']",{'signedness': 100}
"['strerror', 'version', 'threadthread', 'memory', 'error', 'reuses', 'thread', 'requiresmanage', 'caller', 'functionlocal', 'error', 'storage', 'threadfunction', 'presentchange', 'vanzin', 'marcelo', 'mvanzin']",{'thread': 100}
"['compilation', 'latercompilation', 'issue', 'linuxinclude', 'pointinginclude', 'longerkernel', 'sinceincludes', 'macro', 'sincekernel', 'guest', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['branchwould', 'image', 'issue', 'retrievedimage', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['signal', 'generic', 'control', 'plumb', 'sends', 'mechanism', 'generic', 'issue', 'controlregistration', 'specificeither', 'vmtoolsd', 'register', 'blindlycontrol', 'possible', 'proof', 'future', 'sincenotification', 'possible', 'example', 'deviceregistration', 'pluginsshutdown', 'message', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['kernel', 'module', 'warning', 'building', 'linuxvmhgfs', 'module', 'warning', 'compilerlinux', 'vmsoft', 'function', 'hgfsbuildpathsignedness', 'pointer', 'warning', 'vmsoft', 'differ', 'linux', 'assignment', 'targetlinux', 'vmsoft', 'signedness', 'pointer', 'argument', 'warning', 'vmsoft', 'differ', 'linux', 'targetlinux', 'vmsoft', 'pointer', 'argument', 'warning', 'vmsoft', 'differ', 'linux', 'target', 'vanzin', 'marcelo', 'mvanzin']",{'signedness': 100}
"['linux', 'bufferinstead', 'memory', 'chunk', 'sendingchannel', 'vsock', 'local', 'buffer', 'usingtransport', 'thread', 'memory', 'receiver', 'allocationnecessary', 'memory', 'variable', 'groundthread', 'rework', 'logicreceive', 'logic', 'channel', 'handlingtransport', 'vanzin', 'marcelo', 'mvanzin']","{'buffer': 100, 'thread': 100}"
"['environment', 'program', 'withoutlinux', 'vmware', 'loaderenvironment', 'various', 'bundledenvironment', 'variable', 'causeprocess', 'vmware', 'scriptlibrary', 'geditlibpango', 'version', 'conflictlibrary', 'versionstore', 'solution', 'loaderenvironmentplace', 'infrastructure', 'issue', 'neededclient', 'wrinkle', 'allowschange', 'track', 'programaticallyenvironment', 'update', 'processingenviron', 'writevariable', 'serial', 'hashtablerunscript', 'runprogram', 'vanzin', 'marcelo', 'mvanzin']",{'issue': 100}
"['pthreads', 'library', 'freebsdswitch', 'pthread', 'followup', 'chagelibrary', 'threadinginstead', 'stock', 'vanzin', 'marcelo', 'mvanzin']",{'thread': 92}
"['window', 'toolbox', 'crash', 'dialogexpect', 'window', 'close', 'dialoginstead', 'vanzin', 'marcelo', 'mvanzin']",{'crash': 100}
"['definition', 'parametermacro', 'moduleprefix', 'module', 'parameter', 'smart', 'compiler', 'decidinglinux', 'definedrather', 'integer', 'number', 'revision', 'printdefine', 'fieldstyle', 'camel', 'cleanup', 'vanzin', 'marcelo', 'mvanzin']",{'integer': 100}
"['macro', 'definition', 'incorporate', 'backdoormacro', 'statelogger', 'magic', 'backdoor']",{'backdoor': 100}
