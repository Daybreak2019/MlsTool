message,fuzzy
"['unpacker', 'local', 'methodfollowreason', 'local', 'thread']",{'thread': 100}
"['causedthread', 'multiplefluentd', 'fluentfailure', 'thread', 'security', 'multiformat', 'message', 'falsefluentd', 'plugin', 'block', 'runner', 'classhappens', 'format', 'message', 'mismatch', 'invaliddisconnectashie']","{'thread': 100, 'Security': 100}"
"['readingshutdown', 'readingensure', 'patch', 'secdonds', 'ensure', 'remainingeffectwithout', 'thread', 'reading', 'occurreddefault', 'enabledashie']",{'thread': 100}
"['thread', 'implementationprevent', 'sleep', 'implementlimit', 'readinghatake']",{'thread': 100}
"['incorrect', 'usageclear', 'hatake']",{'incorrect': 100}
"['thread', 'featureclear', 'hatake']",{'thread': 100}
"['interger', 'value', 'constantclear', 'hatake']",{'integer': 93}
"['thread', 'existence', 'object', 'checkclear', 'hatake']",{'thread': 100}
"['thread', 'testcasesclear', 'hatake']",{'thread': 100}
"['entire', 'thread', 'sleep', 'kernelsingle', 'previous', 'implementationentire', 'thread', 'pause', 'sleep', 'kernelclear', 'hatake']",{'thread': 100}
"['mergefluent', 'issue', 'requesttlsserver', 'information', 'message', 'error']",{'issue': 100}
"['tlsserver', 'information', 'message', 'errorinvalid', 'certificate', 'outputtedclient', 'investigatesslerror', 'errno', 'syscall', 'unexpected', 'state', 'openssl', 'error', 'server', 'connectionsslerror', 'errno', 'unexpected', 'state', 'alert', 'openssl', 'error', 'certificate', 'connectionsslerror', 'errno', 'unexpected', 'state', 'alert', 'openssl', 'error', 'certificate']",{'OpenSSL': 100}
"['windowsfile', 'errorretrieve', 'getlasterror', 'windowsfile', 'errorinternal', 'reset', 'errorrandom', 'plugin', 'unrecoverable', 'errorexistent', 'followingsegment', 'error', 'fluent', 'winerrorfiddle', 'issue', 'method', 'avoidmethod', 'fiddle', 'libdoc', 'stdliblasterror', 'method', 'equivalentcosmoerror', 'replaces', 'commitashie']",{'issue': 100}
"['cefec', 'mergefluent', 'issue', 'error', 'incorrect']","{'issue': 100, 'incorrect': 100}"
"['incorrect', 'message', 'windowsfile', 'errorsystemcallerror', 'errorexample', 'message', 'correcterrno', 'epipeashie']",{'incorrect': 100}
"['mergeosela', 'issue', 'requestenumerable', 'method', 'issue']",{'issue': 100}
"['config', 'insteadjsonload', 'security', 'rubocopdefault', 'autocorrect', 'disabledusingvalue', 'object', 'reading', 'single', 'false', 'proper', 'ratherfalsesimilar', 'issueclear', 'hatake']",{'Security': 100}
"['insteadsecurity', 'rubocopinvocation', 'process', 'access', 'symbolvariable', 'serious', 'security', 'input', 'usingargument', 'kernelwould', 'betterclear', 'hatake']",{'Security': 100}
"['mergewithshubh', 'master', 'requestquality', 'issue']",{'issue': 100}
"['testingrecent', 'default', 'disables', 'vulnerability', 'alwaysmultiple', 'check', 'specify', 'version', 'failure', 'exceptionsslerror', 'errno', 'state', 'openssl', 'error', 'protocol', 'availablelevel', 'fluentd', 'block', 'runner', 'classversionashie']",{'OpenSSL': 100}
"['thread', 'callingashie']",{'thread': 100}
"['previous', 'openssl', 'passedopenssl', 'rejectvalid', 'openssl', 'createashie']",{'OpenSSL': 100}
"['injection', 'fasterchange']",{'injection': 100}
"['injection', 'unixtime']",{'injection': 100}
"['buffer', 'request', 'fluentrefactor', 'buffer']",{'buffer': 100}
"['calculation', 'timekeys', 'buffer', 'chunkmasahiro', 'nakagawa']",{'buffer': 100}
"['timekey', 'metric', 'buffer', 'requestcalculation', 'timekey', 'buffer', 'stats']",{'buffer': 100}
"['mergecipher', 'ashie', 'requestcipher', 'openssl', 'correcty']",{'OpenSSL': 100}
"['buffer', 'metadata', 'optimization', 'comparison', 'enable', 'platformclear', 'hatake', 'takuro', 'ashie']",{'buffer': 100}
"['ebffdmerge', 'timekey', 'unstable', 'request', 'fluent', 'method', 'conparisontimekey', 'precise', 'buffer', 'optimization']",{'buffer': 100}
"['cipher', 'openssl', 'correcty', 'olderdefault', 'reverts', 'openssl', 'sincecipher', 'calledopensslopenssl', 'stableopenssl', 'stableashie']","{'cipher': 100, 'OpenSSL': 100}"
"['timekey', 'precise', 'buffer', 'value', 'object', 'returnwindowequal', 'stablelinuxequal', 'stable', 'linuxaarch', 'linuxequal', 'stable', 'linuxarmvl', 'linuxequal', 'armvl', 'stable', 'linuxbigger', 'unixtimevalidity', 'check', 'optimization', 'methodclear', 'hatake']",{'buffer': 100}
"['requestmessage', 'buffer']",{'buffer': 100}
"['timekey', 'buffer', 'update']",{'buffer': 100}
"['calculation', 'timekey', 'buffer', 'statstrack', 'approach', 'currentchunk', 'timekey', 'result', 'almostinitial', 'flushsimple', 'timely', 'commitevery', 'flush']",{'buffer': 100}
"['sslcontext', 'openssl', 'supportopenssllater', 'supportopenssl', 'supportganmacs', 'iwama']",{'OpenSSL': 100}
"['feeff', 'mergesecuirty', 'audit', 'request', 'ganmacsdocument', 'security', 'audit']",{'Security': 100}
"['document', 'security', 'auditganmacs', 'iwama']",{'Security': 100}
"['requestcloser', 'issue']",{'issue': 100}
"['previous', 'behavior', 'fluentdcause', 'glitch', 'overflowcause', 'specifyingwinsockfluent', 'issue', 'fluentd', 'reallyfluentd', 'fluentclear', 'hatake']",{'issue': 100}
"['permission', 'windowreturn', 'alwaysclear', 'hatake']",{'permission': 100}
"['permission', 'environment', 'windowclear', 'hatake']",{'permission': 100}
"['edffede', 'mergemerge', 'buffer', 'request', 'ganmacs', 'flush', 'buffer']",{'buffer': 100}
"['tempfile', 'binmodeinvalid', 'chraracter', 'plain', 'decompresshandle', 'tempfile', 'withindefault', 'content', 'problemoccurs', 'errorwindow', 'microsoft', 'computer', 'eventid', 'activityid', 'security', 'eventrecordid', 'threadid', 'eventdata', 'version', 'tcosmo', 'opcode', 'processid', 'description', 'userid', 'tdesktop', 'providerguid', 'providername', 'level', 'keywords', 'desktopchunk', 'compressclear', 'hatake']",{'Security': 100}
"['bbbec', 'mergemerge', 'permission', 'const', 'request', 'ganmacs', 'collectplace', 'permission']",{'permission': 100}
"['revert', 'changerecent', 'interruption', 'thread', 'fluentdmasahiro', 'nakagawa']",{'thread': 100}
"['place', 'permission', 'collectganmacs', 'iwama']",{'permission': 100}
"['adcddf', 'mergestack', 'issue', 'request', 'fluentstack', 'server', 'issue']",{'issue': 100}
"['stack', 'server', 'issuemasahiro', 'nakagawa']",{'stack': 100}
"['thread', 'computation', 'stageharish']",{'thread': 100}
"['config', 'systemexample', 'configsystemsystemvalue', 'ambiguous', 'config', 'parameter', 'optionnumber', 'string', 'integer', 'exceptionashie']",{'integer': 100}
"['value', 'integer', 'parse', 'ability', 'floatconfig', 'option', 'strictconfigsupportashie']",{'integer': 100}
"['expose', 'endpoint', 'fluentd', 'version', 'configflorimond']",{'expose': 100}
"['mergestack', 'issue', 'request', 'fluentstack', 'helper', 'server', 'issue']",{'issue': 100}
"['stack', 'helper', 'server', 'issuemasahiro', 'nakagawa']",{'stack': 100}
"['mergeganmacs', 'label', 'label', 'issue']",{'issue': 100}
"['thread', 'request', 'erroroccur', 'potential', 'threaderror', 'sigusr']",{'thread': 100}
"['redundant', 'objectcause', 'thread', 'errorreportedpdjykkdwaj', 'fluentdfinish', 'thread', 'methodreplace', 'block', 'style', 'additionclarify']",{'thread': 100}
"['expose', 'supervisor', 'accessganmacs', 'iwama']",{'expose': 100}
"['mergemerge', 'client', 'request', 'fluentaccess', 'security']",{'Security': 100}
"['access', 'security', 'clientmasahiro', 'nakagawa']",{'Security': 100}
"['restore', 'buffer', 'compressingkotes', 'andreas']",{'buffer': 100}
"['mergeganmacs', 'checkbug', 'requestraise', 'buffer', 'error', 'config']",{'buffer': 100}
"['adcee', 'mergepatch', 'jkohen', 'requesttitle', 'thread']",{'thread': 100}
"['thread', 'methodjavier', 'kohen']",{'thread': 100}
"['title', 'threadunderstand', 'usage', 'thread', 'commandjavier', 'kohen']",{'thread': 100}
"['local', 'thread', 'unpackerganmacs', 'iwama']",{'thread': 100}
"['object', 'local', 'thread', 'unpacker', 'msgpackerganmacs', 'iwama']",{'thread': 100}
"['packer', 'object', 'local', 'thread', 'msgpackerganmacs', 'iwama']",{'thread': 100}
"['integer', 'modifiedganmacs', 'iwama']",{'integer': 100}
"['thread', 'request', 'ganmacsloadbalancer', 'thread']",{'thread': 100}
"['mergemerge', 'thread', 'request', 'ganmacs', 'uniquetitle', 'thread']",{'thread': 100}
"['object', 'buffer', 'statisticmasahiro', 'nakagawa']",{'buffer': 100}
"['mergemmussomele', 'support', 'private', 'openssl', 'socket']",{'OpenSSL': 100}
"['private', 'openssl', 'supportmussomele']",{'OpenSSL': 100}
"['private', 'openssl', 'helper', 'parse', 'creatinghigher', 'openssl', 'levelproper']",{'OpenSSL': 100}
"['update', 'tzinfochange', 'integer', 'tzinfoobjectmasahiro', 'nakagawa']",{'integer': 100}
"['mergemerge', 'request', 'ganmacs', 'template', 'issue', 'updatetemplate', 'update', 'issue']",{'issue': 100}
"['output', 'buffer', 'plugins', 'statsmonitoringganmacs', 'iwama']",{'buffer': 100}
"['incorrect', 'reference']",{'incorrect': 100}
"['super', 'movedinner', 'buffer', 'context', 'tlsserver', 'coolio', 'superinstead', 'inner', 'buffer', 'tlsserver', 'coolio', 'reason', 'mutex', 'coolio', 'sinceclose', 'tlsserver', 'eventuallyganmacs', 'iwama']",{'buffer': 100}
"['mergemerge', 'benwh', 'stream', 'buffer', 'request', 'configurableconfig', 'param']",{'buffer': 100}
"['timekey', 'metric', 'requestexpose', 'current', 'metric', 'buffer', 'timekeys']",{'buffer': 100}
"['current', 'metric', 'buffer', 'useful', 'thingstill', 'current', 'message', 'buffer', 'oldestmaximum', 'system', 'buffer', 'mightindicate', 'upstream', 'mcdonald', 'steven']",{'buffer': 100}
"['mergemaster', 'alexnguyen', 'requestmessage', 'check', 'buffer', 'lenght']",{'buffer': 100}
"['message', 'check', 'buffer', 'lenghtnguyen']",{'buffer': 100}
"['requestchange', 'security']",{'Security': 100}
"['travis', 'openssl', 'issuemasahiro', 'nakagawa']",{'OpenSSL': 100}
"['openssl', 'errormasahiro', 'nakagawa']",{'OpenSSL': 100}
"['edaeb', 'mergemerge', 'output', 'thread', 'request']",{'thread': 100}
"['interruption', 'thread', 'affectdataerror', 'thread', 'condition', 'changemasahiro', 'nakagawa']",{'thread': 100}
"['problem', 'parser', 'insertion', 'parser', 'section', 'optionoccurs', 'event', 'parser', 'value', 'single', 'handlearray', 'inputsolve', 'semantics', 'issue', 'emulatingplugins', 'httpinput', 'plugin', 'parser', 'prone', 'approach', 'errorratherpatch', 'approach', 'differentreuse', 'parser', 'wheneverrecord', 'input', 'applyingcurrentclass', 'solveseiji']",{'issue': 100}
"['exceptionfileoutputtest', 'append', 'invalid', 'error', 'dataerrordistanceweird', 'confirmbrokentestedstrong', 'suspicion', 'wrapper', 'buildserious', 'corrupts', 'appveyor', 'pointergarbage', 'readingpatch', 'mitigate', 'issue', 'attemptfunction', 'object', 'ratherprotectseiji']",{'issue': 100}
"['appveyor', 'failure', 'counter', 'roundingpoint', 'induces', 'errorenvironment', 'windowprintfcause', 'failure', 'majortravel', 'helper', 'patch', 'issue', 'method', 'introducingtravel']",{'issue': 100}
"['parameter', 'batch', 'honorbatch', 'event', 'support', 'pluginsingle', 'problem', 'insertion', 'optionrecord', 'batch', 'requestlocalhostrecord', 'honor', 'patch', 'issue', 'optionvalue', 'plugin', 'parserseiji']",{'issue': 100}
"['thread', 'reopenoccurs', 'errorcontext', 'error']",{'thread': 100}
"['faadeyaron', 'issue', 'field', 'nginx']",{'issue': 100}
"['mergemerge', 'chunk', 'request', 'fluent', 'limit', 'queuednumber', 'chunk', 'buffer', 'control']",{'buffer': 100}
"['number', 'chunk', 'buffer', 'control']",{'buffer': 100}
"['negative', 'support', 'index', 'placeholder', 'extractoutput', 'extractedextractedvariable', 'element', 'length', 'useful', 'extract']",{'length': 100}
"['output', 'request', 'fujimotosprevent', 'output', 'thread']",{'thread': 100}
"['output', 'thread', 'spike', 'issueretry', 'flush', 'threadretry', 'behaviourvalue', 'variable', 'interval', 'meaninglesssystem', 'sleepinterval', 'sleepconsume', 'thread', 'resource']",{'thread': 100}
"['request', 'fluent', 'conditioncondition', 'thread', 'security', 'multi']","{'thread': 100, 'Security': 100}"
"['environment', 'security', 'multi', 'thread', 'conditionrequestvariable', 'multi', 'thread']","{'Security': 100, 'thread': 100}"
"['random', 'failure', 'assumesbackground', 'thread', 'flushingwould', 'execution', 'delayresult', 'assumption', 'undefinedadditional', 'patch', 'failure', 'takingflush', 'suppress', 'background']",{'thread': 100}
"['implementation', 'concurrencythread', 'iohandler', 'methodthread', 'multiple', 'considersituation', 'followingthread', 'tailinput', 'shutdown', 'detachevent', 'filesystem', 'trigger', 'statwatchereventloop', 'threadprevent', 'patch', 'issuemultiple', 'session', 'thread']",{'thread': 100}
"['mergecosmo', 'expose', 'requestexpose', 'instance']",{'expose': 100}
"['expose', 'instance']",{'expose': 100}
"['buffer', 'fluentd', 'fluent']",{'buffer': 100}
"['mergefluent', 'buffer']",{'buffer': 100}
"['instance', 'buffer']",{'buffer': 100}
"['requestcorruption', 'issue']",{'issue': 100}
"['buffer', 'metadata', 'request', 'fluentorder', 'buffer', 'metadata']",{'buffer': 100}
"['thread', 'metadata']",{'thread': 100}
"['corruption', 'issuesingle', 'input', 'buffer', 'plugin', 'share', 'acrosssuspicion', 'concurrent', 'buffer', 'sometimesmodify', 'connectionmessageshort', 'message', 'receivedshort', 'message', 'buffer', 'parsedlongmessage', 'contains', 'nshortshort', 'longm', 'lengthanother', 'message', 'buffer', 'longmanothermessage', 'whole', 'subsequent', 'thrownhandledpattern', 'eventuallyconnection']","{'buffer': 100, 'concurrent': 100}"
"['process', 'buffer', 'chunkthread', 'buffer', 'destructive', 'flushchunk', 'queue']",{'buffer': 100}
"['deadlock', 'chunk', 'alwaysissue', 'fluentd', 'fluent', 'commitdeadlock', 'occurs', 'commitmultiple', 'event', 'input', 'thread', 'pluginelement', 'input', 'thread', 'process', 'plugin', 'firstaquires', 'buffer', 'chunkaquires', 'enqueue', 'thread', 'buffersynchronize', 'bufferenqueue', 'thread', 'aquire', 'bufferbufferelement', 'input', 'thread', 'process', 'plugin', 'secondsynchronize', 'aquire', 'buffer']","{'deadlock': 100, 'thread': 100, 'buffer': 100}"
"['mergemerge', 'request', 'generation', 'mpeltonen', 'issue', 'certificateconformance', 'certificate', 'specification']","{'generation': 100, 'issue': 100}"
"['retry', 'state', 'updateretry', 'buffer', 'failure', 'error', 'flush', 'flush', 'problematic', 'disabledoutput', 'parameter', 'resolveretry', 'considers', 'rollback', 'control', 'parameter', 'behaviour']",{'buffer': 100}
"['mergemerge', 'chunk', 'support', 'request', 'fluent', 'record', 'accessorchunk', 'output', 'buffer', 'support']",{'buffer': 100}
"['chunk', 'output', 'buffer', 'support']",{'buffer': 100}
"['ccfff', 'eafcd', 'mergemerge', 'request', 'truncate', 'metadata', 'fluentmetadata', 'buffer']",{'buffer': 100}
"['dbaad', 'mergemerge', 'thread', 'request', 'fluent', 'condition', 'flushstate', 'retry', 'thread', 'condition', 'flush']",{'thread': 100}
"['state', 'retry', 'thread', 'condition', 'flushsolution', 'performance', 'simplebetter', 'solution', 'retry']",{'thread': 100}
"['error', 'permission', 'request', 'fluent']",{'permission': 100}
"['mergemerge', 'kazegusuri', 'check', 'buffer', 'request', 'classvariable', 'instance', 'check', 'buffer']",{'buffer': 100}
"['variable', 'instance', 'check', 'buffer']",{'buffer': 100}
"['ecfaa', 'mergedeadlock', 'input', 'request', 'fluentdeadlock', 'output', 'input', 'buffer', 'startup']",{'buffer': 100}
"['deadlock', 'output', 'input', 'buffer', 'startupoutput', 'thread', 'callinginput', 'sometimeshappensoutput', 'blockproblem']","{'deadlock': 100, 'buffer': 100, 'thread': 100}"
"['mergefluent', 'buffer', 'metadata', 'error']",{'buffer': 100}
"['metadata', 'errorphase', 'buffer', 'metadata']",{'buffer': 100}
"['cellophane', 'master', 'requestplugin', 'directory', 'issue']",{'issue': 100}
"['pattern', 'plugin', 'directory', 'issue']",{'issue': 100}
"['mergemerge', 'error', 'buffer', 'request', 'limit', 'fluent', 'queueplugins']",{'buffer': 100}
"['mergemerge', 'error', 'buffer', 'request', 'revert', 'limit', 'fluent', 'queuerevert', 'plugins']",{'buffer': 100}
"['mergemerge', 'error', 'buffer', 'request', 'limit', 'fluent', 'queueplugins']",{'buffer': 100}
"['identify', 'deadlock']",{'deadlock': 100}
"['scheduling', 'thread']",{'thread': 100}
"['issue', 'accidental']",{'issue': 100}
"['event', 'issue']",{'issue': 100}
"['event', 'thread', 'disorderd', 'plugin']",{'thread': 100}
"['event', 'thread']",{'thread': 100}
"['reason', 'security', 'function', 'random', 'safer']",{'Security': 100}
"['mergemerge', 'buffer', 'request', 'plugin', 'buffer', 'plugin', 'directory']",{'buffer': 100}
"['plugin', 'buffer', 'directory']",{'buffer': 100}
"['worker', 'integer']",{'integer': 100}
"['worker', 'buffer', 'multi', 'handlesingle', 'worker', 'workingdirectory', 'directory', 'workern', 'createworkern', 'createprocess', 'multi', 'worker', 'single', 'process', 'serverraise', 'errorprocess', 'directory', 'multi']",{'buffer': 100}
"['octet', 'permission', 'integer']","{'permission': 100, 'integer': 100}"
"['buffer', 'request', 'fluent', 'queueinfinite', 'shutdown']",{'buffer': 100}
"['buffer', 'plugin', 'automatic', 'configuration']",{'buffer': 100}
"['request', 'result', 'fluent', 'injectraise', 'chunk', 'buffer', 'error']",{'buffer': 100}
"['buffer', 'errorhelper', 'plugin', 'outputoutput', 'effect', 'plugin', 'value', 'extract', 'hostname']",{'buffer': 100}
"['worker', 'introduce', 'fluentd', 'process', 'errorserverengine', 'worker', 'restart', 'unrecoverable', 'error', 'configurationsituation', 'exampleworker', 'exists', 'directoryhelper', 'server', 'plugin', 'permission', 'errorothersnonsense', 'unrecoverable', 'errorwrong']",{'permission': 100}
"['integer', 'version', 'fluent']",{'integer': 100}
"['cafeamerge', 'buffer', 'request', 'fluent', 'compattraditional', 'parameter']",{'buffer': 100}
"['window', 'serverengine', 'update', 'crash']",{'crash': 100}
"['shutdown', 'iohandler', 'method', 'sequencewindow', 'event', 'touch', 'thread']",{'thread': 100}
"['specify', 'title', 'thread']",{'thread': 100}
"['optionstdin', 'system', 'status', 'output', 'child', 'process', 'plugin', 'valid', 'plugin', 'blockstatus', 'thread', 'child', 'process', 'handledprocess', 'child', 'accident']",{'thread': 100}
"['thread', 'shutdown']",{'thread': 100}
"['error', 'thread', 'request', 'driver', 'driver', 'error']",{'thread': 100}
"['possible', 'thread', 'error', 'runner']",{'thread': 100}
"['actual', 'flushingoutput', 'flush', 'buffer', 'drivercompletion', 'plugin', 'author']",{'buffer': 100}
"['console', 'thread', 'plugin', 'error', 'development']",{'thread': 100}
"['fatal', 'console', 'errorsituation', 'raising', 'errorthread', 'errorrescue', 'thread', 'ignore', 'errorwithout']","{'fatal': 100, 'thread': 100}"
"['mergemerge', 'thread', 'request', 'wakeup', 'sleep', 'shutdown', 'fluent', 'sequencewakeup', 'thread']",{'thread': 100}
"['thread', 'enqueue', 'flush', 'ensure']",{'thread': 100}
"['setting', 'breakchange', 'reason', 'thread', 'shutdown', 'suppresses']",{'thread': 100}
"['tailwatcherdifferent', 'event', 'thread', 'prevents', 'tailwatcher', 'tailwatcher', 'thread', 'fluentd', 'tailinput', 'modify', 'stringfluentdstartcooliothread', 'method']",{'thread': 100}
"['internal', 'object', 'state', 'buffer']",{'buffer': 100}
"['mergemerge', 'compression', 'buffer', 'support', 'ganmacs', 'requestcompression', 'plugins', 'buffer', 'support']",{'buffer': 100}
"['chunk', 'compress', 'buffer']",{'buffer': 100}
"['plugins', 'chunk', 'compress', 'buffer']",{'buffer': 100}
"['compress', 'buffer']",{'buffer': 100}
"['needle', 'removedepends', 'output', 'buffer', 'pluginoutput', 'plugin', 'buffer', 'alwaysoutput', 'plugin']",{'buffer': 100}
"['detection', 'method', 'startconsideration', 'output', 'thread', 'enqueue', 'flushfinish', 'network', 'output', 'connectiondetection', 'service']",{'thread': 100}
"['helper', 'thread', 'plugin', 'timer', 'prefix']",{'thread': 100}
"['helper', 'plugin', 'thread', 'timer']",{'thread': 100}
"['incorrect', 'permission', 'check', 'clause']","{'incorrect': 100, 'permission': 100}"
"['mergefluent', 'flush', 'requestworker', 'flush', 'buffer']",{'buffer': 100}
"['worker', 'flush', 'buffer']",{'buffer': 100}
"['eafad', 'mergeignore', 'chunk', 'buffer', 'request', 'fluentchunk', 'ignore']",{'buffer': 100}
"['message', 'length']",{'length': 100}
"['chunk', 'buffer']",{'buffer': 100}
"['mergemerge', 'output', 'suppress', 'buffer', 'request', 'timing', 'failure', 'fluentfailure']",{'buffer': 100}
"['chunk', 'event', 'stream', 'comment', 'buffer']",{'buffer': 100}
"['mergemerge', 'buffer', 'request', 'fluentbuffer']",{'buffer': 100}
"['helper', 'thread', 'plugin', 'timer']",{'thread': 100}
"['injection', 'hostname']",{'injection': 100}
"['helper', 'usage', 'threadhelper', 'plugin', 'thread']",{'thread': 100}
"['becac', 'mergemerge', 'chunk', 'buffer', 'request', 'fluentchunk', 'configure']",{'buffer': 100}
"['helper', 'plugin', 'thread']",{'thread': 100}
"['output', 'buffer', 'pluginsrecord', 'buffer', 'errorplugins', 'party', 'buffer', 'plugin', 'fluent']",{'buffer': 100}
"['rescue', 'errorraise', 'output', 'thread', 'plugin', 'errorcontinue', 'reproduce', 'record']",{'thread': 100}
"['mergedeadlock', 'issue', 'request', 'shutdown', 'fluentdeadlock', 'shutdown', 'issue']",{'issue': 100}
"['event', 'thread']",{'thread': 100}
"['default', 'plugins', 'subsection', 'party', 'propagate', 'buffer', 'compat']",{'buffer': 100}
"['plugins', 'output', 'event', 'buffer']",{'buffer': 100}
"['mergefluent', 'issue']",{'issue': 100}
"['thread', 'output']",{'thread': 100}
"['helper', 'buffer', 'style', 'plugin', 'configuration']",{'buffer': 100}
"['output', 'crash']",{'crash': 100}
"['helper', 'buffer', 'style', 'plugin', 'configuration']",{'buffer': 100}
"['output', 'crash']",{'crash': 100}
"['eaedfa', 'mergeaction', 'overflow', 'support', 'request', 'fluentaction', 'overflow', 'support']",{'overflow': 100}
"['fabfd', 'mergeaction', 'overflow', 'support', 'revert', 'request', 'fluentrevert', 'support']",{'overflow': 100}
"['supportchunk', 'rollback', 'commitraise', 'chunk', 'event', 'error', 'append', 'concatevent', 'duplicatedrouter', 'event', 'buffer', 'methodreceives', 'method', 'metadata', 'writtenchunk', 'append', 'chunk', 'error', 'commitrollbacklightweight', 'operation', 'memory', 'commitinternal', 'chunk', 'buffer', 'status', 'chunk', 'general', 'thread', 'writeargument', 'enqueue', 'keyword', 'writeoperation', 'implementation', 'methodsimilar', 'different', 'methodchunk', 'immediate', 'enqueues', 'level', 'method', 'implementedconfiguration', 'parameter', 'writebytesize', 'limitation', 'chunk', 'content', 'writtenbuffer', 'writebuffer', 'writeimplementteardown', 'shortercompatibility', 'plugin']","{'buffer': 100, 'thread': 100}"
"['section', 'buffer']",{'buffer': 100}
"['memory', 'buffer', 'overflow', 'error', 'rename', 'class']","{'buffer': 100, 'overflow': 100}"
"['default', 'buffer', 'plugin', 'rename', 'implementation']",{'buffer': 100}
"['chunk', 'rollback', 'commitraise', 'chunk', 'event', 'error', 'append', 'concatevent', 'duplicatedrouter', 'event', 'buffer', 'methodreceives', 'method', 'metadata', 'writtenchunk', 'append', 'chunk', 'error', 'commitrollbacklightweight', 'operation', 'memory', 'commitinternal', 'chunk', 'buffer', 'status', 'chunk', 'general', 'thread', 'writeargument', 'enqueue', 'keyword', 'writeoperation', 'implementation', 'methodsimilar', 'different', 'methodchunk', 'immediate', 'enqueues', 'level', 'method', 'implementedconfiguration', 'parameter', 'writebytesize', 'limitation', 'chunk', 'content']","{'buffer': 100, 'thread': 100}"
"['chunk', 'rollback', 'commitraise', 'chunk', 'event', 'error', 'append', 'concatevent', 'duplicatedrouter', 'event', 'buffer', 'methodreceives', 'method', 'metadata', 'writtenchunk', 'append', 'chunk', 'error', 'commitrollbacklightweight', 'operation', 'memory', 'commitinternal', 'chunk', 'buffer', 'status', 'chunk', 'general', 'thread', 'writeargument', 'enqueue', 'keyword', 'writeoperation', 'implementation', 'methodsimilar', 'different', 'methodchunk', 'immediate', 'enqueues', 'level', 'method', 'implementedconfiguration', 'parameter', 'writebytesize', 'limitation', 'chunk', 'content']","{'buffer': 100, 'thread': 100}"
"['compatibility', 'layer', 'pluginsshort', 'object', 'simple', 'inspectcompat', 'filter', 'fluentcompat', 'input', 'commentextend', 'chunk', 'event', 'iteration', 'errorremove', 'fileutilsoptimizationsuffix', 'buffer', 'patterninternal', 'possible', 'initialize', 'minimal', 'thingcompatibility', 'layer', 'plugin', 'outputinternal', 'plugins', 'router', 'event', 'newerchain', 'output', 'removemodule', 'class', 'output', 'driverimplement', 'buffer', 'featurecondition', 'check', 'breakcorrectness', 'update', 'commentsection', 'secondary', 'warning', 'deprecationexplicitreadabilityremove']",{'buffer': 100}
"['suffix', 'buffer', 'pattern']",{'buffer': 100}
"['suppress', 'warningprefix', 'plugin', 'warning', 'plugin', 'warning', 'plugin', 'warning', 'plugin', 'warning', 'plugin', 'warning', 'plugin', 'warning', 'plugin', 'warning', 'plugin', 'warning', 'plugin', 'warning', 'plugin', 'warning', 'plugin', 'warning', 'plugin', 'warning', 'plugin', 'warning', 'plugin', 'warning', 'plugin', 'warning', 'plugin', 'warning', 'plugin', 'warning', 'plugin', 'warning', 'plugin', 'warning', 'plugin', 'warning', 'plugin', 'warning', 'fluent', 'prefix', 'warningrubocopambiguous', 'splat', 'argument', 'parenthesize', 'methodsplat', 'whitespace', 'variable', 'buffer', 'plugin', 'fluent', 'warningprefix', 'warning', 'variable', 'plugin', 'variable', 'plugin', 'variable', 'plugin', 'variable', 'plugin', 'variable', 'plugin', 'variable', 'plugin', 'variable', 'plugin', 'variable', 'plugin', 'variable', 'plugin', 'prefix', 'local', 'variable', 'plugin', 'fluent', 'variable', 'plugin', 'fluent', 'variable', 'fluent', 'warningargument', 'plugin', 'warningargument', 'plugin', 'variable', 'plugin', 'variable', 'plugin', 'warningargument', 'plugin', 'prefix', 'local', 'variable', 'plugin', 'variable', 'plugin', 'warningfluentd', 'argument', 'plugin', 'warningargument', 'plugin', 'variable', 'instance', 'variable', 'fluent', 'warning', 'initializedvariable', 'instance', 'fluent', 'warning', 'initializedvariable', 'instance', 'fluent', 'warning', 'variable', 'plugin', 'plugin', 'fluent', 'warning', 'variable', 'plugin', 'fluent', 'variable', 'plugin', 'fluent', 'warningvariable', 'instance', 'check', 'warningvariable', 'instance', 'fluent', 'warning', 'initializedvariable', 'instance', 'initialize', 'warningvariable', 'buffer', 'instance', 'plugin', 'fluent', 'warning', 'initializedvariable', 'buffer', 'instance', 'plugin', 'fluent', 'warning', 'initializedvariable', 'instance', 'initialize', 'warningvariable', 'instance', 'plugin', 'warning', 'initializedvariable', 'instance', 'plugin', 'warning', 'initializedvariable', 'instance', 'plugin', 'warning', 'initializedvariable', 'instance', 'plugin', 'warning', 'initializedvariable', 'instance', 'plugin', 'warning', 'initializedvariable', 'instance', 'plugin', 'warning', 'initializedvariable', 'instance', 'plugin', 'warning', 'initializedvariable', 'instance', 'plugin', 'warning', 'initializedvariable', 'instance', 'initialize', 'warningvariable', 'instance', 'plugin', 'warning', 'initializedvariable', 'instance', 'plugin', 'warning', 'initializedvariable', 'instance', 'plugin', 'warning', 'initializedvariable', 'instance', 'plugin', 'warning', 'initializedvariable', 'instance', 'plugin', 'warning', 'initializedvariable', 'instance', 'plugin', 'warning', 'initializedvariable', 'instance', 'initialize', 'warningvariable', 'instance', 'plugin', 'warning', 'initializedvariable', 'format', 'instance', 'plugin', 'warning', 'initializedvariable', 'instance', 'check', 'warningvariable', 'instance', 'plugin', 'fluent', 'warning', 'initializedvariable', 'instance', 'plugin', 'fluent', 'warning', 'initializedvariable', 'instance', 'check', 'warningvariable', 'instance', 'fluent', 'warning', 'initializedvariable', 'instance', 'fluent', 'warning', 'initializedvariable', 'instance', 'initialize', 'warningvariable', 'instance', 'config', 'warning', 'initializedvariable', 'instance', 'config', 'warning', 'initializedvariable', 'instance', 'config', 'warning', 'initializedvariable', 'instance', 'config', 'warning', 'initializedvariable', 'instance', 'config', 'warning', 'initializedvariable', 'instance', 'config', 'warning', 'plugin', 'warning', 'warning', 'method', 'discardingdefinition', 'previous', 'warningvariable', 'instance', 'initialize', 'warningvariable', 'instance', 'plugin', 'warning', 'initializedvariable', 'thread', 'instance', 'plugin', 'warning', 'initializedvariable', 'instance', 'plugin', 'source', 'fluent', 'warning', 'initializedvariable', 'instance', 'plugin', 'source', 'fluent', 'warning', 'instance', 'plugin', 'fluent', 'warning', 'initializedvariable', 'instance', 'plugin', 'source', 'fluent', 'warning', 'initializedvariable', 'instance', 'plugin', 'source', 'fluent', 'warning', 'initializedvariable', 'instance', 'plugin', 'source', 'fluent', 'warning', 'initializedvariable', 'instance', 'plugin', 'source', 'fluent', 'warning', 'initializedvariable', 'instance', 'plugin', 'source', 'fluent', 'warning', 'initializedvariable', 'timeout', 'instance', 'plugin', 'fluent', 'warning', 'initializedvariable', 'timeout', 'instance', 'plugin', 'fluent', 'warning', 'initializedvariable', 'timeout', 'instance', 'plugin', 'fluent', 'warning', 'initializedvariable', 'timeout', 'instance', 'plugin', 'fluent', 'warning', 'initializedvariable', 'timeout', 'instance', 'plugin', 'fluent', 'warning', 'initializedvariable', 'timeout', 'instance', 'plugin', 'fluent', 'warning', 'initializedvariable', 'timeout', 'instance', 'plugin', 'fluent', 'warning', 'initializedvariable', 'timeout', 'instance', 'plugin', 'fluent', 'warning', 'initializedvariable', 'timeout', 'instance', 'plugin', 'fluent', 'warning', 'initializedvariable', 'instance', 'initialize', 'warningvariable', 'instance', 'plugin', 'warning', 'initializedvariable', 'format', 'instance', 'plugin', 'warning', 'initializedvariable', 'format', 'instance', 'plugin', 'warning', 'initializedvariable', 'format', 'instance', 'plugin', 'warning', 'initializedvariable', 'format', 'instance', 'plugin', 'warning', 'initializedvariable', 'format', 'instance', 'plugin', 'warning', 'initializedvariable', 'format', 'instance', 'plugin', 'warning', 'initializedvariable', 'format', 'instance', 'plugin', 'warning', 'initializedvariable', 'format', 'instance', 'plugin', 'warning', 'initializedvariable', 'instance', 'plugin', 'warning', 'initializedvariable', 'instance', 'initialize', 'warningvariable', 'instance', 'plugin', 'warning', 'initializedvariable', 'instance', 'initialize', 'instance', 'plugin', 'fluent', 'warning', 'initializedinsteadoptionreset', 'pluginlogger', 'logger']","{'buffer': 100, 'thread': 100}"
"['chunk', 'bytesize', 'buffer']",{'buffer': 100}
"['buffer', 'correctlychunk', 'buffer', 'purge', 'driver', 'reuse']",{'buffer': 100}
"['format', 'output', 'variation', 'implementation', 'methodbinary', 'payload', 'format', 'output', 'chunk', 'buffer', 'representation', 'resultprovide', 'chunk', 'buffer', 'failure', 'rescue', 'situationoutput']",{'buffer': 100}
"['record', 'event', 'return', 'streamchunk', 'buffer', 'limit', 'enable', 'recordfluentd', 'visualize']",{'buffer': 100}
"['mergemururu', 'event', 'requesteventtime', 'integer', 'serialize', 'fluent']",{'integer': 100}
"['eventtime', 'integer', 'serialize', 'fluent']",{'integer': 100}
"['permission', 'window']",{'permission': 100}
"['permission', 'window']",{'permission': 100}
"['configuration', 'resume', 'buffer']",{'buffer': 100}
"['plugin', 'buffer']",{'buffer': 100}
"['implementation', 'buffer', 'filebuffer']",{'buffer': 100}
"['input', 'output', 'filter', 'pluginformatter', 'candidate', 'storage', 'buffer', 'parser', 'featuredefault', 'plugins', 'value', 'output', 'input', 'plugin', 'retrystate']",{'buffer': 100}
"['installation', 'appveyor', 'devkitappveyor', 'issuecomment', 'issue']",{'issue': 100}
"['version', 'strptime', 'updatenurse', 'strptime', 'issue']",{'issue': 100}
"['separate', 'module', 'pluginidwrong', 'important', 'check', 'storage', 'local', 'buffer']",{'buffer': 100}
"['length', 'response', 'content', 'header']",{'length': 100}
"['threadtreasure', 'agent', 'issue']",{'issue': 100}
"['template', 'prototype', 'issue']",{'issue': 100}
"['plugins', 'object', 'system', 'separate', 'configuration', 'configsystem', 'plugin', 'configuration', 'config', 'parameter', 'featurestorage', 'plugindefault', 'permission', 'directoryothers']",{'permission': 100}
"['format', 'multiline', 'plugin', 'periodic', 'flushfluent', 'fluentd', 'issue']",{'issue': 100}
"['buffer', 'request', 'block', 'fluentaction', 'parameter', 'buffer', 'control']",{'buffer': 100}
"['action', 'parameter', 'buffer', 'control']",{'buffer': 100}
"['thread', 'comment']",{'thread': 100}
"['bfefb', 'mergemerge', 'okkez', 'buffer', 'request', 'descriptiondescription', 'buffer']",{'buffer': 100}
"['request', 'process', 'detachmemory', 'multi', 'thread', 'buffer']","{'thread': 100, 'buffer': 100}"
"['memory', 'multi', 'thread', 'buffer']","{'thread': 100, 'buffer': 100}"
"['process', 'death', 'restart', 'unexpectedsupervisor', 'thread', 'stillprocess']",{'thread': 100}
"['signal', 'buffer']",{'buffer': 100}
"['signal', 'buffer']",{'buffer': 100}
"['requestbroken', 'integer']",{'integer': 100}
"['configure', 'float', 'convertbroken', 'integer']",{'integer': 100}
"['parolkar', 'issue']",{'issue': 100}
"['buffer', 'request', 'fluent', 'condition', 'agentbasicbuffer', 'runtimeerror', 'thread']","{'buffer': 100, 'thread': 100}"
"['basicbuffer', 'runtimeerror', 'thread', 'avoidreport', 'topic', 'thread', 'fluentd', 'nczobmq', 'forum']",{'thread': 100}
"['issue', 'renderingchangelog']",{'issue': 100}
"['fluentd', 'issue', 'runit', 'optionrunit']",{'issue': 100}
"['outputtestdrierfinish', 'driveremits', 'suitable', 'length', 'runningcondition']",{'length': 100}
"['forwardinput', 'thread', 'creates', 'serverprevent', 'forwardinput', 'engineforwardinput', 'dummy', 'creates', 'fluent', 'engine']",{'thread': 100}
"['forwardinput', 'delivery', 'forwardoutput', 'supportforwardinput', 'object', 'forwardoutput', 'protocol', 'optionidentify', 'behavior', 'forwardoutput', 'additionalobject', 'sends', 'chunk', 'forwardoutput', 'optionvalue', 'response', 'forwardoutput', 'sendinginputforward', 'certainresponsevalue', 'responsechunk', 'value', 'sends', 'forwardoutputtarget', 'regard', 'unavailable', 'forwardoutputchunkinputforward', 'optionresponds', 'chunk', 'buffer', 'outputforward']",{'buffer': 100}
"['commentseparator', 'bufferwhether', 'buffer', 'resume', 'plugininstance', 'prefix', 'plugin', 'bufferescapecompatibility']",{'buffer': 100}
"['mergemerge', 'request', 'fluent', 'zfileremove', 'buffer', 'zfile']",{'buffer': 100}
"['buffer', 'zfile']",{'buffer': 100}
"['assert', 'emits', 'inputtestdriver', 'length', 'specify']",{'length': 100}
"['mergemerge', 'retry', 'request', 'fluent', 'countarray', 'integer']",{'integer': 100}
"['array', 'integer', 'errorarray', 'memory', 'consumes', 'error', 'countarray', 'number']",{'integer': 100}
"['request', 'process', 'fluentthread', 'invoke', 'issue']",{'issue': 100}
"['thread', 'invoke', 'issue']","{'thread': 100, 'issue': 100}"
"['incorrect', 'invalid', 'valueexception']",{'incorrect': 100}
"['requestformatter', 'timezone', 'issue']",{'issue': 100}
"['incorrect', 'module', 'command']",{'incorrect': 100}
"['processedhandler', 'backgroundsleep', 'approach', 'deterministicexecute', 'current', 'event', 'thread', 'plugin']",{'thread': 100}
"['stack', 'message', 'subsection', 'error']",{'stack': 100}
"['mergemerge', 'sabottenda', 'request', 'shutdown', 'handlingshutdown', 'issue']",{'issue': 100}
"['signature', 'buffer', 'problem']",{'buffer': 100}
"['acceca', 'mergetagomoris', 'requestrobin', 'thread', 'writer', 'select', 'round']",{'thread': 100}
"['point', 'flush', 'override', 'checkplugins', 'party', 'point', 'chunk', 'check', 'bufferchunk', 'flushedstoredsecond', 'storedexists', 'buffer']",{'buffer': 100}
"['incorrect', 'window']",{'incorrect': 100}
"['ignores', 'parameter', 'regexpparser', 'issue']",{'issue': 100}
"['synchronizes', 'buffer']",{'buffer': 100}
"['contextsynchronize', 'mutex', 'sincehandler', 'fluentthread', 'attemptseparate', 'thread', 'fluenthandler', 'threadenables', 'signal']",{'thread': 100}
"['symlink', 'buffer']",{'buffer': 100}
"['mergemerge', 'validate', 'buffer', 'request', 'fluentvalidate', 'parameter', 'check']",{'buffer': 100}
"['ebbeac', 'eeeaa', 'mergetagomoris', 'requestevent', 'processing', 'thread', 'fluent']",{'thread': 100}
"['event', 'processing', 'thread', 'fluentseparate', 'pluginthread', 'currentplugins', 'logger', 'shutdownbehavior']",{'thread': 100}
"['mergemerge', 'permission', 'request', 'fluent', 'daemonizeparameter', 'permission']",{'permission': 100}
"['createdaemonize', 'causedspecify', 'permission']",{'permission': 100}
"['thread', 'signal', 'context']",{'thread': 100}
"['signal', 'ignore', 'thread']",{'thread': 100}
"['buffer', 'empty']",{'buffer': 100}
"['statusregistration', 'thread', 'iterate', 'plugin', 'condition', 'unsafe']",{'thread': 100}
"['allocates', 'buffer']",{'buffer': 100}
"['integer', 'format', 'template', 'field', 'apache', 'textparser']",{'integer': 100}
"['default', 'buffer', 'limit', 'parameter', 'changedfluentd']",{'buffer': 100}
"['stdout', 'buffer', 'parameter', 'configuration', 'autoflush']",{'buffer': 100}
"['buffer', 'ascii']",{'buffer': 100}
"['action', 'fallback', 'erorr', 'output', 'message', 'thread', 'abort']",{'thread': 100}
"['configurable', 'plugins', 'buffer']",{'buffer': 100}
"['chunk', 'buffer', 'enqueues', 'periodic', 'timer', 'queue', 'empty']",{'buffer': 100}
"['secondary', 'output', 'buffer', 'reformat']",{'buffer': 100}
"['chunk', 'structure', 'buffer', 'queue']",{'buffer': 100}
