message,fuzzy
"['generation', 'action']",{'generation': 100}
"['generation', 'action']",{'generation': 100}
"['generation', 'action']",{'generation': 100}
"['generation', 'action']",{'generation': 100}
"['decdb', 'mergegodeni', 'request', 'issue', 'swaggerissue']",{'issue': 100}
"['decdb', 'mergegodeni', 'issue', 'swagger']",{'issue': 100}
"['javascript', 'generation']",{'generation': 100}
"['ecfda', 'mergerequest', 'value', 'issue', 'swaggerissue', 'value']",{'issue': 100}
"['issue', 'enumeration', 'boolean']",{'issue': 100}
"['enumeration', 'issue']",{'issue': 100}
"['mergetypescript', 'derkoe', 'angular', 'requestangular', 'generation']",{'generation': 100}
"['mergemoluram', 'request', 'uniqueitems', 'issue']",{'issue': 100}
"['uniqueitems', 'issue', 'defaultcodegen']",{'issue': 100}
"['fccdcc', 'mergesecurity', 'request', 'issue', 'swaggertypescript', 'order', 'fetch', 'issue', 'sample']",{'issue': 100}
"['typescript', 'order', 'fetch', 'issue', 'sample']",{'issue': 100}
"['ebcfd', 'mergecolorcodecanvas', 'request', 'mergewrong', 'annotation', 'generation']",{'generation': 100}
"['model', 'resttemplate', 'difference', 'generation', 'petstore', 'highlight']",{'generation': 100}
"['baaac', 'mergerequest', 'marcbuils', 'issue', 'swaggermarcbuils', 'issue']",{'issue': 100}
"['eeeec', 'mergeswagger', 'request', 'generic', 'property', 'flatten', 'issue']",{'issue': 100}
"['generic', 'property', 'flatten', 'issue']",{'issue': 100}
"['wrong', 'annotation', 'generation']",{'generation': 100}
"['confluence', 'parallel', 'approach', 'thread', 'plugin', 'naive', 'display', 'maven', 'module', 'apache', 'plugins', 'future']",{'thread': 100}
"['issue', 'endpoint']",{'issue': 100}
"['issue', 'namespace', 'requestnamespace', 'issue']",{'issue': 100}
"['mergebranch', 'master', 'issue']",{'issue': 100}
"['mergerequest', 'hunterv', 'masterclient', 'params', 'issue', 'header']",{'issue': 100}
"['namespace', 'issue']",{'issue': 100}
"['update', 'image', 'dockerinvalid', 'error', 'issue', 'target']",{'issue': 100}
"['option', 'issue']",{'issue': 100}
"['security', 'script']",{'Security': 100}
"['security', 'import']",{'Security': 100}
"['beardeddragon', 'codegen', 'swaggerconflictclient', 'version', 'security', 'codegen', 'petstore', 'sampleclient', 'security', 'sample', 'petstoreclient', 'security', 'sample', 'petstore']",{'Security': 100}
"['mergerequest', 'ffddorf', 'issue', 'swaggerffddorf', 'issue']",{'issue': 100}
"['mergebranch', 'ffddorf', 'codegen', 'issue', 'swaggerconflictswagger', 'codegen', 'resource', 'module']",{'issue': 100}
"['fbdderequest', 'kostyay', 'mergestruct', 'multiple', 'operation', 'issue', 'collision']",{'issue': 100}
"['issue', 'petstore', 'swagger']",{'issue': 100}
"['eddbabranch', 'mitchnull', 'codegen', 'issue', 'swagger']",{'issue': 100}
"['private', 'issue']",{'issue': 100}
"['adeca', 'mergemitchnull', 'request', 'issueisnumeric', 'issue']",{'issue': 100}
"['dbfdb', 'mergebranch', 'mitchnull', 'codegen', 'issue', 'swagger']",{'issue': 100}
"['baafdd', 'mergebranch', 'master', 'codegen', 'issue', 'swagger']",{'issue': 100}
"['property', 'codegenmodel', 'issue', 'parentcontainer']",{'issue': 100}
"['isnumeric', 'issue']",{'issue': 100}
"['ddbda', 'mergerequest', 'mgoyal', 'codegen', 'issue']",{'issue': 100}
"['property', 'parser', 'issue', 'swagger', 'composedmodel']",{'issue': 100}
"['affae', 'mergeissue', 'request', 'plamutemplate', 'generator', 'issue']",{'issue': 100}
"['mergehelper', 'update', 'tovkal', 'issue', 'requestupdate', 'codablehelper']",{'issue': 100}
"['mergealamofire', 'tovkal', 'issue', 'requestalamofire', 'issue']",{'issue': 100}
"['mergealamofire', 'tovkal', 'issue', 'requestupdate', 'alamofire', 'dependency']",{'issue': 100}
"['mergetovkal', 'issue', 'request', 'importswiftcodegen', 'import']",{'issue': 100}
"['mergetovkal', 'issue', 'request', 'cleanupcleanup', 'class']",{'issue': 100}
"['mergetovkal', 'issue']",{'issue': 100}
"['security', 'python']",{'Security': 100}
"['mergefeature', 'thomasjoei', 'issue', 'pattern', 'resttemplate', 'thread', 'withhttpinfo', 'issue']","{'issue': 100, 'thread': 100}"
"['bccfea', 'mergebranch', 'master', 'issue']",{'issue': 100}
"['master', 'issue']",{'issue': 100}
"['client', 'pattern', 'resttemplate', 'thread', 'withhttpinfo']",{'thread': 100}
"['mergeswagger', 'request', 'issuemodel', 'prefix', 'suffix', 'incorrect']",{'incorrect': 100}
"['model', 'prefix', 'suffix', 'incorrect']",{'incorrect': 100}
"['issue', 'blank', 'space', 'sample']",{'issue': 100}
"['mergeamiketta', 'multi', 'thread', 'issue', 'requestthread', 'multi', 'issue']","{'thread': 100, 'issue': 100}"
"['mergebranch', 'master', 'thread', 'multi']",{'thread': 100}
"['security', 'typescript', 'resteasy', 'angular']",{'Security': 100}
"['empty', 'order', 'parameter', 'method', 'issue', 'allparams']",{'issue': 100}
"['cbeea', 'mergeswagger', 'request', 'mergesection', 'security', 'master', 'update', 'readme']",{'Security': 100}
"['mergebranch', 'master', 'thread', 'multi']",{'thread': 100}
"['multi', 'issue', 'thread']","{'issue': 100, 'thread': 100}"
"['populate', 'value', 'datatype', 'issue']",{'issue': 100}
"['section', 'security', 'master', 'update', 'readme']",{'Security': 100}
"['multiple', 'structs', 'operation', 'issue', 'collision']",{'issue': 100}
"['mergezhwei', 'request', 'symfony', 'mergeinput', 'critical', 'server', 'contstraint', 'incorrect', 'validation', 'symfony', 'condition']",{'incorrect': 100}
"['ceedccrequest', 'master', 'issue', 'swaggeruntypedproperty']",{'issue': 100}
"['mergerequest', 'python', 'error', 'generation']",{'generation': 100}
"['caedab', 'mergeswagger', 'request', 'python', 'mergepython', 'length']",{'length': 100}
"['python', 'length']",{'length': 100}
"['cffdbdunmerge', 'request', 'openfeign', 'generation']",{'generation': 100}
"['mergerequest', 'jdevera', 'mergeclient', 'python', 'thread', 'initialize']",{'thread': 100}
"['issue', 'swagger']",{'issue': 100}
"['support', 'typescript', 'approach', 'typescript', 'fetchswagger', 'codegen', 'issue']",{'issue': 100}
"['adaption', 'property', 'additional', 'template', 'issue']",{'issue': 100}
"['mergealexingithub', 'request', 'master', 'mergepolymorphic', 'issue']",{'issue': 100}
"['ddfebe', 'mergerequest', 'master', 'mergecritical', 'server', 'contstraint', 'incorrect', 'validation', 'symfony', 'condition']",{'incorrect': 100}
"['python', 'thread', 'initializeclient', 'thread', 'python', 'asyncclient', 'system', 'instance', 'thread', 'resource', 'consumessystem', 'limit', 'reachasyncclient', 'thread']",{'thread': 100}
"['model', 'polymorphic', 'deseralize', 'issue']",{'issue': 100}
"['polymorphic', 'deseralize', 'issue', 'class']",{'issue': 100}
"['polymorphic', 'issue']",{'issue': 100}
"['order', 'system', 'property', 'generatior']",{'generation': 90}
"['command', 'script', 'generation']",{'generation': 100}
"['generation', 'jaguar']",{'generation': 100}
"['static', 'client', 'params', 'issue', 'header']",{'issue': 100}
"['mergequery', 'parameter', 'kunal', 'singleton', 'requestswagger', 'codegen', 'issue']",{'issue': 100}
"['security', 'superagent', 'dependency']",{'Security': 100}
"['swagger', 'codegen', 'issue']",{'issue': 100}
"['fbfdbf', 'mergerequest', 'issuesupport', 'python', 'issue']",{'issue': 100}
"['security', 'shell', 'python']",{'Security': 100}
"['issue', 'swagger']",{'issue': 100}
"['typescript', 'interface', 'angular', 'petstore', 'withinterfaces', 'generation', 'petstore', 'sample', 'script', 'withinterfaces', 'generation', 'petstore', 'sample', 'script', 'output']",{'generation': 100}
"['javadoc', 'gradle', 'codegen', 'issue', 'sourceupdatesource', 'fieles', 'javadocupdateupdate']",{'issue': 100}
"['readme', 'generate', 'issue', 'generate', 'issue', 'generate']",{'issue': 100}
"['property', 'optional', 'model', 'parameterproperty', 'optional', 'model', 'parameterclient', 'typescript', 'incorrect', 'locationignore', 'swagger', 'typescript']",{'incorrect': 100}
"['array', 'model', 'typescript', 'generation']",{'generation': 100}
"['delete', 'callback', 'qtcpp', 'emission', 'signalprevent', 'crash', 'small', 'emptymemory', 'pointer', 'deletelater', 'wrapper', 'passedobject', 'update', 'separate', 'wrapperprefix', 'class']",{'crash': 100}
"['jmeter', 'issuetemplate', 'jmeterignore', 'dataset', 'header', 'containsacross', 'group', 'thread', 'shareschedulerproperty', 'variable', 'definablerampupdurationthreadhttpclient', 'customizationremove', 'element', 'definedvariabletemplate', 'jmeter', 'issuecommentupdate', 'request', 'sample']",{'thread': 100}
"['fedfbcda', 'mergerequest', 'issue', 'swagger']",{'issue': 100}
"['cpprest', 'vector', 'supportprevent', 'crash', 'small', 'emptytohttpcontent', 'cpprest', 'tojson', 'arraypetstoretohttpcontent', 'cpprest', 'functionpetstoresupport', 'primitive', 'cpprest', 'responsecpprestbodyparam', 'cpprest', 'buildcpprest', 'vectorupdate']",{'crash': 100}
"['keyword', 'reserve', 'linuxprevent', 'crash', 'keyword', 'reorder']",{'crash': 100}
"['project', 'generation', 'addingproject', 'update', 'samplestarterfunction', 'processoptswriteprefix']",{'generation': 100}
"['memleaks', 'qtcppprevent', 'crash', 'small', 'emptymodel', 'memorymember', 'array', 'behavior', 'member', 'class']",{'crash': 100}
"['memleaks', 'qtcppprevent', 'crash', 'small', 'emptypointer', 'qjsonobject', 'instance', 'fixup', 'tojsonarraysimplify', 'tojsonmap', 'fixupsolution', 'single', 'qjsonobject', 'builtin', 'innertypeupdate', 'patchallocation', 'update', 'stringmember', 'update', 'addressexample', 'update', 'petstoreincludes', 'update', 'header']",{'crash': 100}
"['optional', 'spring', 'params', 'swagger', 'issue', 'springfoxpackage', 'config', 'addedconfig', 'definition', 'apipackage', 'swagger', 'basepackageupdate', 'spring', 'scriptspace', 'convertedupdate', 'spring', 'script']",{'issue': 100}
"['issue', 'retrofitformparams', 'solution', 'requestbody', 'filename', 'basename', 'dynamic', 'issue', 'retrofit', 'uploadreview', 'comment']",{'issue': 100}
"['incorrect', 'indentation', 'petstore']",{'incorrect': 100}
"['jersey', 'threadclient', 'pattern', 'jersey', 'thread', 'issue', 'withhttpinfo', 'generatedclient', 'pattern', 'jersey', 'thread', 'issue', 'withhttpinfo']","{'thread': 100, 'issue': 100}"
"['generation', 'string', 'aspnetcoreregression', 'generation', 'string', 'aspnetcoreregenerate', 'sample', 'aspnetcore']",{'generation': 100}
"['mergebranch', 'wingsofovnia', 'issue']",{'issue': 100}
"['mergebranch', 'wingsofovnia', 'codegen', 'issue', 'swagger']",{'issue': 100}
"['version', 'dependencyversion', 'nasty', 'codegen', 'issue']",{'issue': 100}
"['threetenbp', 'issue', 'kotlinclient', 'threetenbp', 'kotlinsample', 'kotlin']",{'issue': 100}
"['support', 'interface', 'jaxrs', 'responsesupport', 'issue', 'responseinterface', 'jaxrs', 'update', 'issue', 'sample']",{'issue': 100}
"['client', 'config', 'haskell', 'option', 'configtypeconfig', 'optioncabalpackagehyphen', 'cabal', 'alphanumeric', 'package', 'separatedcabalversionversion', 'cabal', 'integer', 'sequencebasemodulenamespace', 'modulerequesttyperequest', 'generateconfigtypeconfiguration']",{'integer': 100}
"['query', 'param', 'typescript', 'jquery', 'generation', 'problem']",{'generation': 100}
"['implementation', 'server', 'barebones', 'kotlin', 'libraryplatform', 'crossoption', 'regex', 'extendedevaluates', 'available', 'option', 'posixapplecommit', 'initial', 'kotlinimplementation', 'server', 'barebonessupport', 'endpoins', 'metric', 'typedreturninitial', 'installs', 'option', 'selectavailable', 'optionfeatureautoheadfeaturehstsfeaturecorsstart', 'functionalityplaceholderoauth', 'basic', 'support', 'oauth', 'property', 'acceptimplicit', 'configuration', 'blockerobject', 'example', 'responseroute', 'cleanupquery', 'location', 'routeparameter', 'route', 'commitserver', 'generator', 'future', 'potential', 'generator', 'spring', 'methodsense', 'uppercase', 'wouldoperation', 'process', 'modify', 'formatlambda', 'includedlowercase', 'convertuppercase', 'converttitle', 'titlecase', 'delim', 'indent', 'fragment', 'includedclass', 'lambda', 'issue', 'javadocupdate', 'server', 'kotlinserver', 'kotlinmessage', 'error', 'javadoc']",{'issue': 100}
"['minorminormodel', 'header', 'issue', 'avoidspace']",{'issue': 100}
"['generator', 'framework', 'controllerimp', 'issue']",{'issue': 100}
"['generatorsupport', 'generator', 'handler', 'update', 'expressivemodel', 'query', 'creates', 'parameter', 'generator', 'operation', 'specialextra', 'update', 'container', 'generation', 'complex', 'sample']",{'generation': 100}
"['serverport', 'facilitate', 'getter', 'expose', 'setter']",{'expose': 100}
"['localdatetime', 'option', 'issue', 'datelibrary', 'springcodegen']",{'issue': 100}
"['model', 'support', 'array', 'csharp', 'propertytojson', 'csharp', 'support', 'compositionimplementation', 'specification', 'support', 'polymorphic', 'associationparent', 'setup', 'objectdiscriminator', 'definemodel', 'version', 'specification', 'support', 'openapi', 'master', 'polymorphismparent', 'discriminatormethod', 'classoverride', 'support', 'class', 'virtualpolymorphic', 'compositioncsharp', 'templateaccess', 'configuration', 'property', 'ambiguous', 'referenceconfiguration', 'definesmodel', 'support', 'array', 'csharp', 'property', 'nestedimplementation', 'support', 'array', 'previous', 'multiple', 'levelarray', 'openapi', 'object', 'definedarray', 'common', 'doublewouldimplementation', 'assumes', 'genericmodel', 'parent', 'double', 'generate', 'wouldpropertyregenerate', 'csharp', 'integration', 'sampleclient', 'csharp', 'sensitiveregenerate', 'csharp', 'security', 'sampleregenerate', 'csharp', 'sample']",{'Security': 100}
"['tojson', 'csharp', 'polymorphism', 'compositiontojson', 'csharp', 'support', 'compositionimplementation', 'specification', 'support', 'polymorphic', 'associationparent', 'setup', 'objectdiscriminator', 'definemodel', 'version', 'specification', 'support', 'openapi', 'master', 'polymorphismparent', 'discriminatormethod', 'classoverride', 'support', 'class', 'virtualpolymorphic', 'compositionregenerate', 'csharp', 'integrationregenerate', 'csharp', 'sampleregenerate', 'csharp', 'security', 'sample']",{'Security': 100}
"['throwremove', 'issue', 'throwjaxrs', 'update', 'issue']",{'issue': 100}
"['unnecessary', 'deletedswagger', 'codegen', 'issue']",{'issue': 100}
"['angular', 'importimprove', 'issuecomment', 'angular', 'issue', 'preventissuecomment', 'message', 'angular', 'httpmodule', 'error', 'issue', 'preventgenerate', 'samplepackage', 'generate']",{'issue': 100}
"['client', 'query', 'param', 'camel', 'incorrect', 'kotlin', 'template', 'headerquery', 'param', 'camel', 'kotlin', 'template', 'petstore']",{'incorrect': 100}
"['guard', 'empty', 'nullptr', 'qtcpp', 'crash', 'preventprevent', 'crash', 'example', 'petstore']",{'crash': 100}
"['mergebranch', 'codegen', 'issue', 'joeboyscout', 'swagger']",{'issue': 100}
"['qtcpp', 'support', 'containerdefault', 'empty', 'value', 'primitive', 'creation', 'modelnameprefixreview', 'updatecommon', 'splittedexample', 'update', 'array', 'smallchangedeletion', 'fault', 'avoidarray', 'support', 'depthhelper', 'refactor', 'simplify', 'handlecheck', 'incorrect', 'possibleexample', 'qdatetime', 'small', 'qdate', 'update', 'petstoreupdate']",{'incorrect': 100}
"['variable', 'object', 'instancereflection', 'instantiate', 'classvertx', 'petstoreexample', 'swaggerassignment', 'variable', 'object', 'instancefoobar', 'categoryobject', 'error', 'object', 'foundissuecomment', 'codegen', 'issue', 'discussion', 'swaggerthanks']",{'issue': 100}
"['default', 'client', 'update', 'scala', 'attributedefault', 'client', 'scala', 'valuedefault', 'logic', 'consistent', 'optional', 'valueoption', 'scala', 'default', 'insteadguard', 'defaultvalue', 'option', 'people', 'value', 'definesmaplikeclient', 'regenerate', 'scala', 'samplegenerate', 'current', 'jsons', 'sample', 'anothersupport', 'integration', 'scala', 'attributeformat', 'scala', 'support', 'stringbetter', 'support', 'stringbinary', 'formatrather', 'default', 'format', 'valueopenapi', 'specification', 'swagger', 'matchsupport', 'jsons', 'pullinglocaldate', 'format', 'movingconsumer', 'changerather', 'stringunique', 'parameter', 'integration', 'scala', 'avoidclient', 'regenerate', 'scala', 'array', 'stringspecific', 'alphabetical', 'appeardirectory', 'repro', 'sierra', 'failure', 'clear', 'ubuntu', 'orderbehavior', 'platform', 'indeterminate', 'definedarray', 'stringresolve', 'platform', 'issue', 'comparison', 'everyexclude', 'scala', 'integration', 'scriptclass', 'integration', 'option', 'integration', 'scala', 'disableintegration', 'pending', 'integration', 'scala', 'investigationremove', 'redundant', 'jsons', 'scala', 'importintegration', 'regenerate', 'scalaregenerate', 'scala', 'sample']",{'issue': 100}
"['annotation', 'spring', 'support', 'valueannotation', 'support', 'shell', 'scriptimport', 'issue', 'shell', 'script']",{'issue': 100}
"['server', 'generator', 'supportclient', 'sample', 'petstoreclient', 'support', 'codegen', 'swagger', 'generate', 'scriptbuild', 'sampleclient', 'program', 'sampleconnect', 'operation', 'server', 'performdescription', 'sampleexplain', 'client', 'documentation', 'update', 'generatedparameter', 'server', 'supportparameter', 'update', 'indexparameter', 'vendor', 'index', 'attributepackage', 'server', 'declarationoperation', 'declarationimplementation', 'server', 'generic', 'package', 'target', 'generatedeserialization', 'serialization', 'skeletonoperation', 'server', 'implementparameter', 'query', 'extractresult', 'serializeregister', 'route', 'server', 'operationimplementation', 'server', 'update', 'generation', 'generateserver', 'support', 'template', 'generate', 'improvementmodel', 'tomodelname', 'identifier', 'operation', 'creationpermission', 'server', 'support', 'generationcollect', 'security', 'method', 'scopeunique', 'correspond', 'scopepseudo', 'correspond', 'othersdescription', 'indent', 'multi', 'filtermodel', 'array', 'support', 'generationupdate', 'project', 'generatedimprovement', 'server', 'generation', 'refactoringobject', 'server', 'changeimplementation', 'server', 'header', 'request', 'responsecontrol', 'responsesecurity', 'scope', 'generateimprovement', 'server', 'generationproject', 'generationpackage', 'necessary', 'intermediate', 'generateserver', 'generateserver', 'templateserver', 'improvementverification', 'server', 'support', 'permission', 'generatedefinition', 'projectpackage', 'intermediate', 'templateimplementation', 'server', 'skeletonimplementation', 'server', 'generate', 'emptyimplementation', 'server', 'server', 'template', 'documentserver', 'configurationserver', 'message', 'report', 'correctserver', 'generate', 'configurationmodel', 'support', 'improvement', 'nullableupdate', 'server', 'templaterefactor', 'generatorclient', 'server', 'separate', 'generatorregister', 'server', 'generatorclient', 'generatorcommon', 'operation', 'support', 'movedclient', 'server', 'cleanup', 'improvementclient', 'program', 'templateclient', 'server', 'template', 'program', 'projectmodel', 'package', 'option', 'betterlower', 'projectdefault', 'configpackage', 'header', 'intermediatemodel', 'client', 'regenerateclient', 'account', 'nullable', 'update', 'sampleregenerate', 'swagger', 'codegenignore', 'generation']","{'generation': 100, 'Security': 100, 'permission': 100}"
"['prefix', 'model', 'empty', 'qtcpp', 'generation', 'creation', 'empty', 'value', 'primitive', 'creation', 'modelnameprefixreview', 'updatecommon', 'splittedexample', 'update', 'petstore']",{'generation': 100}
"['presentation', 'hoosuite', 'video', 'apage', 'protocol', 'resource', 'tutorial', 'buffer', 'generateupdatespace']",{'buffer': 100}
"['resolver', 'stack']",{'stack': 100}
"['delegatepattern', 'issue', 'servermethod', 'interfacecorrectionupdate', 'spring', 'sampleprefix', 'default', 'return', 'status', 'method', 'spring', 'methodresolve', 'master', 'upstream', 'special', 'check']",{'issue': 100}
"['model', 'javadoc', 'method', 'issue']",{'issue': 100}
"['openssl', 'method']",{'OpenSSL': 100}
"['static', 'javax', 'support', 'injection', 'resteasy', 'factory', 'delegatestatic', 'javax', 'support', 'injection', 'resteasy', 'factory', 'delegateexample', 'resteasy']",{'injection': 100}
"['integer', 'minimum', 'constraint']",{'integer': 100}
"['format', 'scala', 'template', 'issue', 'refactorformat', 'scala', 'template', 'issue', 'refactorversion', 'scala', 'dependency', 'upgrade']",{'issue': 100}
"['array', 'primitive', 'issue', 'update', 'template', 'codegen', 'samplemodel', 'array', 'primitive', 'issue', 'element', 'problem']",{'issue': 100}
"['spring', 'issue', 'serverdouble', 'value', 'quote', 'issue', 'correctsample', 'regenerate', 'issueremove', 'script', 'issuesample', 'centos', 'update', 'issue']",{'issue': 100}
"['zoneddatetime', 'nancyfx', 'issue', 'fieldroute', 'endpoint', 'support', 'asyncproperty', 'optional', 'generate', 'asyncserver', 'asynchronous', 'nancyfxcommit', 'cherry', 'cbbeecfceffdserver', 'nancyfx', 'async', 'petstore', 'generate', 'sampleasyncserver', 'async', 'renameupdate', 'server', 'nancyfx', 'petstoresmall', 'async', 'asyncserver', 'bugfix', 'renameserver', 'nancyfx', 'petstorespace', 'additional', 'removeserver', 'nancyfx', 'petstorejsonconverter', 'localdate', 'field']",{'issue': 100}
"['finch', 'definition', 'scaladefinition', 'security', 'support', 'refactoringeither', 'support', 'addinglocal', 'timezone']",{'Security': 100}
"['issue', 'enchancementsupdate', 'petstore', 'shell', 'script', 'sample']",{'issue': 100}
"['client', 'return', 'typescript', 'angular', 'observe', 'issue', 'response', 'swaggervariable', 'angular', 'observe', 'issue', 'reportprogress', 'responseextra', 'comma', 'problemcompiltion', 'angular', 'issue']",{'issue': 100}
"['lagomscala', 'scala', 'generator', 'lagomframeworkcommit', 'generatedclient', 'server', 'folder', 'script', 'issue', 'namingformat']",{'issue': 100}
"['nuget', 'csharp', 'update', 'dependency', 'jsonsubtypesobtain', 'resultwindow', 'csharp', 'petstorewindow', 'csharp', 'directoryclient', 'csharp', 'sample', 'petstoreclient', 'csharp', 'petstore', 'sample', 'dotnetwindow', 'csharp', 'compatible', 'nuget', 'package', 'update', 'dependency', 'jsonsubtypesallign', 'versionwindow', 'result', 'csharp', 'petstorewindow', 'csharp', 'security']",{'Security': 100}
"['harmful', 'content', 'checkswagger', 'codegen', 'issue']",{'issue': 100}
"['csharp', 'property', 'additional', 'clean', 'booleanfalse', 'booleans', 'csharp', 'property', 'convertfalse', 'issuesimple', 'generator', 'value', 'booleanboolean', 'string', 'classbooleandefault', 'nancyfx', 'async', 'option', 'cleanfalse', 'nancyfx', 'asyncserver', 'script', 'sampleregenerate', 'csharp', 'samplecsharp', 'generation', 'issuefunctionality', 'missingresolve', 'compilationconditional', 'versioningregenerate', 'csharp', 'samplecsharp', 'different', 'sample', 'value', 'anotheroption', 'detailclient', 'option', 'overridable', 'codegen', 'currentlyavailable', 'version', 'langversion', 'consumer', 'buildcsharp', 'revertregenerate', 'csharp', 'sampleresolve', 'nuget', 'csharp', 'issueupdate', 'regenerate', 'csharp', 'sample']",{'generation': 100}
"['serialization', 'csharp', 'value', 'firstmodel', 'csharp', 'treatenums', 'languagedefault', 'enumtype', 'false', 'functionality', 'swagger', 'definesproperty', 'message', 'requiredrather', 'consumer', 'force', 'valueenums', 'treatwhether', 'nullable', 'regardless', 'inline', 'definedenums', 'integration', 'generalintegration', 'csharp', 'removedifferent', 'support', 'csharp', 'usage', 'integration', 'validate', 'general', 'cleanassign', 'enums', 'csharp', 'stringfalse', 'enums', 'valuenumerical', 'integer', 'assigns', 'value', 'explicit', 'commitassignment', 'effectdeserialization', 'serialization', 'assigns', 'compiledrecompilation', 'effect', 'requiringreference', 'client', 'serveravailable', 'publicsource', 'placeavailable', 'publicsource', 'definedconstant', 'placeinstance', 'semanticintegral', 'representation', 'valuecsharp', 'language', 'reference', 'dotnet', 'keywords']",{'integer': 100}
"['deserialization', 'binary', 'security', 'python']",{'Security': 100}
"['generate', 'issue']",{'issue': 100}
"['array', 'inccorect', 'enumsmap', 'generation', 'issue']","{'generation': 100, 'issue': 100}"
"['enums', 'client', 'haskell', 'supportmodel', 'support', 'enums', 'parameter', 'operationdefault', 'option', 'generateenumsresolver', 'stack']",{'stack': 100}
"['parameter', 'beanvalidationinput', 'variable', 'configuration', 'outputclarity', 'refactor', 'mustacherefactor', 'generation', 'samplecouple']",{'generation': 100}
"['parameter', 'issue']",{'issue': 100}
"['update', 'angular', 'typescript', 'method', 'replacedswitch', 'typescript', 'variable', 'angular', 'method', 'camelcasesolution', 'importedblank', 'whitespace', 'extrasince', 'insteadconversion', 'simplifiedsimpler', 'version', 'iteration', 'length', 'pattern', 'regex']",{'length': 100}
"['server', 'documentation', 'jaxrs', 'generationdocumentation', 'inclusion', 'generation', 'serverdocumentation', 'client', 'inclusion', 'generationupdate', 'server', 'sample', 'petstoreclient', 'update', 'sample', 'petstoreserver', 'update', 'petstore', 'sampleserver', 'application', 'update', 'spring', 'petstore', 'sampledescription', 'character', 'appdescription', 'specialupdate', 'sample', 'petstore']",{'generation': 100}
"['operation', 'spring', 'server', 'generic', 'class', 'spring', 'annotation', 'generation', 'apioperation', 'referenceregenerate', 'spring', 'template', 'class']",{'generation': 100}
"['security', 'shell', 'script']",{'Security': 100}
"['update', 'security', 'sample', 'petstore']",{'Security': 100}
"['business', 'validation', 'crash', 'exception']",{'crash': 100}
"['valid', 'generate', 'symfonyexample', 'syntax', 'petstore', 'issue', 'experiencingnamespace', 'swagger', 'serverexception', 'httpkernel', 'symfony', 'componentmodel', 'order', 'swagger', 'servermaparrayexception', 'httpkernel', 'symfony', 'componentfunction', 'publicfunction', 'publicarray', 'object', 'possiblenamespace', 'swagger', 'serverexception', 'httpkernel', 'symfony', 'componentmodel', 'swagger', 'serverexception', 'httpkernel', 'symfony', 'componentmodel', 'apiresponse', 'swagger', 'serverstringexception', 'httpkernel', 'symfony', 'componentfunction', 'public', 'status', 'stringfunction', 'public', 'findpetsbytags', 'string']",{'issue': 100}
"['client', 'haskell', 'generation', 'issue', 'newtypesubstitution', 'param', 'generation', 'issueduplication', 'newtype', 'issuerefactoringversion', 'comment', 'correctprevent', 'mimetypes', 'duplicateparameter', 'newtypes']","{'generation': 100, 'issue': 100}"
"['inline', 'issue', 'swiftupstream', 'removeswift', 'inline', 'compilation', 'issueswagger', 'problemmodel', 'property', 'followingstringgeneratingpublic', 'codabledecode', 'datatype', 'ratherforkeyratherforkey']",{'issue': 100}
"['swagger', 'codegen', 'issue', 'regression']",{'issue': 100}
"['client', 'support', 'interface', 'jaxrs', 'issuecreate', 'interface', 'jaxrs', 'ability', 'basedinterface', 'jaxrs', 'shell', 'script', 'sampleshell', 'rebaseinstance', 'charset', 'application', 'method', 'consumes', 'creationgenerateddefault', 'generateprettier', 'outputspecification', 'charsetclient', 'interface', 'jaxrs', 'generation', 'mergesserver', 'location', 'interface', 'jaxrs', 'matchclass', 'annotation']",{'generation': 100}
"['issueclient', 'query', 'security', 'string', 'parameter', 'literal', 'generation']","{'Security': 100, 'generation': 100}"
"['apiclient', 'issuenamespace', 'generation', 'syntax', 'issuemustache', 'template', 'element', 'operation', 'parameter', 'neededdocumentation', 'comment', 'issuesample']",{'generation': 100}
"['client', 'generator', 'support', 'addinggeneric', 'generator', 'support', 'languageglobal', 'keywords', 'class', 'implementlanguage', 'behaviorgenerator', 'support', 'languageclient', 'server', 'adacodegen', 'generator', 'class', 'implementimplementation', 'initialregister', 'support', 'adacodegen', 'generator', 'language', 'classtemplate', 'license', 'languagemodel', 'template', 'languageclient', 'template', 'languageserver', 'template', 'languageparameter', 'update', 'project', 'generateprefix', 'parameter', 'identifier', 'package', 'update', 'swaggerparameter', 'operation', 'generationmodel', 'package', 'instantiationproject', 'template', 'generationdatatype', 'language', 'generationfunction', 'override', 'datatype', 'specifydefinition', 'languagemodel', 'declaration', 'generation', 'procedure', 'serializemodel', 'template', 'generation', 'procedure', 'serializeparameter', 'operationtoadaidentifier', 'identifier', 'function', 'implementstyle', 'identifieroverride', 'toadaidentifier', 'tooperationid', 'operation', 'generationupdate', 'toadaidentifier', 'toparamnamemedium', 'generator', 'supportmember', 'function', 'adamediatype', 'implementmedium', 'enumerationproduce', 'operation', 'process', 'consumes', 'mediumextension', 'empty', 'avoidclient', 'operation', 'generation', 'firstmedium', 'necessary', 'containsarray', 'generator', 'generationmodel', 'generator', 'attributeclient', 'update', 'serialization', 'templateparameter', 'account', 'generatorparameter', 'client', 'update', 'generatormodel', 'deserialize', 'procedure', 'generatedclient', 'override', 'generator', 'fromoperationextension', 'description', 'response', 'codegenmodel', 'propertyclient', 'result', 'package', 'update', 'templateresult', 'return', 'client', 'support', 'extract', 'responsemodel', 'attribute', 'property', 'container', 'correctmodel', 'deserialize', 'support', 'generator', 'procedurepackage', 'client', 'indentationproject', 'configure', 'option', 'projectnameupdate', 'project', 'generatorimplementation', 'cleanuperror', 'javadocconvention', 'language', 'codegen', 'swaggerdescriptiondescription', 'incomplete', 'occurs']",{'generation': 100}
"['shippable', 'stack', 'cache']",{'stack': 100}
"['calculate', 'alias', 'model', 'processingmodel', 'context', 'alias', 'primitivemylistarraydefinition', 'mystringmystringstringarray', 'property', 'valid', 'object', 'alias', 'anotherexample', 'array', 'object', 'aliasalias', 'logic', 'incorrect', 'behaviormodel', 'alias', 'object', 'alias']",{'incorrect': 100}
"['different', 'securityapikey', 'security', 'definition', 'specialresult', 'query', 'security', 'configurationgeneratedquery', 'parameter', 'specific', 'cardinalityleverage', 'scenario', 'coverquery', 'specific', 'processing', 'statement', 'available', 'query', 'continuedifferent']",{'Security': 100}
"['resteasy', 'issue', 'dependencyresteasy', 'issue', 'dependencyresteasy', 'circleci', 'petstore']",{'issue': 100}
"['runtime', 'crash', 'apiclient']",{'crash': 100}
"['object', 'schema', 'supportmodel', 'internal', 'class', 'protocol', 'codable', 'classpropmodel', 'mymodelimplementation', 'schema', 'object', 'wouldcodable', 'classstringdefault', 'codable', 'wouldmyintmyintmyintdefault', 'implementation', 'incorrect', 'dictionary', 'serialization', 'wouldmyintmyintmyintimplementation', 'support', 'codable', 'encodableimplementation', 'model', 'generates', 'encodable', 'decodable', 'changemymodel', 'stringprotocol', 'method', 'encodableencoder', 'encodecontainer', 'keyedbypropint', 'forkeyforkey', 'propstringdecodable', 'method', 'public', 'decoder', 'throwcontainer', 'keyedbypropint', 'forkeyforkey', 'propstringmyothermodel', 'codable', 'classpropmodel', 'mymodelprotocol', 'method', 'encodableencoder', 'encodecontainer', 'keyedbypropmodel', 'forkeydecodable', 'method', 'public', 'decoder', 'throwcontainer', 'keyedbypropmodel', 'forkey']",{'incorrect': 100}
"['duplication', 'property', 'inheritance', 'duplication', 'allof', 'csharp', 'property', 'inheritance', 'issue', 'discriminator', 'sample', 'petstore']",{'issue': 100}
"['client', 'haskell', 'dateformat', 'update', 'generation', 'readmereadme', 'canonical', 'location', 'traversal', 'model', 'insteadgenerationoption', 'dateformat']",{'generation': 100}
"['parent', 'support', 'class', 'property', 'csharpclient', 'csharpincludes', 'client', 'similar', 'commitmanuc', 'jimschubert', 'csharp', 'subtype', 'deserialization', 'codegen', 'leverage', 'swagger', 'jsonsubtypes', 'improvementvalidation', 'duplicateremove', 'uselessparent', 'restore', 'documentation', 'property', 'cominglaunch', 'csharp', 'securityinterface', 'class', 'impossible', 'implementedinterface', 'class', 'method', 'question', 'implementedportion', 'missingrevision', 'multi', 'compatiblemodel', 'simple', 'hierarchy', 'generatedregeneratecsharp', 'security', 'petstorecsharp', 'property', 'dotnet', 'petstore', 'netcorerunner', 'window', 'indentation', 'dotnetgethashcode', 'inheritance', 'equaloverride', 'method', 'hidingproperty', 'csharp', 'changeddefault', 'current', 'value', 'property', 'schema', 'discriminatordeserialisation', 'parent', 'subtypetemplate', 'javascript', 'triggerdefault', 'valuecopyright', 'cleanup', 'security', 'csharp']",{'Security': 100}
"['client', 'content', 'retrofitcalculation', 'length', 'content']",{'length': 100}
"['return', 'responsebody', 'revert', 'retrofit', 'responserevert', 'codegenreverts', 'commitmodel', 'revert', 'generation', 'kotlinreverts', 'commitglobal', 'namespaces', 'basic', 'revertreverts', 'commitrevert', 'ehyche', 'swiftreverts', 'commitclient', 'revert', 'thread', 'pythonreverts', 'commitupdate', 'revert', 'retrofit', 'petstore', 'samplereverts', 'commitreturn', 'responsebody', 'revert', 'retrofit', 'responsereverts']","{'generation': 100, 'thread': 100}"
"['model', 'generation', 'kotlinmodel', 'enumvarsmodel']",{'generation': 100}
"['client', 'thread', 'pythonclient', 'apiclient', 'python', 'threadpool']",{'thread': 100}
"['client', 'retrofit', 'support', 'implementedsupport', 'sample', 'petstoresupport', 'implementedconfig', 'version', 'switch', 'playversion', 'option', 'implementedmerge', 'datelibrary', 'generation']",{'generation': 100}
"['angular', 'guideline', 'class', 'angularjs', 'codegen', 'reflect', 'renameangular', 'guideline', 'rrename', 'angularjs', 'angular', 'guidelineangularjs', 'angular', 'typescriptangular', 'typescriptshouldnt', 'generation', 'generate', 'stringconvention']",{'generation': 100}
"['valid', 'classclient', 'partial', 'arraylist', 'issue', 'hashmap']",{'issue': 100}
"['update', 'security', 'petstore']",{'Security': 100}
"['removalconversion', 'errormustache', 'generator', 'unnecessary', 'login', 'complex', 'removalsample', 'import', 'generation']",{'generation': 100}
"['mergebranch', 'issue', 'amadeus']",{'issue': 100}
"['ebbee', 'mergebranch', 'codegen', 'gcernier', 'amadeus', 'issue', 'swagger']",{'issue': 100}
"['client', 'generatorgenerator', 'releaseupdate', 'feedback', 'keywordparameter', 'stringtrait', 'string', 'definition', 'convertbuilder', 'return', 'fixedconstructor', 'super', 'referenceupdate', 'signature', 'method', 'issue', 'swagger', 'floateddocstringupdateparameter', 'basenamemodel', 'qualfiiedidiomatic', 'slightlyreadmeremove', 'leftover', 'sampleregenerate', 'sampleclient', 'renamecommon', 'stylereplace', 'spaceimplementation', 'getter', 'trivialupdate', 'sample', 'petstore']",{'issue': 100}
"['objective', 'property', 'additional', 'option', 'swiftmodel', 'optional', 'class', 'property', 'booleansomemodel', 'classsomeintfloat', 'somefloatdouble', 'somedoublesomeboolmodel', 'objective', 'access', 'optional', 'property', 'scalar', 'swift', 'common', 'codebases', 'accessingcompatibility', 'objective', 'swiftdefault', 'objective', 'accessible', 'objccopmatible', 'property', 'command', 'generation', 'objcompatible', 'booleanobjective', 'optional', 'vendor', 'property', 'scalar', 'inaccessible', 'swift', 'objcompatiblereturn', 'optional', 'property', 'scalar', 'swiftdefault', 'model', 'objccompatible', 'false', 'property', 'declawedanimal', 'classpublic', 'declawedobjccompatibleanimal', 'classpublic', 'declawedpublic', 'declawednum', 'nsnumberreturn', 'nsnumber', 'value']",{'generation': 100}
"['issueallow', 'example', 'array', 'multiple', 'property', 'field', 'generation', 'snapshot', 'petstore']",{'generation': 100}
"['query', 'issue']",{'issue': 100}
"['permission', 'gradlew', 'executeexecution', 'gradlew']",{'permission': 100}
"['expose', 'header', 'request', 'default']",{'expose': 100}
"['config', 'issue']",{'issue': 100}
"['update', 'security', 'sample', 'petstore']",{'Security': 100}
"['apache', 'config', 'generatormodel', 'function', 'class', 'codegen', 'template', 'header', 'responserespect', 'alphabetical', 'sampleapache', 'issue']",{'issue': 100}
"['model', 'nancyfx', 'error', 'generation', 'nancyfx', 'value', 'error', 'generation', 'general', 'nancyfx', 'sample']",{'generation': 100}
"['plural', 'multipleallow', 'occurrence', 'multiple', 'plural', 'issueparameter', 'generation', 'sample']",{'generation': 100}
"['issue', 'qbuffer', 'solves', 'changingdocumentation', 'stateparent', 'qbuffer', 'qbytearray', 'qobjectsetbuffer', 'ownership', 'qbytearray', 'responsible', 'bytearray', 'qbuffer', 'variable', 'construction', 'whenever', 'qbuffer', 'writesolution', 'compatible', 'sourcecode', 'retroupdate', 'sample']","{'issue': 100, 'buffer': 92}"
"['generatormodel', 'function', 'class', 'codegen', 'template', 'header', 'responserespect', 'alphabetical', 'samplegetter', 'setter', 'generation']",{'generation': 100}
"['system', 'propertyallow', 'empty', 'issue', 'valueallow', 'multiple', 'issuedemonstrate', 'advantage', 'issue', 'usagesecurity', 'window', 'update', 'issue', 'script']",{'issue': 100}
"['angular', 'generation', 'modulegitignore', 'javascript', 'angular', 'template', 'annotationdefault', 'declaration', 'folder', 'outputclosure', 'angular', 'folder', 'template']",{'generation': 100}
"['jersey', 'issue', 'object', 'close', 'responseupdateissueupdatecreatepetstore']",{'issue': 100}
"['query', 'parameter', 'issue', 'encode', 'commaissueupdate', 'issuequeryparams', 'specifiedupdatefailure', 'certain', 'address']",{'issue': 100}
"['security', 'angular', 'typescript', 'petstore']",{'Security': 100}
"['security', 'typescript', 'angular', 'folder', 'petstore']",{'Security': 100}
"['inheritance', 'issue', 'cpprest', 'inheritance', 'cpprest', 'inheritance', 'cpprest', 'corresponding', 'fromjson', 'class', 'method', 'leverage', 'tojsonoverride', 'virtual', 'param', 'issue', 'param', 'javadoc']",{'issue': 100}
"['request', 'support', 'asyncxxxasynctweak', 'commentprinciple', 'process', 'request', 'creation', 'variable', 'statuscodeerror', 'variabletweak', 'syntaxupdate', 'sampleupdate', 'security', 'samplesecuritycommentpromise', 'return', 'guzzlehttp', 'asyncupdate', 'sampleupdate', 'security', 'sampleasynctest']",{'Security': 100}
"['comment', 'docker', 'update', 'issue']",{'issue': 100}
"['okhttp', 'issue', 'okhttp', 'issue', 'unexpected', 'stream', 'okhttp', 'exception', 'asynchronousupdate', 'okhttp', 'sample', 'petstoreokhttp', 'petstoresecurity', 'okhttp', 'petstoretrigger']",{'issue': 100}
"['swift', 'install', 'integration', 'issue', 'petstoreswiftinstallswift', 'install', 'petstore', 'avoidcocoapod', 'insteadswift', 'timeout']",{'issue': 100}
"['serialization', 'formatopenapi', 'honor', 'swagger', 'formatopenapi', 'version', 'specification', 'instance', 'datatypeformat', 'definedmonth', 'fullyearpublic', 'anchorserializercodestyle', 'improveregenerate', 'sample', 'petstoreregenerate', 'security', 'sample']",{'Security': 100}
"['method', 'issue']",{'issue': 100}
"['params', 'encodingphpunit', 'template', 'endpointsample', 'regeneratedsample', 'security']",{'Security': 100}
"['csharp', 'configuration', 'refactor', 'usageapiclient', 'csharp', 'configuration', 'usage', 'refactorcombinationcommit', 'message', 'firstapiclient', 'csharp', 'configuration', 'usage', 'refactorregenerate', 'csharp', 'samplecommit', 'messageprefix', 'apikey', 'csharp', 'simplify', 'setting', 'headercombinationcommit', 'message', 'firstapiclient', 'csharp', 'configuration', 'usage', 'refactorprefix', 'apikey', 'simplify', 'setting', 'headerregenerate', 'samplecommit', 'messageclient', 'csharp', 'configuration', 'timeoutapiclient', 'csharp', 'configuration', 'usage', 'refactorprefix', 'apikey', 'simplify', 'setting', 'headerregenerate', 'sampleclient', 'regenerate', 'csharp', 'sampleregenerate', 'csharp', 'sample', 'standardcsharp', 'timeout', 'netstandardresolve', 'netstandard', 'csharp', 'additional', 'issue', 'mergeupdate', 'csharp', 'configuration', 'usage']",{'issue': 100}
"['client', 'kotlinarray', 'kotlinarray', 'primitive', 'valid', 'issue', 'swagger', 'arraymemory', 'interface', 'efficientserialization', 'issue', 'avoidupdate', 'generator', 'excludesclient', 'folder', 'sample', 'kotlinconventional', 'directory', 'sample', 'kotlinclient', 'petstore', 'sample', 'kotlinclient', 'server', 'generatedocumentation', 'generator', 'currentclient', 'server']",{'issue': 100}
"['dictionary', 'manager', 'thread']",{'thread': 100}
"['permission', 'update', 'shell']",{'permission': 100}
"['client', 'custom', 'okhttp', 'keymanagersclient', 'ability', 'okhttp', 'keymanagersupdate', 'generatedmodel', 'update', 'security']",{'Security': 100}
"['template', 'generation', 'ensure', 'correctmodel', 'decoder', 'linux', 'building', 'template', 'generation', 'swift', 'ensure', 'applegenerate', 'script', 'petstore']",{'generation': 100}
"['injectiontoken', 'typescript', 'opaquetoken', 'angular', 'issue', 'stringinjectiontoken', 'typescript', 'opaquetoken', 'angular', 'useopaquetoken', 'option', 'stringsecurity', 'shell']",{'issue': 100}
"['plant', 'server', 'erlangaddress', 'apparent', 'erlang', 'issue', 'erlang', 'petstoreopposite', 'basic', 'erlang', 'samplerecent', 'version', 'install', 'erlangjesse', 'errorchmod', 'version', 'rebar', 'exportcurrent', 'speed', 'average', 'dload', 'total', 'uploadrebar', 'jessedefault', 'config', 'jesse', 'macro', 'undefineddefault', 'function', 'undefined', 'jessedefault', 'function', 'jessedefault', 'function', 'jessedefault', 'function', 'jesseexecution', 'command', 'process', 'error', 'valuemethod', 'execution', 'value', 'command', 'maven', 'process', 'error', 'erlang', 'plugin', 'projectversion', 'erlang', 'dependency', 'stable', 'latestcompilation', 'server', 'erlang']",{'issue': 100}
"['pattern', 'validation', 'issue', 'script', 'petstore']",{'issue': 100}
"['current', 'script', 'sampleresultcheckout', 'masterpetstoresample', 'generation']",{'generation': 100}
"['sample', 'generation', 'script', 'minorstandard', 'stanard', 'csharp', 'petstoreconfig', 'csharp', 'existent', 'petstore', 'netcoreconfig', 'existingsnapshot', 'petstore', 'typesript', 'versioningdeterministic', 'output']",{'generation': 100}
"['validate', 'option', 'codegen', 'issue', 'swagger']",{'issue': 100}
"['order', 'consistency', 'field', 'authmethods', 'hasmoreglobal', 'field', 'authmethods', 'operation', 'authmethods', 'orderconsistent', 'issue', 'field', 'setting']",{'issue': 100}
"['issueandroid', 'custom', 'class', 'constructor', 'issue', 'getclassloader']",{'issue': 100}
"['revert', 'issue', 'swagger', 'changereverts']",{'issue': 100}
"['injection', 'objectmapper', 'issueinjection', 'constructor', 'variable', 'apicontroller', 'qualifier', 'objectmapper']",{'injection': 100}
"['executable', 'permission', 'update', 'shell', 'script']",{'permission': 100}
"['jaxrs', 'jersey', 'supportjaxrs', 'jersey', 'issue', 'codegenerationserver', 'jaxrs', 'jersey', 'update', 'shellscripts', 'petstore', 'sample']",{'issue': 100}
"['typescript', 'angular', 'option', 'issue', 'requesttypescript', 'angular', 'option', 'issue', 'requestswagger', 'codegen', 'issueoption', 'request', 'withcredentialstypescript', 'angular', 'update', 'petstore', 'sample']",{'issue': 100}
"['sample', 'javascript', 'generation', 'fixupconfig', 'language', 'level', 'generation', 'alias', 'different', 'javascript']",{'generation': 100}
"['mergebranch', 'elizabetht', 'codegen', 'issue', 'swagger']",{'issue': 100}
"['check', 'method', 'pointeroptional', 'method', 'issue', 'unsafe', 'commitmaintains', 'optional', 'spirit', 'issue', 'changedefault', 'making', 'container', 'various', 'script', 'sample']",{'issue': 100}
"['parameter', 'javascript', 'regression', 'property', 'multi', 'issue', 'undefinedissueupdate']",{'issue': 100}
"['security', 'typescript', 'update', 'scala', 'sample']",{'Security': 100}
"['update', 'security', 'sample']",{'Security': 100}
"['update', 'security', 'sample', 'server']",{'Security': 100}
"['client', 'security', 'typescript', 'angular', 'update', 'sample']",{'Security': 100}
"['objectivec', 'update', 'security', 'sample']",{'Security': 100}
"['client', 'security', 'javascript', 'update', 'sample']",{'Security': 100}
"['python', 'security']",{'Security': 100}
"['update', 'security', 'sample']",{'Security': 100}
"['security', 'samplepackageguid', 'security', 'issueupdate', 'security']",{'Security': 100}
"['medium', 'vendorallow', 'medium', 'vendorrevert', 'unnecessary', 'diffsupdate', 'sample', 'petstoreeditsrerun', 'security', 'okhttp', 'petstorerealistic']",{'Security': 100}
"['undertow', 'timestamps', 'issue', 'samplesupport', 'issueundertow', 'timestamp', 'generation', 'issue', 'disableupdate', 'sample']","{'issue': 100, 'generation': 100}"
"['nancyfx', 'package', 'issue', 'nonrandom', 'sampleparameter', 'packageguidparameter', 'packageguid', 'nancyfx', 'petstore']",{'issue': 100}
"['timestamps', 'serveroption', 'issue', 'serversample', 'server', 'issueupdate', 'server']",{'issue': 100}
"['timestamps', 'issue']",{'issue': 100}
"['timestamp', 'generation', 'issue']","{'generation': 100, 'issue': 100}"
"['timestamps', 'issue']",{'issue': 100}
"['artifact', 'update', 'jersey', 'sampleupdate', 'jersey', 'samplejersey', 'generation', 'script', 'sampleequivalent', 'jerseyupdate', 'jersey', 'sample']",{'generation': 100}
"['version', 'update', 'maven', 'bundle', 'pluginupdate', 'maven', 'bundle', 'issue', 'plugin']",{'issue': 100}
"['successive', 'maven', 'selective', 'generation', 'pluginsystem', 'reset', 'property', 'option']",{'generation': 100}
"['configuration', 'singletonsample', 'singleton', 'templatesample', 'regeneratedbroken', 'accidentalsample', 'security', 'example', 'template', 'usage']",{'Security': 100}
"['model', 'return', 'status', 'delete', 'clear', 'incorrect']",{'incorrect': 100}
"['python', 'flask', 'support', 'flask', 'python', 'dockerfile', 'generation', 'dockerignorebuild', 'docker', 'sample', 'store']",{'generation': 100}
"['solves', 'issue']",{'issue': 100}
"['error', 'dataformatter', 'swifterror', 'dataformatter', 'fatal', 'formatterlocale', 'setting', 'causedupdate', 'sample']",{'fatal': 100}
"['client', 'support', 'standard', 'libraryclient', 'languageclient', 'csharp', 'restsharp', 'dependanciesrestsharp', 'nececary', 'replicatestandard', 'project', 'validation', 'incompabilityminorleftover', 'method', 'changedreason', 'leftover', 'stuffreadme', 'framework', 'readme', 'correctinstallation', 'placeholder', 'instruction', 'readme', 'supportsasync', 'leftover', 'stuffreference', 'sincegeneration', 'implementforgoten', 'addedcsharp', 'option', 'netstandard', 'generationstandard', 'fixedstandard', 'generation', 'issue', 'programmerclient', 'minorstandard', 'timeout', 'error', 'timespan', 'timeoutstandard', 'generator', 'csharptargetframework', 'functionallity', 'csharp', 'generator', 'standard', 'option']","{'generation': 100, 'issue': 100}"
"['maven', 'selective', 'support', 'generationallow', 'maven', 'selective', 'generation', 'plugindocumentation', 'selective', 'generation']",{'generation': 100}
"['bluemix', 'issue', 'requestissue']",{'issue': 100}
"['wrong', 'sample', 'issueupdate', 'spring', 'sample', 'issue']",{'issue': 100}
"['deterministic', 'randomnesscloud', 'nodejs', 'google', 'update', 'sampleexample', 'deterministic', 'generatoravoids', 'result', 'review', 'changingupdate', 'nodejsinput', 'randomness', 'parameter']",{'randomness': 100}
"['okhttp', 'issue']",{'issue': 100}
"['complex', 'import', 'issue']",{'issue': 100}
"['shippable', 'issue', 'openjdk']",{'issue': 100}
"['folder', 'replacedswagger', 'codegen', 'issue']",{'issue': 100}
"['option', 'javascript', 'issue', 'booleanremove', 'commentedclioption', 'codegen', 'issue', 'boolean']",{'issue': 100}
"['jaxrs', 'jersey', 'issue']",{'issue': 100}
"['model', 'class', 'issue', 'object', 'swagger', 'containsmodel', 'mustache', 'class', 'template', 'object', 'swagger', 'contains']",{'issue': 100}
"['autocompletiondescription', 'argument', 'operation', 'spaceclient', 'dockerfile', 'generation', 'packagingclient', 'generator', 'sample']",{'generation': 100}
"['query', 'collection', 'parameter', 'javascript', 'issue', 'encode', 'commaissueupdate', 'issue']",{'issue': 100}
"['numeric', 'issue', 'properlydefault', 'example', 'value', 'issuespace']",{'issue': 100}
"['usage', 'contextpath', 'issue', 'basepathjaxrs', 'usage', 'contextpath', 'basepathjaxrs', 'addeddefault', 'interface', 'false', 'annotation', 'generatedgenerates', 'servlets', 'jaxrs', 'multiple', 'servletsnecessary', 'contract', 'basepathjaxrs', 'generation', 'sample']","{'issue': 100, 'generation': 100}"
"['array', 'jaxrs', 'resteasy', 'enums', 'array', 'jaxrs', 'array', 'jaxrs', 'resteasy', 'compilingmodel', 'petstore', 'jaxrs', 'generation', 'endpoint', 'contract', 'samplesummary', 'issue', 'apioperationenums', 'string', 'annotation', 'patchmodel', 'petstore', 'jaxrs', 'generation', 'endpoint', 'contract', 'sample']","{'generation': 100, 'issue': 100}"
"['featuresubclass', 'class', 'spring', 'annotation', 'issue', 'missingsubclass', 'class', 'spring', 'annotation', 'issue', 'spring', 'sample']",{'issue': 100}
"['issueswagger', 'codegen', 'issue', 'addressdescription', 'replaceimprovement', 'sample', 'petstore']",{'issue': 100}
"['packagename', 'issue', 'aspnetcore', 'adjusts', 'outputinput', 'sourcefolder', 'startmodelfilefolder', 'consequence', 'apifilefolderreturn', 'different', 'sourcefolder', 'value', 'setting']",{'issue': 100}
"['logic', 'parameter', 'manner', 'update', 'template', 'issue', 'headerupdate', 'sample']",{'issue': 100}
"['array', 'parameter', 'incorrect']",{'incorrect': 100}
"['issue', 'objectsuggestedplease']",{'issue': 100}
"['finch', 'scala', 'generatorfeaturereturn', 'apiclient', 'cancellable', 'nsnumber', 'changedefault', 'client', 'implementation', 'configuration', 'custom', 'protocol', 'singleton', 'passedcurrent', 'concurrency', 'jsonmodel', 'workaroundupdatesuper', 'missingtemplate', 'codegendocumentation', 'update', 'templateupdate', 'petstoreclientdefault', 'client', 'version', 'header', 'sharefinch', 'generator', 'resourceupdate', 'errrosmultitheard', 'client', 'problemfinch', 'errorfinch', 'header', 'finatra', 'issuefinch', 'server', 'generatorfinch', 'server', 'generatorparameter', 'templateserver', 'commits', 'previous', 'generator', 'appropriate', 'outputmodel', 'changepackage', 'generates', 'scala', 'currentlyoption', 'circe', 'issue', 'issueclean', 'importimplementation', 'custom', 'initial', 'supportmodel', 'finch', 'package', 'update', 'finch', 'import', 'explicitfinch', 'regenerate', 'example']","{'concurren': 90, 'issue': 100}"
"['spring', 'issue']",{'issue': 100}
"['spring', 'generation', 'script']",{'generation': 100}
"['necessary', 'variable', 'javascript', 'issue']",{'issue': 100}
"['necessary', 'variable', 'javascript', 'issue']",{'issue': 100}
"['server', 'javascript', 'issue', 'responsedeserialize', 'issue', 'exception', 'responseclient', 'javascript', 'template', 'issue', 'generatemodel', 'endpoint', 'petstoremodel', 'endpoint', 'script', 'petstore']",{'issue': 100}
"['timestamp', 'generation']",{'generation': 100}
"['typescript', 'fetch', 'option', 'issue']",{'issue': 100}
"['default', 'csharp', 'sensitivity', 'false', 'original', 'issue', 'noticeddefault', 'prefix', 'setting', 'committhree']",{'issue': 100}
"['invalid', 'response', 'crash', 'swiftreturn', 'swift', 'invalidbecomes', 'swift', 'cleanupswift', 'generate', 'sample', 'petstore']",{'crash': 100}
"['deserialisation', 'overriden', 'scala', 'issue', 'objectmapperobjectmapper', 'overriden', 'deserialisationdeserialision', 'apiinvoker', 'creatingupdate', 'scala', 'sample']",{'issue': 100}
"['jersey', 'incorrect', 'field', 'capitalizationcapital', 'cosmeticjaxrs', 'petstore']",{'incorrect': 100}
"['discriminator', 'issue', 'valueinline', 'codegenmodel', 'warns', 'language', 'template', 'discriminator', 'issue', 'object', 'swagger', 'codegen', 'codegen', 'resource', 'module', 'swaggerjavainflector', 'codegen', 'resource', 'module', 'swaggerjavajaxrs', 'codegen', 'resource', 'module', 'codegen', 'resource', 'module', 'swaggerextension', 'vendor', 'discriminator', 'codegen', 'resource', 'module', 'javainflector', 'codegen', 'resource', 'module', 'javajaxrs', 'codegen', 'resource', 'module', 'codegen', 'resource', 'module', 'swaggerjackson', 'jsontypeinfo', 'language', 'annotation', 'codegen', 'resource', 'module', 'javainflector', 'codegen', 'resource', 'module', 'javajaxrs', 'codegen', 'resource', 'module', 'codegen', 'resource', 'module', 'swagger']",{'issue': 100}
"['isinteger', 'check', 'integer', 'decimal']",{'integer': 100}
"['configuration', 'template', 'generation']",{'generation': 100}
"['remoteconflictswagger', 'codegen', 'language', 'moduleswagger', 'codegen', 'language', 'moduleswagger', 'codegen', 'language', 'moduleswagger', 'codegen', 'language', 'moduleswagger', 'codegen', 'language', 'modulefeign', 'codegen', 'resource', 'module', 'swagger', 'librarycodegen', 'resource', 'module', 'okhttp', 'swagger', 'librarytypescript', 'fetch', 'codegen', 'resource', 'module', 'swaggerswagger', 'codegen', 'resource', 'moduleswagger', 'codegen', 'resource', 'moduleswagger', 'codegen', 'resource', 'moduletypescript', 'angular', 'codegen', 'resource', 'module', 'swaggertypescript', 'angular', 'codegen', 'resource', 'module', 'swaggerswift', 'swagger', 'codegen', 'moduleswift', 'swagger', 'codegen', 'moduletypescript', 'swagger', 'codegen', 'moduleclient', 'security', 'typescript', 'angular', 'petstore', 'sampleclient', 'sample', 'petstoreclient', 'sample', 'petstoreclient', 'sample', 'petstoreclient', 'feign', 'sample', 'petstoreclient', 'petstore', 'swagger', 'sample', 'feignclient', 'petstore', 'swagger', 'sample', 'feignclient', 'jersey', 'petstore', 'swagger', 'sampleclient', 'jersey', 'petstore', 'swagger', 'samplemodel', 'client', 'jersey', 'petstore', 'swagger', 'samplemodel', 'client', 'jersey', 'petstore', 'swagger', 'samplemodel', 'client', 'jersey', 'petstore', 'swagger', 'samplemodel', 'client', 'jersey', 'petstore', 'swagger', 'sampleclient', 'jersey', 'petstore', 'swagger', 'sampleclient', 'okhttp', 'petstore', 'swagger', 'sampleclient', 'okhttp', 'petstore', 'swagger', 'sampleclient', 'okhttp', 'petstore', 'swagger', 'sampleclient', 'petstore', 'retrofit', 'swagger', 'sampleclient', 'petstore', 'retrofit', 'swagger', 'sampleclient', 'petstore', 'retrofit', 'swagger', 'sampleclient', 'petstore', 'retrofitrx', 'swagger', 'sampleclient', 'petstore', 'retrofitrx', 'swagger', 'sampleclient', 'swaggerclient', 'sample', 'petstoreclient', 'swaggerclient', 'sample', 'petstoreclient', 'swaggerclient', 'sample', 'petstoreclient', 'swaggerclient', 'sample', 'petstoreclient', 'swaggerclient', 'sample', 'petstoreclient', 'swaggerclient', 'sample', 'petstoreclient', 'swaggerclient', 'sample', 'petstoreclient', 'swaggerclient', 'sample', 'petstoredefault', 'client', 'swaggerclient', 'petstore', 'sampledefault', 'client', 'swaggerclient', 'petstore', 'sampledefault', 'client', 'swaggerclient', 'petstore', 'sampledefault', 'client', 'swaggerclient', 'petstore', 'sampledefault', 'client', 'swaggerclient', 'petstore', 'sampledefault', 'client', 'swaggerclient', 'petstore', 'sampledefault', 'client', 'swaggerclient', 'petstore', 'sampledefault', 'client', 'swaggerclient', 'petstore', 'sampledefault', 'client', 'swaggerclient', 'petstore', 'sampleclient', 'qtcpp', 'sample', 'petstoreclient', 'qtcpp', 'sample', 'petstoreclient', 'qtcpp', 'sample', 'petstoredefault', 'client', 'typescript', 'angular', 'petstore', 'sampleclient', 'typescript', 'angular', 'petstore', 'sampleclient', 'typescript', 'angular', 'petstore', 'sampleclient', 'typescript', 'angular', 'petstore', 'sampleclient', 'typescript', 'angular', 'petstore', 'sampledefault', 'client', 'typescript', 'fetch', 'petstore', 'sampleclient', 'typescript', 'fetch', 'petstore', 'target', 'sampleclient', 'version', 'typescript', 'fetch', 'petstore', 'sampledefault', 'client', 'typescript', 'fetch', 'petstore', 'sampledefault', 'client', 'typescript', 'fetch', 'petstore', 'sampledefault', 'server', 'jaxrs', 'resteasy', 'petstore', 'swagger', 'sampledefault', 'server', 'jaxrs', 'resteasy', 'petstore', 'swagger', 'samplemodel', 'server', 'jaxrs', 'resteasy', 'petstore', 'swagger', 'sampleserver', 'spring', 'petstore', 'swagger', 'sampleserver', 'spring', 'petstore', 'swagger', 'sampleserver', 'springboot', 'petstore', 'swagger', 'sampleserver', 'springboot', 'petstore', 'swagger', 'sample']",{'Security': 100}
"['resteasy', 'issue', 'petstore', 'sample']",{'issue': 100}
"['model', 'resteasy', 'template', 'annotation', 'issue', 'swagger']",{'issue': 100}
"['nodejs', 'integer', 'server', 'format', 'value', 'stringformat', 'property', 'check', 'swaggerconsistent']",{'integer': 100}
"['client', 'username', 'issue']",{'issue': 100}
"['keyword', 'generation']",{'generation': 100}
"['typescript', 'fetch', 'tslint', 'issue', 'generatedtypescript', 'fetch', 'tslint', 'issue', 'securityrequire', 'version', 'tslint', 'typescriptbuild', 'script']",{'issue': 100}
"['integer', 'minimumdecimal', 'valueparameter', 'integer']",{'integer': 100}
"['issueswagger', 'number', 'integer', 'issuespace']",{'integer': 100}
"['mergechrisjamesc', 'request', 'mergefetch', 'typescript', 'issue']",{'issue': 100}
"['issue', 'lintingremove']",{'issue': 100}
"['generation', 'sample']",{'generation': 100}
"['mechanism', 'issue', 'cachesample', 'issue', 'petstore']",{'issue': 100}
"['property', 'codegen', 'support', 'classproperty', 'codegen', 'support', 'classclass', 'property', 'codegen', 'method', 'object', 'avoidsample', 'security']",{'Security': 100}
"['subclass', 'class', 'annotation', 'issue', 'missinglatest', 'petstoresubclass', 'class', 'annotation', 'issue', 'missinginclude', 'super', 'child']",{'issue': 100}
"['error', 'typescript', 'error', 'generationmodel', 'language', 'special', 'clobber', 'casingconvention', 'address', 'language', 'issue']",{'issue': 100}
"['jaxrs', 'application', 'basicapplication', 'basicjaxrs', 'generation', 'template', 'samplejaxrs', 'regenerate', 'clean', 'checkstyle']",{'generation': 100}
"['jersey', 'support', 'patchjersey', 'support', 'issue', 'addingpetstore', 'update', 'patch', 'sample']",{'issue': 100}
"['python', 'infourlpackageurl', 'python', 'infourlregenerate', 'python', 'petstoreregenerate', 'security', 'python', 'petstore']",{'Security': 100}
"['response', 'issuedefault', 'response', 'issue', 'alwaysdocumentation', 'method', 'comment']",{'issue': 100}
"['aeffe', 'mergebranch', 'codegen', 'issue', 'swagger', 'schnabel']",{'issue': 100}
"['bugfix', 'issue']",{'issue': 100}
"['jaxrs', 'server', 'beanvalidation', 'generatorclient', 'includingadapt', 'sourcefoldertemplateremove', 'template', 'mustache', 'optimizejaxrs', 'annotation', 'breakinsteadmodel', 'server', 'getter', 'annotation', 'fieldcleanupexample', 'gzippingcomplete', 'serverreadme', 'reworkswitch', 'beanvalidationseparate', 'reuse', 'beanvalidation', 'subtemplatetemplate', 'mustachedefault', 'falseclient', 'includingadapt', 'sourcefoldertemplateremove', 'template', 'mustache', 'optimizejaxrs', 'annotation', 'breakinsteadmodel', 'server', 'getter', 'annotation', 'fieldcleanupexample', 'gzippingcomplete', 'serverreadme', 'reworkswitch', 'beanvalidationseparate', 'reuse', 'beanvalidation', 'subtemplatetemplate', 'mustachedefault', 'falsebeanvalidation', 'okhttp', 'librarycleanuppattern', 'invalid', 'beanvalidation', 'temporarypattern', 'invalid', 'beanvalidation', 'temporaryimplementation', 'jaxrs', 'class', 'annotationapplication', 'configuration', 'generate', 'springlevel', 'method', 'unnecessary', 'annotation', 'cleanmaxitems', 'support', 'minitemsparams', 'query', 'beanvalidation', 'supportvalidation', 'importserver', 'switch', 'variousfolder', 'createcleanupcleanuppattern', 'solution', 'revert', 'temporaryreverts', 'reversingchangeconflictscalaandroid', 'petstoreandroid', 'petstoreandroid', 'petstoreandroidaspnet', 'petstoreclojurecpprestcsharp', 'dotnetcsharp', 'petstorecsharpproperty', 'csharp', 'changedcwikidynamicerlang', 'petstoreflashflaskconnexionpetstoregroovyservant', 'haskellinflector', 'petstorepetstorepetstorepetstorepetstoreokhttp', 'petstoreokhttp', 'petstorepetstorepetstorepetstorepetstore', 'undertowpetstorejavascript', 'closurejavascript', 'petstorejavascriptpromise', 'javascriptjaxrs', 'petstorejaxrs', 'petstorejaxrs', 'jersey', 'petstorejaxrs', 'petstorejaxrs', 'resteasy', 'petstorejaxrs', 'resteasy', 'petstorejaxrs', 'resteasy', 'petstorejaxrs', 'petstorejmeterlumen', 'petstorenancyfx', 'petstorenodejs', 'petstorepetstorepetstorepythonpetstorepetstorescala', 'asyncscalascalatra', 'petstorecsharp', 'securitysecuritysecurity', 'okhttp', 'petstoresecurity', 'javascript', 'closuresecurity', 'javascriptsecurity', 'lumen', 'petstoresecuritysecuritysecuritysecurity', 'pythonsecurity', 'qtcppsecuritysecurity', 'petstorescala', 'securitysilex', 'security', 'petstoresecurity', 'petstoresecurity', 'swiftsecurity', 'typescriptsecurity', 'typescriptsecurity', 'typescriptsecurity', 'typescriptsilex', 'petstorepetstore', 'sinatrapetstorespringcloud', 'spring', 'petstorespringspringboot', 'petstorepetstore', 'swiftpetstore', 'swiftpetstore', 'swiftswifttizenangular', 'typescriptangular', 'typescript', 'petstoreangular', 'typescript', 'petstoreangular', 'typescriptfetch', 'typescript', 'petstoretarget', 'fetch', 'typescript', 'petstorefetch', 'typescript', 'petstorefetch', 'typescripttypescript', 'petstoretypescript', 'petstoretypescripttypescript', 'petstorewindow', 'scalawindow', 'androidwindow', 'aspnet', 'petstorewindow', 'scala', 'asyncwindow', 'clojurewindow', 'cpprestwindow', 'csharpwindowwindow', 'dynamicwindow', 'flashwindowwindowwindow', 'okhttp', 'petstorewindowwindow', 'javascriptwindowwindowwindowwindow', 'pythonwindow', 'qtcppwindow', 'petstorewindowwindow', 'scalawindow', 'spring', 'async', 'petstorewindow', 'spring', 'petstorewindow', 'springboot', 'petstorewindow', 'swiftwindow', 'tizenwindow', 'typescriptwindow', 'typescriptwindow', 'typescriptwindow', 'typescriptwindow', 'typescriptrevert', 'cleanupreverts', 'commitfolder', 'revert', 'createreverts', 'commitconflictwindow', 'spring', 'async', 'petstorewindow', 'spring', 'petstorewindow', 'springboot', 'petstorefolder', 'revert', 'createreverts', 'commitconflictwindow', 'spring', 'async', 'petstorewindow', 'spring', 'petstorewindow', 'springboot', 'petstorecreate', 'masterrevert', 'master', 'createreverts', 'commitfolder', 'revert', 'createreverts', 'commitfolder', 'revert', 'createreverts', 'commitpattern', 'solution', 'revert', 'temporaryreverts', 'reversingchangeactivate', 'swagger', 'support', 'correctsourcefolder', 'default', 'changeswitch', 'unittest', 'support', 'activate', 'generatorintegration', 'switch', 'support', 'springclient', 'server', 'generator', 'renamelanguage', 'support', 'interfacecommentreference', 'correctsourcefolder', 'dynamicreplace', 'sourcefoldercompatibility', 'backwards', 'language', 'renamecomment', 'cleanupdefaultcodegenreference', 'beanvalidation', 'cleanup', 'currentlysupportparameter', 'instantiiation', 'methodendpoint']",{'Security': 100}
"['array', 'primitivecreate', 'array', 'primitive', 'issue', 'correctskeyword', 'various', 'nullptr', 'issue', 'indentationmustache', 'petstore']",{'issue': 100}
"['generation', 'batchexample', 'regeneratedwindow']",{'generation': 100}
"['deeddd', 'mergecbornet', 'request', 'template', 'issue']",{'issue': 100}
"['example', 'security', 'update', 'template', 'headerexample', 'update', 'petstore']",{'Security': 100}
"['mergesecurity', 'policy', 'custom', 'security', 'custom']",{'Security': 100}
"['acfdd', 'mergerequest', 'olivervidovic', 'method', 'issue']",{'issue': 100}
"['method', 'issue', 'correctadditionallydirectory', 'package', 'enumvaluetestsample', 'client', 'jersey']",{'issue': 100}
"['cdbfec', 'mergerequest', 'alexandern', 'issueclient', 'objective', 'discriminator', 'issue']",{'issue': 100}
"['mergecbornet', 'request', 'mergeinheritance', 'allof', 'issue', 'composition']",{'issue': 100}
"['mergerequest', 'mergewithout', 'flask', 'python', 'controller', 'issue']",{'issue': 100}
"['logic', 'support', 'content', 'generation', 'content', 'identification', 'string']",{'generation': 100}
"['issueclient', 'array', 'primitive', 'vector', 'error', 'generation', 'cpprest', 'response', 'extra', 'newline', 'petstore', 'binaryreadme', 'update', 'errorstream', 'binary']",{'generation': 100}
"['client', 'objective', 'discriminator', 'issue']",{'issue': 100}
"['security', 'custompolicy', 'security', 'issuecertificate', 'security', 'policy', 'pinnedpolicy', 'security', 'configuration', 'wrappercertificate', 'verifyssl', 'control', 'expose', 'vanilla', 'invalid', 'domaincertificate', 'single', 'sslcacert', 'expose', 'configure', 'policy']","{'Security': 100, 'expose': 100}"
"['mergemanager', 'thread', 'swift', 'requestdictionary', 'manager', 'thread']",{'thread': 100}
"['dictionary', 'manager', 'thread']",{'thread': 100}
"['mergebranch', 'neilotoole', 'issue', 'field']",{'issue': 100}
"['mergebranch', 'neilotoole', 'additional', 'codegen', 'issue', 'swagger', 'field']",{'issue': 100}
"['ddeea', 'mergexaviapa', 'issue', 'bugfix', 'setter', 'condition']",{'issue': 100}
"['sourcefolder', 'language', 'property', 'scala', 'issue', 'introduce']",{'issue': 100}
"['scala', 'abstract', 'codegen', 'extractextract', 'issueleast', 'petstore', 'changeclass', 'super', 'issue', 'initializationclioptions', 'issueupdate', 'issueremove']",{'issue': 100}
"['mergelunat', 'request', 'anchor', 'issue']",{'issue': 100}
"['anchor', 'issue']",{'issue': 100}
"['mergefeature', 'epaul', 'regenerate', 'scala', 'request', 'sampleregenerate', 'scala', 'issue']",{'issue': 100}
"['regenerate', 'scala', 'issue']",{'issue': 100}
"['jaxrs', 'issue', 'value']",{'issue': 100}
"['generation', 'usagegeneration', 'usagegeneration', 'usageconsistent', 'close', 'queryparam']",{'generation': 100}
"['cedede', 'dbfbd', 'mergeclient', 'unnecessary', 'changeremove', 'python', 'unnecessary', 'codegen', 'changechange', 'unnecessary', 'codegenchange', 'timestamp', 'option', 'swfit', 'codegenremove', 'codegen', 'unnecesaryremove', 'closure', 'unnecessary', 'codegen', 'changechange', 'unnecessary', 'codegencomma', 'missig', 'issue']",{'issue': 100}
"['comma', 'missig', 'issue']",{'issue': 100}
"['issue', 'swagger']",{'issue': 100}
"['mergeclient', 'akhilkedia', 'tizen', 'codegen', 'tizen', 'generation', 'issue']","{'generation': 100, 'issue': 100}"
"['python', 'issue']",{'issue': 100}
"['tizen', 'generation', 'issueclient', 'obsolete', 'tizen', 'documentation', 'library', 'generation', 'contains', 'script', 'producedclient', 'tizen', 'petstore', 'petstoretest', 'sampleakhilkedia']",{'generation': 100}
"['angularchange', 'angulardefault', 'issue', 'header']",{'issue': 100}
"['efabdb', 'mergerequest', 'mergemultit', 'apiclient', 'thread']",{'thread': 100}
"['inheritance', 'allof', 'issue', 'composition']",{'issue': 100}
"['inflector', 'spring', 'issue', 'variousdeserialization', 'spring', 'update', 'inflectorjaxrs', 'jersey', 'tostringjaxrs', 'jersey', 'issue', 'patch']",{'issue': 100}
"['featurereturn', 'apiclient', 'cancellable', 'nsnumber', 'changedefault', 'client', 'implementation', 'configuration', 'custom', 'protocol', 'singleton', 'passedcurrent', 'concurrency', 'jsonmodel', 'workaroundupdatesuper', 'missingtemplate', 'codegendocumentation', 'update', 'templateupdate']",{'concurren': 90}
"['scottrwmodel', 'inline', 'setter', 'issue']",{'issue': 100}
"['model', 'inline', 'setter', 'issue']",{'issue': 100}
"['ddcbe', 'mergemodelsolv', 'request', 'issue', 'duplicate']",{'issue': 100}
"['abada', 'mergeparam', 'params', 'incorrect', 'update', 'cliffano', 'requestparameter']",{'incorrect': 100}
"['mergenewline', 'securityscope', 'beingcoder', 'error', 'requestnewline', 'securityscope', 'spring', 'springmvc', 'generation']",{'generation': 100}
"['array', 'typescripttypescript', 'support', 'angularpropertyarray', 'datatypeclient', 'fetch', 'update', 'petstorefetch', 'restore', 'namingfetch', 'integer']",{'integer': 100}
"['dcdcbf', 'mergerequest', 'mergeclient', 'jsoncreator', 'annotation', 'issue']",{'issue': 100}
"['jsoncreator', 'annotation', 'issue']",{'issue': 100}
"['cdbbf', 'befcda', 'mergeguohuang', 'request', 'pathparams', 'issue']",{'issue': 100}
"['pathparams', 'issue']",{'issue': 100}
"['mergerequest', 'mergejaxrs', 'issue']",{'issue': 100}
"['issue', 'mishra', 'place', 'basename', 'paramname', 'close', 'request']",{'issue': 100}
"['model', 'parameter', 'issue']",{'issue': 100}
"['extra', 'newline', 'issue']",{'issue': 100}
"['issue', 'request']",{'issue': 100}
"['cdbfe', 'mergerequest', 'mergehaskell', 'generator', 'modelimpl', 'issue']",{'issue': 100}
"['mergequery', 'param', 'issue', 'requestquery', 'param', 'issue']",{'issue': 100}
"['bebaaneilotoole', 'request', 'issue', 'check']",{'issue': 100}
"['mergerequest', 'mergeclient', 'issue']",{'issue': 100}
"['client', 'apikey', 'issue']",{'issue': 100}
"['template', 'maxlength', 'incorrect', 'minlengthmaxlength', 'regexp', 'issuerevert']",{'incorrect': 100}
"['eefde', 'fbbad', 'mergelunat', 'request', 'mergecsharp', 'header', 'issue']",{'issue': 100}
"['csharp', 'header', 'issue']",{'issue': 100}
"['expose', 'nsprogress', 'requestbuilder']",{'expose': 100}
"['workarount', 'return', 'super', 'offering', 'current', 'jsonmodel', 'apiclient', 'concurrency', 'default', 'state', 'configuration', 'reduces', 'protocol', 'rename']",{'concurren': 90}
"['master', 'upstream', 'integration', 'override', 'variablebuild', 'appveyorrspec', 'security', 'defeault', 'update', 'petstoreformat']",{'Security': 100}
"['rspec', 'security', 'defeault', 'update', 'petstore']",{'Security': 100}
"['security', 'samplepetstore', 'security', 'security', 'swiftsecuritysecurity', 'typescriptsecurity']",{'Security': 100}
"['mergerequest', 'mergemodel', 'client', 'issue']",{'issue': 100}
"['model', 'client', 'issue']",{'issue': 100}
"['stringhelper', 'addedstatic', 'fieldapiclientfunction', 'apiclient', 'optional', 'params', 'namedjustignoreflagsupport', 'format', 'queryparams', 'multi', 'thereforequeryparam', 'stringconform', 'crypto', 'convertconverterassignment', 'aware', 'apiclient', 'xxxapi', 'operatorfuture', 'stringquery', 'argument', 'optional', 'adapt']",{'crypto': 100}
"['python', 'issue']",{'issue': 100}
"['issue', 'swagger']",{'issue': 100}
"['client', 'issue', 'feign']",{'issue': 100}
"['bcedbaa', 'mergebranch', 'vovan', 'codegen', 'issue', 'swagger']",{'issue': 100}
"['verification', 'requiredparamsfeatureremove', 'crypto', 'encodingquery', 'param', 'multi', 'handlingqueryparamsawait', 'async']",{'crypto': 100}
"['support', 'spring', 'contextpath', 'issue']",{'issue': 100}
"['mergerequest', 'mergeimprove', 'incorrect', 'python', 'value']",{'incorrect': 100}
"['issue', 'sample', 'petstore']",{'issue': 100}
"['javajaxrs', 'resource', 'issue']",{'issue': 100}
"['insensitive', 'header', 'search', 'content']",{'Sensitive': 90}
"['mergerequest', 'mergemodel', 'security', 'petstore', 'endpoint']",{'Security': 100}
"['security', 'petstore', 'endpoint']",{'Security': 100}
"['mergesecurity', 'request', 'arnestedclient', 'security', 'petstore', 'swagger']",{'Security': 100}
"['format', 'swiftpartial', 'parameter', 'generation', 'formparams']",{'generation': 100}
"['mergerequest', 'format', 'fieldformat', 'issue', 'field']",{'issue': 100}
"['static', 'format', 'issue', 'field']",{'issue': 100}
"['cfffd', 'mergeabcsun', 'request', 'lumen', 'mergeroute', 'issure', 'lumen', 'priority', 'endpoint']",{'issue': 91}
"['client', 'security', 'followingclient', 'security', 'integration', 'petstore', 'swaggeridenticalclient', 'swaggerclient', 'sample', 'petstoreartifactid']",{'Security': 100}
"['mergerequest', 'mergeclient', 'closure', 'injection', 'javascript']",{'injection': 100}
"['mergerequest', 'mergeclient', 'injection', 'javascript']",{'injection': 100}
"['client', 'closure', 'injection', 'javascript']",{'injection': 100}
"['security', 'petstore']",{'Security': 100}
"['cbaac', 'mergesecurity', 'request', 'injection', 'generator']",{'injection': 100}
"['warning', 'injection']",{'injection': 100}
"['injectio', 'single', 'quote']",{'injection': 94}
"['injection', 'client']",{'injection': 100}
"['mergerequest', 'mergearray', 'check', 'parameter', 'issue']",{'issue': 100}
"['array', 'check', 'parameter', 'issue']",{'issue': 100}
"['cacfaa', 'mergefeature', 'rowanjkwalker', 'issue', 'requestallow', 'csharp', 'property', 'additional', 'issue', 'assembly']",{'issue': 100}
"['route', 'issure', 'priority', 'endpoint']",{'issue': 91}
"['mergehelper', 'request', 'philicious', 'mergegenerator', 'issue', 'petstore']",{'issue': 100}
"['eaaedguohuang', 'request', 'mergeserver', 'template', 'codegen', 'issue']",{'issue': 100}
"['mergepython', 'taxpon', 'constructor', 'issue', 'requestargument', 'constrouctor', 'instance', 'python', 'initialization', 'update']",{'issue': 100}
"['nancyfxmessage', 'value', 'unsupported', 'errorformat', 'overflow', 'message', 'error', 'exceptionzoneddatetime', 'utility', 'support', 'parameter']",{'overflow': 100}
"['ticket', 'issue']",{'issue': 100}
"['mergerequest', 'epaul', 'patchpaste', 'github', 'instruction', 'template', 'issue']",{'issue': 100}
"['ddffc', 'mergeconfiguration', 'python', 'taxpon', 'issue', 'requesttemplate', 'python', 'isoauth']",{'issue': 100}
"['eebae', 'mergeissue', 'request', 'taxponfollow', 'python', 'issue']",{'issue': 100}
"['python', 'issue']",{'issue': 100}
"['okhttp', 'support', 'issue', 'dependency']",{'issue': 100}
"['issue', 'requestmodel', 'title', 'attribute']",{'issue': 100}
"['false', 'mutable', 'option', 'generation']",{'generation': 100}
"['jimschubertignore', 'codegen', 'minor', 'issue']",{'issue': 100}
"['swagger', 'petstoreexecute', 'permission', 'integration']",{'permission': 100}
"['server', 'template', 'codeine', 'issue']",{'issue': 100}
"['aeeba', 'mergeiomark', 'request', 'master', 'mergecollection', 'parameter', 'generation']",{'generation': 100}
"['parameter', 'generation']",{'generation': 100}
"['parameter', 'generation']",{'generation': 100}
"['mergefeature', 'integration', 'vrolijkx', 'requesttypescript', 'additional', 'generation']",{'generation': 100}
"['content', 'alamofire', 'issue', 'petstore']",{'issue': 100}
"['mergecbornet', 'request', 'mergetemplate', 'issue']",{'issue': 100}
"['template', 'issue']",{'issue': 100}
"['nancyfx', 'generation']",{'generation': 100}
"['model', 'exclude', 'option', 'generatorsystem', 'property', 'supportwhether', 'false', 'supportfiles', 'dmodeltestsincludes', 'apitests', 'modeltests', 'excludetestsclient', 'csharp', 'generator', 'update', 'generation', 'preventproject', 'inclusionmodel']",{'generation': 100}
"['token', 'issue']",{'issue': 100}
"['fedcd', 'mergemikolajprzybysz', 'issue', 'swagger']",{'issue': 100}
"['typescript', 'empty', 'update', 'check', 'injection', 'angular', 'value', 'passedvalueempty']",{'injection': 100}
"['composer', 'issue']",{'issue': 100}
"['mergerequest', 'mergemodel', 'inner', 'import', 'issue']",{'issue': 100}
"['model', 'array', 'inner', 'issue', 'importmodel']",{'issue': 100}
"['mergerequest', 'mergeunicode', 'issue', 'escapetext']",{'issue': 100}
"['multiple', 'method', 'multi', 'issue']",{'issue': 100}
"['csharp', 'rebase', 'issue']",{'issue': 100}
"['issue', 'requestconvention']",{'issue': 100}
"['support', 'string', 'length']",{'length': 100}
"['issue', 'resty']",{'issue': 100}
"['mergeguohuang', 'request', 'mergereturn', 'issue', 'condition', 'import']",{'issue': 100}
"['issue', 'condition', 'import']",{'issue': 100}
"['incorrect', 'generation', 'tsconfig']","{'incorrect': 100, 'generation': 100}"
"['mergeneilotoole', 'request', 'variable', 'compile', 'issue']",{'issue': 100}
"['dabbdf', 'mergeneilotoole', 'hashcode', 'issue', 'requestmodel', 'hashcode', 'class', 'issue']",{'issue': 100}
"['hashcode', 'class', 'issue']",{'issue': 100}
"['compilation', 'generation']",{'generation': 100}
"['ioutil', 'param', 'issue', 'import']",{'issue': 100}
"['fileparams', 'content', 'issue', 'upload']",{'issue': 100}
"['method', 'issue', 'string']",{'issue': 100}
"['issue', 'swaggerconflictserver', 'spring', 'petstore', 'swagger', 'sampleserver', 'spring', 'petstore', 'swagger', 'sampleserver', 'spring', 'petstore', 'swagger', 'sampleserver', 'spring', 'petstore', 'swagger', 'sampleserver', 'spring', 'petstore', 'swagger', 'sampleserver', 'spring', 'petstore', 'swagger', 'sampleserver', 'spring', 'petstore', 'swagger', 'sampleserver', 'configuration', 'spring', 'petstore', 'swagger', 'sampleserver', 'configuration', 'spring', 'petstore', 'swagger', 'sampleserver', 'configuration', 'spring', 'petstore', 'swagger', 'sampleserver', 'configuration', 'spring', 'petstore', 'swagger', 'samplemodel', 'server', 'spring', 'petstore', 'swagger', 'samplemodel', 'server', 'spring', 'petstore', 'swagger', 'samplemodel', 'server', 'spring', 'petstore', 'swagger', 'samplemodel', 'server', 'spring', 'petstore', 'swagger', 'samplemodel', 'server', 'spring', 'petstore', 'swagger', 'samplemodel', 'server', 'spring', 'petstore', 'swagger', 'sample']",{'issue': 100}
"['mergeguohuang', 'request', 'generation', 'issue', 'readme', 'document']","{'generation': 100, 'issue': 100}"
"['mergebranch', 'guohuang', 'codegen', 'issue', 'swaggerconflictswagger', 'codegen', 'language', 'moduleclient', 'sample', 'petstore']",{'issue': 100}
"['issue', 'swagger']",{'issue': 100}
"['mergehaskell', 'gibiansky', 'servant', 'request', 'betterimprove', 'haskell', 'generation']",{'generation': 100}
"['mergeguohuang', 'request', 'content', 'issue', 'request']",{'issue': 100}
"['content', 'issue', 'request']",{'issue': 100}
"['generation', 'issue', 'readme', 'document']","{'generation': 100, 'issue': 100}"
"['spring', 'issue']",{'issue': 100}
"['variable', 'issue', 'bracket']",{'issue': 100}
"['return', 'class', 'super', 'issue', 'apiresponse']",{'issue': 100}
"['networkstatus', 'crash', 'issue']","{'crash': 100, 'issue': 100}"
"['aadbc', 'mergeguohuang', 'request', 'stream', 'issue']",{'issue': 100}
"['eacbe', 'mergevendor', 'neilotoole', 'issue', 'params', 'requestquery', 'structs', 'issue', 'field']",{'issue': 100}
"['stream', 'issue', 'namespace', 'project']",{'issue': 100}
"['mergeguohuang', 'request', 'configuration', 'useragent', 'isssue']",{'issue': 91}
"['stream', 'issue']",{'issue': 100}
"['useragen', 'configuration', 'isssue']",{'issue': 91}
"['query', 'structs', 'issue', 'field']",{'issue': 100}
"['mergeguohuang', 'request', 'header', 'authentication', 'issue']",{'issue': 100}
"['mergeneilotoole', 'process', 'issue', 'params', 'isxyzparam', 'issue']",{'issue': 100}
"['fcbce', 'mergebranch', 'master', 'codegen', 'issue', 'swaggerconflictswagger', 'codegen', 'resource', 'moduleclient', 'swagger', 'sample', 'petstore']",{'issue': 100}
"['mergeguohuang', 'request', 'method', 'issue']",{'issue': 100}
"['header', 'authentication', 'issue']",{'issue': 100}
"['isxyzparam', 'issue']",{'issue': 100}
"['mergebranch', 'master', 'codegen', 'issue', 'swagger']",{'issue': 100}
"['issue', 'request', 'pixelshadedsupport', 'method', 'typescript']",{'issue': 100}
"['method', 'issue']",{'issue': 100}
"['mergeguohuang', 'request', 'error', 'issue']",{'issue': 100}
"['mergebranch', 'master', 'codegen', 'issue', 'swagger']",{'issue': 100}
"['mergeguohuang', 'request', 'configuration', 'struct', 'codegen', 'issue']",{'issue': 100}
"['mergerequest', 'mergenodejs', 'issue', 'operationid']",{'issue': 100}
"['scottrwdelete', 'suport', 'operation', 'issue']",{'issue': 100}
"['mergebranch', 'master', 'codegen', 'issue', 'swagger']",{'issue': 100}
"['volley', 'networkstatus', 'crash', 'issue', 'error']","{'crash': 100, 'issue': 100}"
"['beeae', 'fdedc', 'mergeswagger', 'request', 'issuetimestamp', 'update', 'generation', 'sanitize']",{'generation': 100}
"['haskell', 'stack', 'update', 'codegen']",{'stack': 100}
"['timestamp', 'optional', 'generation']",{'generation': 100}
"['character', 'definition', 'issue']",{'issue': 100}
"['client', 'emits', 'array', 'javascript', 'generator', 'issue', 'invalid']",{'issue': 100}
"['support', 'invokerpackage', 'configuration', 'option', 'issue']",{'issue': 100}
"['mergestuart', 'master', 'request', 'campbellupdate', 'issue', 'address']",{'issue': 100}
"['delete', 'suport', 'operation', 'issue']",{'issue': 100}
"['mergedemonfiddler', 'request', 'master', 'mergeintegration', 'recommission', 'javascript', 'issue']",{'issue': 100}
"['integration', 'recommission', 'javascript', 'issue']",{'issue': 100}
"['javascript', 'generator', 'option', 'template', 'issue', 'improvement']",{'issue': 100}
"['mergeswagger', 'request', 'inflector', 'typename', 'generation']",{'generation': 100}
"['maven', 'generation']",{'generation': 100}
"['mergerequest', 'mergecsharp', 'baseencode', 'issue']",{'issue': 100}
"['fdfacb', 'mergeneoasket', 'request', 'method', 'issue']",{'issue': 100}
"['generation', 'sample']",{'generation': 100}
"['mergehideya', 'request', 'mergeupdate', 'method', 'generation']",{'generation': 100}
"['ccbda', 'mergequery', 'support', 'vivin', 'params', 'requestquery', 'support', 'enums', 'parameter', 'issue']",{'issue': 100}
"['update', 'method', 'generation']",{'generation': 100}
"['insensitive', 'generator']",{'Sensitive': 90}
"['security', 'comment', 'warning']",{'Security': 100}
"['mergerequest', 'master', 'mergecatch', 'update', 'okhttp', 'issue']",{'issue': 100}
"['issuereturn', 'rawvalue', 'crash', 'issue']","{'crash': 100, 'issue': 100}"
"['issue', 'ensure']",{'issue': 100}
"['return', 'instance', 'swift', 'enumeration', 'rawvalue', 'crash', 'unwrap', 'validate', 'update']",{'crash': 100}
"['parser', 'snapshot', 'issue', 'swagger']",{'issue': 100}
"['mergerequest', 'mergeclient', 'upload', 'python', 'issue']",{'issue': 100}
"['client', 'upload', 'python', 'issue']",{'issue': 100}
"['documentation', 'incorrect', 'filename', 'codegen']",{'incorrect': 100}
"['implementation', 'aspnet', 'server', 'initialthingdefinition', 'swagger', 'issue', 'allparams', 'hasmoreproject', 'functionalresolve', 'return', 'issue', 'valuecommitplatform', 'initial', 'cross', 'serverswagger', 'comment', 'swashbuckleproject', 'scriptdockerfile', 'deployment', 'container']",{'issue': 100}
"['explicit', 'configuration', 'location', 'forceallow', 'certificate', 'location', 'order', 'openssl', 'figureparameter', 'configuration']",{'OpenSSL': 100}
"['implies', 'enums', 'variable', 'comment', 'issue', 'ensure', 'underscore']",{'issue': 100}
"['issue', 'object', 'generate', 'string']",{'issue': 100}
"['mergeversion', 'javascript', 'version', 'javascript', 'issue', 'superagent']",{'issue': 100}
"['adapt', 'gradle', 'template', 'generation', 'script', 'sample']",{'generation': 100}
"['mergedilipkrish', 'request', 'master', 'spring', 'generation']",{'generation': 100}
"['minor', 'issue']",{'issue': 100}
"['stats', 'badge', 'issue']",{'issue': 100}
"['daacc', 'mergehjacobs', 'readme', 'flask', 'python', 'issue', 'bugfix', 'requestflask', 'python', 'command', 'flaskconnexion', 'readme']",{'issue': 100}
"['faebe', 'mergerequest', 'javascript', 'mergemodel', 'array', 'javascript', 'initialization', 'issue', 'field']",{'issue': 100}
"['mergereference', 'project', 'assembly', 'generation']",{'generation': 100}
"['object', 'serialization', 'empty', 'issue']",{'issue': 100}
"['object', 'serialization', 'empty', 'issue']",{'issue': 100}
"['bdebbab', 'baecb', 'mergerequest', 'mergewindow', 'apiclient', 'issue']",{'issue': 100}
"['mergerequest', 'hiveship', 'issuecorrect', 'issue']",{'issue': 100}
"['filename', 'client', 'security', 'issue']","{'Security': 100, 'issue': 100}"
"['issue', 'nonexistent']",{'issue': 100}
"['issue', 'nonexistent']",{'issue': 100}
"['mergeswagger', 'request', 'operation', 'generation', 'duplicate']",{'generation': 100}
"['interface', 'definition', 'class', 'issue', 'implementedparent', 'interface', 'order', 'class']",{'issue': 100}
"['assembly', 'issue', 'template', 'mustachespecify', 'value', 'property', 'codegen']",{'issue': 100}
"['mergerequest', 'master', 'scottrwgenerates', 'server', 'definition', 'valid', 'error', 'issue']",{'issue': 100}
"['generates', 'server', 'definition', 'valid', 'error', 'issue']",{'issue': 100}
"['index', 'issue']",{'issue': 100}
"['mergemodelsolv', 'request', 'issuescala', 'security']",{'Security': 100}
"['android', 'permission', 'volley', 'manifest']",{'permission': 100}
"['issue', 'javados']",{'issue': 100}
"['eadfa', 'mergeswagger', 'request', 'issuemodel', 'generation']",{'generation': 100}
"['bbabca', 'mergeclojure', 'request', 'mergeclojure', 'insensitive', 'client']",{'Sensitive': 90}
"['fcdddce', 'mergethibaultclem', 'request', 'master', 'mergeclient', 'parameter', 'operation', 'syntax', 'issue']",{'issue': 100}
"['update', 'issue', 'petstore', 'sample']",{'issue': 100}
"['client', 'parameter', 'operation', 'syntax', 'issue']",{'issue': 100}
"['issuewindow', 'codegen', 'issue']",{'issue': 100}
"['window', 'issue', 'petstore']",{'issue': 100}
"['mergeupload', 'request', 'jersey', 'mergeclient', 'jersey', 'codegen', 'issue']",{'issue': 100}
"['client', 'jersey', 'codegen', 'issue', 'uploadingclose']",{'issue': 100}
"['cefbaef', 'mergerequest', 'element', 'issue', 'value']",{'issue': 100}
"['element', 'issue', 'valueeditor', 'swagger']",{'issue': 100}
"['update', 'jerseyswagger', 'cleanup', 'codegen', 'issue']",{'issue': 100}
"['cdeefrequest', 'paralin', 'mergechange', 'generation', 'usage']",{'generation': 100}
"['selective', 'generation', 'instruction']",{'generation': 100}
"['bbbfd', 'mergerequest', 'generation', 'swaggermodel', 'selective', 'generation']",{'generation': 100}
"['model', 'selective', 'generation']",{'generation': 100}
"['regular', 'window', 'expression', 'generation', 'issue']","{'generation': 100, 'issue': 100}"
"['mergerequest', 'kkrauth', 'method', 'syntax', 'issue']",{'issue': 100}
"['abfdde', 'mergeglobal', 'security', 'request', 'mergeglobal', 'security', 'necessary', 'operation']",{'Security': 100}
"['deaea', 'mergerequest', 'genfix', 'mergeclient', 'proposal', 'generation']",{'generation': 100}
"['global', 'security']",{'Security': 100}
"['default', 'client', 'generation', 'valuegeneratedprimitive', 'javac', 'compilable', 'integergenerates']",{'generation': 100}
"['warning', 'requirement', 'security']",{'Security': 100}
"['array', 'requirement', 'security', 'logical', 'swagger', 'securitysecurity', 'behavior', 'requirement', 'original', 'applyrequirement', 'logic', 'securityinclude']",{'Security': 100}
"['bbfaf', 'mergeorigin', 'global', 'security']",{'Security': 100}
"['global', 'security']",{'Security': 100}
"['global', 'security', 'necessary', 'operation', 'applyclose']",{'Security': 100}
"['resolution', 'method', 'error', 'possible', 'resolution', 'issue', 'parsedpagination', 'container', 'field', 'namedproperty', 'conflict', 'nsarray', 'countnsdictionary']",{'issue': 100}
"['ceabf', 'mergeissue', 'request', 'plain', 'migrate', 'issue']",{'issue': 100}
"['plain', 'migrate', 'issue']",{'issue': 100}
"['dynamic', 'generation']",{'generation': 100}
"['bacafgeekerzp', 'request', 'mergeclient', 'python', 'issue']",{'issue': 100}
"['mergegeekerzp', 'request', 'mergeclient', 'python', 'issue']",{'issue': 100}
"['mergeswagger', 'request', 'revert', 'mergeclient', 'revert', 'python', 'issue']",{'issue': 100}
"['client', 'revert', 'python', 'issue']",{'issue': 100}
"['mergegeekerzp', 'request', 'mergeclient', 'python', 'issue']",{'issue': 100}
"['expose', 'template', 'efossier', 'requestmodel', 'expose', 'property', 'template', 'attribute']",{'expose': 100}
"['expose', 'property', 'template', 'attribute']",{'expose': 100}
"['model', 'propertymodel', 'property', 'inherits', 'anothercause', 'crash']",{'crash': 100}
"['mergegeekerzp', 'request', 'apiclient', 'mergeclient', 'apiclient', 'issue']",{'issue': 100}
"['mergegeekerzp', 'request', 'mergeclient', 'python', 'issue']",{'issue': 100}
"['cedacb', 'mergegoodtrkr', 'request', 'master', 'mergeparameter', 'multipart', 'endpoint', 'crash', 'issue', 'nsnumber']","{'crash': 100, 'issue': 100}"
"['parameter', 'multipart', 'endpoint', 'crash', 'issue', 'nsnumber']","{'crash': 100, 'issue': 100}"
"['dbdcf', 'mergegoodtrkr', 'request', 'master', 'apiclient', 'custom', 'incorrect', 'issue', 'reference']","{'incorrect': 100, 'issue': 100}"
"['apiclient', 'custom', 'incorrect', 'issue', 'reference']","{'incorrect': 100, 'issue': 100}"
"['permission', 'update']",{'permission': 100}
"['eedbb', 'mergerequest', 'generation', 'cocoapods', 'option', 'valid', 'generate', 'podspec']",{'generation': 100}
"['default', 'model', 'generator', 'update', 'generation']",{'generation': 100}
"['issue', 'swaggerextension', 'vendor', 'operation']",{'issue': 100}
"['issue', 'swaggerfeature', 'issue']",{'issue': 100}
"['dfbabe', 'mergeepaul', 'nullcheck', 'allowedvalues', 'bugfix', 'requestcheck', 'issue']",{'issue': 100}
"['mergemodel', 'epaul', 'sanitize', 'bugfix', 'requestclass', 'model', 'issue', 'sanitize']",{'issue': 100}
"['issue', 'sanitizesolve', 'orderlanguage', 'class', 'spring', 'component']",{'issue': 100}
"['class', 'model', 'issue', 'sanitizemodel']",{'issue': 100}
"['indentation', 'issue']",{'issue': 100}
"['issue', 'anotheriterate']",{'issue': 100}
"['expose', 'option', 'generate']",{'expose': 100}
"['mergerequest', 'rebase', 'issue', 'swaggerupdate', 'rebase']",{'issue': 100}
"['mergequery', 'python', 'geekerzp', 'requestquery', 'parameter', 'python', 'issue']",{'issue': 100}
"['query', 'parameter', 'python', 'issue']",{'issue': 100}
"['param', 'optional', 'error', 'issue']",{'issue': 100}
"['mergehttplib', 'python', 'geekerzp', 'requestclient', 'python', 'issue']",{'issue': 100}
"['client', 'python', 'issue']",{'issue': 100}
"['aaadab', 'mergegeekerzp', 'deserialize', 'request', 'mergedeserialize', 'issue', 'value']",{'issue': 100}
"['deserialization', 'client', 'issue']",{'issue': 100}
"['mergegeekerzp', 'request', 'mergeauthentication', 'issue']",{'issue': 100}
"['client', 'configuration', 'issue']",{'issue': 100}
"['mergedesciption', 'python', 'geekerzp', 'requestclient', 'python', 'issue']",{'issue': 100}
"['caebab', 'mergerequest', 'hervedarritchonoverride', 'configpackage', 'defect', 'issue']",{'issue': 100}
"['mergetoilal', 'request', 'issueconfiguration', 'issue']",{'issue': 100}
"['configuration', 'update', 'scala', 'maven', 'issue', 'plugin']",{'issue': 100}
"['declaration', 'issue']",{'issue': 100}
"['property', 'conditionaldecide', 'typescript', 'behavior', 'appropriate', 'generation', 'superclass', 'request']",{'generation': 100}
"['declaration', 'issue']",{'issue': 100}
"['incorrect', 'issue']","{'incorrect': 100, 'issue': 100}"
"['mergelugaru', 'request', 'original', 'generation']",{'generation': 100}
"['cfcbegeekerzp', 'request', 'mergeenhancement', 'issue']",{'issue': 100}
"['swagger', 'codegen', 'issue']",{'issue': 100}
"['errant', 'issue', 'petstore', 'namespace', 'sample']",{'issue': 100}
"['thread', 'response', 'store']",{'thread': 100}
"['mergemhardorf', 'request', 'mergetypescript', 'support', 'angularjs', 'generation']",{'generation': 100}
"['update', 'script', 'generation']",{'generation': 100}
"['generation', 'shell', 'script', 'sample']",{'generation': 100}
"['original', 'generation']",{'generation': 100}
"['typescript', 'support', 'angularjs', 'generation']",{'generation': 100}
"['interface', 'generation', 'class']",{'generation': 100}
"['csharp', 'issue', 'rename']",{'issue': 100}
"['interface', 'generation', 'class']",{'generation': 100}
"['mergerequest', 'interface', 'jaxrs', 'generation', 'swaggerjaxrs', 'generation', 'interface']",{'generation': 100}
"['jaxrs', 'codegen', 'generation', 'swaggerconflictswagger', 'codegen', 'wordnik', 'module']",{'generation': 100}
"['mergekvelakur', 'request', 'master', 'mergeexample', 'unnecesary', 'issue']",{'issue': 100}
"['jaxrs', 'codegen', 'generation', 'compatibility', 'swagger']",{'generation': 100}
"['jaxrs', 'codegen', 'generation']",{'generation': 100}
"['syntax', 'issue']",{'issue': 100}
"['mergegeekerzp', 'request', 'mergemodel', 'deserialize', 'client', 'python', 'issue']",{'issue': 100}
"['cfffa', 'mergelugaru', 'request', 'mergemultiple', 'operation', 'generation']",{'generation': 100}
"['codegen', 'issue', 'swagger', 'excludes']",{'issue': 100}
"['operation', 'generation']",{'generation': 100}
"['model', 'deserialize', 'error', 'issue']",{'issue': 100}
"['query', 'param', 'parameter', 'spring', 'generation']",{'generation': 100}
"['model', 'csharp', 'issue']",{'issue': 100}
"['mergegeekerzp', 'request', 'mergepython', 'issue', 'request']",{'issue': 100}
"['issue', 'request']",{'issue': 100}
"['unnecesary', 'issue']",{'issue': 100}
"['defaultheaders', 'dictionary', 'generatedswagger', 'codegen', 'issue']",{'issue': 100}
"['import', 'addingswagger', 'codegen', 'issue']",{'issue': 100}
"['faeffb', 'ffdeb', 'mergerequest', 'mergedefault', 'making', 'generic', 'issue', 'namespace']",{'issue': 100}
"['toparamname', 'override', 'addingswagger', 'codegen', 'issue']",{'issue': 100}
"['unnecessary', 'issue']",{'issue': 100}
"['issue', 'exception', 'requestclient', 'objective']",{'issue': 100}
"['springdox', 'generation', 'server']",{'generation': 100}
"['generation', 'filename']",{'generation': 100}
"['mergerequest', 'master', 'python', 'generation', 'issue', 'swagger']","{'generation': 100, 'issue': 100}"
"['afcbd', 'mergerequest', 'burmanmresourcepath', 'issue']",{'issue': 100}
"['header', 'request', 'properlyclient', 'header', 'jersey', 'apidocs', 'nonavassignment', 'return', 'meaning', 'making', 'jersey', 'method', 'builder', 'issue', 'header', 'request']",{'issue': 100}
"['security', 'scheme', 'defintion', 'codegensecurity']",{'Security': 100}
"['comma', 'issue']",{'issue': 100}
"['comparision', 'array', 'insensitive', 'update', 'error', 'syntax']",{'Sensitive': 90}
"['bffbarequest', 'master', 'djvaldezcustom', 'incorrect', 'generator', 'class', 'update']",{'incorrect': 100}
"['python', 'class', 'generation', 'issue', 'swagger']","{'generation': 100, 'issue': 100}"
"['mergecorntin', 'request', 'mergeexpose', 'security', 'scheme']",{'Security': 100}
"['expose', 'security', 'schemerefer', 'basic', 'templatesecurity', 'schemeusageoperationauthmethodsauthmethodsoperation']","{'expose': 100, 'Security': 100}"
"['hervedarritchoninitialcaps', 'getter', 'setter', 'defect', 'issue', 'generation']","{'issue': 100, 'generation': 100}"
"['pakage', 'initialcaps', 'getter', 'setter', 'defect', 'issue']",{'issue': 100}
"['local', 'server', 'transient', 'issue', 'script']",{'issue': 100}
"['generation', 'script', 'sample']",{'generation': 100}
"['multipartform', 'issue']",{'issue': 100}
"['bcfcc', 'mergeresponse', 'request', 'selection', 'flequemethodresponse', 'selection', 'generation']",{'generation': 100}
"['generation', 'attempt', 'pythong']",{'generation': 100}
"['beffb', 'mergerequest', 'master', 'issue', 'creation']",{'issue': 100}
"['container', 'codegenparameter', 'generation', 'response', 'movedsubclass']",{'generation': 100}
"['generation', 'request', 'python']",{'generation': 100}
"['mergemartoe', 'request', 'mergefails', 'window', 'special', 'issue', 'checkout']",{'issue': 100}
"['special', 'issue', 'checkout']",{'issue': 100}
"['minor', 'fixing', 'python', 'possible', 'generation', 'issue', 'clean', 'script']","{'generation': 100, 'issue': 100}"
"['aecca', 'mergemartoe', 'request', 'master', 'mergefails', 'window', 'special', 'issue', 'checkout']",{'issue': 100}
"['special', 'issue', 'checkout']",{'issue': 100}
"['issue', 'dependency']",{'issue': 100}
"['bedeb', 'mergerequest', 'present', 'status', 'utilize', 'issue']",{'issue': 100}
"['nickname', 'support', 'generation']",{'generation': 100}
"['effbbrequest', 'steamulo', 'masterandroid', 'generation', 'misprint', 'filename']",{'generation': 100}
"['android', 'generation', 'misprint', 'filename']",{'generation': 100}
"['mergehsanjuan', 'request', 'master', 'everywhere', 'issue']",{'issue': 100}
"['property', 'definedtrait', 'consistent', 'superclass', 'property', 'codegen', 'issue', 'signature']",{'issue': 100}
"['mergerobblairinq', 'request', 'template', 'issue', 'exception', 'generate']",{'issue': 100}
"['mergebranch', 'robblairinq', 'codegen', 'issue', 'swagger']",{'issue': 100}
"['issue', 'request', 'rebuildallbuild', 'script', 'sample']",{'issue': 100}
"['model', 'default', 'issue']",{'issue': 100}
"['regenerate', 'issue', 'petstore']",{'issue': 100}
"['import', 'issue']",{'issue': 100}
"['container', 'issue']",{'issue': 100}
"['client', 'generation', 'async']",{'generation': 100}
"['ecdfa', 'mergecanadaduane', 'request', 'rubyclean', 'mergelittle', 'generation', 'esque']",{'generation': 100}
"['revert', 'generation', 'orderingreverts']",{'generation': 100}
"['client', 'groovy', 'generation']",{'generation': 100}
"['client', 'groovy', 'generation']",{'generation': 100}
"['client', 'groovy', 'generation']",{'generation': 100}
"['injection', 'optional', 'component', 'format']",{'injection': 100}
"['recursemodel', 'overflow', 'stack', 'method', 'error']","{'overflow': 100, 'stack': 100}"
"['client', 'scala', 'generation', 'async']",{'generation': 100}
"['integer', 'detection', 'booleans', 'object', 'convertinteger', 'origin', 'false', 'statement', 'booleans', 'convertedgeorge', 'gsibble', 'sibble']",{'integer': 100}
"['mergesibblegp', 'request', 'master', 'mergeconversion', 'integer', 'value']",{'integer': 100}
"['issue', 'output']",{'issue': 100}
"['client', 'generation', 'python']",{'generation': 100}
"['generation', 'python']",{'generation': 100}
"['client', 'generation']",{'generation': 100}
"['compliant', 'scala', 'template', 'issue', 'resource']",{'issue': 100}
"['compliant', 'scala', 'template', 'issue', 'resource']",{'issue': 100}
"['scala', 'issue']",{'issue': 100}
"['query', 'parameter', 'scala', 'issue']",{'issue': 100}
"['issue', 'library']",{'issue': 100}
"['method', 'issue', 'object', 'request']",{'issue': 100}
"['issue', 'initialization']",{'issue': 100}
"['available', 'logic', 'parameter', 'language', 'scala', 'template', 'generation', 'issue']","{'generation': 100, 'issue': 100}"
"['multi', 'issue', 'response']",{'issue': 100}
"['generation', 'swagger', 'shell', 'script', 'library']",{'generation': 100}
"['generation', 'swagger', 'shell', 'script', 'library']",{'generation': 100}
"['object', 'generation', 'reference', 'swagger']",{'generation': 100}
"['template', 'annotation', 'generation', 'swagger']",{'generation': 100}
"['issue', 'server']",{'issue': 100}
"['assertion', 'framework', 'primitive', 'error', 'issue']",{'issue': 100}
"['logic', 'issue']",{'issue': 100}
"['issue', 'dependency', 'setting', 'wordnik']",{'issue': 100}
"['swagr', 'generation']",{'generation': 100}
