message,fuzzy
"['model', 'issue', 'eagerrelationship', 'model']",{'issue': 100}
"['datatayperevert', 'changerefactordriver', 'defaultadditional', 'integer', 'typeconverterspace', 'removedspace', 'explicit', 'activesupportremovedepend', 'property', 'introducung', 'timestampconverter', 'integerconverter', 'bigdecimalbidecimal', 'converter', 'removesmallest']",{'integer': 100}
"['variable', 'attributeset', 'activemodel', 'instance', 'attributeattributeset', 'attribute', 'activemodelfailingdirty', 'initialization', 'changeattributeset', 'converter', 'supportinitialization', 'attribute', 'castingattribute', 'issueinsteadargument', 'support', 'keyword', 'addedrubocop', 'issue']",{'issue': 100}
"['deletion', 'revert', 'incorrect']",{'incorrect': 100}
"['transaction', 'stack']",{'stack': 100}
"['duplicate', 'issuerecord', 'duplicate', 'issueupdate', 'issueupdate', 'revert', 'issuecommit', 'revertsqueryproxy', 'duplicate', 'issue']",{'issue': 100}
"['mergemerge', 'request', 'amitsuryavanshienforce', 'issue']",{'issue': 100}
"['request', 'amitsuryavanshischema', 'integrity', 'issue', 'relationship', 'activerel']",{'issue': 100}
"['relationhip', 'model', 'deffirent', 'issue']",{'issue': 100}
"['refactor', 'issue']",{'issue': 100}
"['format', 'issue']",{'issue': 100}
"['integrity', 'issue', 'relationship', 'activerel']",{'issue': 100}
"['mergemerge', 'request', 'amitsuryavanshiupdate', 'association', 'issue']",{'issue': 100}
"['class', 'target', 'issue']",{'issue': 100}
"['revertvariable', 'revert', 'deprecation', 'cypher', 'issue', 'relationship', 'length']","{'issue': 100, 'length': 100}"
"['variable', 'revert', 'deprecation', 'cypher', 'issue', 'relationship', 'length']","{'issue': 100, 'length': 100}"
"['variable', 'length', 'issuevariable', 'issue', 'optionvariable', 'cypher', 'issue', 'length', 'adjustingrelationship', 'length', 'issuedocumentation', 'issueduplicate', 'issueissueupdateamitsuryavanshi', 'authoredupdateamitsuryavanshi', 'authoredupdateamitsuryavanshi', 'authoredrefactorrefactor', 'issueissuerefactor', 'issuerefactor', 'issuerefactor', 'issuerefactor', 'issuerefactor', 'issuerefactor', 'issuespace', 'issuerefactor', 'issuerefactor', 'issueissuerefactor', 'issuefailingrelationship', 'length', 'issuerefactor', 'issueweakend', 'addedrefactor', 'issuerefactor', 'revert', 'issuecommit', 'revert', 'changecodeclimatecodeclimate']","{'length': 100, 'issue': 100}"
"['support', 'operator', 'issue']",{'issue': 100}
"['version', 'issue', 'refactor']",{'issue': 100}
"['update', 'association', 'issue']",{'issue': 100}
"['abddamerge', 'request', 'amitsuryavanshivariable', 'deprecation', 'cypher', 'issue', 'relationship', 'length']","{'issue': 100, 'length': 100}"
"['queryproxy', 'issue']",{'issue': 100}
"['deprication', 'cypher', 'issue', 'relationship', 'varibale']",{'issue': 100}
"['rubocop', 'issue']",{'issue': 100}
"['rubocop', 'issue']",{'issue': 100}
"['rubocop', 'issue']",{'issue': 100}
"['exception', 'length', 'block']",{'length': 100}
"['exception', 'length', 'block']",{'length': 100}
"['schema', 'issue']",{'issue': 100}
"['efafdmerge', 'thefliik', 'requestenums', 'insensitive']",{'Sensitive': 90}
"['rubocop', 'issue']",{'issue': 100}
"['rubocop', 'issue']",{'issue': 100}
"['sensitive', 'enums', 'option']",{'Sensitive': 100}
"['neojrb', 'issue']",{'issue': 100}
"['potential', 'injection', 'vulnerability', 'warning']",{'injection': 100}
"['issue', 'statement', 'background']",{'issue': 100}
"['activenode', 'issue', 'association']",{'issue': 100}
"['jboler', 'requestdeprecation', 'integer', 'fixnum']",{'integer': 100}
"['integer', 'fixnum']",{'integer': 100}
"['railtie', 'issue']",{'issue': 100}
"['session', 'thread', 'changelog', 'issue']","{'thread': 100, 'issue': 100}"
"['mergemerge', 'branchchangelog', 'improvementobject', 'return', 'activerecordlogger', 'activesupport', 'insteadpatch', 'valueinformation', 'exception', 'replacingupdateincludecourse', 'chance', 'cyphernode', 'clear', 'issue', 'development']",{'issue': 100}
"['abccbc', 'mergemerge', 'branchpatch', 'chance', 'cyphernode', 'clear', 'issue', 'development']",{'issue': 100}
"['issue', 'railtie']",{'issue': 100}
"['chance', 'cyphernode', 'clear', 'issue', 'development']",{'issue': 100}
"['generation', 'object', 'association']",{'generation': 100}
"['mergemerge', 'veetow', 'scope', 'issue']",{'issue': 100}
"['scope', 'issue']",{'issue': 100}
"['underscore', 'issue']",{'issue': 100}
"['issue', 'duplicate']",{'issue': 100}
"['issue', 'relationship']",{'issue': 100}
"['rubocop', 'issue']",{'issue': 100}
"['enumerable', 'issue']",{'issue': 100}
"['rubocop', 'issue']",{'issue': 100}
"['model', 'generatedgenerator', 'class', 'model', 'issue']",{'issue': 100}
"['model', 'generatedgenerator', 'class', 'model', 'issue']",{'issue': 100}
"['injection', 'dirty']",{'injection': 100}
"['close', 'issue']",{'issue': 100}
"['address', 'issue']",{'issue': 100}
"['length', 'method', 'delegation']",{'length': 100}
"['culprit', 'issue', 'neojrb', 'bisect']",{'issue': 100}
"['rubocop', 'issue']",{'issue': 100}
"['moment', 'issue']",{'issue': 100}
"['requestfalse', 'association', 'incorrect']",{'incorrect': 100}
"['false', 'association', 'incorrect']",{'incorrect': 100}
"['requestsecondary', 'issue']",{'issue': 100}
"['andrewhavens', 'issue']",{'issue': 100}
"['wheres', 'issue']",{'issue': 100}
"['wheres', 'issue']",{'issue': 100}
"['mergevariable', 'request', 'digitalcuisinequery', 'relationship', 'variable', 'length']",{'length': 100}
"['module', 'cypher', 'methodcypher', 'relationship', 'different', 'possible', 'option', 'value', 'testingquery', 'relationship', 'variable', 'lengthassociationaccept', 'transmit', 'option', 'associationvalue', 'incorrect', 'differ', 'cache', 'result', 'query', 'associationsingle', 'presence', 'accepts', 'collection', 'option', 'method', 'dependingvariable', 'validates', 'actual', 'relationship', 'query', 'length', 'variable', 'whereas', 'qualifier', 'relationship', 'length', 'relationship', 'length', 'symbol', 'patchincrease', 'option', 'method', 'parameterrubocop', 'offense', 'fixedsingle', 'getter', 'method', 'argument', 'query', 'relationship', 'lengthvariable', 'additional', 'length', 'associationreference', 'tutorial', 'increase', 'complexity', 'maximum', 'cyclomaticsingle', 'validation', 'point', 'message', 'maximum', 'check', 'method', 'default', 'cyclomaticmatch', 'message']","{'incorrect': 100, 'length': 100}"
"['stack', 'default']",{'stack': 100}
"['fbffceakins', 'request', 'issue', 'close', 'method']",{'issue': 100}
"['happy', 'length']",{'length': 100}
"['extra', 'badge', 'clear', 'issue', 'people']",{'issue': 100}
"['waffle', 'people', 'issue']",{'issue': 100}
"['guideline', 'issue']",{'issue': 100}
"['dependent', 'length', 'subvertallchris', 'regardless', 'association']",{'length': 100}
"['multiple', 'issue', 'label']",{'issue': 100}
"['rubocop', 'issue']",{'issue': 100}
"['class', 'extract', 'cypher', 'query', 'length', 'refactor']",{'length': 100}
"['integer', 'string', 'check']",{'integer': 100}
"['integer', 'fixnum']",{'integer': 100}
"['updategithub', 'issue', 'overflow', 'support', 'stack']","{'issue': 100, 'overflow': 100, 'stack': 100}"
"['request', 'masterwrong', 'issue', 'duplicate']",{'issue': 100}
"['wrong', 'issue', 'duplicate']",{'issue': 100}
"['particular', 'issue']",{'issue': 100}
"['requestquery', 'issue']",{'issue': 100}
"['string', 'integer']",{'integer': 100}
"['update', 'integer', 'support', 'relationship']",{'integer': 100}
"['injection', 'cypher', 'issue']","{'injection': 100, 'issue': 100}"
"['request', 'mastergenerator', 'model', 'integer', 'fixnum']",{'integer': 100}
"['generator', 'model', 'integer', 'fixnum']",{'integer': 100}
"['discussion', 'issue']",{'issue': 100}
"['mergebranch', 'issue']",{'issue': 100}
"['issue', 'fxiedmodel', 'property']",{'issue': 100}
"['stack', 'frameincremental', 'improvement', 'methodinstance', 'class']",{'stack': 100}
"['issue', 'rspec', 'jruby']",{'issue': 100}
"['concurrency', 'problem', 'state', 'rspec']",{'concurren': 90}
"['event', 'trace', 'callback', 'minor', 'stack', 'print']",{'stack': 100}
"['cluster', 'issue', 'example', 'stillproblem', 'unsolvedprivate', 'enterprise', 'different', 'structure']",{'issue': 100}
"['validation', 'incorrect']",{'incorrect': 100}
"['migration', 'update', 'database', 'issue', 'relationship']",{'issue': 100}
"['issue', 'repro']",{'issue': 100}
"['assignment', 'formtastic', 'string', 'integer', 'support', 'relationship']",{'integer': 100}
"['reproduce', 'level', 'stack']",{'stack': 100}
"['request', 'masterconcurrency', 'issue']",{'issue': 100}
"['creation', 'issue']",{'issue': 100}
"['issue', 'quote', 'uniqueness', 'property', 'validation']",{'issue': 100}
"['field', 'issue']",{'issue': 100}
"['field', 'issue']",{'issue': 100}
"['request', 'masteruniqueness', 'issue']",{'issue': 100}
"['validation', 'issue']",{'issue': 100}
"['request', 'masterimprovement', 'insensitive', 'general', 'performance', 'check', 'uniqueness']",{'Sensitive': 90}
"['issue', 'uniqueness']",{'issue': 100}
"['generation', 'string', 'timestamp']",{'generation': 100}
"['multitenancy', 'reference', 'thread', 'local', 'safer', 'request', 'context', 'reset']",{'thread': 100}
"['lucene', 'issue']",{'issue': 100}
"['issue', 'pointer']",{'issue': 100}
"['request', 'mastervalidation', 'issue']",{'issue': 100}
"['wrong', 'entity', 'inconsistent', 'class', 'invalid', 'issue']",{'issue': 100}
"['stack', 'trace', 'exception', 'print']",{'stack': 100}
"['assignment', 'issue', 'default']",{'issue': 100}
"['workingspecify', 'methodconvinience', 'travesals', 'length', 'method']",{'length': 100}
"['issue', 'state', 'method', 'property', 'setting']",{'issue': 100}
"['thread', 'local', 'lucene', 'state']",{'thread': 100}
"['relationship', 'generation', 'access', 'state', 'method']",{'generation': 100}
"['relationship', 'generation', 'access', 'state', 'method']",{'generation': 100}
"['movedsintatra', 'thread', 'issue']","{'thread': 100, 'issue': 100}"
"['lucene', 'issue', 'index', 'tokenize']",{'issue': 100}
"['thread', 'stuff', 'lucene', 'major']",{'thread': 100}
"['transaction', 'thread', 'store']",{'thread': 100}
"['relationship', 'generation', 'dynamiclaboratory', 'bbbfeba']",{'generation': 100}
