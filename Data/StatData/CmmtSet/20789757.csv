message,fuzzy
"['fryguyupgrade', 'issue']",{'issue': 100}
"['aaebceefrequest', 'jrafanie', 'mergebundler', 'audit', 'suite', 'brakeman', 'security']",{'Security': 100}
"['others', 'namespace', 'brakeman', 'security', 'rename']",{'Security': 100}
"['fryguyrecrypt', 'collision', 'issue']",{'issue': 100}
"['recrypt', 'collision', 'issuecommit', 'callingmanageiq', 'legacy', 'decryption', 'raisedecrypts']",{'encryption': 90}
"['issue', 'privilege', 'settingsometimes']",{'issue': 100}
"['fryguylogproxy', 'expose', 'method']",{'expose': 100}
"['logproxy', 'expose', 'method']",{'expose': 100}
"['bafabc', 'mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['alwaysmanageiq', 'issue']",{'issue': 100}
"['aefeerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['manageiq', 'issue']",{'issue': 100}
"['featuremanageiq', 'provider', 'openstack', 'issue']",{'issue': 100}
"['fryguywrong', 'generator', 'logger', 'issue', 'provider']",{'issue': 100}
"['wrong', 'generator', 'logger', 'issue', 'providerregular', 'plugins']",{'issue': 100}
"['faeearequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['manageiq', 'issue']",{'issue': 100}
"['expose', 'attribute']",{'expose': 100}
"['startpage', 'shortcutprofile', 'alert', 'constantmanageiq', 'issue']",{'issue': 100}
"['condition', 'constantmanageiq', 'issue']",{'issue': 100}
"['startpage', 'shortcutmanageiq', 'issue']",{'issue': 100}
"['dbdcdfa', 'mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['entry', 'dictionary', 'missingmanageiq', 'classicmanageiq', 'issue']",{'issue': 100}
"['explorization', 'policy', 'startpage', 'shortcutmanageiq', 'classicmanageiq', 'issue']",{'issue': 100}
"['abafecrequest', 'jrafanie', 'mergeissue', 'cache', 'timing', 'class', 'thread']",{'thread': 100}
"['issue', 'cache', 'timing', 'class', 'method', 'class', 'thread', 'clienterror', 'various', 'includingmalloc', 'exact', 'guess', 'listedpoint', 'objectobject', 'connection', 'method', 'handler', 'client', 'normalhandle', 'thread', 'clientconnection', 'methodconnection', 'handlerperformance', 'movedrequest', 'couldmanageiqmanageiq']","{'issue': 100, 'thread': 100}"
"['thread', 'collisionmanageiq', 'containerlogger', 'movedexpects', 'threadrequest', 'responds', 'objecthappensrequest', 'store', 'undefined', 'method', 'leadingwhereverparticular']",{'thread': 100}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['event', 'explorization', 'explorerevent', 'product', 'featuremanageiq', 'issue']",{'issue': 100}
"['mergerequest', 'router', 'skateman', 'network', 'supportsupport', 'expose']",{'expose': 100}
"['support', 'expose']",{'expose': 100}
"['introduce', 'email', 'insensitive', 'lookup']",{'Sensitive': 90}
"['ecbdeeb', 'mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['generation', 'miqexpressionseems', 'string', 'changechange', 'generatedchange', 'supportextra', 'select', 'column', 'innerversion', 'discrepancy']",{'generation': 100}
"['rubocop', 'issue']",{'issue': 100}
"['support', 'method', 'fieldibmprivatecloud', 'cpmcm', 'issue']",{'issue': 100}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['settingmanageiq', 'issue']",{'issue': 100}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['thread', 'monitor', 'cockpitfollowprocess', 'communicate', 'launch', 'thread', 'orchestratorworker', 'separate', 'monitorcockpit', 'exclude', 'monitorcould', 'populate', 'orchestrator', 'discussion', 'wouldcockpit']",{'thread': 100}
"['ebfecb', 'dadcc', 'mergerequest', 'skateman', 'expose', 'supportvirtual', 'expose', 'attribute']",{'expose': 100}
"['virtual', 'expose', 'attribute']",{'expose': 100}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['skateman', 'createsupport', 'expose']",{'expose': 100}
"['location', 'monitor', 'thread']",{'thread': 100}
"['incorrect', 'translation']",{'incorrect': 100}
"['support', 'expose']",{'expose': 100}
"['methodmanageiq', 'issue']",{'issue': 100}
"['factorymanageiq', 'issue']",{'issue': 100}
"['attribute', 'section', 'manageiq', 'policymanageiq', 'issue']",{'issue': 100}
"['loggingstandarderrorerror', 'connection', 'needle', 'backtraces', 'repetitiveibmprivatecloud', 'cpmcm', 'issue']",{'issue': 100}
"['error', 'worker', 'avoidmanageiq', 'documentation', 'issuemanageiq', 'issue', 'relatedwidget', 'generate', 'content', 'secondwithout', 'consoleclass']",{'issue': 100}
"['insensitive', 'lookup']",{'Sensitive': 90}
"['aafeb', 'mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['mergerequest', 'epostea', 'mergesystem', 'stack', 'reference', 'orchestration']",{'stack': 100}
"['stack', 'reference', 'orchestration']",{'stack': 100}
"['apikey', 'filterapikey', 'request', 'authentication', 'cloud', 'payloadapikey', 'sensitive', 'value']",{'Sensitive': 100}
"['event', 'concurrent', 'timeout']",{'concurrent': 100}
"['enable', 'lookup', 'sessionmanageiq', 'issue']",{'issue': 100}
"['eeaaa', 'baafaccarequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['updatepluginsmanageiq', 'issue']",{'issue': 100}
"['important', 'default', 'releasemanageiq', 'issue']",{'issue': 100}
"['manageiq', 'sessionoutside', 'backend', 'session', 'interact', 'allowsmanageiq', 'sessionstore', 'ensuremiddleware', 'stack', 'access', 'builtblame']",{'stack': 100}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['concurrent', 'simplepossible', 'firstinitial', 'update']",{'concurrent': 100}
"['consolidate', 'updatebonus', 'resource', 'modificationoutside', 'caller', 'initialize', 'monitor', 'single', 'thread', 'eitheralreadyerror', 'repeat', 'methodprocesserror', 'expectresetcollect', 'initialcollect', 'updateendless']",{'thread': 100}
"['rework', 'single', 'concurrent', 'threadbuild']",{'concurrent': 100}
"['concurrent', 'thread']","{'concurrent': 100, 'thread': 100}"
"['thread', 'ensure', 'monitor']",{'thread': 100}
"['ability', 'deployment', 'detect', 'cleanupinformation', 'monitor', 'initial', 'collector', 'thread', 'updatedeployment', 'restarts', 'container', 'failedstillmanageiq', 'issue']","{'thread': 100, 'issue': 100}"
"['lengthy', 'mentionedstanza', 'followingclauseauthenticationactiverecordwould', 'generate', 'somethingexample', 'classselectselect', 'authentication', 'statusauthenticationauthenticationorderlower', 'authentication', 'statuslower', 'authentication', 'status', 'validlower', 'authentication', 'statusincomplete', 'authentication', 'statuserror', 'authentication', 'statuslower', 'authentication', 'status', 'unreachablelower', 'authentication', 'status', 'invalidlimitmanageiq', 'provider', 'redhat', 'inframanagerselect', 'nestedrecord', 'authentication', 'insteadauthentication', 'happenedparticular', 'givenrecord', 'defaultstate', 'query', 'select', 'validrecord', 'authentication', 'validapproach', 'effect', 'asidecheck', 'produceresult', 'happensbesides', 'query']",{'length': 92}
"['ebfddd', 'mergerequest', 'generation', 'warning', 'yrudman', 'widgetgenerate', 'warning', 'creation']",{'generation': 100}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['servicemanageiq', 'followupibmprivatecloud', 'cpmcm', 'issue']",{'issue': 100}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['exception', 'kafka', 'causekafka', 'issue', 'event', 'publishingmiqqueue']",{'issue': 100}
"['helper', 'methodmanageiq', 'issue']",{'issue': 100}
"['infinite', 'check', 'avoidmanageiq', 'issue']",{'issue': 100}
"['injection', 'jansa', 'cfacdbfdaefdcc', 'cherry']",{'injection': 100}
"['cbddcrequest', 'mergebrakeman', 'command', 'injection', 'warning']",{'injection': 100}
"['brakeman', 'command', 'injection', 'warning']",{'injection': 100}
"['duplicate', 'rspec', 'requestif', 'stack', 'prevention']",{'stack': 100}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['directory', 'buildmanageiq', 'issue']",{'issue': 100}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['ensure', 'modelibmprivatecloud', 'cpmcm', 'issue']",{'issue': 100}
"['gemfile', 'plugin', 'provider', 'vmwaregemfile', 'plugin', 'provider', 'vmwaremanageiq', 'close', 'issue']",{'issue': 100}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['manager', 'parent', 'provider', 'destroyingprovider', 'manager', 'parentrecord', 'provider', 'orphanmanageiq', 'provider', 'issue']",{'issue': 100}
"['directory', 'bracket', 'issue', 'docker', 'square']",{'issue': 100}
"['directory', 'bracket', 'issue', 'square']",{'issue': 100}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['worker', 'image', 'override', 'flexabilityallows', 'worker', 'imageimage', 'digest', 'identifiermanageiq', 'applies', 'issue']",{'issue': 100}
"['string', 'notationmanageiq', 'classicibmprivatecloud', 'cpmcm', 'issue']",{'issue': 100}
"['container', 'worker', 'environmentassume', 'value', 'providesecret', 'kafka', 'deploy', 'containersecret', 'containermanageiq', 'issue']",{'issue': 100}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['username', 'trace', 'stack', 'matchuserid']",{'stack': 100}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['ebaecrequest', 'jrafanie', 'mergeupgrade', 'security']",{'Security': 100}
"['upgrade', 'securitylimit', 'activestorage', 'circumventionparameter', 'possible', 'actionpack', 'rediscachestore', 'memcachestore', 'objectability', 'forge']",{'forger': 91}
"['event', 'payloadevent', 'containes', 'provider', 'sourcemanageiq', 'issue']",{'issue': 100}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['vmdbdatabasebackend', 'issuefrontend', 'classic', 'issue', 'manageiq', 'relatedissuemanageiq', 'frontend', 'applicationremove', 'replacement']",{'issue': 100}
"['automate', 'namespace', 'miqaeinstance', 'miqaenamespaces', 'column', 'miqaemethodinstead', 'columnmanageiq', 'issue']",{'issue': 100}
"['ccbcf', 'mergerequest', 'mergequery', 'aggregation', 'warning', 'brakeman', 'injection', 'mixin']",{'injection': 100}
"['mergerequest', 'mergecommand', 'possible', 'warning', 'brakeman', 'injection']",{'injection': 100}
"['brakeman', 'injection', 'warning']",{'injection': 100}
"['possible', 'warning', 'brakeman', 'injection']",{'injection': 100}
"['rubocop', 'number', 'issue']",{'issue': 100}
"['fedfc', 'mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['condition', 'createmanageiq', 'issue']",{'issue': 100}
"['worker', 'deploymentmanageiq', 'issue']",{'issue': 100}
"['integer', 'miqreport', 'extract', 'format']",{'integer': 100}
"['manageiq', 'issue']",{'issue': 100}
"['fbfdfrequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['permission', 'missingreplace']",{'permission': 100}
"['owner', 'reference', 'object', 'orchestratorcleanedmanageiq', 'issue']",{'issue': 100}
"['requirement', 'relaxrelax', 'versionmanageiq', 'issue']",{'issue': 100}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['additional', 'escalation', 'methodmatch', 'ansiblemanageiq', 'issue']",{'issue': 100}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['openid', 'manageiq', 'oauth', 'supportmanageiq', 'issue']",{'issue': 100}
"['corresponding', 'member', 'enhance', 'model', 'tablemanageiq', 'issue']",{'issue': 100}
"['abafe', 'acaafa', 'mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['common', 'handleexample', 'common', 'screen', 'accessiblebetter', 'admin', 'different', 'product', 'classic', 'issue', 'manageiq', 'address']",{'issue': 100}
"['secret', 'container', 'workerrequire', 'assumes', 'container', 'secret', 'workerorchestratormanageiq', 'issue']",{'issue': 100}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['cecumrequest', 'nicklamuro', 'mergemiqreport', 'polymorphic', 'fixup', 'issue']",{'issue': 100}
"['carboninheartbeat', 'worker', 'thread', 'smartproxy']",{'thread': 100}
"['ecbdfrequest', 'skateman', 'params', 'provider', 'encryption', 'schema']",{'encryption': 100}
"['params', 'provider', 'encryption', 'schema']",{'encryption': 100}
"['logic', 'thread', 'heartbeatcould', 'previouslythread', 'exception', 'default', 'raisedworry', 'thread', 'thread', 'restart']",{'thread': 100}
"['thread', 'heartbeatmiqdefaults', 'worker', 'definethread', 'heartbeatproblem', 'firststart', 'heartbeatwithout', 'contention', 'thread', 'constantprocess', 'heartbeat', 'worker', 'stillqueue', 'message']",{'thread': 100}
"['mergerequest', 'mergetemplate', 'tower', 'issue', 'field', 'property']",{'issue': 100}
"['polymorphic', 'issue']",{'issue': 100}
"['fryguysporadic', 'timing', 'issue']",{'issue': 100}
"['sporadic', 'timing', 'issue']",{'issue': 100}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['expose', 'methodlogic']",{'expose': 100}
"['version', 'recentversion', 'recent', 'updatetwitter', 'advisory', 'security']",{'Security': 100}
"['afacf', 'mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['error', 'invalid', 'message', 'issue']",{'issue': 100}
"['agrarechangelog', 'provider', 'sprint']",{'Sprintf': 92}
"['changelog', 'provider', 'sprint']",{'Sprintf': 92}
"['fcdbbc', 'mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['kbrockclean', 'ternary', 'issue']",{'issue': 100}
"['raisingexception', 'controlstack', 'serverreturn', 'thread', 'methodinterrupt', 'worker', 'sigterm', 'rescuesigterm', 'signal', 'exception', 'sigint']",{'thread': 100}
"['mergerequest', 'jvlcek', 'mergereview', 'sprint']",{'Sprintf': 92}
"['review', 'sprint']",{'Sprintf': 92}
"['rubyzip', 'updatemanageiq', 'issue']",{'issue': 100}
"['error', 'template', 'finish', 'runner', 'orchestrationstate', 'stack', 'provider']",{'stack': 100}
"['neverpossible', 'autoload', 'issue', 'invalidcause', 'people', 'issuepossible', 'removeparent', 'exception']",{'issue': 100}
"['worker', 'method', 'commitworker', 'collector', 'metricmethod', 'issue']",{'issue': 100}
"['validation', 'uniqueness', 'dashboard', 'additionmanageiq', 'issue']",{'issue': 100}
"['pythonpath', 'issue']",{'issue': 100}
"['refresh', 'experimentalmiqqueue', 'refresh', 'target', 'worker', 'openshift', 'kubernetesworker', 'vmware', 'worker', 'refreshfuture', 'vmware', 'thread', 'refreshworkerwatch', 'thread']",{'thread': 100}
"['current', 'check', 'snapshotleast', 'snapshot', 'current', 'ensure', 'firstcheck', 'underlyingmanageiq', 'issue']",{'issue': 100}
"['constant', 'constantizedconstantize', 'incorrect', 'demodulize', 'classconstantize', 'expectedfollowingfollowingeventcatcher', 'autoload', 'managermanageiq', 'provider', 'basemanager', 'eventcatchercatcher', 'constantize', 'namespace', 'provider', 'event', 'validforeman', 'manageiq', 'provider', 'eventcatchermanageiq', 'provider', 'basemanager', 'eventcatcher']",{'incorrect': 100}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['rubyzip', 'issue']",{'issue': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['error', 'rspec', 'update', 'issue', 'expectation']",{'issue': 100}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['combinationchangelog', 'sprint', 'updateproduct']",{'Sprintf': 92}
"['workflow', 'cloudmanageiq', 'issue']",{'issue': 100}
"['fryguymultiple', 'issue']",{'issue': 100}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['present', 'entry', 'extra', 'generation', 'expression', 'miqexpression']",{'generation': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['request', 'service', 'retirementrequest', 'service', 'retirementmanageiq', 'issue']",{'issue': 100}
"['emsfolder', 'folderfolder', 'emsfolder', 'methodchildancestor', 'check', 'unable', 'yellow', 'foldermanageiq', 'issue']",{'issue': 100}
"['mergerequest', 'mergeautomate', 'exposure', 'string', 'engine']",{'Exposure': 100}
"['exposure', 'engine', 'folder']",{'Exposure': 100}
"['print', 'debugrubocop', 'issue', 'logic', 'complexity']",{'issue': 100}
"['dfddfrequest', 'jvlcek', 'mergemiqldap', 'deprecation', 'warning', 'issue']",{'issue': 100}
"['fafddrequest', 'chargeback', 'service', 'aware', 'yrudman', 'regiongenerate', 'chargeback', 'service', 'generation']",{'generation': 100}
"['miqldap', 'deprecation', 'warning', 'issue']",{'issue': 100}
"['scheduling', 'rspec', 'generation', 'servcie', 'region']",{'generation': 100}
"['chargeback', 'service', 'generation', 'schedule', 'region']",{'generation': 100}
"['reuse', 'shedule', 'issue', 'chedule', 'check']",{'issue': 100}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['cachingthread', 'generation', 'mutiple', 'logic', 'ensure', 'validation']",{'generation': 100}
"['ccddc', 'bedfe', 'mergerequest', 'jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['project', 'default', 'playbook', 'providegather', 'content', 'plugins', 'enabledstillansibleplaybook', 'accessible', 'making', 'alteringsearchappliance', 'manageiq', 'feedebproject', 'issue', 'ansible', 'appliance', 'issue', 'appliance', 'wouldmodel', 'playbook', 'provideevaluate', 'plugins', 'scenario']",{'issue': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['blacklist', 'convertsince', 'samplepossible', 'whitelist']",{'blacklist': 100}
"['dceaarequest', 'mergerequest', 'scheduling', 'value', 'integer', 'parse', 'automation']",{'integer': 100}
"['worker', 'removealready', 'memory', 'worker', 'limit', 'growingemptive', 'controlcause', 'refreshes', 'restart', 'issue', 'intervalrefreshes', 'preventcause', 'vmware', 'issue', 'refresh', 'secondsystemd', 'check']",{'issue': 100}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['efedearequest', 'demichev', 'stack', 'alexander', 'mergestack', 'orchestration']",{'stack': 100}
"['request', 'scheduling', 'value', 'integer', 'automation']",{'integer': 100}
"['stack', 'orchestration']",{'stack': 100}
"['befaarequest', 'length', 'limit', 'serverprocess', 'unique', 'server']",{'length': 100}
"['dfdfcaffa', 'mergerequest', 'introduce', 'stack', 'azureintroduce', 'cloud', 'azurestack', 'provider', 'network']",{'stack': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['field', 'orderfield', 'containlimitreference', 'columnrecentmanageiq', 'issue']",{'issue': 100}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['cadabadf', 'mergerequest', 'bdunne', 'mergegitrepository', 'generation', 'factory']",{'generation': 100}
"['gitrepository', 'generation', 'factory']",{'generation': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['issue', 'attempt', 'parallel', 'system', 'travis']",{'issue': 100}
"['local', 'determinedsystem', 'issue', 'contamination', 'mightparalleloperation', 'movinglittle', 'performance', 'addition', 'constantunique']",{'issue': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['febfa', 'cadff', 'mergerequest', 'jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['configurable', 'excludedchoose', 'tableintention', 'exclude', 'customer', 'trouble', 'logical', 'database', 'issue', 'remotewould', 'table', 'excludedconfig']",{'issue': 100}
"['wrongmanageiq', 'issue']",{'issue': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['supportnetwork', 'storage', 'managermanageiq', 'issue']",{'issue': 100}
"['acffc', 'mergerequest', 'jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['concern', 'class', 'constantpotential', 'certain', 'scenario', 'issue']",{'issue': 100}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['styling', 'issue']",{'issue': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['lpichlerreport', 'interval', 'chargeback', 'generation']",{'generation': 100}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['report', 'generation', 'chargeback']",{'generation': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['mergerequest', 'fdupont', 'redhaterror', 'wrapper', 'message', 'expose', 'option']",{'expose': 100}
"['error', 'wrapper', 'message', 'expose', 'option']",{'expose': 100}
"['mergerequest', 'generationg', 'chargeback', 'service', 'status', 'yrudman', 'service', 'chargeback', 'attribute']",{'generation': 95}
"['refresh', 'smartstatesystem', 'refresh', 'issue', 'informationblock', 'check', 'custom']",{'issue': 100}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['bccfad', 'fddebrequest', 'fdupont', 'redhatdefault', 'limit', 'network', 'concurrent', 'conversion', 'setting']",{'concurrent': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['abeedarequest', 'mergequeue', 'stack', 'deployment', 'orchestration']",{'stack': 100}
"['fbedcb', 'mergerequest', 'fdupont', 'redhatremove', 'preflight', 'fatal', 'check']",{'fatal': 100}
"['mergerequest', 'mergeservice', 'generation', 'subclass']",{'generation': 100}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['present', 'display', 'issue', 'dasgboard', 'respect', 'content']",{'issue': 100}
"['unicode', 'issue']",{'issue': 100}
"['mergerequest', 'report', 'timezone', 'generation', 'yrudman', 'mergereport', 'timezone', 'mysettings']",{'generation': 100}
"['independent', 'child', 'custombuttonsetright', 'arraymember', 'collection', 'custom', 'child', 'ordermember', 'toolbaressential', 'achievingspecific', 'expose', 'method', 'handlecanonical', 'button', 'button', 'group', 'option', 'creatingwithout', 'button', 'custom', 'optionbutton', 'custom', 'editing']",{'expose': 100}
"['comment', 'issue']",{'issue': 100}
"['validation', 'logic', 'issue']",{'issue': 100}
"['validation', 'logic', 'validation', 'logicvalidation', 'issue']",{'issue': 100}
"['bundler', 'gracefullyindex', 'bundler', 'creatingnonexistent', 'occurs', 'directorydefaultbundler', 'issue']",{'issue': 100}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['rubocop', 'issue']",{'issue': 100}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['fadaf', 'mergerequest', 'jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['skateman', 'updatesurro', 'compilation', 'issue', 'update']",{'issue': 100}
"['surro', 'compilation', 'issue', 'update']",{'issue': 100}
"['cecdbd', 'mergerequest', 'jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['asset', 'compile', 'disablechild', 'firstasset', 'trigger', 'methodcompilation', 'therefor', 'dependingissue', 'delay', 'travis', 'minormajor', 'issue', 'localtysingleasset']",{'issue': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['mergerequest', 'mergeowner', 'model', 'stack']",{'stack': 100}
"['owner', 'model', 'stack']",{'stack': 100}
"['jprausechangelog', 'hammer', 'sprint', 'update']",{'Sprintf': 92}
"['accedefdrequest', 'mergepolicy', 'openscap', 'issue']",{'issue': 100}
"['bcfbfc', 'mergerequest', 'permission', 'chalettu']",{'permission': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['integer', 'tower']",{'integer': 100}
"['integer', 'tower']",{'integer': 100}
"['cffad', 'mergerequest', 'fdupont', 'redhatgroup', 'collection', 'flavor', 'security']",{'Security': 100}
"['group', 'collection', 'flavor', 'security']",{'Security': 100}
"['changelog', 'hammer', 'sprint', 'update']",{'Sprintf': 92}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['manageiq', 'issue']",{'issue': 100}
"['support', 'apiansiblemixin', 'ansiblesupport', 'refactormanageiq', 'issue']",{'issue': 100}
"['transaction', 'disableexplicit', 'transaction', 'thread', 'insteadreleaseactive', 'connection', 'database', 'transactional', 'recorddatabase', 'additional', 'spawn', 'threadconnection', 'speciallyinside', 'share', 'threadensures', 'database', 'threadoutermost', 'additional', 'ignoringconnection', 'enters', 'threadmaintain', 'currentlyoutside', 'connection', 'spawnedexplicit', 'connection', 'switchinteract', 'spawn', 'threadexplicit', 'introduce', 'database', 'changetransactional']",{'thread': 100}
"['deployment', 'wizardaccordingissuecomment', 'manageiq', 'issue', 'classicwizard', 'openshift']",{'issue': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['getter', 'default', 'dirty', 'limit', 'concurrent']",{'concurrent': 100}
"['stack', 'plesko', 'mergeclass', 'serialize']",{'stack': 100}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['bounce', 'connection', 'subscription', 'separatemigration', 'deadlocktransaction', 'migrationrelation', 'process', 'subscription', 'responsiblerequiresrelease', 'transaction', 'subscription', 'processsolve', 'connection', 'separate', 'issue', 'dummy']",{'issue': 100}
"['connection', 'reconnect', 'insteadfound', 'connection', 'reconnect', 'postgresqlpostgresql', 'stoppingaccept', 'system', 'database', 'ready', 'timedconnection', 'couldconnection', 'clientrestart', 'client', 'process', 'workaroundworkerevident', 'postgresqlconnection', 'initiateconnection', 'database', 'enabledecdhe', 'compression', 'cipher', 'protocolrestarts', 'rightfataldatabase', 'entryinitialize', 'client', 'libpq', 'failedattempt', 'continuallyconnection', 'restartopenssl', 'client', 'forceconnection', 'postgresql', 'appliance', 'consolebeginselect', 'countrescue', 'activerecordbeginrescueretrysleepchange', 'worker', 'restart', 'postgresql', 'sleepstart', 'sleepwould', 'worker', 'reconnect', 'serverpostgresql', 'systemctlsleeppostgresql']",{'cipher': 100}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['default', 'openstack', 'definition', 'security', 'virtual']",{'Security': 100}
"['accessors', 'chassis', 'physicalchange', 'database', 'expose']",{'expose': 100}
"['dceff', 'mergerequest', 'jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['integer', 'jsonb', 'storeinteger', 'jsonb', 'store']",{'integer': 100}
"['rubocop', 'issuerubocop', 'issue']",{'issue': 100}
"['integer', 'timestamp']",{'integer': 100}
"['skelatal', 'expose', 'iterator', 'indexskelatal', 'expose', 'iterator', 'index']",{'expose': 100}
"['authkeypair', 'authentication', 'sensitive', 'column', 'class', 'expression', 'table']",{'Sensitive': 100}
"['creation', 'locationcreation', 'directoryproduction', 'actualsolution', 'issue', 'environmentbuild', 'travis', 'plugins', 'benefitmanageiq']",{'issue': 100}
"['logic', 'transformation', 'openstackbzcynm', 'group', 'security', 'flavor']",{'Security': 100}
"['mergerequest', 'cluster', 'mturley', 'exposesupport', 'expose', 'openstack']",{'expose': 100}
"['ensure', 'everymessage', 'thread', 'requestedrequest', 'duration', 'formatrequest']",{'thread': 100}
"['cluster', 'property', 'table', 'expose', 'column', 'support', 'target']",{'expose': 100}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['version', 'pluginsmanageiq', 'issue']",{'issue': 100}
"['distinguishgitrepository', 'invokinguserid', 'mighterror', 'message', 'differentpassword', 'userid', 'missingplease', 'password', 'username', 'providepassword', 'incorrect', 'message', 'useridcredential', 'invalid']",{'incorrect': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['mergerequest', 'kataria', 'mergephysical', 'server', 'security']",{'Security': 100}
"['server', 'security']",{'Security': 100}
"['styling', 'issue']",{'issue': 100}
"['validation', 'params', 'runner', 'ansiblevalidation', 'params', 'runner', 'ansiblemanageiq', 'issue']",{'issue': 100}
"['empty', 'projectlonger', 'issue', 'runner', 'ansible']",{'issue': 100}
"['sprint', 'update']",{'Sprintf': 92}
"['permission', 'access', 'group']",{'permission': 100}
"['integer', 'returninteger', 'possibility', 'return']",{'integer': 100}
"['conditional', 'product', 'removemanageiq', 'dependsmanageiq', 'issue']",{'issue': 100}
"['uniqueness', 'transformation', 'validateunique', 'scopedmanageiq', 'issue']",{'issue': 100}
"['sprint', 'update']",{'Sprintf': 92}
"['ownership', 'miqrequest', 'limitedmanageiq', 'serviceassign', 'group', 'problem', 'filter', 'undefined', 'methodmanageiq', 'committaggable', 'miqrequesttaggable', 'model', 'github', 'lorkscorguar', 'issue', 'filter', 'assignrequest', 'environmentreceivedintermediate', 'receiveerror']",{'issue': 100}
"['accordingreport', 'intervalreference', 'local', 'includesconvertingreport', 'definition', 'determiningreport', 'improper', 'monthimproper', 'previous', 'monthinterval', 'rollup', 'metricdifferent']",{'improper': 100}
"['changelog', 'sprint']",{'Sprintf': 92}
"['issue', 'source', 'class', 'address']",{'issue': 100}
"['carboninconsolidation', 'plugin', 'ansible', 'content', 'expose']",{'expose': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['sprint', 'update']",{'Sprintf': 92}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['breakable', 'optional', 'argument']",{'breakable': 100}
"['sprint', 'update']",{'Sprintf': 92}
"['complymanageiq', 'issue']",{'issue': 100}
"['request', 'service', 'factory', 'stack', 'orchestration']",{'stack': 100}
"['breakable', 'optional', 'argumentmethod', 'breakable', 'optional', 'argumentreport', 'chargeback', 'preview']",{'breakable': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['dbcafarequest', 'jntullo', 'mergeattribute', 'expose', 'virtual', 'access']",{'expose': 100}
"['expose', 'virtual', 'access']",{'expose': 100}
"['fbddeferequest', 'skateman', 'dalli', 'downgradedowngrade', 'session', 'dalli', 'issue']",{'issue': 100}
"['downgrade', 'session', 'dalli', 'issue']",{'issue': 100}
"['encryption', 'entry']",{'encryption': 100}
"['encryption', 'validationencryption', 'value', 'attemptreturn', 'database']",{'encryption': 100}
"['mergerequest', 'jntullo', 'mergereport', 'chargeback', 'service', 'generation']",{'generation': 100}
"['report', 'chargeback', 'service', 'generation']",{'generation': 100}
"['mergerequest', 'demichev', 'alexander', 'group', 'group', 'security']",{'Security': 100}
"['possible', 'group', 'security', 'single']",{'Security': 100}
"['lpichlerreport', 'service', 'chargeback', 'generation', 'uniqueness']",{'generation': 100}
"['report', 'uniqueness', 'generation', 'chargebackreport', 'chargeback', 'dashboard', 'summary', 'screenrequestresource', 'service', 'attribute', 'filterrequest', 'service', 'returingserviceserviceserviceservicereport', 'resultrequest', 'empty', 'final', 'resultservice', 'empty', 'resultreport', 'service', 'resultservice', 'overwriten', 'empty']",{'generation': 100}
"['compatibility', 'issue', 'gemfile', 'ovirt']",{'issue': 100}
"['manageiq', 'schemamigration', 'plugin', 'schemamanageiq', 'issue']",{'issue': 100}
"['jprausegaprindashvili', 'sprint', 'changelog', 'release', 'update']",{'Sprintf': 92}
"['space', 'rubocop', 'issue']",{'issue': 100}
"['blank', 'missingsuper', 'enhance', 'factoryotherwise', 'table', 'factorybegin', 'incorrect']",{'incorrect': 100}
"['mergerequest', 'mergeclass', 'overrun', 'network', 'module', 'rename']",{'overrun': 100}
"['class', 'overrun', 'network', 'module', 'rename']",{'overrun': 100}
"['network', 'reconfigure', 'adaptermanageiq', 'issue']",{'issue': 100}
"['rubocop', 'issuerubocop', 'issue']",{'issue': 100}
"['reference', 'expose', 'primaryindex', 'primary', 'reference', 'expose']",{'expose': 100}
"['falsey', 'ldaps', 'encryption', 'title', 'reword']",{'encryption': 100}
"['close', 'parentconnection', 'process', 'child', 'parentexecutes', 'process', 'child', 'priorconnection', 'server', 'reply', 'issuedescribes', 'reproducer', 'issue']",{'issue': 100}
"['encryption', 'optionimplement', 'authentication', 'requiresoption', 'empty', 'ldaps', 'encryption', 'handleencryption', 'option', 'unsecure', 'empty']",{'encryption': 100}
"['gaprindashvili', 'sprint', 'changelog', 'release', 'update']",{'Sprintf': 92}
"['autofix', 'rubocop', 'issueautofix', 'rubocop', 'issue']",{'issue': 100}
"['rubocop', 'issue', 'useless', 'methodprivate', 'rubocop', 'issue', 'useless', 'method']",{'issue': 100}
"['autofix', 'rubocop', 'issueautofix', 'rubocop', 'issue']",{'issue': 100}
"['dcfbf', 'mergerequest', 'jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['cdfaarequest', 'bdunne', 'insecure', 'session']",{'insecure': 100}
"['insecure', 'session']",{'insecure': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['memoryfound', 'versionregular', 'pathname', 'objectmemory', 'internals', 'causerequire', 'statement', 'number', 'significantseems', 'manageiq', 'present', 'issuerequire', 'previouslyreplication', 'script', 'issue', 'simplerequire', 'pathnamerequire', 'fileutilsunlessrequire', 'empty', 'applicationproper', 'workaroundmanageiq']",{'issue': 100}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['sporadic', 'failuretransaction', 'threadconnection', 'alwaysconnection', 'neverconnection', 'buggy', 'reloaddatabase', 'thread']",{'thread': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['jerrykworker', 'thread', 'smartproxy', 'heartbeat']",{'thread': 100}
"['rubocop', 'warning', 'cleanupclean', 'rubocop', 'warningclausemodifier', 'rescue', 'changedbegin', 'block', 'rescue', 'nomethoderrorwould', 'thread', 'result']",{'thread': 100}
"['worker', 'thread', 'smartproxy', 'smartstate', 'issue', 'orderassumption', 'mistaken', 'separate', 'smartproxy', 'worker', 'threadevery', 'heartbeat']","{'thread': 100, 'issue': 100}"
"['faaadbcrequest', 'tinaafitz', 'mergeemail', 'issue']",{'issue': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['generation', 'refactor', 'method', 'passwordfetch', 'database', 'generatedifferent', 'ansible', 'behavior']",{'generation': 100}
"['rubocop', 'issuerubocop', 'issue']",{'issue': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['issue', 'precedence', 'manageiq', 'setting']",{'issue': 100}
"['issue', 'precedence', 'manageiq', 'settingproduction', 'deployment']",{'issue': 100}
"['jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['fdbcfd', 'mergerequest', 'abellotti', 'mergetrace', 'stack', 'issue']","{'stack': 100, 'issue': 100}"
"['trace', 'stack', 'issueshort', 'window', 'memcachedfieldreproduce', 'bugzilla', 'scenario']",{'stack': 100}
"['syntax', 'orderbydirection', 'stead', 'orderby', 'issue', 'column', 'singleerror']",{'issue': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['mergerequest', 'changelog', 'jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['refresh', 'debug', 'graph', 'internalsmanageiq', 'issue']",{'issue': 100}
"['methodmanageiq', 'issue']",{'issue': 100}
"['problem', 'relativeensures', 'correctrelatedmanageiqmanageiq', 'issue', 'classicmanageiq', 'content', 'issue']",{'issue': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['generation', 'group', 'content', 'description', 'generation', 'content', 'ensure']",{'generation': 100}
"['revert', 'rubocop', 'issue', 'fixedcommit', 'reverts']",{'issue': 100}
"['mergerequest', 'bdunne', 'mergedependency', 'bcrypt']",{'bcrypt': 100}
"['dependency', 'bcrypt']",{'bcrypt': 100}
"['sprint', 'update']",{'Sprintf': 92}
"['mergerequest', 'changelog', 'jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['wordarray', 'rubocop', 'issue', 'array', 'style', 'address']",{'issue': 100}
"['mergerequest', 'factory', 'group', 'security', 'network']",{'Security': 100}
"['bzweifactory', 'stack']",{'stack': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['permission', 'notification']",{'permission': 100}
"['mergerequest', 'permission', 'skatemanpermission', 'template']",{'permission': 100}
"['permission', 'template']",{'permission': 100}
"['updatefoobarwidget', 'issue', 'issuecomment']",{'issue': 100}
"['baeferequest', 'changelog', 'jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['container', 'class', 'prefix', 'objectcollision', 'class', 'prefix', 'removingcolumnmanageiq', 'provider', 'kubernetesmanageiq', 'issue']",{'issue': 100}
"['bzweidialog', 'service', 'generation']",{'generation': 100}
"['dialog', 'service', 'generation']",{'generation': 100}
"['orchestrator', 'enhance', 'objectdefinition', 'amount', 'expose', 'methodmethod', 'delete', 'definition', 'yield', 'objectallow']",{'expose': 100}
"['rubocop', 'issuerubocop', 'issue']",{'issue': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['sprint', 'update']",{'Sprintf': 92}
"['deccb', 'mergerequest', 'imtayadeway', 'visability', 'button', 'custom', 'enablementvisability', 'button', 'custom', 'expose', 'enablement']",{'expose': 100}
"['bzweitemplate', 'dialog', 'generation', 'orchestration']",{'generation': 100}
"['tenant', 'stack', 'false', 'option']",{'stack': 100}
"['eeeacrequest', 'europ', 'helper', 'issue']",{'issue': 100}
"['debcarequest', 'ladas', 'stack', 'refresh', 'method', 'orchestration']",{'stack': 100}
"['mergerequest', 'product', 'instance', 'group', 'tzumainnproduct', 'instance', 'group', 'management', 'security']",{'Security': 100}
"['fabbbrequest', 'changelog', 'jprausechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['mergerequest', 'jvlcek', 'mergesearch', 'userid', 'insensitive']",{'Sensitive': 90}
"['stack', 'refresh', 'method', 'stack', 'refresh']",{'stack': 100}
"['product', 'instance', 'group', 'management', 'security']",{'Security': 100}
"['mergerequest', 'group', 'security', 'manage', 'tzumainnoperation', 'group', 'security']",{'Security': 100}
"['userid', 'insensitive']",{'Sensitive': 90}
"['brakeman', 'injection']",{'injection': 100}
"['changelog', 'sprint', 'update']",{'Sprintf': 92}
"['cddce', 'mergerequest', 'nicklamuro', 'mergeminor', 'issue']",{'issue': 100}
"['operation', 'group', 'security']",{'Security': 100}
"['rubocop', 'issuerubocop', 'issue']",{'issue': 100}
"['normalize', 'login', 'username', 'lowercasematch', 'sensitiveuserid', 'insensitive', 'normalizingexternal', 'eitherauthenticate', 'directorylogin', 'username']",{'Sensitive': 90}
"['default', 'removal', 'status', 'value', 'miqrequesttask', 'status', 'miqrequestvalidation', 'originallydefault', 'status', 'value', 'issue', 'column', 'address', 'settingmiqrequesttask']",{'issue': 100}
"['syntax', 'issue']",{'issue': 100}
"['extractextractdiffer', 'concurrent', 'batch', 'strategyindex', 'unique', 'batch']",{'concurrent': 100}
"['permission', 'manager']",{'permission': 100}
"['thread', 'monitorstore', 'worker', 'monitor', 'class', 'thread', 'server', 'objectimplement', 'thread', 'terminateworker', 'class', 'containingdestroy', 'worker']",{'thread': 100}
"['rubocop', 'issuerubocop', 'issue']",{'issue': 100}
"['batch', 'store', 'saver', 'concurrentstore', 'concurrent']",{'concurrent': 100}
"['alignment', 'issuealignment', 'issue']",{'issue': 100}
"['integer', 'array', 'value', 'array', 'alwayschange', 'array', 'modifies', 'logic', 'original', 'integer']",{'integer': 100}
"['openssl', 'upgrade', 'fedora']",{'OpenSSL': 100}
"['integer', 'return', 'hardware']",{'integer': 100}
"['select', 'multi', 'rightexact', 'incorrect', 'resultcombinationexact', 'combination', 'neededdelete', 'update']",{'incorrect': 100}
"['rendermanageiq', 'issue', 'classicstory']",{'issue': 100}
"['independent', 'module', 'walker', 'traversal', 'walker', 'vanilla', 'settingfound', 'value', 'encryption', 'password', 'decryption', 'classsettingfollows', 'changechange', 'walker', 'module', 'settingdefinition', 'class', 'convention', 'normalchange', 'definition', 'classmethods', 'method', 'behave', 'outer', 'moduleclass', 'level', 'update', 'namespace', 'extendneededduplicate', 'definition', 'method', 'settingclassmethods', 'module']",{'encryption': 90}
"['generation', 'field', 'attractive', 'field', 'complex', 'contains', 'extra', 'argumenttaken', 'field', 'consequentlycohesion', 'problem', 'field', 'columnchange', 'miqexpression', 'mightbetter', 'field', 'patternbetter', 'responsibility', 'separatingfuture']",{'generation': 100}
"['columnsnapshot', 'information', 'amazon', 'encryption', 'providespatch', 'snapshot', 'status', 'cloud', 'volume', 'modelsnapshot', 'cloud', 'volume']",{'encryption': 100}
"['mergerequest', 'ladas', 'mergesaver', 'concurent', 'batch']",{'concurrent': 95}
"['stack', 'orchestration']",{'stack': 100}
"['class', 'stack', 'withouterror', 'majority', 'heavyvariable', 'refactoredfarther']",{'stack': 100}
"['profilepatch', 'provision', 'issue', 'network', 'ovirtnetwork', 'label', 'changingnetwork', 'profile', 'insteadcluster', 'profile', 'configuredusingversion']",{'issue': 100}
"['foundwithout', 'causingsuite', 'reproduce', 'anothermodel', 'rspec', 'request', 'bundlemanageiq', 'issue']",{'issue': 100}
"['rubocop', 'issuerubocop', 'issue']",{'issue': 100}
"['expose', 'methodexpose', 'methodcheck', 'processingenter', 'message']",{'expose': 100}
"['mergerequest', 'ladas', 'version', 'strategy', 'concurrent', 'persistor']",{'concurrent': 100}
"['playbookplaceservice', 'restarts', 'stack', 'restartsetup', 'chance', 'issuecombine', 'method', 'effectivelystate']",{'stack': 100}
"['asset', 'bower', 'manageiq', 'existsclean', 'update', 'encounter', 'issue', 'obsolete']",{'issue': 100}
"['autofix', 'rubocop', 'issueautofix', 'rubocop', 'issue']",{'issue': 100}
"['rubocop', 'issuerubocop', 'issue']",{'issue': 100}
"['exposegivin', 'expose', 'assertvital', 'refresh', 'referentialintegrity', 'referential']",{'expose': 100}
"['grammar', 'rubocop', 'issuegrammar', 'rubocop', 'issue']",{'issue': 100}
"['ddcbbrequest', 'imtayadeway', 'security', 'header', 'ensure']",{'Security': 100}
"['security', 'header', 'ensure']",{'Security': 100}
"['region', 'filteringfails', 'unexpected', 'setup', 'integer', 'reasonvalue', 'integer', 'filterer', 'coercedregion', 'filter']",{'integer': 100}
"['cache', 'everyrequest', 'query', 'database', 'currentlydisplay', 'provider', 'stack', 'determinelabel', 'openstack']",{'stack': 100}
"['integer', 'bignum', 'fixnum', 'unifiesprior', 'expectation', 'differentcustomattribute', 'return', 'symbolclass', 'value', 'insteadinteger', 'fixnum', 'behaviorremove', 'whole', 'methodmanageiq', 'provider', 'customattribute', 'addedmanageiq']",{'integer': 100}
"['monkeypatch', 'stubsocket', 'webmock', 'changeconditional', 'check', 'webmock', 'alongfaefcdedccf', 'commitbblimke', 'webmock', 'fafadfbdededabstubsocket', 'issue', 'webmock']",{'issue': 100}
"['sensitive', 'filter']",{'Sensitive': 100}
"['config', 'empty', 'workaround', 'issue', 'google']",{'issue': 100}
"['human', 'expose', 'expression']",{'expose': 100}
"['fababb', 'aaeddfarequest', 'sensitive', 'widget']",{'Sensitive': 100}
"['constructor', 'custom', 'condition', 'methodconstructor', 'miqexpressinexample', 'loadedmiqreport', 'report', 'generation', 'condition']",{'generation': 100}
"['tenant', 'incorrect', 'entry', 'cloud']",{'incorrect': 100}
"['columninformation', 'volume', 'amazon', 'encryption', 'providespatch', 'status', 'cloud', 'volume', 'modelinclude', 'model', 'cloud']",{'encryption': 100}
"['event', 'expose', 'target']",{'expose': 100}
"['transaction', 'comment', 'transaction', 'comment', 'issue']",{'issue': 100}
"['attrs', 'generation']",{'generation': 100}
"['mergerequest', 'master', 'issue', 'timing']",{'issue': 100}
"['issue', 'timing', 'fixingprogress', 'operation', 'refreshcould', 'migrationvalidation', 'import']",{'issue': 100}
"['issue', 'codeclmate']",{'issue': 100}
"['eafcb', 'mergerequest', 'mergecondition', 'issue', 'association', 'virtual', 'field']",{'issue': 100}
"['condition', 'issue', 'association', 'virtual', 'fieldassociation']",{'issue': 100}
"['sensitive', 'widgetmanageiq', 'followup']",{'Sensitive': 100}
"['infra', 'openstack', 'provider', 'event', 'tzumainninfra', 'blacklist', 'openstack', 'provider', 'event']",{'blacklist': 100}
"['instance', 'method', 'record', 'applicationinstance', 'collection', 'class', 'returnclass', 'accessibleaddedclose', 'issue']",{'issue': 100}
"['caceda', 'mergerequest', 'andyvesel', 'mergeattach', 'volume', 'expose', 'method']",{'expose': 100}
"['state', 'queue', 'columnunable', 'deserialize', 'columnmodule', 'undefined', 'integer', 'postgresql', 'class', 'activerecord', 'worker', 'messageworker', 'message', 'remainsstateerror', 'dispatch', 'server', 'columnmultiple', 'clear', 'queue', 'message', 'servercleaninteger', 'postgresql', 'activerecordcommit']",{'integer': 100}
"['infra', 'blacklist', 'openstack', 'provider', 'event']",{'blacklist': 100}
"['mergerequest', 'continuation', 'eclarizioprevious', 'tagcontrol', 'issue']",{'issue': 100}
"['apacherather', 'restart', 'issue', 'alwaysmiqserver', 'serverrequire', 'activerequirement', 'definition', 'apache', 'array']",{'issue': 100}
"['exposemodule', 'expose']",{'expose': 100}
"['attach', 'volume', 'expose', 'method']",{'expose': 100}
"['eaefcrequest', 'jntullo', 'enhancementsubcollection', 'stack', 'orchestration']",{'stack': 100}
"['stack', 'service', 'collection', 'orchestrationadditionalaction', 'stack', 'orchestrationreference', 'stack', 'orchestration', 'update']",{'stack': 100}
"['notification', 'asynchronous', 'option', 'settinglogin', 'expose', 'method']",{'expose': 100}
"['bbafbfarequest', 'jrafanie', 'mergeworker', 'thread']",{'thread': 100}
"['autofix', 'rubocop', 'issueautofix', 'rubocop', 'issue']",{'issue': 100}
"['thread', 'runner']",{'thread': 100}
"['stack', 'orchestrationservice']",{'stack': 100}
"['generation', 'widget']",{'generation': 100}
"['issue', 'parent']",{'issue': 100}
"['issue', 'parent', 'movingwrittensupport', 'multiple', 'parentexpectation', 'callingwrong', 'implementingoddity', 'creates']",{'issue': 100}
"['autofix', 'rubocop', 'issueautofix', 'rubocop', 'issue']",{'issue': 100}
"['methoddefine', 'methoddestroy', 'issue']",{'issue': 100}
"['autofix', 'rubocop', 'issueautofix', 'rubocop', 'issue']",{'issue': 100}
"['expose', 'method']",{'expose': 100}
"['autofix', 'rubocop', 'issueautofix', 'rubocop', 'issue']",{'issue': 100}
"['central', 'mechanismauthentication', 'place', 'token', 'remote', 'region', 'usingdifferent', 'assumption', 'region', 'initialfetch', 'configuration', 'remoteassumption', 'incorrect', 'region', 'provenallows', 'enterpriseauthenticate', 'replication', 'remote', 'region']",{'incorrect': 100}
"['rubocop', 'issuerubocop', 'issue']",{'issue': 100}
"['eeacc', 'cddccrequest', 'issue', 'issue', 'model']",{'issue': 100}
"['synch', 'callback', 'association', 'record', 'model']",{'synch': 100}
"['cababrequest', 'abellotti', 'mergeworkflow', 'attribute', 'issue']",{'issue': 100}
"['ebddd', 'mergerequest', 'queue', 'sseagoqueue', 'stack', 'operation', 'update']",{'stack': 100}
"['permission', 'submenu', 'manager', 'automation']",{'permission': 100}
"['mergerequest', 'issue', 'issue', 'model']",{'issue': 100}
"['mkanoortemplate', 'service', 'expose']",{'expose': 100}
"['queue', 'stack', 'operation', 'updateoperation', 'direct', 'stack', 'queue', 'updateprovider', 'infra']",{'stack': 100}
"['wrong', 'exception', 'reasonraisedfactory', 'requester', 'issue']",{'issue': 100}
"['connection', 'reject', 'version', 'ovirteffect', 'address', 'insteadovirt', 'provider', 'authentication', 'provider', 'usingdiscovery', 'mechanism', 'addresspatch', 'issue', 'provider', 'addressqualifiedsituation', 'reallypatchintroduces', 'settingvalue', 'config', 'default']",{'issue': 100}
"['admits', 'integer', 'string']",{'integer': 100}
"['decouple', 'implementation', 'method', 'model', 'helpermanageiq', 'issue']",{'issue': 100}
"['mergerequest', 'isimluk', 'length', 'avoidlength', 'calculation', 'array', 'check', 'emptyness']",{'length': 100}
"['automate', 'expose', 'credential']",{'expose': 100}
"['length', 'calculation', 'array', 'check', 'emptyness']",{'length': 100}
"['model', 'service', 'classicmanageiq', 'issue']",{'issue': 100}
"['unsupported', 'refresh', 'provider', 'updateolder', 'resource', 'stack', 'openstack', 'version']",{'stack': 100}
"['mergerequest', 'ladislav', 'mansam', 'placement', 'exposure']",{'Exposure': 100}
"['mergerequest', 'kataria', 'mergeautomate', 'permission']",{'permission': 100}
"['openstack', 'expose', 'management', 'method', 'model']",{'expose': 100}
"['automate', 'permission', 'automate', 'appliance', 'submenu']",{'permission': 100}
"['rubocop', 'issuerubocop', 'issue']",{'issue': 100}
"['carboninusername', 'authentication', 'expose', 'ansible']",{'expose': 100}
"['model', 'field', 'sufficient', 'fieldmodel', 'expression', 'ensuremanageiq', 'issue']",{'issue': 100}
"['mergerequest', 'changelog', 'mfeifer', 'mergechangelog', 'sprint']",{'Sprintf': 92}
"['thread', 'server']",{'thread': 100}
"['issue', 'detect']",{'issue': 100}
"['bronaghsresource', 'template', 'expose', 'parse', 'orchestration']",{'expose': 100}
"['kbrockvalue', 'field', 'integer', 'support', 'miqexpression']",{'integer': 100}
"['becff', 'mergerequest', 'abellotti', 'mergecollection', 'expose', 'option', 'subcollections', 'enhancement']",{'expose': 100}
"['expose', 'option', 'subcollections', 'enhancement', 'necessarysupport', 'client']",{'expose': 100}
"['value', 'field', 'integer', 'support', 'miqexpressionreport', 'expression', 'valueparse', 'field', 'miqexpressionsanity', 'field']",{'integer': 100}
"['timeline', 'issue', 'event', 'applicationevent', 'hawkularapplication', 'declaringevent', 'group']",{'issue': 100}
"['password', 'security', 'brakeman', 'password']",{'Security': 100}
"['cloudformation', 'resource', 'template', 'expose', 'parse', 'orchestrationstory']",{'expose': 100}
"['retirement', 'sseagoconsistent', 'generation', 'retirement']",{'generation': 100}
"['mergerequest', 'changelogs', 'mfeifer', 'mergemaster', 'sprint', 'changelog']",{'Sprintf': 92}
"['master', 'sprint', 'changelog']",{'Sprintf': 92}
"['rubocop', 'issuerubocop', 'issue']",{'issue': 100}
"['consistent', 'generation', 'retirement', 'testingtestingcreatinglocalwrong', 'comparison', 'todayclass', 'comparison', 'model', 'guaranteenotion']",{'generation': 100}
"['cebferequest', 'imtayadeway', 'stack', 'azurestack', 'orchestration', 'azure']",{'stack': 100}
"['stack', 'double', 'orchestrationeasier']",{'stack': 100}
"['tenant', 'admin', 'group', 'createmanageiq', 'issue', 'classicfixingmanageiq']",{'issue': 100}
"['mergerequest', 'aparnakarve', 'mergerequest', 'workflow', 'expose', 'class']",{'expose': 100}
"['revision', 'starteddiscovery', 'workaround', 'securityfeature', 'revision', 'provefuture', 'preventingmanageiq', 'close', 'issue']",{'issue': 100}
"['method', 'classbreak', 'logic', 'necessaryclass', 'artaggable', 'levelmanageiq', 'issue']",{'issue': 100}
"['parse', 'value', 'invalid', 'miqexpressionvirtual', 'relation', 'sincewrong', 'issue', 'value', 'causelonger', 'relation', 'invalid']",{'issue': 100}
"['ccadd', 'mergerequest', 'aparnakarve', 'mergerequest', 'workflow', 'expose']",{'expose': 100}
"['fcefd', 'mergerequest', 'changelog', 'mfeifer', 'mergechangelog', 'sprint']",{'Sprintf': 92}
"['stack', 'regardless', 'settingaction', 'cable', 'force', 'framework']",{'stack': 100}
"['small', 'protection', 'concurrent', 'number']",{'concurrent': 100}
"['fetch', 'workspacedifferent', 'thread', 'clientrequest', 'generic', 'automate']",{'thread': 100}
"['cebebrequest', 'aparnakarve', 'mergerequest', 'resource', 'workflow', 'expose']",{'expose': 100}
"['integer', 'queue']",{'integer': 100}
"['request', 'workflow', 'expose']",{'expose': 100}
"['graph', 'incorect']",{'incorrect': 94}
"['params', 'insteadrequest', 'parse', 'regardlessregard', 'content', 'particularlymanageiq', 'content', 'header', 'specific', 'header', 'behaviorparams', 'place', 'sensitive', 'writebreak', 'application', 'contentheader', 'everythingrequest', 'wouldlonger', 'filter', 'properlysolution', 'queryregardless', 'parameter', 'contentomits', 'detailexample', 'questionaction', 'resource', 'service', 'controller', 'secret', 'format', 'option', 'password', 'updateaction', 'resource', 'option', 'password']",{'Sensitive': 100}
"['bfcafa', 'mergerequest', 'gildub', 'group', 'security']",{'Security': 100}
"['integer', 'queue']",{'integer': 100}
"['group', 'securityaction', 'controller', 'queueingvalidation', 'support', 'featurejavascriptgroup', 'security', 'network', 'navigation', 'access']",{'Security': 100}
"['ebbbde', 'mergerequest', 'tenant', 'cloud', 'tzumainn', 'cleanuptenant', 'style', 'cloud', 'issue']",{'issue': 100}
"['mergerequest', 'jrafanie', 'mergesearch', 'service', 'insensitive']",{'Sensitive': 90}
"['search', 'insensitive', 'userid', 'loggedservice', 'loggeduseridbrokenbcaddmanageiqgroup', 'fixingmanageiq']",{'Sensitive': 90}
"['information', 'event', 'policy', 'targetchange', 'event', 'timelinemessage', 'information', 'issue', 'facbdeaceabfff', 'timeline', 'policyevent', 'place', 'class', 'target']",{'issue': 100}
"['tenant', 'style', 'cloud', 'issue']",{'issue': 100}
"['editor', 'issue', 'common', 'method', 'manageiq', 'class']",{'issue': 100}
"['queue', 'subnet', 'cloudcommand', 'wrappingvalidation', 'support', 'featurerefactors', 'controller', 'buttonsolution', 'buttoncontroller', 'issue', 'place']",{'issue': 100}
"['stack', 'display', 'invalid']",{'stack': 100}
"['subclass', 'issue', 'treenode']",{'issue': 100}
"['subclass', 'generation']",{'generation': 100}
"['group', 'issue', 'region']",{'issue': 100}
"['kbrockremove', 'incorrect']",{'incorrect': 100}
"['editor', 'issue', 'common', 'method', 'manageiq', 'class']",{'issue': 100}
"['vecerek', 'issuecustomization', 'automate', 'button', 'group', 'unable', 'issue']",{'issue': 100}
"['group', 'issue']",{'issue': 100}
"['mergerequest', 'event', 'network', 'tzumainnopenstack', 'group', 'security', 'event', 'floatingip']",{'Security': 100}
"['openstack', 'group', 'security', 'event', 'floatingip']",{'Security': 100}
"['rubocop', 'issuerubocop', 'issue']",{'issue': 100}
"['resource', 'stack', 'revertedresource', 'stack']",{'stack': 100}
"['edecfrequest', 'changelog', 'mfeifer', 'mergechangelog', 'sprint']",{'Sprintf': 92}
"['bfbderequest', 'kremser', 'issue', 'group', 'domain', 'serverserver', 'group']",{'issue': 100}
"['resource', 'cycle', 'stackresource', 'cycle', 'stack']",{'stack': 100}
"['fdfbarequest', 'group', 'expose', 'jockeyautomate', 'expose']",{'expose': 100}
"['abecf', 'mergerequest', 'lpichlerchart', 'stack']",{'stack': 100}
"['breadcrum', 'generation']",{'generation': 100}
"['mergerequest', 'issue']",{'issue': 100}
"['stack', 'cloud', 'relationship', 'retirement', 'orchestrationstack', 'cloud', 'relationship', 'retirement', 'orchestration']",{'stack': 100}
"['manager', 'block', 'storage', 'object', 'incorrect', 'selectionmanager', 'default', 'block', 'storage', 'storage', 'occurs']",{'incorrect': 100}
"['stack', 'cloud', 'provider', 'retirement', 'orchestration']",{'stack': 100}
"['enable', 'buttonreport', 'button', 'issue', 'check']",{'issue': 100}
"['integer', 'ensurecomparison', 'argumenterror']",{'integer': 100}
"['bccearequest', 'report', 'himdel', 'crash', 'unlock']",{'crash': 100}
"['whitelist', 'blacklist', 'dtocollectionwhitelist', 'dtocollectionattribute']",{'blacklist': 100}
"['attribute', 'blacklist', 'whilelist', 'fixedconsideration', 'whitelist', 'blacklistattribute', 'alwaysaction', 'unique', 'atrributesattribute', 'presenceremove']",{'blacklist': 100}
"['permission', 'removepurposetenant', 'trategy', 'descendant']",{'permission': 100}
"['validation', 'email', 'format', 'delegatemodel', 'replaces', 'providesthough', 'invalidexample', 'invalid', 'commamanageiq', 'address', 'issue']",{'issue': 100}
"['bcfdcecf', 'mergerequest', 'local', 'issue']",{'issue': 100}
"['local', 'issue']",{'issue': 100}
"['summary', 'server', 'summary', 'server', 'relationship', 'servermanageiq', 'issue']",{'issue': 100}
"['whitelist', 'blacklist', 'attribute', 'constructor', 'allowblacklist', 'whitelist', 'attributesetter', 'whitelist', 'destructive', 'exposewhitelist']",{'blacklist': 100}
"['miqexp', 'operator', 'datetime', 'properattribute', 'datetime', 'relationshipsupport', 'filteringhappens', 'comparison', 'filter', 'operator', 'datetimes', 'operator', 'unsupported', 'expressioncontext', 'completelyvirtual', 'attribute', 'simple', 'provideoperator', 'subsetfilter', 'miqexpressionbetter', 'resultmanageiq', 'issue']",{'issue': 100}
"['security', 'tzumainnattribute']",{'Security': 100}
"['dialog', 'dropdown', 'service', 'dynaimc', 'support', 'orchestrationpatch', 'parameter', 'template', 'constraint', 'stack', 'method', 'contraryparameter', 'dialog', 'service', 'template', 'dynamic', 'orchestrationdropdowns', 'template', 'value', 'dropdowns', 'presenteddialog', 'static', 'value', 'creation', 'usingconstruct', 'parameter', 'provider', 'vmware', 'vcloud', 'ordernetwork', 'dropdowns', 'available', 'createtemplate', 'orchestrationgregor']",{'stack': 100}
"['hostname', 'serversense', 'routable', 'expose', 'hostnamepoint', 'accessmiqregion']",{'expose': 100}
"['bccfarequest', 'jrafanie', 'mergeduplication', 'limit', 'concurrency', 'engine', 'climate']",{'concurren': 90}
"['limit', 'concurrency', 'engine', 'duplicationpossible', 'issue', 'duplication', 'enginesubset', 'grade', 'smallreturnsupport', 'climate', 'suggestedcodeclimate']","{'concurren': 90, 'issue': 100}"
"['acfdef', 'ebcbb', 'mergerequest', 'vecerekinstance', 'button', 'localization', 'method', 'incorrect', 'class']",{'incorrect': 100}
"['instance', 'button', 'localization', 'method', 'incorrect', 'class']",{'incorrect': 100}
"['gmccullougservice', 'expose', 'method']",{'expose': 100}
"['mergerequest', 'changelog', 'mfeifer', 'mergechangelog', 'sprint']",{'Sprintf': 92}
"['template', 'controller', 'return', 'accordingwrong', 'quadicon', 'issue']",{'issue': 100}
"['mergerequest', 'chargeback', 'service', 'generation', 'yrudman', 'mergereport', 'chargeback', 'service', 'generation']",{'generation': 100}
"['service', 'expose']",{'expose': 100}
"['acfbbrequest', 'infra', 'stack', 'sseago', 'orchestrationstack', 'infra', 'orchestration']",{'stack': 100}
"['stack', 'infra', 'infra', 'development', 'stack', 'separatingconfiguration', 'orchestration', 'cloudinfra', 'class', 'short', 'limitation', 'modelfilter', 'configurationlonger', 'controller', 'separate', 'refactorinfra', 'cloud']",{'stack': 100}
"['crash', 'custom', 'method', 'supportplaceallows', 'block', 'dynamic', 'featuresupportexception', 'problem', 'occurs', 'detail', 'raisedirection', 'pluggableblock', 'custom', 'support', 'chanceadvise']",{'crash': 100}
"['button', 'review', 'response', 'behavior', 'incorrect']",{'incorrect': 100}
"['extra', 'angular', 'header', 'rememberrequest', 'level', 'issue', 'addressbeacuse', 'pretend', 'place', 'access']",{'issue': 100}
"['button', 'review', 'response', 'behavior', 'incorrect']",{'incorrect': 100}
"['undefined', 'issue', 'panspagetka', 'method', 'nilclass', 'downcase']",{'issue': 100}
"['rubocop', 'issuerubocop', 'issue']",{'issue': 100}
"['whitelist', 'blacklist', 'attribute', 'dtocollection', 'usingwhitelist', 'blacklist', 'attribute']",{'blacklist': 100}
"['bzweioperation', 'stack', 'azure', 'failure', 'orchestration']",{'stack': 100}
"['wrong', 'fatal', 'number', 'argumenterror', 'argumentfetch', 'modelblock', 'modelcollect']",{'fatal': 100}
"['styling', 'issue']",{'issue': 100}
"['delete', 'reconfigure', 'option', 'supportdelete', 'optionstore', 'detachedvirtualproperty', 'exact', 'expose']",{'expose': 100}
"['mergerequest', 'mergefilter', 'expose', 'group']",{'expose': 100}
"['mergerequest', 'hotfix', 'master', 'security', 'gtanzilloreque', 'check', 'filter']",{'Security': 100}
"['filter', 'expose', 'group']",{'expose': 100}
"['support', 'insensitive']",{'Sensitive': 90}
"['dbdffe', 'cddbcde', 'mergerequest', 'supernoodz', 'mergemodel', 'service', 'expose']",{'expose': 100}
"['eededrequest', 'issue', 'kremsercontroller', 'provider']",{'issue': 100}
"['button', 'issue', 'queue', 'address', 'method', 'order', 'miqajaxbutton']",{'issue': 100}
"['acfedb', 'fedbd', 'mergerequest', 'bzweiservice', 'instance', 'stack']",{'stack': 100}
"['instance', 'stack', 'service']",{'stack': 100}
"['bfeeaa', 'mergerequest', 'zeari', 'mergestatus', 'topology', 'condition', 'container', 'incorrect']",{'incorrect': 100}
"['mergerequest', 'ladas', 'mergerelation', 'expose']",{'expose': 100}
"['network', 'relation', 'exposenetwork', 'relation', 'expose']",{'expose': 100}
"['stack', 'expose', 'relation', 'stack', 'expose', 'relation', 'orchestration']","{'stack': 100, 'expose': 100}"
"['mergerequest', 'gildub', 'security', 'networkbackend', 'group', 'security']",{'Security': 100}
"['eabedrequest', 'kataria', 'bootstrap', 'issue']",{'issue': 100}
"['model', 'service', 'expose']",{'expose': 100}
"['automate', 'group', 'expose', 'manageiq', 'commitmulti', 'automation', 'group']",{'expose': 100}
"['bootstrap', 'issue', 'properlyinitialize', 'bootstarp']",{'issue': 100}
"['password', 'userid', 'issue']",{'issue': 100}
"['length', 'input']",{'length': 100}
"['length', 'input']",{'length': 100}
"['password', 'userid', 'issue']",{'issue': 100}
"['mergerequest', 'mergeservice', 'expose']",{'expose': 100}
"['rubocop', 'issue']",{'issue': 100}
"['status', 'topology', 'condition', 'container', 'incorrect']",{'incorrect': 100}
"['service', 'expose']",{'expose': 100}
"['mergerequest', 'changelog', 'mfeifer', 'mergechangelog', 'sprint']",{'Sprintf': 92}
"['cache', 'problem', 'consistency', 'taggingstate', 'concurrent', 'refreshcategory', 'labeldifferent', 'formulation', 'rewritesince']",{'concurrent': 100}
"['afffb', 'mergerequest', 'presenter', 'cynepcohahuerubocop', 'issue']",{'issue': 100}
"['privatemanageiq', 'provider', 'openstack', 'cloudmanagersolves', 'issue', 'public', 'method']",{'issue': 100}
"['syncroupower', 'service', 'expose', 'state']",{'expose': 100}
"['ecafd', 'cffbearequest', 'stack', 'summary', 'screen', 'orchestration']",{'stack': 100}
"['styling', 'stack', 'summary', 'screen', 'orchestration']",{'stack': 100}
"['separate', 'chooser', 'isolate', 'support', 'widgetfilestyle', 'incorrect', 'class', 'lifestyle']",{'incorrect': 100}
"['support', 'insensitive']",{'Sensitive': 90}
"['mergerequest', 'report', 'chargeback', 'service', 'yrudman', 'mergereport', 'chargeback', 'service', 'generation']",{'generation': 100}
"['acdbbb', 'mergerequest', 'mergealert', 'issue']",{'issue': 100}
"['controller', 'dialog', 'serviceinclude', 'subcollectionsrubocop', 'issue']",{'issue': 100}
"['eclarizioerror', 'dialog', 'service', 'import', 'implicit', 'integer', 'string', 'conversion']",{'integer': 100}
"['situation', 'threadperformance', 'general', 'readability', 'worthmanageiq', 'thread']",{'thread': 100}
"['jerryksuperblock', 'length', 'directory']",{'length': 100}
"['permission', 'display', 'element', 'control', 'number', 'access']",{'permission': 100}
"['expose', 'method']",{'expose': 100}
"['mergerequest', 'aparnakarve', 'mergeprotocol', 'default', 'security']",{'Security': 100}
"['rubocop', 'issue']",{'issue': 100}
"['fccce', 'mergerequest', 'mergealert', 'issue']",{'issue': 100}
"['superblock', 'length', 'directorysuperblock', 'filesystementry', 'fieldlength', 'increment', 'extra', 'obviouslysuperblock']",{'length': 100}
"['manageiq', 'inssue']",{'issue': 91}
"['downcase', 'flavor', 'azuremanageiq', 'issue']",{'issue': 100}
"['protocol', 'default', 'securityvalidation', 'security', 'ensure', 'accountscvmm', 'protocol']",{'Security': 100}
"['buttoncenter', 'state', 'button', 'issue', 'screen', 'manageiq', 'ccabfcbfbddaf', 'update']",{'issue': 100}
"['report', 'field', 'chargebackrubobop', 'issue']",{'issue': 100}
"['ansibletower', 'methodgenerate', 'inherits', 'stack', 'provider', 'method', 'short', 'orchestration']",{'stack': 100}
"['aaafc', 'mergerequest', 'issue', 'chart', 'panspagetka', 'clickinteraction', 'chart']",{'issue': 100}
"['mergerequest', 'presenter', 'cynepcohahuerubocop', 'issue']",{'issue': 100}
"['variable', 'properlyheight', 'renderingplain', 'wholelonger', 'functionalitymanageiq', 'issue']",{'issue': 100}
"['rubocop', 'issue']",{'issue': 100}
"['fbfecc', 'mergerequest', 'sierra', 'chrisarcand', 'phantomjsrestriction', 'jasmine', 'sierra', 'issue']",{'issue': 100}
"['option', 'connection', 'option', 'winrmchange', 'actual', 'issue', 'addition', 'caughtoption']",{'issue': 100}
"['restriction', 'jasmine', 'sierra', 'issue', 'phantomjsdependency', 'restriction', 'jasminesierra', 'macos']",{'issue': 100}
"['expose', 'collectionexpose', 'collection']",{'expose': 100}
"['timeline', 'statement', 'issue']",{'issue': 100}
"['reloadtoolbars', 'empty', 'array', 'explorer', 'updategenereates', 'empty', 'check', 'length', 'touchedisobject', 'compatibility', 'catch', 'fixme', 'exists', 'backward']",{'length': 100}
"['mergerequest', 'changelog', 'mfeifer', 'mergechangelog', 'sprint', 'update']",{'Sprintf': 92}
"['fdbebrequest', 'utilization', 'chart', 'panspagetka', 'mergeutilization', 'chart', 'optimize', 'issue']",{'issue': 100}
"['utilization', 'chart', 'optimize', 'issue']",{'issue': 100}
"['network', 'provider', 'angularcancel', 'configuration', 'buttoncontroller', 'modelnetwork', 'provider', 'updatereplacedrspeccouple', 'issue']",{'issue': 100}
"['configurationguide', 'manageiq', 'support', 'codeclimatecontainer', 'security', 'environmentcodeclimate', 'issuecodeclimate', 'rubocop', 'issue']","{'Security': 100, 'issue': 100}"
"['bzweitemplate', 'stack', 'reconnect', 'orchestration']",{'stack': 100}
"['template', 'stack', 'reconnect', 'orchestration']",{'stack': 100}
"['relation', 'expose', 'managerrelation', 'expose', 'manager']",{'expose': 100}
"['collection', 'objectcollection', 'contains', 'collectionpossible', 'dependency', 'dtocollectionprovides', 'collection', 'objectprovidesstore', 'making', 'collectionfactory', 'collection', 'object', 'providesstandard', 'expose', 'collection', 'array']",{'expose': 100}
"['changelog', 'sprint', 'updatereview', 'inclusionslide', 'updateedits']",{'Sprintf': 92}
"['recent', 'attribute', 'instance', 'value', 'accessors', 'reportingutilization', 'controller', 'issue', 'chart', 'processing', 'fixedbugzid']",{'issue': 100}
"['incorrect', 'number']",{'incorrect': 100}
"['issue', 'revertcommit', 'reverts']",{'issue': 100}
"['standarderrors', 'redundantmanageiq', 'issue']",{'issue': 100}
"['image', 'revertperformance', 'image', 'revertmanageiq', 'issue']",{'issue': 100}
"['edffcrequest', 'jzigmund', 'mergereport', 'calculation', 'length', 'textual']",{'length': 100}
