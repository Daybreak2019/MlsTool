message,fuzzy
"['incorrect', 'calendar', 'transition', 'gregorian', 'respect', 'julian']",{'incorrect': 100}
"['specifies', 'incorrect', 'context']",{'incorrect': 100}
"['script', 'permission']",{'permission': 100}
"['number', 'accuratereport', 'stack', 'insteadexpansion', 'thomas', 'heller']",{'stack': 100}
"['error', 'target', 'undefined', 'runtime', 'relevant', 'compile', 'default', 'problemoption', 'compiler', 'returnedstill', 'target', 'browser', 'issue', 'wouldbrowserhelper', 'target', 'returnstartquick']",{'issue': 100}
"['generation', 'output']",{'generation': 100}
"['incorrect', 'params', 'reject', 'variadic', 'arity']",{'incorrect': 100}
"['generation', 'source', 'output', 'revert']",{'generation': 100}
"['global', 'foreign', 'informationforeigncompilersingleton', 'library', 'issue', 'avoidbreak', 'convention', 'instance']",{'issue': 100}
"['predicate', 'inference', 'thread']",{'thread': 100}
"['compiler', 'crash', 'module']",{'crash': 100}
"['incorrect', 'documentation', 'compile', 'documentation', 'fixedserver', 'option', 'nonexistent']",{'incorrect': 100}
"['stack', 'overflow']","{'stack': 100, 'overflow': 100}"
"['optimization', 'stack', 'arity']",{'stack': 100}
"['satisfies', 'predicate', 'issue']",{'issue': 100}
"['usage', 'incorrect']",{'incorrect': 100}
"['overflow', 'variadic']",{'overflow': 100}
"['crash', 'defaulthelper']",{'crash': 100}
"['alength', 'string']",{'length': 92}
"['elide', 'output', 'strict', 'finalrequirejs', 'narrow', 'regular', 'expression', 'issue']",{'issue': 100}
"['priority', 'infers', 'incorrect', 'infer']",{'incorrect': 100}
"['place', 'outstandingsimple', 'longercould', 'transit', 'valueparser', 'address', 'repls', 'issue']",{'issue': 100}
"['current', 'thread', 'client']",{'thread': 100}
"['chrome', 'crash', 'stacktrace', 'directory', 'display', 'differentiate']",{'crash': 100}
"['cache', 'compiler', 'crash', 'parallel', 'compile']",{'crash': 100}
"['thread', 'connectionevery', 'sufficient', 'connection', 'currentlyrepls', 'browser']",{'thread': 100}
"['stack', 'synthetic']",{'stack': 100}
"['cross', 'cache', 'obvious', 'issue', 'platform']",{'issue': 100}
"['window', 'issue']",{'issue': 100}
"['concurrency', 'staticthread', 'servingstuff', 'default', 'outputexist']",{'concurren': 90}
"['thread', 'compiler', 'background', 'watcher']",{'thread': 100}
"['option', 'version', 'crash']",{'crash': 100}
"['relative', 'insensitive', 'issue', 'platformmanipulation', 'robustsubstitution', 'relative', 'stringsystem', 'issuewindow', 'string', 'equal', 'similarhandle', 'substitution', 'interfacespecific', 'platform']","{'Sensitive': 90, 'issue': 100}"
"['areduce', 'alength']",{'length': 92}
"['alength', 'string']",{'length': 92}
"['debug', 'issue', 'input']",{'issue': 100}
"['namespaces', 'macro', 'constructor', 'record', 'issue']",{'issue': 100}
"['target', 'module', 'expose']",{'expose': 100}
"['sequence', 'regression', 'overflow', 'xform', 'eduction']",{'overflow': 100}
"['issue', 'module', 'transitiverequire', 'failedprovides', 'possible', 'stale', 'source', 'seemsbuild', 'module', 'issue', 'immediateprovides']",{'issue': 100}
"['removestill', 'module', 'context', 'indexnecessary', 'entire', 'contextalways', 'compilation', 'dependencyfront', 'informationprocess', 'issue', 'refactoredscope']",{'issue': 100}
"['symbol', 'incorrect', 'syntax', 'quote', 'clojure']",{'incorrect': 100}
"['remainsbehave', 'clojurescript', 'inputcause', 'exceptionclojurecomplexity', 'commiterror', 'reader', 'extra', 'reader', 'source', 'character', 'introducesbound', 'original', 'buffer', 'transferredparen', 'extra', 'thing', 'unmatched', 'formedbuffer', 'paren', 'thingbehave', 'clojure']",{'buffer': 100}
"['possible', 'compiler', 'distinct', 'reason', 'various', 'duplicate', 'issue', 'input']",{'issue': 100}
"['regexp', 'protocol', 'undeclaredreverts', 'regression', 'improper', 'patchinternallocal', 'issue', 'local', 'creates', 'specify']","{'improper': 100, 'issue': 100}"
"['column', 'index', 'stack']",{'stack': 100}
"['option', 'module', 'closure', 'expose']",{'expose': 100}
"['process', 'module', 'issue']",{'issue': 100}
"['option', 'attempt', 'closure', 'integer', 'nonexistent', 'method', 'numeric']",{'integer': 100}
"['error', 'cache', 'analysis', 'transit', 'parallelwrite', 'mutex', 'coarse', 'transit', 'aroundcache', 'failure', 'analysis', 'sporadic', 'resultcache', 'analysis', 'project', 'parallel', 'largeishsafety', 'defect', 'transit', 'thread', 'suitable', 'patchsolution', 'proper', 'workaround']",{'thread': 100}
"['implicit', 'macro', 'loadingrecent', 'reproducible', 'issue', 'feedback', 'workaroundparity']",{'issue': 100}
"['inference', 'macro', 'issue', 'runtimerename', 'macro', 'check', 'renames']",{'issue': 100}
"['invalid', 'literalclojurescript', 'literal', 'expresssions', 'objectjavascript', 'invalid', 'causingobject', 'literal', 'context', 'object', 'expression', 'brace', 'opening', 'problemjavascript', 'object', 'literal', 'beginningstart', 'brace', 'javascript', 'interpretedpatch', 'literal', 'wrapping', 'object', 'issue']",{'issue': 100}
"['instrument', 'macro', 'issue']",{'issue': 100}
"['issue', 'subtlealiasmacro', 'possibility', 'check', 'resolution', 'tweak']",{'issue': 100}
"['preds', 'integer', 'precision', 'renameclojure']",{'integer': 100}
"['comment', 'helper', 'bootstrap', 'compilation', 'issue']",{'issue': 100}
"['instrumentation', 'session', 'interactivesolve', 'issue']",{'issue': 100}
"['finish', 'transit', 'potential', 'issue']",{'issue': 100}
"['issue', 'possibledistinguish', 'present', 'cache', 'compute', 'string', 'check']",{'issue': 100}
"['optimization', 'whitespaceparticular', 'possible', 'projectcause', 'appeardependency', 'issue', 'consequenceoutput', 'compiledspecify', 'macromacro', 'factor', 'logic', 'revisionanother']",{'issue': 100}
"['issue', 'wouldloggingreadability', 'minor', 'cleanup', 'comment']",{'issue': 100}
"['error', 'macro', 'incorrect', 'macro', 'numberinvalid', 'arity', 'argument', 'order', 'special', 'variableclojurescript', 'regular', 'approachcatch', 'arityexception', 'approacherror', 'generic', 'thrownmulti', 'check', 'arity', 'consultinvalid', 'arity', 'functionbootstrap']",{'incorrect': 100}
"['alias', 'display', 'referrednamespace', 'target', 'ratherresult', 'direct', 'issue', 'puttingnamespace', 'returnedresolve', 'underlyingissue', 'output']",{'issue': 100}
"['shutdown', 'thread']",{'thread': 100}
"['generation', 'optional', 'encode', 'function']",{'generation': 100}
"['revert', 'issue', 'murmur']",{'issue': 100}
"['minor', 'regression', 'compilationchange', 'compilerprevent', 'foward', 'declaration', 'wouldminor', 'issue', 'murmur']",{'issue': 100}
"['option', 'closure', 'expose']",{'expose': 100}
"['invalid', 'vector', 'contains', 'order', 'assert', 'issue', 'fnname']",{'issue': 100}
"['constant', 'issue', 'tablecache', 'analysis']",{'issue': 100}
"['handler', 'expose', 'warning', 'defaulthandler', 'overwrites', 'option', 'collection', 'default', 'handlerhandler', 'custom', 'warning', 'function', 'usefulnecessary', 'check']",{'expose': 100}
"['target', 'compilation', 'incremental', 'issue', 'nodejstarget', 'issue', 'target', 'recompilation', 'recompiledrecompile', 'namespaces']",{'issue': 100}
"['implementation', 'incorrect', 'alength', 'indexedseq', 'array', 'internalreason', 'inline', 'performance', 'indexedseq', 'sometimeshowever', 'array', 'validationcurrent', 'length', 'indexedseq', 'check', 'indexnever', 'negative', 'value']","{'incorrect': 100, 'length': 100}"
"['kovas', 'boguta', 'issue']",{'issue': 100}
"['stack', 'memoize', 'result', 'expressionstack', 'framestack', 'oftentimesoverflow']",{'stack': 100}
"['multi', 'cross', 'module', 'hinder', 'motion', 'definition', 'patch', 'level', 'functionnever', 'invoke', 'issue', 'emissionenhancement', 'macro', 'property', 'usefullevel', 'expression', 'approachcross', 'module', 'defeatsimple', 'methodavailable', 'informationbuild', 'module', 'enhancehelper', 'macro', 'directlymulti', 'variadic', 'arity', 'levelinclude', 'example']",{'issue': 100}
"['prevents', 'thread']",{'thread': 100}
"['multifn', 'expose', 'accessors', 'dispatch', 'defaul']",{'expose': 100}
"['error', 'print', 'trace', 'rebindings', 'stack']",{'stack': 100}
"['massive', 'logicbrowserdynamic', 'browser', 'statethread', 'explicit', 'insteadservice', 'global', 'custom', 'thread', 'executor', 'agent']",{'thread': 100}
"['upstreamcurrent', 'thread', 'classloader']",{'thread': 100}
"['error', 'deftype', 'incorrect', 'defrecord', 'message', 'definition', 'complexversion', 'eluard', 'julian', 'patch', 'includesconstructor']",{'incorrect': 100}
"['emission', 'incorrect', 'constant', 'table', 'logicemission', 'constant', 'table']",{'incorrect': 100}
"['wrong', 'cache', 'resource', 'issue', 'platformcache']",{'issue': 100}
"['stacktrace', 'support', 'function', 'stack', 'element', 'stacktraceprepend', 'startsmarter', 'stack']",{'stack': 100}
"['enable', 'websocketsclean', 'functionalitywebsocket', 'expose', 'someoneleverage']",{'expose': 100}
"['script', 'nashorn', 'frame', 'stackreport', 'source', 'support', 'javascript', 'nashorn', 'frame', 'stack', 'actualhappen', 'stackframes', 'applicable', 'exception']",{'stack': 100}
"['compiledasync', 'issue']",{'issue': 100}
"['connection', 'runningarbitrary', 'problematic', 'thread', 'previouslycreate', 'socket']",{'thread': 100}
"['switchtwice', 'issue', 'loadingprint', 'console']",{'issue': 100}
"['issue', 'summary', 'report']",{'issue': 100}
"['window', 'issue']",{'issue': 100}
"['addresswindow', 'issue', 'platform']",{'issue': 100}
"['stack', 'information']",{'stack': 100}
"['target', 'compile', 'nodejsenvironment', 'ireplenvoptions', 'protocolprovides', 'environment', 'default', 'additionalchange', 'issue', 'uncoveredchangeoption', 'unnecessary', 'coveredcompiler', 'defaultoption', 'macro']",{'issue': 100}
"['stacktraces', 'clojurescript', 'overrun', 'flush', 'thread', 'flush', 'thing', 'sleep']","{'overrun': 100, 'thread': 100}"
"['compile', 'default', 'staticversion', 'clojurescript', 'compiledavoids', 'version', 'unknown', 'issue', 'returnregex']",{'issue': 100}
"['monkey', 'overflow', 'stack', 'patch']","{'overflow': 100, 'stack': 100}"
"['repls', 'reload', 'monkey', 'patch', 'allowdifferent', 'issue']",{'issue': 100}
"['cache', 'option', 'analysis', 'thread', 'patchanalyze', 'breakoutwrite', 'analysis', 'cacheanalysis', 'compile', 'cache']",{'thread': 100}
"['expose', 'control']",{'expose': 100}
"['assert', 'thread', 'multimethodsquery', 'compilation', 'function', 'properlyenvironment']",{'thread': 100}
"['minification', 'closure', 'expose']",{'expose': 100}
"['integer', 'correctlychange', 'returnpattern', 'browser']",{'integer': 100}
"['generation', 'compilation', 'efficient', 'staticgeneration', 'exponentialunknown', 'function', 'nestinginvoke', 'involves', 'expression', 'unknown', 'arity', 'insteadlocal', 'google', 'closure', 'argument', 'generaterewrite']",{'generation': 100}
"['issue', 'safariimplementation', 'plain', 'polyfill', 'preamblecompilation']",{'issue': 100}
"['sequence', 'incorrect', 'behavior', 'multiplecollectionnexts', 'multistepperimplementation', 'hasnext', 'invokingxform', 'invalid', 'construction']",{'incorrect': 100}
"['lengthwriter', 'print', 'option', 'sequential', 'length']",{'length': 100}
"['implementation', 'incorrect']",{'incorrect': 100}
"['function', 'nodejspolite', 'moduleenvironment', 'clojurescript', 'expose']",{'expose': 100}
"['expose', 'google', 'compiler', 'closure', 'configuration', 'warning']",{'expose': 100}
"['print', 'length', 'support']",{'length': 100}
"['generation', 'switch', 'condp', 'multimethod', 'string', 'warning']",{'generation': 100}
"['large', 'overflow', 'stack', 'input']","{'overflow': 100, 'stack': 100}"
"['large', 'overflow', 'inputsequence', 'construction', 'resultlarge', 'overflow', 'input']",{'overflow': 100}
"['stack', 'overflowhelper', 'value', 'deftype', 'supportlazyseq']",{'stack': 100}
"['compilation', 'issue']",{'issue': 100}
"['issue', 'reference', 'scope', 'lexical', 'insideconstruct', 'field']",{'issue': 100}
"['array', 'optimize', 'incorrect']",{'incorrect': 100}
"['isnumber', 'number', 'relyingimplementation', 'macro', 'giveninput', 'length', 'string']",{'length': 100}
"['resolvedefprotocol', 'macro', 'issue', 'emitsresolve', 'dispatch', 'nativenormal', 'resolution', 'wouldsymbol', 'namespace', 'clearlyinterop', 'implementationsymbol']",{'issue': 100}
"['large', 'overflow', 'numerical', 'stackihash', 'modulo', 'implementation', 'number', 'floor']",{'overflow': 100}
"['incorrect', 'logic']",{'incorrect': 100}
"['encode', 'thread']",{'thread': 100}
"['clojure', 'issue']",{'issue': 100}
"['variable', 'analyzer', 'localshadow', 'potentiallyvector', 'longervector', 'shape', 'local', 'gthis', 'functionsymbol', 'deftype', 'params', 'expose', 'recur', 'frame', 'visible', 'shadoweduniform', 'metadatausage', 'gensym', 'source', 'eliminatesimpossible', 'state']",{'expose': 100}
"['expose', 'option', 'compiler', 'wrapper', 'output']",{'expose': 100}
"['integral', 'integer', 'expression', 'point']",{'integer': 100}
"['incorrect', 'metadata']",{'incorrect': 100}
"['symbol', 'format', 'behavior', 'incorrect']",{'incorrect': 100}
"['usage', 'alength', 'length']",{'length': 100}
"['reflection', 'supportchange', 'reflection', 'runtime', 'supportinclude', 'separation', 'smallserver', 'elementaddition', 'namespacessymbol', 'arbitrary', 'metadata', 'declaredaddition', 'supportuncommon', 'analyze', 'subtlecoercion', 'functionanalyze', 'source', 'functionreflection', 'source', 'supportpopulate', 'namespacesserver', 'element', 'supportregister', 'expose', 'simple', 'system', 'predicate', 'dispatch', 'handler', 'system', 'future', 'changeserver', 'register', 'handler', 'reflect', 'requestrelevant', 'query', 'namespaces', 'request', 'respondingpoint', 'macroexpansion', 'macro', 'simple', 'information']",{'expose': 100}
"['variadic', 'expose']",{'expose': 100}
"['simple', 'undefined', 'check', 'value', 'analyze', 'issue']",{'issue': 100}
"['incorrect', 'assoc', 'vector']",{'incorrect': 100}
