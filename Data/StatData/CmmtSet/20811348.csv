message,fuzzy
"['issue', 'cloud', 'experience', 'launch', 'config', 'processing', 'config', 'process', 'legacy']",{'issue': 100}
"['security', 'policy']",{'Security': 100}
"['issue', 'certificate', 'instance', 'expiryupdateissue', 'cloud', 'config']",{'issue': 100}
"['issue', 'certificate', 'instance', 'expiryupdateissue', 'cloud', 'config']",{'issue': 100}
"['issue', 'sclient', 'immutable', 'client', 'builder']",{'issue': 100}
"['bindhandler', 'registeredbindhandler', 'cipher', 'property', 'cloud', 'remote', 'register', 'spring', 'contextbindhandler', 'bootstrap', 'contextconditional', 'keyproperties']",{'cipher': 100}
"['issue', 'frederick', 'cloud', 'config', 'document', 'detail', 'spring', 'scott']",{'issue': 100}
"['issue', 'frederick', 'cloud', 'config', 'document', 'detail', 'feedback', 'frederick', 'clarification', 'scott']",{'issue': 100}
"['issue', 'update', 'template']",{'issue': 100}
"['returnallows', 'decryption']",{'encryption': 90}
"['environment', 'repositoryenvironment', 'basedcloud', 'issue', 'spring', 'vanilla', 'testedseveral', 'happy', 'feedback', 'unknown', 'thing', 'addition', 'implementation', 'availabledependency', 'unsure', 'version', 'default', 'provider', 'client', 'server', 'config', 'suffix', 'account', 'repos', 'happy', 'single', 'possibility', 'property', 'thinkhandle', 'problem', 'implementation', 'exceptional', 'tryingseveral', 'factoryaddeddependency', 'command', 'compile', 'cloud', 'great', 'parent', 'intellij', 'serveral', 'spring', 'contentdenote', 'label', 'directorydeliberate', 'parser', 'usingbackend', 'documentation', 'allowconfig', 'consistent', 'propertyminor']",{'issue': 100}
"['retry', 'value', 'incorrect', 'documentedorder', 'value', 'activate']",{'incorrect': 100}
"['encryption', 'exception', 'customencryption', 'exception', 'custom']",{'encryption': 100}
"['environment', 'repository', 'update', 'compositecloud', 'issue', 'spring', 'config']",{'issue': 100}
"['webhook', 'handler', 'giteepopular', 'servercloud', 'issue', 'spring', 'config']",{'issue': 100}
"['encryption', 'string', 'bracereproduce', 'brace', 'contains', 'string', 'brace']",{'encryption': 100}
"['quote', 'single', 'patterncloud', 'issue', 'spring', 'config']",{'issue': 100}
"['optional', 'server', 'bootstrap', 'config', 'decryption']",{'encryption': 90}
"['incorrect', 'return', 'number', 'request', 'version']",{'incorrect': 100}
"['incorrect', 'return', 'number', 'request', 'version']",{'incorrect': 100}
"['incorrect', 'return', 'number', 'request', 'version']",{'incorrect': 100}
"['request', 'parameterplaceholder', 'support', 'property', 'sidecar', 'endpointcloud', 'issue', 'spring', 'netflix']",{'issue': 100}
"['generate', 'readmecloud', 'issue']",{'issue': 100}
"['decryption', 'invalid']",{'encryption': 90}
"['findone', 'ensure', 'getlocationsissue', 'concurrent', 'accesssmell']",{'concurrent': 100}
"['encryption', 'clarification']",{'encryption': 100}
"['server', 'bootstrap', 'configuration', 'symmetricreason', 'bootstrap', 'encrypotor', 'contextsupport', 'encrypt', 'encryption', 'decrypt', 'withoutchange', 'current', 'property', 'contextlistener', 'bootstrap', 'encryptor', 'createcloud', 'spring']",{'encryption': 100}
"['encryption', 'repository', 'controller', 'factor']",{'encryption': 100}
"['httpheaders', 'method', 'sensitive', 'header']",{'Sensitive': 100}
"['property', 'encryption', 'value', 'update', 'content']",{'encryption': 100}
"['error', 'concurrent', 'modification']",{'concurrent': 100}
"['security', 'revert', 'springreverts']",{'Security': 100}
"['security', 'optional', 'spring']",{'Security': 100}
"['security', 'spring']",{'Security': 100}
"['decryption', 'server']",{'encryption': 90}
"['abstraction', 'introduceencryption', 'decryption', 'customizationchange']",{'encryption': 90}
"['quote', 'cipher']",{'cipher': 100}
"['error', 'concurrent', 'modification']",{'concurrent': 100}
"['encryption', 'clarify', 'requirement', 'client']",{'encryption': 100}
"['property', 'bootstrap', 'initializers', 'order', 'decryptedenvironment', 'bootstrap', 'property', 'parent', 'order', 'contexthigher', 'order', 'initializer', 'decryption', 'possibledecrypt', 'property']",{'encryption': 90}
"['encryption', 'configuration']",{'encryption': 100}
"['module', 'security', 'update']",{'Security': 100}
"['error', 'concurrency']",{'concurren': 90}
"['issue', 'integration', 'class']",{'issue': 100}
