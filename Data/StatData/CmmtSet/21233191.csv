message,fuzzy
"['issue', 'commitcheck']",{'issue': 100}
"['clarifydefault', 'crypto', 'implicit', 'documenthonest', 'cloudflaresuggestion', 'resolver']",{'crypto': 100}
"['exportrequire', 'exportbrowser', 'brave', 'daemonexport', 'import', 'stoppingbrowser', 'brave', 'issue']",{'issue': 100}
"['expose', 'gateway', 'exportready', 'exportexpose', 'subcommandslicenseevans']",{'expose': 100}
"['indirectlyaddress', 'issue']",{'issue': 100}
"['deprecate', 'chorecontextissuecomment', 'issue']",{'issue': 100}
"['mergepolicy', 'security', 'requestdocument', 'security', 'policy']",{'Security': 100}
"['document', 'security', 'release', 'securitysecurity']",{'Security': 100}
"['requestsharness', 'issue']",{'issue': 100}
"['clearcushion', 'period', 'local', 'gateway', 'transition', 'clearlocalhost', 'securitygateway', 'implementation', 'subdomain', 'finalcooky', 'firefox', 'issueclose', 'shipyard', 'companion', 'issue']",{'issue': 100}
"['requestgithub', 'template', 'issue', 'documentation', 'update']",{'issue': 100}
"['github', 'template', 'issue', 'documentation', 'updatedocumentation']",{'issue': 100}
"['length', 'request', 'proxy']",{'length': 100}
"['readme', 'rotation', 'dockerreadme', 'rotation', 'dockerissuecomment', 'issue']",{'issue': 100}
"['improvement', 'directorychange', 'improvement', 'directory', 'prepareindex', 'issue', 'implementedindex', 'update', 'structsgatewaydirectoryitemdirectorybreadcrumb']",{'issue': 100}
"['mergepatch', 'rubenkelevra', 'requestsecurity', 'email', 'github', 'issue', 'address']",{'issue': 100}
"['supportdefault', 'variantsharness', 'publish', 'subdomain', 'gateway', 'updatedefault', 'identity', 'length', 'config', 'definedseparate', 'defaultconfig', 'update', 'maymounkov', 'petarm']",{'length': 100}
"['security', 'email', 'github', 'issue', 'address']","{'Security': 100, 'issue': 100}"
"['config', 'transport', 'sectiondisable', 'security', 'transport', 'muxer', 'especiallytransport']",{'Security': 100}
"['important', 'releasetimeout', 'minute', 'backporttimer', 'clemente', 'transport', 'lucas', 'issuechangelogtimeout', 'master', 'patchlibppsubscribes', 'function', 'event', 'context', 'query', 'libpplibppevent', 'optimize', 'query', 'libppevent', 'channel', 'libpphelper', 'libpp', 'routingevent', 'libppclemente', 'lucasspace', 'reset', 'number', 'packetdeadlinetimer', 'declarationdeadline', 'timererror', 'buffer', 'sessionreturn', 'session', 'timer']",{'buffer': 100}
"['system', 'restart', 'crash', 'enableshort', 'optional', 'paramters']",{'crash': 100}
"['update', 'choreprovider', 'request', 'issue']",{'issue': 100}
"['update', 'choreprovider', 'request', 'issue']",{'issue': 100}
"['requestfirst', 'message', 'opening', 'issue']",{'issue': 100}
"['requestadditional', 'documentation', 'screen', 'issue']",{'issue': 100}
"['additional', 'documentation', 'screen', 'issue']",{'issue': 100}
"['request', 'template', 'removetemplate', 'update', 'issue']",{'issue': 100}
"['template', 'issue']",{'issue': 100}
"['extra', 'issue']",{'issue': 100}
"['cbabff', 'mergeduplicate', 'block', 'requestduplicate', 'bitswap', 'block', 'issue']",{'issue': 100}
"['generation', 'address']",{'generation': 100}
"['error', 'incorrect', 'address']",{'incorrect': 100}
"['deadlock', 'potential']",{'deadlock': 100}
"['original', 'issue']",{'issue': 100}
"['defaultdefault', 'switch', 'security']",{'Security': 100}
"['service', 'autonat', 'issue']",{'issue': 100}
"['encodingintroduces', 'filename', 'behaviour', 'coherentdifferent', 'insensitive', 'sensitive', 'platform', 'acrosscharacter', 'moreoverspecial', 'restriction', 'original', 'characterlicenseuhlir']",{'Sensitive': 100}
"['sensitive', 'concurrency']","{'Sensitive': 100, 'concurren': 90}"
"['expiredreport', 'security']",{'Security': 100}
"['update', 'choreusage', 'issue']",{'issue': 100}
"['libpp', 'update', 'chore', 'swarmsomehow', 'concurrent', 'access', 'issue']","{'concurrent': 100, 'issue': 100}"
"['goflags', 'instruct', 'buildgoflags', 'enablegotagsissuecomment', 'issue']",{'issue': 100}
"['searchinglibpp', 'issue']",{'issue': 100}
"['cache', 'publishissuecomment', 'issue']",{'issue': 100}
"['searchinglibpp', 'issue']",{'issue': 100}
"['permission', 'dockerpermission', 'inherit', 'dependmachine']",{'permission': 100}
"['default', 'docker', 'openssl']",{'OpenSSL': 100}
"['gateway', 'length']",{'length': 100}
"['documentation', 'switch', 'update', 'multiaddrlibpp', 'issue']",{'issue': 100}
"['eaademerge', 'requestcross', 'document', 'readme', 'support', 'openssl']",{'OpenSSL': 100}
"['cross', 'document', 'readme', 'support', 'openssl']",{'OpenSSL': 100}
"['cache', 'publishissuecomment', 'issue']",{'issue': 100}
"['abffba', 'mergeissue', 'release', 'release', 'issue']",{'issue': 100}
"['release', 'issuecould', 'clarifies', 'fuzzy', 'template', 'communicates', 'release', 'issue', 'shipping', 'expectation', 'planning']",{'issue': 100}
"['discussion', 'issue', 'openbsd']",{'issue': 100}
"['switch', 'cachepotential', 'patent', 'issue']",{'issue': 100}
"['github', 'security']",{'Security': 100}
"['github', 'security']",{'Security': 100}
"['mergemerge', 'requestrecommend', 'system', 'readme', 'minimum', 'openssl', 'requirement', 'update']",{'OpenSSL': 100}
"['system', 'readme', 'minimum', 'openssl', 'requirement', 'update']",{'OpenSSL': 100}
"['requestrelease', 'project', 'template', 'issue']",{'issue': 100}
"['release', 'project', 'template', 'issue']",{'issue': 100}
"['mergemerge', 'request', 'template', 'issue', 'andrewtemplate', 'label', 'automatic', 'issue']",{'issue': 100}
"['indirect', 'incorect']",{'incorrect': 94}
"['concurrent', 'access']",{'concurrent': 100}
"['muxerlibpp', 'issue']",{'issue': 100}
"['generation', 'mkreleaselog', 'dependencylicensesztandera', 'jakub']",{'generation': 100}
"['cceaa', 'mergetemplate', 'issue', 'requesttemplate', 'issue']",{'issue': 100}
"['mergetemplate', 'issue', 'multiple', 'question', 'github', 'template', 'issue']",{'issue': 100}
"['mergemerge', 'requestbunch', 'issue']",{'issue': 100}
"['mergemerge', 'requestcoreapi', 'thread', 'datastore', 'everywhere']",{'thread': 100}
"['update', 'apache', 'licensefollow', 'practice', 'commits', 'research', 'source', 'license', 'apache', 'series', 'updatemajor', 'benefitlargest', 'interacts', 'number', 'people', 'legal', 'sense', 'patent', 'license', 'source', 'vulnerable', 'infringement', 'concern', 'community', 'project', 'separate', 'license', 'grant', 'apache', 'address', 'sinceincompatible', 'project', 'license', 'linux', 'software', 'scheme', 'apache', 'thing', 'availableissue', 'explicit', 'contributor', 'consent']",{'vulnerable': 100}
"['coreapi', 'thread', 'datastore', 'everywherelibpp', 'issuelicenseallen']",{'thread': 100}
"['mergemerge', 'requestwrite', 'websocket', 'concurrent', 'attempt']",{'concurrent': 100}
"['websocket', 'concurrent', 'attemptreproduce', 'locallymightlicenseallen']",{'concurrent': 100}
"['expose', 'gateway', 'versionlicenseallen']",{'expose': 100}
"['aedba', 'mergegolangci', 'requestgolangci', 'bunch', 'issue', 'chore']",{'issue': 100}
"['deadlock', 'potentialeventtriggerabortoutput', 'delete', 'block', 'channelstill', 'practice', 'reallycould', 'relatedlicenseallen']",{'deadlock': 100}
"['mergethread', 'datastore', 'requestmemory', 'thread', 'datastore']",{'thread': 100}
"['memory', 'thread', 'datastorelicenseallen']",{'thread': 100}
"['deadlock', 'provider', 'queue', 'address', 'updatelicenseingenito']",{'deadlock': 100}
"['template', 'request', 'issueguide', 'github', 'template', 'issue']",{'issue': 100}
"['actionable', 'description', 'shorter', 'issue', 'updatechange', 'steven']",{'issue': 100}
"['readable', 'condense', 'template', 'issue']",{'issue': 100}
"['eafedstuff', 'command', 'requestbunch', 'command', 'issue']",{'issue': 100}
"['pubsub', 'updatepubsub', 'router', 'gossipsub', 'critical', 'issue', 'performancelicenseallen']",{'issue': 100}
"['security', 'stream', 'changelog', 'issue', 'invalid', 'return', 'neverlicenseallen']","{'Security': 100, 'issue': 100}"
"['mergebuffer', 'update', 'requestupdate', 'buffer']",{'buffer': 100}
"['update', 'bufferallocate', 'neededinterface', 'noticedyamux', 'buffer', 'sinceallocation', 'showinglicenseallen']",{'buffer': 100}
"['stuff', 'updatefriend', 'getsize', 'datastoreallocation', 'badger', 'fewermplex', 'packet', 'fewermultiple', 'single', 'allocation', 'bitswap', 'blockreplace', 'msgio', 'yamux', 'buffer', 'streammemory', 'reducesecio', 'libpp', 'memory', 'peerstore', 'allocation', 'libpplicenseallen']",{'buffer': 100}
"['mergeissue', 'overbool', 'requestunixfs', 'issue']",{'issue': 100}
"['ceffac', 'mergeissue', 'overbool', 'requestavoid', 'unixfs', 'issue']",{'issue': 100}
"['registry', 'thread', 'saferlicensemagikk', 'magiera']",{'thread': 100}
"['getapiclient', 'issue']",{'issue': 100}
"['helper', 'parallel', 'provider', 'issue', 'updatehelper', 'libpp', 'routinglicenseallen']",{'issue': 100}
"['fsnode', 'structure', 'pbdagreaderreference', 'explicit', 'layer', 'buffer', 'focus', 'unixfs', 'protocol', 'avoidformat', 'layer', 'object', 'serializeabstract', 'structurereplace', 'field', 'modify', 'cache', 'pbdagreaderwould', 'present', 'field', 'protonode', 'normallycontent', 'cache', 'protonode', 'advantage', 'format', 'focus', 'unixfs', 'examplefavor', 'layer', 'clearnumchildrenblocksize', 'addedlicenseschomatis']",{'buffer': 100}
"['acbcb', 'mergemerge', 'republisher', 'robust', 'issue']",{'issue': 100}
"['crypto', 'updatecryptolicenseallen']",{'crypto': 100}
"['insecure', 'bitswap', 'bitswap', 'securityobject', 'gettingputtingsolution', 'object', 'requestingsolution', 'proper', 'creationcleanerlicensesztandera', 'jakub']",{'insecure': 100}
"['expose', 'config', 'badgerds', 'vlogfilesizelicensemagikk', 'magiera']",{'expose': 100}
"['mergemerge', 'requestimplement', 'length']",{'length': 100}
"['abecedc', 'mergerepub', 'requestvarious', 'issue']",{'issue': 100}
"['deadlock', 'bitswap', 'sessiondeadlock', 'channel', 'defensivelydeadlock', 'showinglicenseallen']",{'deadlock': 100}
"['concurrent', 'command', 'seterrorpotential']",{'concurrent': 100}
"['concurrent', 'command', 'seterrorsegfaultbelieve', 'buffer', 'routine', 'responselicenseallen']","{'concurrent': 100, 'buffer': 100}"
"['issue', 'deletelicensejeromy', 'jeromyj']",{'issue': 100}
"['session', 'request', 'canceldeadlock', 'buffer', 'response', 'channel']",{'buffer': 100}
"['buffer', 'response', 'channellicensejeromy', 'jeromyj']",{'buffer': 100}
"['mergeversion', 'issue']",{'issue': 100}
"['mergeaccept', 'buffer', 'requestyamux', 'buffer']",{'buffer': 100}
"['yamux', 'buffer', 'acceptamount', 'memory']",{'buffer': 100}
"['preallocate', 'batch', 'buffer', 'blockbuffer']",{'buffer': 100}
"['issue', 'freebsd', 'buildlicensemagikk', 'magiera']",{'issue': 100}
"['crash', 'definedlicensekevin']",{'crash': 100}
"['expose', 'range', 'content', 'gateway', 'headerrange', 'content', 'necessary', 'header', 'extractingaudio', 'vandevelde', 'steven']",{'expose': 100}
"['issuecomment', 'issue']",{'issue': 100}
"['block', 'issue', 'receivinglicensejeromy', 'jeromyj']",{'issue': 100}
"['effbc', 'mergemerge', 'requestrename', 'sharness', 'issue']",{'issue': 100}
"['expose', 'listener', 'larsg', 'gierth']",{'expose': 100}
"['master', 'larsgeirth', 'issue', 'removingplease', 'comment', 'process', 'review', 'familiar', 'release', 'modify']",{'issue': 100}
"['issue', 'gtlds', 'newerlicensesztandera', 'jakub']",{'issue': 100}
"['severity', 'template', 'priority', 'issue']",{'issue': 100}
"['bdadcf', 'mergemerge', 'requesttravis', 'issue', 'update']",{'issue': 100}
"['issue', 'updatelicensejeromy', 'jeromyj']",{'issue': 100}
"['mergekpcyrd', 'docker', 'permission', 'docker']",{'permission': 100}
"['mergebatch', 'limit', 'requestbatch', 'object', 'number', 'limit', 'issue']",{'issue': 100}
"['permission', 'dockerinside', 'specific', 'patch', 'permission', 'stuff']",{'permission': 100}
"['number', 'message', 'revert', 'issue', 'osxfusereverts']",{'issue': 100}
"['minor', 'issue']",{'issue': 100}
"['mergefetch', 'concurrency', 'request', 'graphfetch', 'concurrency', 'merkledag', 'limit', 'graph']",{'concurren': 90}
"['fetch', 'concurrency', 'merkledag', 'limit', 'graphlicensejeromy']",{'concurren': 90}
"['daeeaf', 'mergemerge', 'requestasset', 'security']",{'Security': 100}
"['deadlock', 'libpp', 'update', 'swarmlicensejeromy']",{'deadlock': 100}
"['requestentire', 'input', 'buffer']",{'buffer': 100}
"['expose', 'refactor', 'functionality', 'argument', 'parsinglicensekevin']",{'expose': 100}
"['request', 'issue', 'featureguide']",{'issue': 100}
"['commentscript', 'installation', 'violates', 'principlediscussionlicensekulla']",{'violate': 93}
"['error', 'scriptproposal', 'permission', 'comment', 'implementissuecommentlicensekulla']",{'permission': 100}
"['fatal', 'abort', 'block', 'error', 'channellicensekevin']",{'fatal': 100}
"['bfceeb', 'mergedetect', 'issue', 'requestdetect', 'diagnose']",{'issue': 100}
"['mergeallkeyschan', 'kevina', 'requestincrease', 'channel', 'buffer']",{'buffer': 100}
"['cbbcc', 'mergepatch', 'chriscool', 'requestguide', 'update', 'issue']",{'issue': 100}
"['mergetemplate', 'issue']",{'issue': 100}
"['github', 'request', 'issue']",{'issue': 100}
"['buffer', 'errorlicensejeromy']",{'buffer': 100}
"['hasblock', 'doubleget', 'issue', 'causedlicensejeromy']",{'issue': 100}
"['pfistadeletion', 'check', 'errorlicensepfister', 'pfistaonline', 'checklicensepfister', 'update', 'errorlicensepfister', 'michael', 'pfistadaemon', 'command', 'prevents', 'runninglicensepfister', 'michael', 'pfistaoutput', 'newline', 'message', 'commandlicensepfister', 'superfluous', 'errorlicensepfister', 'michael', 'pfistasharness', 'commandlicensepfister', 'michael', 'pfistaexist', 'warning', 'ignorelicensepfister', 'message', 'outputlicensepfister', 'michael', 'pfistastatement', 'michael', 'pfistasharness', 'updatelicensepfister', 'michael', 'pfistaprintfnewline', 'parse', 'error', 'multiaddr', 'address', 'tryingnewline', 'integer', 'michael', 'pfistaupdatinglicensepfister', 'michael', 'pfista']",{'integer': 100}
"['crypto', 'switch', 'libpplicensejeromy', 'jeromyj']",{'crypto': 100}
"['incorrect', 'permutation', 'command', 'preliminary', 'parseoptscommand', 'gardner', 'thomas']",{'incorrect': 100}
"['issue', 'libpp', 'update']",{'issue': 100}
"['concurrency', 'option', 'simplifylicensejeromy', 'jeromyj']",{'concurren': 90}
"['range', 'length', 'error']",{'length': 100}
"['range', 'length', 'errorlicensewhitmore', 'noffle', 'stephen']",{'length': 100}
"['fbcce', 'mergemerge', 'requesttagline', 'issue']",{'issue': 100}
"['fsrepo', 'detect', 'safety', 'crash', 'absolutefsync', 'guaranteelicensevirtanen']",{'crash': 100}
"['doublewrappingstream', 'msgio', 'secureconn', 'muxersignal', 'length', 'varint', 'actuallylicensejeromy', 'jeromyj']",{'length': 100}
"['caller', 'underflow', 'large', 'refcountconsume', 'merkledag', 'gigabytelicensejeromy', 'jeromyj']",{'underflow': 100}
"['mergemerge', 'crypto', 'request']",{'crypto': 100}
"['cdcfd', 'mergefeature', 'security']",{'Security': 100}
"['issue', 'movedlicenserichard', 'littauer']",{'issue': 100}
"['concurrent', 'limitlicensejeromy', 'jeromyj']",{'concurrent': 100}
"['mergepatch', 'sroerick', 'permission', 'docker']",{'permission': 100}
"['permission', 'docker', 'instructioninitial', 'permission', 'prevents', 'security', 'potential', 'permission', 'limitlicensesweeney']","{'permission': 100, 'Security': 100}"
"['permission', 'docker']",{'permission': 100}
"['commitprocess', 'others', 'enoughcleaner', 'synch', 'prone', 'errorincorrect', 'logic', 'simplewrites', 'archive', 'synch', 'reader', 'dagarchivechange', 'behavior', 'commitsingle', 'behaviorchange', 'overwriteseems', 'intuitive', 'availableperhaps', 'reproduce', 'seemslicensebatiz']",{'synch': 100}
"['handler', 'referer', 'respectshort', 'request', 'handler', 'circuit', 'commitheader', 'handlershort', 'circuithandler', 'referer', 'security', 'respectdiscussion', 'issuelicensebatiz']",{'Security': 100}
"['expose', 'internalinternallicensebatiz']",{'expose': 100}
"['sharness', 'daemondaemonunrestrictedbreakage', 'encryption', 'transport', 'knownlicensebatiz']",{'encryption': 100}
"['daemon', 'secio', 'optionoption', 'commitprotocol', 'implementation', 'achievingprotocol', 'learning', 'worstsnoop', 'networkintranet', 'privateconsider', 'leastseverityeither', 'encryption', 'public', 'anybodylicensebatiz']",{'encryption': 100}
"['stringification', 'earlieroutput', 'enumeration', 'integer', 'merkle', 'object', 'transitionrevisit', 'probablycollision', 'prone', 'human', 'readablelicensetrevor']",{'integer': 100}
"['repro', 'issue']",{'issue': 100}
"['master', 'godeps', 'updatejackpal', 'gatewaychangedbaecbdceeabbbfd', 'sirupsen', 'efbadbbebceb', 'logrusdseth', 'alexandercolor', 'window', 'terminalantoine', 'grondindefault', 'stderrdotan', 'nahumexample', 'syslog', 'validmadhavfatalln', 'level', 'irrespective', 'fatalffunction', 'fatal', 'logger', 'behavior', 'entry', 'matchbaird', 'matthewdocumentation', 'textformatter', 'properphilip', 'raygunlogrus', 'raygun', 'squirkle', 'repositiroylogrus', 'master', 'sirupsen', 'branchreference', 'raygun', 'table', 'removingeskildsen', 'simonaybabtme', 'stderr', 'requestmaster', 'xyproto', 'requestpatch', 'mattbaird', 'requestmaster', 'squirkle', 'request', 'evalphobia', 'featurepossible', 'formatterversionmaster', 'mapuri', 'requestversionmaster', 'mapuri', 'requestversionpatch', 'jondot', 'sentrycenkalti', 'backoff', 'eeceabdceecacheggaaaandrew', 'sutherlandchainable', 'return', 'channel', 'triggerfinish', 'panic', 'multiplesmirnov', 'andreyfrederick', 'kautzsemantic', 'runninggomesvalue', 'currentsergey', 'cherepanovsupport', 'netbsdmaster', 'smira', 'requestpatch', 'nixxquality', 'requestforupstream', 'drewis', 'master', 'request', 'sistemasvalue', 'speed', 'object', 'returnnixxqualitycrowdmob', 'aabecfcbf', 'afefccafaddedc', 'goamzbustany', 'adrienretrystest', 'support', 'multidelmoeenymerge', 'retry', 'abustany', 'request', 'errormaster', 'richarddbarnett', 'requestmerge', 'abustany', 'request', 'multidel', 'stestmaster', 'andreykostov', 'requestkostov', 'andreysignedmoore', 'matthewupdaterichard', 'barnettkinesis', 'endpointcrowdmob', 'aabecfcbf', 'afefccafaddedc', 'goamzbustany', 'adrienretrystest', 'support', 'multidelmoeenymerge', 'retry', 'abustany', 'request', 'errormaster', 'richarddbarnett', 'requestmerge', 'abustany', 'request', 'multidel', 'stestmaster', 'andreykostov', 'requestkostov', 'andreysignedmoore', 'matthewupdaterichard', 'barnettkinesis', 'endpointedfdaebdedcbbmenke', 'simonjackpal', 'gateway', 'discoverredis', 'cceaeeaeabad', 'radixpicciano', 'brianpackage', 'thread', 'clusterchangelogreadmes', 'reference', 'update', 'clusterreset', 'cluster', 'throttlechange', 'cluster', 'failover', 'proper', 'handlinglogic', 'question', 'simplify', 'failover', 'throttle', 'cluster', 'handlechangelogrefactor', 'intermediatesmall', 'formattingstructure', 'optimize', 'update', 'clusterchangelogchangelogvictormethodbeeffbefceaee', 'protobufanton', 'povarovsolution', 'simplerdwayne', 'schultzmarshal', 'check', 'presence', 'field', 'unmarshalcompatibility', 'improverevert', 'compatibility', 'improvehelper', 'importgeorg', 'patch', 'povarov', 'field', 'ninoptnativetuleyupdate', 'artifactmarshal', 'marshalto', 'insteadrestore', 'permission', 'protocremove', 'emptyremove', 'emptymarshal', 'check', 'errormerge', 'master', 'fieldduberstein', 'tamirerrcheck', 'generate', 'passingschulze', 'walterregeneratederrcheck', 'tamird', 'protoc', 'errcheck', 'versionmaster', 'jmtuley', 'requestefdaebbeddada', 'hashicorp', 'golangalexander', 'gugelarmon', 'dadgarmaster', 'blopker', 'requestmaster', 'client', 'requestorder', 'sciolizer', 'requestmaster', 'dkumor', 'requestlopkerrwmutex', 'functiondaniel', 'purge', 'onevictinterface', 'value', 'onevictedjoshuaorder', 'preservekelleypanic', 'insidefunction', 'element', 'onevict', 'internalssingle', 'purgepurge', 'correctreset', 'evictgalbreatheviction', 'return', 'methodcleanup', 'gofmtrgbkrk', 'patch', 'requestyamux', 'hashicorparmon', 'dadgarprevent', 'stream', 'query', 'numstreams', 'countdeadlock', 'backpressurefsnotify', 'howeychowey', 'chrismaster', 'missdeer', 'requestupdateupdateddcfaccdfcaef', 'goupnpfelix', 'langeaction', 'header', 'mergemaster', 'thinxer', 'mergejackpalpalevichpeerstream', 'jbenet', 'dedaafbedcaa', 'adaedcedcdcbadbtiger', 'brianupdatebatiz', 'benetbriantigerchow', 'patch', 'requestosext', 'effaccdefdebe', 'kardianosdaniel', 'theophanesosext', 'folder', 'returnstate', 'osext', 'multiple', 'sshfp', 'reversedhinfo', 'format', 'support', 'recordtestcase', 'number', 'privatemichaelquery', 'check', 'checkcleanupgiebenroosmaa', 'keyparse', 'requestmichaelharo', 'checkid', 'requestmichaelharo', 'client', 'requestmerge', 'commitrecord', 'playingmaxcom', 'check', 'maxtokparsingerror', 'check', 'tokenmiekg', 'requestmaster', 'asergeyev', 'requestbaacbabeea', 'fcfbdddbdefddaa', 'goleveldb', 'leveldb', 'syndtrtriandana', 'suryandarurestlessbandit', 'getprop', 'request', 'errorleveldb', 'cache', 'buffer', 'dbstress', 'block', 'manualtestreset', 'integer', 'literalsession', 'leveldb', 'cleanup', 'record', 'splitclose', 'leveldb', 'allowstravis', 'parkerpublic', 'property', 'cafafffceaebejeromybootstrap', 'addrscryptodmitry', 'savintsevcrypto', 'critical', 'option', 'encodingnienhuyscrypto', 'server', 'method', 'earlycompilationjunghocrypto', 'assemblysriramcrypto', 'openpgp', 'limit', 'recursion', 'connectiontaylor', 'lancereadme', 'charset', 'testdata', 'updatemikiolinux', 'buildlinux', 'buildcoverageattribute', 'check', 'webdavproperty', 'system', 'webdav', 'belongspecial', 'litmus', 'webdavmemps', 'propsystem', 'webdav', 'deletewebdavcopyfiles', 'webdavreturn', 'webdavrobert', 'stepanekmemory', 'property', 'support', 'webdav', 'proppatchinexistent', 'request', 'propfind', 'return', 'webdav', 'proppatchcontent', 'simplify', 'header', 'example', 'importfinchelithrar']","{'fatal': 100, 'thread': 100, 'permission': 100, 'buffer': 100, 'integer': 100}"
"['effccce', 'mergedebug', 'requestfailure', 'permission']",{'permission': 100}
"['failure', 'permission']",{'permission': 100}
"['outgoing', 'message', 'peermanager', 'control', 'bitswap', 'refactoringeventlog', 'improvementchannel', 'aroundmessage', 'buffer', 'correctlyimproveremove', 'unneccessarychange', 'werent', 'revert', 'bitswap']",{'buffer': 100}
"['aafdc', 'mergemerge', 'requestchannel', 'output', 'buffer']",{'buffer': 100}
"['channel', 'output', 'buffer']",{'buffer': 100}
"['mergepeerstream', 'update', 'requestpeerstream', 'update', 'concurrency']",{'concurren': 90}
"['peerstream', 'update', 'concurrency', 'acceptpeerstream', 'jbenet', 'dedaafbedcaa']",{'concurren': 90}
"['small', 'issue']",{'issue': 100}
"['mergeparallelize', 'handshake', 'requestsecio', 'parallelize', 'crypto', 'handshake']",{'crypto': 100}
"['secio', 'parallelize', 'crypto', 'handshakehandshake', 'serial', 'nasty', 'problemfinish', 'wouldwould', 'handshake', 'problematic', 'particularlyrecover', 'gateway', 'bootstrappingcrypto', 'approachdefer', 'handshake', 'number', 'writeright', 'reason', 'necessary', 'delayhandshake', 'acceptscriticaldefers', 'parallelizationimplement', 'constant', 'wrongparallelcrypto']",{'crypto': 100}
"['natefinch', 'upstream', 'buffer', 'eventlog']",{'buffer': 100}
"['buffer', 'revert', 'lumberjackreverts']",{'buffer': 100}
"['buffer', 'lumberjack']",{'buffer': 100}
"['buffer', 'lumberjack']",{'buffer': 100}
"['mergemerge', 'request', 'cleanup', 'makefiles', 'torarnvmakefiles', 'various', 'issue']",{'issue': 100}
"['eeeae', 'mergejbenet', 'requestweird', 'issue']",{'issue': 100}
"['weird', 'issue']",{'issue': 100}
"['commentary', 'issue']",{'issue': 100}
"['suggestion', 'panic', 'length', 'peerid']",{'length': 100}
"['godep', 'crypto']",{'crypto': 100}
"['expose', 'interface', 'refactor', 'bootstrap']",{'expose': 100}
"['access', 'convenience', 'fieldconfiguration', 'safety', 'thread', 'decalarativeoperation']",{'thread': 100}
"['expose', 'param', 'ipfsnode']",{'expose': 100}
"['refactor', 'trickle', 'generation', 'package', 'importer']",{'generation': 100}
"['crypto', 'bother', 'secio']",{'crypto': 100}
"['expose', 'refac', 'constructor', 'optionfixup', 'mayberouter']",{'expose': 100}
"['mergelength', 'jbenet', 'requestoutput', 'unixfs', 'length']",{'length': 100}
"['expose', 'interface']",{'expose': 100}
"['thread', 'command']",{'thread': 100}
"['length', 'response', 'field', 'length', 'response', 'field', 'command', 'squashclient', 'length', 'unset', 'error', 'command']",{'length': 100}
"['rename', 'refactorclose', 'jbenet', 'issue']",{'issue': 100}
"['expose', 'method']",{'expose': 100}
"['expose', 'datastore', 'interface']",{'expose': 100}
"['expose', 'fsrepo', 'datastore', 'interface']",{'expose': 100}
"['component', 'expose', 'refactor', 'setpath', 'ensure']",{'expose': 100}
"['thread', 'fsrepo', 'usage', 'documentdeadlock', 'fsrepo', 'extract', 'method']",{'thread': 100}
"['expose', 'method']",{'expose': 100}
"['daaac', 'mergemerge', 'crypto', 'bench', 'request']",{'crypto': 100}
"['indirect', 'block', 'efficiencycleanpanic', 'cleanupclean', 'readabilitydagservice', 'creation', 'finalgeneration', 'importer', 'manuallygenerationcleanupmerkledagsmall', 'subblocks', 'generation', 'block']",{'generation': 100}
"['secio', 'buffer', 'remainderreturn']",{'buffer': 100}
"['goroutine', 'ctxio', 'buffer']",{'buffer': 100}
"['expose', 'peerstore', 'bitswap', 'network']",{'expose': 100}
"['separate', 'responsibilties', 'refactorpriority', 'piece', 'carriedpriority', 'natural', 'assumes', 'protocol', 'definedleave', 'alwaysoutside', 'package', 'assumption', 'coupledvalue', 'integer', 'protocol', 'changedresponsibilties']",{'integer': 100}
"['crypto', 'stretcher', 'refactor']",{'crypto': 100}
"['multiple', 'includeissuecomment', 'jbenet', 'issue']",{'issue': 100}
"['buffer', 'resource', 'response', 'importantprovideotherwise', 'space', 'channel', 'senderforever', 'blockabandon', 'receiver', 'decidessubtleimportant']",{'buffer': 100}
"['expose', 'interface', 'level', 'development', 'commandcommand', 'stylelicensetiger']",{'expose': 100}
"['unnecessary', 'concurrency']",{'concurren': 90}
"['merkledag', 'issue']",{'issue': 100}
"['favor', 'buffer', 'timing']",{'buffer': 100}
"['expose', 'traffic', 'dockerfile', 'swarmlicensetiger']",{'expose': 100}
"['expose', 'dockerfilelicensetiger']",{'expose': 100}
"['chunk', 'sizesplitter', 'readingreader', 'buffer']",{'buffer': 100}
"['thread', 'command', 'multifilereader']",{'thread': 100}
"['expose', 'getconnections']",{'expose': 100}
"['expose', 'defaultinitialization', 'daemon', 'supportlicensetiger', 'grunt', 'chore', 'productiontiger']",{'expose': 100}
"['randomjbenet', 'issue']",{'issue': 100}
"['template', 'command', 'generation', 'helptext']",{'generation': 100}
"['requestmount', 'buffer']",{'buffer': 100}
"['entrypoint', 'dockerfilejbenet', 'issue']",{'issue': 100}
"['issuecomment', 'jbenet', 'issue']",{'issue': 100}
"['conditionjbenet', 'issue']",{'issue': 100}
"['memory', 'buffer', 'msgio', 'pressure']",{'buffer': 100}
"['blockservice', 'block', 'writevalue', 'datastoreredundant', 'writewritesleveldbtrack', 'jbenet', 'datastore', 'issue']",{'issue': 100}
"['mappum', 'ebebefacfaace', 'addressjbenet', 'issue']",{'issue': 100}
"['ledger', 'mutex', 'bitswap', 'strategyaddress', 'session', 'bitswap', 'access', 'concurrent']",{'concurrent': 100}
"['crypto', 'refactor', 'pbpublickey', 'proto']",{'crypto': 100}
"['spipe', 'crypto', 'makefile', 'generic', 'chore']",{'crypto': 100}
"['spipe', 'crypto', 'package', 'rename', 'proto']",{'crypto': 100}
"['crypto', 'package', 'rename', 'regen', 'protomakefile']",{'crypto': 100}
"['internal', 'refactor', 'crypto', 'package', 'protodocument']",{'crypto': 100}
"['internal', 'refactor', 'spipe', 'crypto', 'package', 'protodocument']",{'crypto': 100}
"['commitfavornicer', 'crypto', 'sensesingle', 'connection', 'contextnetmessage', 'talkingadditional', 'useful', 'swarm']",{'crypto': 100}
"['conncurrent', 'connects']",{'concurrent': 95}
"['absolute', 'print', 'command', 'issue']",{'issue': 100}
"['reproduce', 'issue']",{'issue': 100}
"['mutability', 'issue']",{'issue': 100}
"['warning', 'security']",{'Security': 100}
"['stack', 'network', 'propagate', 'bitswap', 'errorpropagate', 'error', 'rathererrornetwork', 'bitswap', 'method', 'receiveerrorstill', 'value', 'return', 'delegation', 'pattern']",{'stack': 100}
"['expose', 'bitswap', 'toggle', 'ability', 'nicenessalwaysdraft', 'strategy', 'ledger']",{'expose': 100}
"['entire', 'bitswap', 'wantlistbitswapjbenet', 'issue']",{'issue': 100}
"['security', 'comment']",{'Security': 100}
"['concurrency', 'refac', 'bitswap']",{'concurren': 90}
"['bugfix', 'handshake', 'insecure']",{'insecure': 100}
"['expose', 'handler']",{'expose': 100}
"['crypto', 'package', 'coverage']",{'crypto': 100}
"['mergemerge', 'identify', 'request', 'issue', 'jbenetidentify', 'handshake']",{'issue': 100}
"['ledger', 'bitswap', 'conditionjbenet', 'issue']",{'issue': 100}
"['crypto', 'master']",{'crypto': 100}
"['block', 'issue']",{'issue': 100}
"['dagservice', 'block', 'issue']",{'issue': 100}
"['crypto', 'package']",{'crypto': 100}
"['crypto', 'generate', 'command']",{'crypto': 100}
"['crypto', 'handshake']",{'crypto': 100}
"['review', 'address', 'issue']",{'issue': 100}
"['errorprotocol', 'output', 'friendly', 'buffer']",{'buffer': 100}
