message,fuzzy
"['subsequent', 'defusedxml', 'elementtree', 'workaround', 'importdefusedxml', 'issue', 'tiran']",{'issue': 100}
"['dockerfile', 'bcrypt', 'install']",{'bcrypt': 100}
"['security', 'warning']",{'Security': 100}
"['thread', 'communicate', 'socket', 'client']",{'thread': 100}
"['cipher', 'setting', 'protocoldefault']",{'cipher': 100}
"['direct', 'bcrypt']",{'bcrypt': 100}
"['openssl', 'modifymulti', 'library', 'processing']",{'OpenSSL': 100}
"['content', 'length', 'internal', 'server', 'limit']",{'length': 100}
"['extra', 'setuptools', 'bcrypt']",{'bcrypt': 100}
"['length', 'response']",{'length': 100}
"['thread', 'request', 'handshake', 'socket']",{'thread': 100}
"['setting', 'permission', 'storage']",{'permission': 100}
"['mergerequest', 'patch', 'unrudrequest', 'report', 'permission']",{'permission': 100}
"['thread', 'level', 'simple', 'formatterallocation', 'message']",{'thread': 100}
"['thread', 'hexadecimalradicale', 'startingradicale']",{'thread': 100}
"['incorrect', 'argumentcause']",{'incorrect': 100}
"['positive', 'increase', 'great', 'system', 'crash']",{'crash': 100}
"['expose', 'level', 'operation']",{'expose': 100}
"['storage', 'rightcollectiontarget', 'sends', 'deletereturn', 'targetproperty', 'collection', 'crash', 'withoutalready', 'mkcalendar', 'mkcol', 'targetcheck', 'target', 'exists', 'collectionsendscollection', 'whole', 'crash', 'existcontent', 'simple', 'whole', 'distinguishesparent', 'target', 'criterion', 'exists', 'collectioncontains', 'parent', 'propertycriterion', 'firstproppatch']",{'crash': 100}
"['flakeflake', 'issue', 'pycqa']",{'issue': 100}
"['collection', 'crash']",{'crash': 100}
"['expose', 'dockerfile']",{'expose': 100}
"['afdce', 'mergerequest', 'patch', 'unrudcontent', 'crash']",{'crash': 100}
"['content', 'crash']",{'crash': 100}
"['nonexistent', 'crash']",{'crash': 100}
"['collection', 'crash']",{'crash': 100}
"['propsfile', 'crash']",{'crash': 100}
"['fafdb', 'mergerequest', 'patch', 'binorproblem', 'bcrypt']",{'bcrypt': 100}
"['problem', 'bcrypt']",{'bcrypt': 100}
"['thread', 'server']",{'thread': 100}
"['config', 'method', 'encryption', 'available', 'htpasswd', 'bcrypt']","{'encryption': 100, 'bcrypt': 100}"
"['value', 'empty', 'crash']",{'crash': 100}
"['abbdcf', 'mergerequest', 'mdaprbcrypt', 'jgehrcke', 'mergeimplement', 'htpasswd', 'bcrypt']",{'bcrypt': 100}
"['mergerequest', 'issue']",{'issue': 100}
"['mergerequest', 'issue', 'untitakeranother', 'instance']",{'issue': 100}
"['event', 'crash']",{'crash': 100}
"['window', 'crash']",{'crash': 100}
"['mergerequest', 'issue']",{'issue': 100}
"['mergerequest', 'mergeargument', 'python', 'cipher', 'compat']",{'cipher': 100}
"['argument', 'python', 'cipher', 'compat']",{'cipher': 100}
"['mergepreauth', 'request', 'horazont', 'mergeserver', 'issue', 'authentication']",{'issue': 100}
"['collection', 'accessfinal', 'possible', 'access', 'condition', 'certain', 'controlbranch', 'master', 'accesspasswordfunctionbranch', 'request', 'connectfunctionprevious', 'condition', 'authentication', 'leversecuity', 'issue', 'accessgather', 'collection', 'informationcommit', 'simplifies']",{'issue': 100}
"['server', 'issue', 'authenticationalways', 'authentication', 'normal', 'becomescurrent', 'client']",{'issue': 100}
"['config', 'cipher', 'protocol']",{'cipher': 100}
"['buffer', 'problem', 'interface', 'support', 'python']",{'buffer': 100}
"['issue', 'option']",{'issue': 100}
"['issue', 'patch', 'clint']",{'issue': 100}
"['maximuml', 'length']",{'length': 100}
"['local', 'globals', 'function', 'encryption']",{'encryption': 100}
"['thread', 'multi', 'stuff']",{'thread': 100}
"['module', 'crypt', 'import']",{'crypto': 91}
