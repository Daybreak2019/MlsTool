message,fuzzy
"['update', 'jackson', 'flumeserious', 'problem', 'security', 'jacksonfasterxml', 'issue', 'jackson', 'databindupdate']","{'Security': 100, 'issue': 100}"
"['maven', 'checksum', 'deploy', 'generate', 'flumemaven', 'checksum', 'generation', 'documentationcloseendre', 'reviewer', 'peter', 'turcsanyiferenc', 'szabo']",{'generation': 100}
"['metric', 'flume', 'issue', 'patchumeshminor', 'reworkedmodificationclosereviewer', 'szabo', 'peter', 'ferencendre', 'ferenc', 'szabo', 'major']",{'issue': 100}
"['parameter', 'incorrect', 'interceptor', 'flume', 'timestampdocumentation', 'fixingferenc', 'szabo']",{'incorrect': 100}
"['support', 'source', 'flume', 'syslogsyslog', 'multi', 'support', 'sourcechange', 'duplication', 'contains', 'refactoringsupport', 'convinient', 'refactoredspecify', 'protocol', 'flume', 'possibilityspecify', 'suite', 'cipher', 'flume', 'possibilitycloseendre', 'reviewer', 'peter', 'majorferenc', 'szabo']",{'cipher': 100}
"['deadlock', 'flumebasedcontains', 'reproduction', 'deadlockminimal', 'changedenes', 'checkingfirst', 'function', 'callback', 'optimization', 'containsremove', 'bucketwriteravoidclosereviewer', 'szabo', 'peter', 'ferencarvay', 'denes', 'ferenc', 'endre', 'szabo']",{'deadlock': 100}
"['error', 'expose', 'condition', 'monitor', 'flume', 'countereasier', 'error', 'monitor', 'setting', 'errormonitoringerror', 'exception', 'level', 'thrown', 'conceptleast', 'error', 'event', 'event', 'errorinitialization', 'eventtaildirsource', 'error', 'generic', 'positionclosereviewer', 'szabo', 'peter', 'ferencendre', 'ferenc', 'szabo', 'major']",{'expose': 100}
"['deadlock', 'enters', 'flume', 'application', 'stoppedclass', 'application', 'mechanism', 'preventcloseclosedenes', 'attila', 'ferenc', 'benedict', 'revievers', 'szaboferenc', 'szabo', 'andras']",{'deadlock': 100}
"['executable', 'fixing', 'permission', 'portab', 'flumeclosereviewer', 'denes', 'arvayferenc', 'szabo']",{'permission': 100}
"['version', 'jetty', 'flume', 'upgradeversion', 'update', 'jettyversion', 'patch', 'upgrade', 'expose', 'httpsource', 'possibility', 'variableclosearvay', 'denes', 'ferenc', 'reviewer', 'miklosstevens', 'denes', 'arvay', 'tristan']",{'expose': 100}
"['error', 'batch', 'flume', 'travisreduce', 'output', 'length', 'limit', 'verbositytravisclosereviewer', 'szabo', 'ferenccsanady', 'denes', 'arvay', 'miklos']",{'length': 100}
"['value', 'empty', 'flume', 'support', 'header', 'channelspecify', 'event', 'value', 'flume', 'headerexternal', 'event', 'configures', 'system', 'headermemory', 'flume', 'channelchange', 'memory', 'flume', 'channelbuffer', 'protocol', 'event', 'value', 'headerproto', 'requiredfield', 'patch', 'protocol', 'buffer', 'value', 'changedcheck', 'field', 'notation', 'settingserialization', 'preventcaveat', 'optional', 'deserialization', 'fieldvalue', 'default', 'emptyreviewer', 'csanady', 'mikloshegedus', 'arvay', 'denes', 'marcell']",{'buffer': 100}
"['buffer', 'protocol', 'upgrade', 'document', 'flumeupdate', 'buffer', 'protocol', 'upgrade', 'developerashish', 'reviewer', 'simon', 'attilaarvay', 'denes', 'roshan']",{'buffer': 100}
"['expose', 'flumepossible', 'patch', 'expose', 'filechannel', 'detectclosereviewer', 'attila', 'bessenyeiarvay', 'denes', 'bessenyei']",{'expose': 100}
"['flumecurrent', 'inetaddress', 'usingevery', 'result', 'impact', 'eventlocal', 'issue', 'patch', 'staticlocal', 'chance', 'changereviewer', 'bessenyeimalaska', 'michael', 'bessenyei', 'theodore']",{'issue': 100}
"['startup', 'execsource', 'ordersourcecounter', 'patch', 'execsource', 'input', 'process', 'thread', 'runnersourcecounter', 'metric', 'countsourcecounter', 'patch', 'attempt', 'followmodify', 'runningmetricapplyinglongerclosereviewer', 'attila', 'bessenyeipercy', 'bessenyei']",{'thread': 100}
"['flaky', 'flumesourcecounter', 'flaky', 'increment', 'netty', 'processing', 'message', 'event', 'thread', 'syslogudpsource', 'delayeddelay', 'issue', 'patchreviewer', 'bessenyeiarvay', 'denes', 'bessenyei']","{'thread': 100, 'issue': 100}"
"['explicit', 'message', 'functionalityraise', 'production', 'concern', 'security', 'functionalityinformation', 'explicit', 'functionality', 'crucialpatch', 'enable', 'flume', 'system', 'loggingenable', 'configuration', 'loggedreviewer', 'denes', 'percysimon', 'percy', 'attila']",{'Security': 100}
"['module', 'checkstyle', 'issue', 'relatedlicense', 'headerpercy']",{'issue': 100}
"['flume', 'classstyle', 'conformstyle', 'fatal', 'patch', 'patch', 'whitespacebytecode']",{'fatal': 100}
"['dependency', 'issue', 'profile', 'flumejohny', 'rufus']",{'issue': 100}
"['incorrect', 'message', 'spool', 'flume', 'levelshreedharan', 'scala']",{'incorrect': 100}
"['incorrect', 'property', 'kafka', 'flumeshapira']",{'incorrect': 100}
"['buffer', 'frame', 'configurable', 'flume', 'scribesourcedefault', 'thrift', 'frame', 'service', 'scribe', 'variesthrift', 'value', 'acrossavoid', 'certaindefault', 'incompatibilityparameterponnambalam', 'marimuthu', 'chenshangan', 'percy']",{'buffer': 100}
"['direct', 'stream', 'codecpool', 'buffer', 'flume', 'preventshreedharan', 'jarek', 'cecho', 'jarcec']",{'buffer': 100}
"['spillable', 'incorrect', 'flume', 'example', 'channelshreedharan', 'roshan']",{'incorrect': 100}
"['generic', 'thread', 'flume', 'source', 'usingshreedharan', 'ashish', 'paliwal']",{'thread': 100}
"['backup', 'checkpoint', 'filechannel', 'thread', 'flume', 'applicationshreedharan', 'jarek', 'cecho', 'jarcec']",{'thread': 100}
"['deadlock', 'flumeshreedharan']",{'deadlock': 100}
"['timeout', 'incorrect', 'flume', 'documentation', 'channeliijima', 'roshan', 'satoshi']",{'incorrect': 100}
"['worker', 'thread', 'flume', 'option', 'configureshreedharan', 'gandevia', 'cameron']",{'thread': 100}
"['metric', 'aggregate', 'share', 'registry', 'thread', 'flume', 'acrossshreedharan', 'wolfgang', 'hoschek']",{'thread': 100}
"['buffer', 'ingest', 'character', 'flume', 'source', 'spoolingpercy']",{'buffer': 100}
"['protocol', 'update', 'buffer', 'flumeshreedharan', 'roshan']",{'buffer': 100}
"['dependency', 'hadoop', 'common', 'incorrect', 'declaration', 'morphline', 'flume', 'buildshreedharan', 'jagat', 'singh']",{'incorrect': 100}
"['expiration', 'thread', 'client', 'flumeshreedharan', 'percy']",{'thread': 100}
"['creates', 'attempt', 'thread', 'remote', 'flume', 'agent', 'clientshreedharan', 'percy']",{'thread': 100}
"['issue', 'hbase', 'thrift', 'compatibility', 'flumeshreedharan', 'percy']",{'issue': 100}
"['insensitive', 'value', 'flume', 'deserializer', 'allowmcqueen', 'percy']",{'Sensitive': 90}
"['processor', 'incorrect', 'flume', 'percy', 'juhani']",{'incorrect': 100}
"['check', 'flumeeventqueue', 'length', 'setting', 'flumeshreedharan', 'percy']",{'length': 100}
"['issue', 'flumeshreedharan', 'percy']",{'issue': 100}
"['issue', 'flumebrock', 'noland', 'percy']",{'issue': 100}
"['deadlock', 'class', 'flume', 'application', 'stoppedbrock', 'shreedharan', 'noland']",{'deadlock': 100}
"['command', 'comment', 'encryption', 'flumenoland', 'pinto', 'guedes', 'aline', 'brock']",{'encryption': 100}
"['worker', 'channel', 'thread', 'flume', 'daemonshreedharan', 'noland', 'brock']",{'thread': 100}
"['hbase', 'security', 'support', 'flumeshreedharan', 'noland', 'brock']",{'Security': 100}
"['check', 'operation', 'thread', 'flume', 'performingshreedharan', 'noland', 'brock']",{'thread': 100}
"['encryption', 'flume', 'example', 'channelbrock', 'noland', 'roshan']",{'encryption': 100}
"['issue', 'regex', 'extractor', 'interceptor', 'flume', 'timezonebrock', 'noland']",{'issue': 100}
"['array', 'length', 'event', 'flume', 'convertshreedharan', 'noland', 'brock']",{'length': 100}
"['memorychannel', 'integer', 'flumebrock', 'kobayashi', 'noland', 'daisuke']",{'integer': 100}
"['active', 'number', 'expose', 'connection', 'flume', 'sourceshreedharan', 'noland', 'brock']",{'expose': 100}
"['modify', 'proposal', 'encryption', 'flume', 'channelbrock', 'noland', 'percy']",{'encryption': 100}
"['encryption', 'disallow', 'flume', 'filechannelbrock', 'noland', 'percy']",{'encryption': 100}
"['expose', 'ratio', 'flume', 'channelshreedharan', 'percy']",{'expose': 100}
"['filechannel', 'thread', 'randomreader', 'flume', 'decryptionbrock', 'noland', 'percy']",{'thread': 100}
"['filechannel', 'encryption', 'flume', 'property', 'configuration', 'keyproviderbrock', 'noland', 'percy']",{'encryption': 100}
"['buffer', 'protocol', 'filechannel', 'flume', 'machine', 'buildbrock', 'noland', 'percy']",{'buffer': 100}
"['policy', 'encryption', 'flumebrock', 'noland', 'percy']",{'encryption': 100}
"['buffer', 'protocol', 'flume', 'buildbrock', 'shreedharan', 'noland']",{'buffer': 100}
"['policy', 'encryption', 'password', 'flume', 'channelshreedharan', 'percy']",{'encryption': 100}
"['concurrency', 'flume', 'asyncshreedharan', 'jarek', 'cecho', 'jarcecffaedef', 'repos', 'flume', 'trunk']",{'concurren': 90}
"['asynch', 'version', 'hbase', 'flumeshreedharan', 'percyffaedef', 'repos', 'flume', 'trunk']",{'synch': 91}
"['deadlock', 'flume', 'channelshreedharan', 'arvind', 'prabhakarffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'deadlock': 100}
"['avrosource', 'thread', 'flume', 'loggingshreedharan', 'percyffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'thread': 100}
"['configuration', 'incorrect', 'flumeshreedharan', 'mcqueenffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'incorrect': 100}
"['bucketwriter', 'deadlock', 'flumearvind', 'percy', 'prabhakarffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'deadlock': 100}
"['creates', 'incorrect', 'selector', 'flumearvind', 'prabhakar', 'mubarakffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'incorrect': 100}
"['configurable', 'thread', 'noland', 'juhaniffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'thread': 100}
"['issue', 'paste', 'flumebrock', 'noland', 'mcqueenffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'issue': 100}
"['handler', 'thread', 'flume', 'stressarvind', 'percy', 'prabhakarffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'thread': 100}
"['security', 'kerberos', 'flumearvind', 'percy', 'prabhakarffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'Security': 100}
"['thread', 'document', 'flume', 'safetyprabhakar', 'arvind', 'juhaniffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'thread': 100}
"['issue', 'script', 'flume', 'fixingarvind', 'mcqueen', 'prabhakarbranch', 'ffaedef', 'repos', 'flume', 'incubator']",{'issue': 100}
"['thread', 'memorychannel', 'flumemujumdar', 'prasad', 'juhanibranch', 'ffaedef', 'repos', 'flume', 'incubator']",{'thread': 100}
"['various', 'license', 'incorrect', 'information', 'flumebranch', 'ffaedef', 'repos', 'flume', 'incubator']",{'incorrect': 100}
"['disclaimer', 'incorrect', 'flumebranch', 'ffaedef', 'repos', 'flume', 'incubator']",{'incorrect': 100}
"['timing', 'issue', 'flume', 'fixingffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'issue': 100}
"['timing', 'issue', 'noland', 'author', 'flume', 'brockbranch', 'ffaedef', 'repos', 'flume', 'incubator']",{'issue': 100}
"['possible', 'deadlock', 'prasad', 'latch', 'driver', 'thread', 'flume', 'mujumdar', 'agentffaedef', 'repos', 'flume', 'incubator', 'trunk']","{'deadlock': 100, 'thread': 100}"
"['source', 'eventdrivenrequires', 'eventdriven', 'transaction', 'channelbeyond', 'lifecycleaware', 'specific', 'method', 'thrift', 'transactional', 'facilitate', 'style', 'sourceinterface', 'anotherrunner', 'drive', 'source', 'logicalnoderunner', 'interface', 'favor', 'transaction', 'channellatter', 'notion', 'exists', 'class', 'result', 'existingchange', 'issue', 'bunch', 'thrilledturbulant', 'consideredbranch', 'ffaedef', 'repos', 'flume', 'incubator']",{'issue': 100}
"['logical', 'duplicate', 'launch', 'attempt', 'config', 'logical', 'subsequentlyupdate', 'spawn', 'problem', 'config', 'driver', 'thread', 'making', 'neglectedupdate', 'logical', 'error', 'spawn', 'failure', 'signle', 'value', 'handlingffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'thread': 100}
"['error', 'thread', 'state', 'resource', 'logicalnode', 'cleanbranch', 'ffaedef', 'repos', 'flume', 'incubator']",{'thread': 100}
"['thread', 'flume', 'application', 'underlyingbranch', 'ffaedef', 'repos', 'flume', 'incubator']",{'thread': 100}
"['couldupdate', 'error', 'monitor', 'thread', 'state', 'logicalnodeerror', 'state', 'channeldriver', 'becomesbranch', 'ffaedef', 'repos', 'flume', 'incubator']",{'thread': 100}
"['supporttransition', 'monitor', 'thread', 'effect', 'monitor', 'schedule', 'current', 'chainedprovides', 'polite', 'setdesiredstate', 'unsupervisebranch', 'ffaedef', 'repos', 'flume', 'incubator']",{'thread': 100}
"['process', 'guava', 'command', 'service', 'thread', 'processor', 'asyncbranch', 'ffaedef', 'repos', 'flume', 'incubator']",{'thread': 100}
"['thread', 'driver', 'channelbranch', 'ffaedef', 'repos', 'flume', 'incubator']",{'thread': 100}
"['driver', 'thread', 'interface', 'channelbranch', 'ffaedef', 'repos', 'flume', 'incubator']",{'thread': 100}
"['different', 'driver', 'thread', 'channelbranch', 'ffaedef', 'repos', 'flume', 'incubator']",{'thread': 100}
"['driver', 'thread', 'complain', 'blockbranch', 'ffaedef', 'repos', 'flume', 'incubator']",{'thread': 100}
"['thread', 'flumelimitchetan', 'sarvaffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'thread': 100}
"['expose', 'sizetrigger', 'ability', 'rollsink', 'flume', 'configurehsieh', 'jonathanffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'expose': 100}
"['deadlock', 'subsink', 'flume', 'rotatehsieh', 'jonathanffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'deadlock': 100}
"['master', 'spawn', 'flume', 'logicalupdate', 'advantage', 'semantics', 'thread', 'separate', 'driver', 'sourcehsieh', 'jonathanffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'thread': 100}
"['expose', 'information', 'flumejersey', 'master', 'expose', 'special', 'usinghsieh', 'jonathanffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'expose': 100}
"['codec', 'incorrect', 'compression', 'flume', 'documentationhsieh', 'jonathanffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'incorrect': 100}
"['flumefound', 'issue', 'herve', 'rousseauhsieh', 'jonathanffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'issue': 100}
"['incorrect', 'flume', 'documentationbruce', 'mitchenerffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'incorrect': 100}
"['condition', 'tailsource', 'flumefewer', 'ensure', 'eventworker', 'failure', 'thread', 'detect', 'sourcedebug', 'removedtruncate', 'event', 'assertion', 'event', 'sleepminor', 'formatrather', 'fixme', 'commentedkevin', 'tailsource', 'originalesammer', 'sammerffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'thread': 100}
"['enable', 'cluster', 'flumesimple', 'patch', 'hadoop', 'implementation', 'internal', 'security', 'buildsetup', 'documentationhsieh', 'jonathanffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'Security': 100}
"['chain', 'incorrect', 'flume', 'documentation', 'source', 'chain', 'failover', 'consistentminor', 'grammaresammer', 'sammerffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'incorrect': 100}
"['problem', 'permission', 'flume', 'detectcheck', 'canread', 'tryingconsecutive', 'warning', 'ioexceptionsfailure', 'sleep', 'secondesammer', 'sammerffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'permission': 100}
"['error', 'filename', 'permission', 'flumehsieh', 'jonathanffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'permission': 100}
"['issue', 'flumephuntffaedef', 'repos', 'flume', 'incubator', 'trunk']",{'issue': 100}
