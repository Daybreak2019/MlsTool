message,fuzzy
"['reference', 'reimplment', 'modulejetbrains', 'behave', 'capability', 'issue', 'intellij', 'element', 'context', 'parent', 'sensitive', 'declaration', 'schema', 'alias', 'target', 'completion', 'outermost', 'psireference', 'requirement', 'platform', 'reference', 'action', 'approach', 'community', 'range', 'fefafbafceecf', 'qualifiedalias', 'definition', 'thing']","{'issue': 100, 'Sensitive': 100}"
"['mergemerge', 'request', 'yyinitial', 'stack', 'invariant']",{'stack': 100}
"['yyinitial', 'stack', 'invariant', 'stateeither', 'elixir', 'special', 'lexer', 'pushandbegin', 'yyinitial', 'restartable', 'interpolation', 'bcbdecfdcfcdf', 'blame', 'wrapper', 'intellij', 'kronicdeth', 'yyinitial', 'recurses', 'yyintial', 'yybegin', 'pushandbegin', 'yyinitial', 'state', 'future', 'yyinitial', 'nestedpushandbegin', 'yyinitialempty', 'yyinitial', 'stack', 'state', 'kronicdeth', 'intellij', 'violation', 'likely', 'reset', 'apparent', 'return', 'elixirflexlexer', 'yyinitial', 'stack', 'resettest', 'check']",{'stack': 100}
"['mergekernel', 'request', 'mirror', 'kronicdethsyntax', 'decompilation', 'crash']",{'crash': 100}
"['injection', 'constructor']",{'injection': 100}
"['issue', 'intellij']",{'issue': 100}
"['erlang', 'ignatov', 'issue', 'intellijignatov', 'bcbadfaebedbc', 'intellij', 'erlangelixir', 'intellij']",{'issue': 100}
"['mergeexception', 'modification', 'request', 'concurrent', 'kronicdethstructure']",{'concurrent': 100}
"['builder', 'openprocessor', 'dependency', 'injectionjetbrains', 'dependency', 'injection']",{'injection': 100}
"['projectdialogwrapper', 'project', 'converterevent', 'thread', 'dispacht', 'wholey', 'optionremove', 'project', 'aroundlayout', 'project', 'update', 'import']",{'thread': 100}
"['track', 'elementnumerous', 'annotation', 'encounterreproductionelixir', 'issuecomment', 'issue', 'kronicdeth', 'intellijphoenix', 'function', 'track', 'psielement', 'elemententer', 'definition', 'clause']",{'issue': 100}
"['usage', 'incorrect', 'otperlanglist', 'otperlangtuple']",{'incorrect': 100}
"['interprete', 'crypto', 'defaultcrypto']",{'crypto': 100}
"['thread', 'failure']",{'thread': 100}
"['sensitive', 'elixirlangauge', 'usage']",{'Sensitive': 100}
"['range', 'bigintegervalue', 'integer']",{'integer': 100}
"['improper', 'seperate']",{'improper': 100}
"['improper', 'assembly']",{'improper': 100}
"['improper', 'properlydebugger', 'inspectnever', 'chunk', 'checkedimproper']",{'improper': 100}
"['inline', 'integer', 'literal']",{'integer': 100}
"['inline', 'integer']",{'integer': 100}
"['integer', 'account', 'string']",{'integer': 100}
"['invokeandwait', 'runwriteactionapplication', 'runwriteaction', 'eventdispatchconfiguration', 'credoannotator', 'eventdispatchfollowedintellij', 'master', 'issue', 'credo']",{'issue': 100}
"['blacklist', 'support', 'module']",{'blacklist': 100}
"['length', 'store', 'decompilation']",{'length': 100}
"['concurrent', 'suite']",{'concurrent': 100}
"['empty', 'brach']",{'breach': 91}
"['length', 'child', 'block', 'buildempty', 'error', 'result', 'block', 'intellijempty']",{'length': 100}
"['compact', 'interpolation', 'newlines', 'thing', 'significant', 'space', 'injection']",{'injection': 100}
"['blank', 'heredoc', 'length', 'prefix', 'space']",{'length': 100}
"['kernel', 'importprevents', 'stack', 'recursive', 'overflow']","{'stack': 100, 'overflow': 100}"
"['length', 'prestanble', 'exceeds', 'errorappears', 'environment', 'common', 'normal', 'development']",{'length': 100}
"['permission', 'restrictive']",{'permission': 100}
"['stylistic', 'issue', 'incompatible']",{'issue': 100}
"['nullable', 'generation', 'notnull', 'missedannotation', 'parser']",{'generation': 100}
"['abccc', 'mergereplace', 'incorrect']",{'incorrect': 100}
"['issue', 'browser', 'handler', 'issue', 'title', 'plugin', 'descriptionmessage', 'error']",{'issue': 100}
"['permenant', 'generation', 'increase', 'memory']",{'generation': 100}
"['elixirfile', 'descriptivepointer', 'issue', 'delete']",{'issue': 100}
"['inline', 'numbernumeric', 'chartoken', 'number', 'outer', 'combinednumbereliminate', 'stack']",{'stack': 100}
"['whole', 'hexadecimal', 'digit', 'quotinghandle', 'interger', 'precision']",{'integer': 93}
"['token', 'right', 'prefixconsume', 'expression', 'alwaysright', 'expressionchange', 'issue', 'argument', 'prefix', 'operator', 'alwaysbehavior', 'expressionhighest', 'operator']",{'issue': 100}
"['integer', 'decimal', 'digit', 'invalidallow', 'decimal', 'invalid', 'lexedlexedlexedrestriction', 'decimal', 'invalid', 'validdecimalnumber', 'startdecimal', 'digit', 'invalid', 'seconddecimal', 'invalid', 'triggereither']",{'integer': 100}
"['unknown', 'digit', 'integer']",{'integer': 100}
"['prefixingoperationoperand', 'expression', 'insteadexpression', 'dotidentifier', 'implementrecursion', 'dotidentifieridentifiercorrespondselixirdependency', 'numbervalue', 'maxexpressionmaxexpression', 'correspondselixirdotalias', 'syntax', 'implementeddotalias', 'correspondselixirwithout', 'aliasoutstandingelixir', 'issue', 'kronicdeth', 'intellij']",{'issue': 100}
"['decimal', 'float', 'integer', 'changelogs']",{'integer': 100}
"['mergedecimal', 'float', 'integer']",{'integer': 100}
"['readme', 'decimal', 'float', 'integer']",{'integer': 100}
"['decimal', 'integer']",{'integer': 100}
"['integer', 'obsolete', 'prefixoctal', 'prefixelixir', 'decimal']",{'integer': 100}
"['entire', 'check', 'buffer', 'consumedtoken', 'wrong', 'pushback', 'quote', 'terminator', 'tokentest']",{'buffer': 100}
