message,fuzzy
"['processing', 'parameter', 'crash', 'package', 'annotationkotlinpoet', 'processing', 'parameter', 'crash', 'package', 'annotationhappens', 'problem', 'kotlinpoetbackquotes', 'contains', 'kotlinpoet', 'package', 'return', 'thrown', 'annotationimport', 'rawtype', 'insteadrequire', 'gettypeelementshadowjar', 'processing', 'qualifier', 'package', 'annotationchecknull']",{'crash': 100}
"['issue', 'template']",{'issue': 100}
"['kotlin', 'round', 'package', 'moshiproject', 'kotlin', 'moshiextension', 'kotlin', 'moshiannotation', 'appropriate', 'experimentalnextadapter', 'helperreturn', 'explicit', 'addadapteradapter', 'expressionnextadapter', 'coverageplugin', 'version', 'applyproject', 'coverageremove', 'nextadapterremove', 'function', 'leftoverassertscontract', 'javatype', 'switchspotlessspotlessrawtype', 'extensionrebase', 'issue']",{'issue': 100}
"['metaspace', 'snapshot', 'uppingdokka', 'issue', 'kotlin']",{'issue': 100}
"['publicsquare', 'issue', 'moshinicer', 'value', 'wrapper']",{'issue': 100}
"['jsonvaluesource', 'implementation', 'braceobjectsquare', 'issue', 'moshi']",{'issue': 100}
"['option', 'expose', 'getstringsoption', 'expose', 'getstringsresolveclonegithub', 'whartoncheck', 'mutationunmodifiablestringclonegithub']",{'expose': 100}
"['detection', 'generate', 'impact', 'metadata', 'kotlin', 'application', 'moshisolution', 'trick', 'discussion', 'usingsquare', 'issue', 'moshi']",{'issue': 100}
"['safety', 'thread', 'document']",{'thread': 100}
"['common', 'class', 'common', 'class', 'suppressresolve', 'suppression', 'common', 'blanket', 'couple', 'deprecation', 'followup', 'issue', 'suppressesproper', 'followup', 'result', 'eyeballedwerror', 'projection', 'redundant', 'enablesuppression', 'check', 'werror']",{'issue': 100}
"['metadata', 'visibility', 'parsingclass', 'internal', 'public', 'allowconsistent', 'ensure', 'supertypestypespecs', 'reuse', 'supertype', 'eagerlysquare', 'issue', 'moshi', 'check', 'visibilityresolvecomment']",{'issue': 100}
"['adapter', 'variance', 'incorrect', 'appliedobject', 'argument', 'forceoutdeclaration', 'regressionrecursive', 'createtypevar', 'strip', 'appropriate', 'varianceresolve']",{'incorrect': 100}
"['parameter', 'field', 'annotation', 'precedencefield', 'annotation', 'regressionabsent', 'default', 'ratherwould', 'value', 'parameter', 'behavior', 'incorrect', 'property']",{'incorrect': 100}
"['vararg', 'error', 'declaration', 'length', 'ensure']",{'length': 100}
"['dynamic', 'kclass', 'reference', 'invocationdynamic', 'kclass', 'reference', 'genericgeneration', 'mostlymerge', 'instantiationnewinstance', 'rebase', 'issue']",{'issue': 100}
"['generation', 'inline', 'invocation', 'constructorconstructor', 'local', 'differentiate', 'default', 'property', 'namingcreation', 'constructor', 'invocation', 'methodinliningprimitive', 'explanatory', 'value', 'comment', 'defaultadapter', 'generation', 'constructor', 'invocation', 'computeextraneous', 'space', 'opportunistic', 'double']",{'generation': 100}
"['default', 'invoke', 'kotlin', 'constructorlater', 'constructor', 'initialize', 'invocation', 'default', 'propertyistransientinvoke', 'constructor', 'order', 'parameter', 'default', 'switch', 'propertydefault', 'version', 'createmask', 'renameholder', 'clean', 'result', 'variablereturn', 'parameter', 'otherwiseunnecessary', 'removereference', 'switch', 'localkotlinpoet', 'issue', 'understandusage', 'namedclean', 'debuggingconstructor', 'proguard', 'default', 'targetlookup', 'private', 'property', 'constructordefensive', 'anotheraccept', 'vararg', 'reworkidiomatic', 'littleproguard', 'update']",{'issue': 100}
"['mergemerge', 'variance', 'issue', 'request', 'daugeldaugecodegen', 'issue', 'kotlin', 'variance']",{'issue': 100}
"['issue', 'variance']",{'issue': 100}
"['lookupadapter', 'cache', 'optimistic', 'coulddependedadapter', 'close', 'issue', 'moshi']",{'issue': 100}
"['jsonadapters', 'register', 'documentsquare', 'close', 'issue', 'moshi']",{'issue': 100}
"['peekjson', 'jsonvaluereadervariant', 'update', 'relies', 'jsonutfreaderready', 'quiteiterators', 'straightforwardsplit', 'iterator', 'necessaryplatform', 'cloneable', 'iteratorsconvenient', 'issue', 'moshi']",{'issue': 100}
"['field', 'adapter', 'lookup', 'trackfield', 'adapter', 'lookup', 'trackadapter', 'creation', 'error', 'message', 'tracksingle', 'stack', 'moshiparameter', 'optional', 'fieldname', 'publicsimplify', 'error']",{'stack': 100}
"['kotlin', 'reflectionsquare', 'close', 'issue', 'moshi']",{'issue': 100}
"['property', 'uppercase', 'supportreproduce', 'reportedsquare', 'close', 'issue', 'moshi']",{'issue': 100}
"['transient', 'propertysquare', 'close', 'issue', 'moshi']",{'issue': 100}
"['adapter', 'exception', 'crash', 'otherwiseenclosedissue', 'lookingsquare', 'issue', 'moshi']","{'crash': 100, 'issue': 100}"
"['equalproblem', 'consequenceredundant', 'generatingsquare', 'close', 'issue', 'moshi']",{'issue': 100}
"['adapter', 'codegen', 'method', 'confirmtojson', 'reportattemptsquare', 'issue', 'moshi']",{'issue': 100}
"['isaccessiblesquare', 'issue', 'moshi']",{'issue': 100}
"['adapter', 'error', 'incorrect']",{'incorrect': 100}
"['incorrect', 'owner']",{'incorrect': 100}
"['crash', 'property']",{'crash': 100}
"['close', 'issue', 'moshi']",{'issue': 100}
"['standard', 'adaptersquare', 'close', 'issue', 'moshi']",{'issue': 100}
"['level', 'supportsquare', 'close', 'issue', 'moshi']",{'issue': 100}
"['property', 'supportsynthetic', 'property', 'possiblesynthetic', 'property', 'backingsquare', 'close', 'issue', 'moshi']",{'issue': 100}
"['close', 'issue', 'moshi']",{'issue': 100}
"['negative', 'treatlogic', 'google', 'update', 'issue']",{'issue': 100}
"['implementrenamedimplementation', 'issue', 'codecs']",{'issue': 100}
"['stack', 'jsonreader', 'jsonwriter', 'management', 'promotereuse']",{'stack': 100}
"['square', 'issue', 'moshi']",{'issue': 100}
"['implementsquare', 'issue', 'moshi']",{'issue': 100}
"['increasesquare', 'issue', 'moshi']",{'issue': 100}
"['jsonreadersquare', 'issue', 'moshi']",{'issue': 100}
"['close', 'issue', 'moshi']",{'issue': 100}
"['level', 'limit', 'limit', 'level', 'implicit', 'documentlimit', 'sufficient', 'yield', 'arbitraryfirst', 'depthbroken', 'jsonwriterstack', 'building', 'supportcrash', 'stack', 'sufficient', 'withoutexistingsquare', 'close', 'issue', 'moshi']","{'stack': 100, 'issue': 100}"
"['adapter', 'enclosedbroken', 'becase', 'reflection', 'owner', 'providingspecifysquare', 'close', 'issue', 'moshi']",{'issue': 100}
"['fromjson', 'jsonadapters', 'tojsonsquare', 'close', 'issue', 'moshi']",{'issue': 100}
"['internal', 'googlesquare', 'close', 'issue', 'moshi']",{'issue': 100}
"['platform', 'scala', 'class', 'close', 'issue', 'moshi']",{'issue': 100}
"['google', 'issue']",{'issue': 100}
"['audit', 'linkplainsquare', 'close', 'issue', 'moshi']",{'issue': 100}
"['close', 'issue', 'moshi']",{'issue': 100}
"['failure', 'partial', 'message', 'nicersquare', 'close', 'issue', 'moshi']",{'issue': 100}
"['close', 'issue', 'moshi']",{'issue': 100}
"['expose', 'requestexpose', 'constructor']",{'expose': 100}
"['lookupstack', 'overflow']",{'overflow': 100}
"['request', 'writeralways', 'buffer']",{'buffer': 100}
