message,fuzzy
"['ubuntu', 'workaroundcallables', 'wouldinstallation', 'crash', 'noops', 'workaroundffdcd']",{'crash': 100}
"['length', 'tupleprovides', 'tuple', 'suffixempty', 'suffix', 'stringinstalls', 'suffixpython', 'install', 'buildpython', 'print', 'importbuild']",{'length': 100}
"['normalize', 'copyright', 'pyusb', 'license', 'originallyoriginal', 'author', 'license', 'clausecopyright', 'source', 'notice', 'addedprevious', 'stilllicense', 'changedapache', 'copyright', 'licensenotice', 'adjustedlicense', 'restrictivecompatibility', 'issue', 'createdchange', 'revertedcopyright', 'notice', 'copyright', 'clarify', 'disclaimerauthor', 'original', 'clauseintendedacknowledgement', 'addedsoftware', 'tcltkfecac', 'licenseinformation', 'faadbe', 'standard', 'acdfc', 'apacheclauseapache', 'github']",{'issue': 100}
"['descriptor', 'invalid', 'obviouslyscenario', 'return', 'length', 'device', 'certainleast', 'descriptorlength', 'descriptor', 'specificationstatereturn', 'length', 'value', 'descriptor', 'invalid', 'descriptorrejectedinvalid', 'modify', 'insteadusberror', 'descriptor', 'properlonger', 'result', 'dependsindexerror', 'generic', 'failingusberror', 'catch', 'underlyingindex', 'reading', 'array', 'range', 'indexerrorproduct']",{'length': 100}
"['catch', 'attribute', 'error', 'result', 'threat', 'access', 'attribute']",{'threat': 100}
"['inaccessible', 'attribute', 'attribute', 'devicereason', 'inaccessible', 'relevantpossible', 'permission', 'patch', 'failedobject', 'place', 'accidentalrequire', 'string', 'access', 'filter', 'writedevice']",{'permission': 100}
"['libusb', 'expose']",{'expose': 100}
"['sensitive', 'update', 'tarball', 'package', 'version', 'setuptools']",{'Sensitive': 100}
"['pyusb', 'threadmethod', 'synchronizelibrary', 'thread']",{'thread': 100}
"['setaltinterface', 'requestcompatibility', 'issue', 'setaltinterface', 'function']",{'issue': 100}
"['extra', 'descriptor', 'exposearray', 'libusb', 'provider', 'descriptor', 'containingpython', 'interface', 'expose', 'arrayparse', 'descriptor', 'client']",{'expose': 100}
"['mergebranch', 'readinto', 'mergereuse', 'bufferparameter', 'object', 'equal', 'length', 'value', 'numberactuallyclose']",{'length': 100}
"['inplacearray', 'buffer', 'function', 'output', 'buffer', 'allowsoverhead', 'function', 'request', 'insteadallow', 'overload']",{'buffer': 100}
"['method', 'implementendpoint', 'stall', 'condition', 'awarenessbypass', 'control', 'direct', 'thinkendpoint', 'issue', 'refuse']",{'issue': 100}
"['simpler', 'libusb', 'check', 'errorpython', 'return', 'integer']",{'integer': 100}
"['documentationinterface', 'point', 'numberendpoint', 'issue', 'unique', 'addressbackends', 'acrossinterface']",{'issue': 100}
"['importusberror', 'import', 'deadlock']",{'deadlock': 100}
"['length', 'descriptor', 'limit', 'stringlength', 'firstotherwise', 'combination', 'backend', 'buffer', 'kernellength', 'character', 'legacy', 'functionpyusb']","{'length': 100, 'buffer': 100}"
"['stringpython', 'stringerror', 'control', 'failingcould', 'firmware', 'buffer', 'benchmarklength']",{'buffer': 100}
"['reset', 'source', 'portability', 'regression', 'firmware', 'control', 'microchip', 'buffer', 'removedtrunk', 'pyusb', 'svnroot']",{'buffer': 100}
"['compatibility', 'issue', 'cygwintrunk', 'pyusb', 'svnroot']",{'issue': 100}
"['issue', 'fixedtrunk', 'pyusb', 'svnroot']",{'issue': 100}
"['issue', 'payload', 'fixedtutorial', 'exampletrunk', 'pyusb', 'svnroot']",{'issue': 100}
"['nicholas', 'issue', 'thanks', 'fixedimplementation', 'methodtrunk', 'pyusb', 'svnroot']",{'issue': 100}
"['issue', 'moduletrunk', 'pyusb', 'svnroot']",{'issue': 100}
"['backendbackend', 'instance', 'functionbackend', 'issue', 'libusb', 'fixedcompilation', 'macports', 'support', 'thankstrunk', 'pyusb', 'svnroot']",{'issue': 100}
"['thomas', 'buffer', 'thanks', 'reitmayrtrunk', 'pyusb', 'svnroot']",{'buffer': 100}
