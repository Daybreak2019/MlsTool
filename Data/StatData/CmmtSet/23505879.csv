message,fuzzy
"['polishingdisable', 'sparsetests', 'temporaryanymore', 'crash']",{'crash': 100}
"['exception', 'debug', 'stack', 'issue', 'trace']","{'stack': 100, 'issue': 100}"
"['expose', 'permute']",{'expose': 100}
"['expose', 'repeat']",{'expose': 100}
"['regardless', 'issue', 'sequential', 'executionmodel', 'value', 'configuration']",{'issue': 100}
"['update', 'issue', 'accountissuesupportinput', 'output', 'transposeactual', 'flaky', 'library', 'support', 'directlyissueeigenvectors', 'addedissueissue', 'request', 'compileclean', 'lapacktest']",{'issue': 100}
"['original', 'buffer', 'checkoriginal', 'buffer', 'buffer', 'getgenerationid']",{'buffer': 100}
"['minor', 'issue']",{'issue': 100}
"['slice', 'samediff', 'methodslice', 'creator', 'methodexception', 'gradient', 'incorrect']",{'incorrect': 100}
"['incorrect', 'constructor']",{'incorrect': 100}
"['check', 'length', 'shape']",{'length': 100}
"['placeholder', 'support', 'validation', 'shapeplaceholder', 'support', 'validation', 'shapelocalupdateimportlocallocallocalupdateerror', 'various', 'mappingunknown', 'function', 'value', 'input', 'resolution', 'variableremove', 'concatupdateconcathappends', 'ensure', 'shape', 'input', 'resolution', 'variablemethod', 'secondarymicro', 'tweakmicro', 'tweaklocalupdate', 'unstackissuescalarsmaller', 'samediffconvenience', 'samediff', 'dimension', 'methodfunction', 'increment', 'shapevariable', 'resolution', 'dynamicensure', 'dynamic', 'custom', 'variablefunction', 'graph', 'instance', 'invokereshapeactivationworkaroundaround', 'extraverbosefailingscalar', 'shapeupdateminorminorcorrecttensorflow', 'definitionimcolclass', 'convolution', 'dilationextra', 'issue', 'overload', 'convolutionfunction', 'support', 'propertylocalpropagation', 'result', 'accumulationvariable', 'outputvariablesbufferconfigs', 'initialoutput', 'variable', 'generationoaudit', 'initialpowderivativeupdatesplit', 'index', 'output', 'resolveminor', 'changelocaloutputupdatereduction', 'gradient', 'checkstdev', 'dodiffvalidationgradient', 'method', 'checkstdevimprovement', 'gradient', 'cloner', 'indarrayclass', 'indarrayeverywhere', 'cloner', 'configurationtweak', 'commentcheck', 'additional', 'gradient', 'reductioncommentingchange']",{'issue': 100}
"['issue', 'deeplearningjdaemon']",{'issue': 100}
"['dynamic', 'generation', 'shapecheckpointmatrix', 'softmaxvariable', 'reference']",{'generation': 100}
"['variable', 'generation']",{'generation': 100}
"['scope', 'flatbufferssameidff', 'executionflexible', 'shapeplaceplace', 'customscope', 'buffer']",{'buffer': 100}
"['length', 'check']",{'length': 100}
"['improvementgeneration', 'workspaceprofiler', 'generation', 'check']",{'generation': 100}
"['basic', 'importbasic', 'protoexternalconflict', 'namingextra', 'conversion', 'methodbasic', 'class', 'intermediateinput', 'length', 'compilesvarious', 'intermediate', 'representation', 'conversionfunction', 'method', 'differential', 'refactorprotobuf', 'basic', 'intermediate', 'representation', 'disparate', 'mapperimport', 'tensorflow', 'generalizecreation', 'import', 'redudnant', 'variableclass', 'delete', 'nodemappergatherupdate']",{'length': 100}
"['javadoc', 'incorrect', 'indarray', 'modifyparameter', 'incorrect', 'description']",{'incorrect': 100}
"['serverstacktraces', 'development', 'single', 'expose']",{'expose': 100}
"['lossbinaryxent', 'underflow', 'probability']",{'underflow': 100}
"['mergedeeplearningj', 'request', 'issue', 'huitseeker', 'mergelifecycle', 'eclipse', 'maven', 'error']",{'issue': 100}
"['length', 'array', 'ensure']",{'length': 100}
"['length', 'array', 'ensure']",{'length': 100}
"['bfcdc', 'cddbb', 'mergerequest', 'deeplearningjavoil', 'underflow', 'mcxent', 'softmax', 'numerical']",{'underflow': 100}
"['avoil', 'underflow', 'mcxent', 'softmax', 'numerical']",{'underflow': 100}
"['reallocation', 'databuffer', 'length']",{'length': 100}
"['bddef', 'mergerequest', 'deeplearningjdevice', 'length', 'manager', 'check']",{'length': 100}
"['device', 'length', 'manager', 'check']",{'length': 100}
"['stack', 'overflow']","{'stack': 100, 'overflow': 100}"
"['mergerequest', 'ndjbufferso', 'deeplearningjstack', 'buffer', 'overflow']","{'buffer': 100, 'overflow': 100}"
"['stack', 'buffer', 'overflow']","{'stack': 100, 'buffer': 100, 'overflow': 100}"
"['shannon', 'entropy']",{'entropy': 100}
"['length', 'validation']",{'length': 100}
"['buffer', 'update', 'reallocation']",{'buffer': 100}
"['issue', 'checkout', 'contextbranch', 'single', 'jenkins']",{'issue': 100}
"['minor', 'dependency', 'maven', 'goody', 'unusedremove', 'dependency', 'mavenpartial', 'deeplearningj', 'issue', 'completionrevert', 'platform', 'dpeendency', 'commentspurious', 'warning', 'eclipse', 'import', 'suppressspark', 'version']",{'issue': 100}
"['fedce', 'mergemaster', 'request', 'jarney', 'mergefunction', 'assertion', 'issue']",{'issue': 100}
"['output', 'label', 'accomodate', 'custom', 'issue', 'assertion', 'function']",{'issue': 100}
"['fcbcee', 'mergemaster', 'request', 'rcorbishcompile', 'issue', 'lapack']",{'issue': 100}
"['buffer', 'circular', 'realloc']",{'buffer': 100}
"['buffer', 'circular']",{'buffer': 100}
"['adagrad', 'issue', 'stride']",{'issue': 100}
"['buffer', 'ensure', 'capacity']",{'buffer': 100}
"['mergerequest', 'huitseeker', 'template', 'mergetemplate', 'issue']",{'issue': 100}
"['template', 'issue', 'addedrequest', 'template', 'issue']",{'issue': 100}
"['mergebranch', 'master', 'mergeconflictbackends', 'concurrency', 'backend', 'impls']",{'concurren': 90}
"['mergecleanup', 'request', 'jackson', 'huitseeker', 'mergeperform', 'issue', 'compile']",{'issue': 100}
"['deeplearningjarray', 'random', 'issue', 'small', 'failure']",{'issue': 100}
"['array', 'random', 'issue', 'small', 'failure']",{'issue': 100}
"['deeplearningjcorner', 'length', 'shape', 'assert']",{'length': 100}
"['dimension', 'tadshapemysterious', 'crash']",{'crash': 100}
"['numerical', 'valueof', 'overflow']",{'overflow': 100}
"['retransmission', 'messagetimeouts', 'configurablebetter', 'thread', 'safetydelivery', 'fallback']",{'thread': 100}
"['style', 'issue']",{'issue': 100}
"['whole', 'stack', 'process', 'trace', 'training']",{'stack': 100}
"['stack', 'trace']",{'stack': 100}
"['buffer', 'profiler', 'length']","{'buffer': 100, 'length': 100}"
"['deeplearningjreproduce', 'issue']",{'issue': 100}
"['reproduce', 'issue']",{'issue': 100}
"['hstack', 'order']",{'stack': 91}
"['initial', 'crash']",{'crash': 100}
"['function', 'activationimplement', 'issue', 'deeplearningj']",{'issue': 100}
"['duplicate', 'issue']",{'issue': 100}
"['interface', 'declaration', 'issue']",{'issue': 100}
"['confim', 'issue']",{'issue': 100}
"['increase', 'precision', 'issue', 'warning']",{'issue': 100}
"['integer', 'division']",{'integer': 100}
"['singleton', 'wrapper', 'ndjblas', 'nativeopsoptional', 'thread', 'override']",{'thread': 100}
"['issue', 'softmax']",{'issue': 100}
"['issue', 'softmax']",{'issue': 100}
"['issue', 'softmax']",{'issue': 100}
"['function', 'entropy']",{'entropy': 100}
"['timingcheck', 'cache', 'overflow']",{'overflow': 100}
"['dropconnect', 'deeplearningj', 'issue']",{'issue': 100}
"['length', 'index', 'getcol', 'getrow']",{'length': 100}
"['length', 'index', 'getcol', 'getrow']",{'length': 100}
"['deeplearningjdimension', 'length']",{'length': 100}
"['dimension', 'length']",{'length': 100}
"['eaddb', 'mergerequest', 'deeplearningjmatter', 'precision', 'cudnn', 'issue']",{'issue': 100}
"['matter', 'precision', 'cudnn', 'issue']",{'issue': 100}
"['deeplearningjremove', 'generation', 'garbage']",{'generation': 100}
"['generation', 'garbage']",{'generation': 100}
"['generatejavacpp', 'pointer', 'method', 'createinterface', 'normalization', 'standardinput', 'streamstream', 'strideof', 'shapeshape', 'buffer', 'element', 'stride']",{'buffer': 100}
"['constant', 'cross', 'thread']",{'thread': 100}
"['localization', 'thread', 'multi']",{'thread': 100}
"['trace', 'reqmem', 'thread']",{'thread': 100}
"['trace', 'reqmem', 'thread']",{'thread': 100}
"['trace', 'thread']",{'thread': 100}
"['mergebranch', 'master', 'mergeconflictjcublas', 'backends', 'linalg', 'buffer', 'backend', 'impls']",{'buffer': 100}
"['datatypechangescolumnlocalvector', 'indexingelement', 'serializationchange', 'inheritance', 'issue']",{'issue': 100}
"['inheritance', 'issue']",{'issue': 100}
"['indarray', 'hstack', 'vstack', 'accepts', 'collection']",{'stack': 91}
"['buffer', 'hickups', 'creation']",{'buffer': 100}
"['deeplearningjconcat', 'issue']",{'issue': 100}
"['defaultrandom', 'putscalar', 'buffer', 'optimization']",{'buffer': 100}
"['switch', 'object', 'basendarray', 'shapeinfo', 'nioint', 'buffer']",{'buffer': 100}
"['nomorenioconcatasnio', 'buffer']",{'buffer': 100}
"['asnio', 'buffer']",{'buffer': 100}
"['vstack', 'concat']",{'stack': 91}
"['deeplearningj', 'epsilon', 'issue', 'modification', 'initialize', 'value']",{'issue': 100}
"['deeplearningjoutput', 'generation', 'array', 'number', 'random', 'overload', 'order']",{'generation': 100}
"['output', 'generation', 'array', 'number', 'random', 'overload', 'order']",{'generation': 100}
"['buffer', 'asnioint', 'issue', 'shape']","{'buffer': 100, 'issue': 100}"
"['vstack', 'order', 'concat', 'shape']",{'stack': 91}
"['block', 'limit', 'thread']",{'thread': 100}
"['block', 'limit', 'thread']",{'thread': 100}
"['exception', 'issue']",{'issue': 100}
"['deeplearningjminor', 'buffer']",{'buffer': 100}
"['minor', 'buffer']",{'buffer': 100}
"['buffer', 'jcuda', 'eradication']",{'buffer': 100}
"['buffer', 'jcuda', 'eradication']",{'buffer': 100}
"['minor', 'update', 'openmp', 'thread']",{'thread': 100}
"['localmatrix', 'ensure', 'vector', 'returnedopenmp', 'thread', 'abilityopenmp', 'thread', 'ability']",{'thread': 100}
"['openmp', 'thread', 'ability']",{'thread': 100}
"['ffddee', 'mergerequest', 'concurrency']",{'concurren': 90}
"['ffddee', 'mergebranch', 'master', 'concurrency', 'mergeconflictbackends', 'linalg', 'convolutionbackends', 'linalg', 'convolution']",{'concurren': 90}
"['length', 'shape']",{'length': 100}
"['length', 'shape']",{'length': 100}
"['eeeddf', 'mergebranch', 'master', 'concurrency']",{'concurren': 90}
"['kernel', 'concurrency']",{'concurren': 90}
"['kernel', 'concurrency']",{'concurren': 90}
"['strangedupstrangedupbinary', 'issue', 'javacpp', 'currenty', 'serialization', 'serde']",{'issue': 100}
"['deviceid', 'thread']",{'thread': 100}
"['eceedd', 'mergerequest', 'mergedaemnoic', 'thread', 'device']",{'thread': 100}
"['daemnoic', 'thread', 'device']",{'thread': 100}
"['buffer', 'native']",{'buffer': 100}
"['issue', 'offset']",{'issue': 100}
"['interface', 'buffer', 'update']",{'buffer': 100}
"['ddade', 'mergemaster', 'request', 'konradkalita', 'mergeinvertmatrix', 'input', 'validation', 'issue']",{'issue': 100}
"['transitcontext', 'changesplit', 'thread', 'separatespeedup', 'cublas']",{'thread': 100}
"['buffer', 'update', 'shape']",{'buffer': 100}
"['scalar', 'creation', 'issue', 'shape']",{'issue': 100}
"['extra', 'direct', 'buffer']",{'buffer': 100}
"['aadecd', 'mergerequest', 'deeplearningjcalculation', 'indarray', 'issue', 'biascorrection']",{'issue': 100}
"['issue', 'setupboolean', 'issue', 'setup']",{'issue': 100}
"['alloc', 'buffer']",{'buffer': 100}
"['alloc', 'buffer']",{'buffer': 100}
"['alloc', 'buffer']",{'buffer': 100}
"['dacfb', 'mergerequest', 'importfix', 'deeplearningjimport', 'issue']",{'issue': 100}
"['import', 'issue']",{'issue': 100}
"['mergerequest', 'importfix', 'deeplearningjimport', 'issue']",{'issue': 100}
"['import', 'issue']",{'issue': 100}
"['storage', 'pointer', 'issue']",{'issue': 100}
"['communication', 'strategy', 'pointer', 'allocation', 'buffer', 'device']",{'buffer': 100}
"['index', 'shape', 'issue']",{'issue': 100}
"['bfbccd', 'mergerequest', 'queueopt', 'deeplearningjswitch', 'property', 'number', 'system', 'thread']",{'thread': 100}
"['switch', 'property', 'number', 'system', 'thread']",{'thread': 100}
"['underflow', 'logsoftmax', 'possible', 'update']",{'underflow': 100}
"['calculation', 'tensor', 'parallel', 'thread']",{'thread': 100}
"['daemon', 'switch', 'thread']",{'thread': 100}
"['calculation', 'accum', 'tensor', 'dimension', 'iaccum', 'thread']",{'thread': 100}
"['reflect', 'allocation', 'action', 'buffer', 'support', 'direct', 'update']",{'buffer': 100}
"['calculation', 'tensor', 'original', 'thread']",{'thread': 100}
"['tensor', 'buffer', 'ndarrays', 'calculation']",{'buffer': 100}
"['generation', 'indarray', 'shape', 'subtract', 'utils']",{'generation': 100}
"['mergetaisukeoe', 'length', 'request', 'intervalindex', 'mergeintervalndex', 'length']",{'length': 100}
"['intervalindex', 'length']",{'length': 100}
"['length', 'ndarrayindexall']",{'length': 100}
"['stack', 'manipulation', 'implementation']",{'stack': 100}
"['generation', 'operation', 'bytecode']",{'generation': 100}
"['mergematrix', 'request', 'concat', 'issue', 'gortazar', 'vector', 'mergematrix', 'concat', 'vector', 'issue']",{'issue': 100}
"['matrix', 'concat', 'vector', 'issue']",{'issue': 100}
"['issue', 'vector']",{'issue': 100}
"['cddbdtaisukeoe', 'request', 'interval', 'stride', 'mergeequal', 'intervalindex', 'length', 'stride']",{'length': 100}
"['intervalindex', 'length', 'stride']",{'length': 100}
"['mergerequest', 'taisukeoe', 'complexcalc', 'mergecalculation', 'issue', 'complexnumber']",{'issue': 100}
"['calculation', 'issue', 'complexnumber']",{'issue': 100}
"['daemon', 'thread']",{'thread': 100}
"['isamax', 'length']",{'length': 100}
"['context', 'ensure', 'thread']",{'thread': 100}
"['context', 'ensure', 'thread']",{'thread': 100}
"['buffer', 'serialization', 'issue']","{'buffer': 100, 'issue': 100}"
"['buffer', 'persistence']",{'buffer': 100}
"['whole', 'static', 'buffer', 'linear', 'ndarray', 'offset', 'optimization']",{'buffer': 100}
"['oblong', 'length', 'array', 'offset']",{'length': 100}
"['device', 'synchronize', 'thread']",{'thread': 100}
"['buffer', 'scalar']",{'buffer': 100}
"['migrate', 'buffer', 'wrapper', 'stride']",{'buffer': 100}
"['buffer', 'serialization']",{'buffer': 100}
"['buffer', 'serialization']",{'buffer': 100}
"['buffer', 'serialization']",{'buffer': 100}
"['buffer', 'serialization']",{'buffer': 100}
"['length', 'vector']",{'length': 100}
"['length', 'vector']",{'length': 100}
"['jblas', 'backend', 'issue', 'offset']",{'issue': 100}
"['issue', 'stream']",{'issue': 100}
"['length', 'pointer', 'device', 'allocation', 'track', 'alongensure', 'kernel', 'context']",{'length': 100}
"['thread', 'stream']",{'thread': 100}
"['float', 'generate', 'buffer']",{'buffer': 100}
"['mergebranch', 'master', 'deeplearningjconflictbuffer', 'linalglinalg', 'ndarraylinalgjblas', 'linalgcommon', 'jcublas', 'parent', 'linalgjcublas', 'linalg', 'buffer', 'parent', 'commonjcublas', 'linalg', 'buffer', 'parent', 'commonjcublas', 'linalg', 'buffer', 'parent', 'commonjcublas', 'linalg', 'executioner', 'parent']",{'buffer': 100}
"['buffer', 'class']",{'buffer': 100}
"['sense', 'databuffer', 'integer', 'dtype']",{'integer': 100}
"['point', 'indarray', 'buffer', 'offset', 'segfault']",{'buffer': 100}
"['super', 'buffer', 'stride']",{'buffer': 100}
"['manager', 'reaper', 'buffer']",{'buffer': 100}
"['allocation', 'buffer']",{'buffer': 100}
"['thread', 'device']",{'thread': 100}
"['generation', 'value', 'range']",{'generation': 100}
"['switch', 'backup', 'cleanup', 'phantom', 'refernences', 'javad', 'disposer', 'thread']",{'thread': 100}
"['default', 'random', 'thread', 'empty']",{'thread': 100}
"['block', 'thread', 'customization']",{'thread': 100}
"['buffer', 'variance']",{'buffer': 100}
"['custom', 'buffer', 'serialization']",{'buffer': 100}
"['buffer', 'update', 'ndarray']",{'buffer': 100}
"['buffer', 'float']",{'buffer': 100}
"['interface', 'buffer']",{'buffer': 100}
"['factory', 'buffer', 'ndarray', 'decouple']",{'buffer': 100}
"['adagrad', 'buffer', 'slice']",{'buffer': 100}
"['normal', 'buffer', 'return', 'element', 'flush', 'asdouble', 'current', 'optimize', 'memory']",{'buffer': 100}
"['statement', 'issue']",{'issue': 100}
"['neutral', 'buffer', 'element', 'system', 'configuration']",{'buffer': 100}
"['vstack', 'hstack']",{'stack': 91}
"['vstack', 'hstack', 'array']",{'stack': 91}
"['rename', 'hstack', 'concat', 'vstack']",{'stack': 91}
