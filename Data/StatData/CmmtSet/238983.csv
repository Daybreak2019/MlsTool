message,fuzzy
"['edfdbjhottenstein', 'instance', 'support', 'request', 'kwargargument', 'keyword', 'issue']",{'issue': 100}
"['kwargs', 'issue']",{'issue': 100}
"['mergerequest', 'bryanp', 'kwargs', 'mergemethod', 'argument', 'keyword', 'issue']",{'issue': 100}
"['existencecause', 'rspec', 'railtie', 'issue']",{'issue': 100}
"['mergerspec', 'security', 'warning', 'requestminimum', 'version']",{'Security': 100}
"['security', 'update']",{'Security': 100}
"['bbdcb', 'mergerequest', 'negative', 'wrong', 'issue']",{'issue': 100}
"['cbdae', 'mergerequest', 'rspec', 'mergecould', 'argument', 'chain', 'constrain', 'message', 'issue']",{'issue': 100}
"['fdaac', 'mergerequest', 'alxberardi', 'mergetestdouble', 'return', 'issue']",{'issue': 100}
"['mergerequest', 'deivid', 'rodriguezcheck', 'jruby', 'incorrect', 'version']",{'incorrect': 100}
"['check', 'jruby', 'incorrect', 'versionprevious', 'check', 'jruby']",{'incorrect': 100}
"['method', 'subclass', 'class', 'exception', 'stubbedmethod', 'singleton', 'reboundmethod', 'singleton', 'definedoriginal', 'cache', 'methodraise', 'original', 'typeerrormethod', 'neveralternate', 'implementation', 'catchimplementation', 'expose', 'requiresdetailbehavior', 'expectedclass', 'superclass', 'method']",{'expose': 100}
"['aeefbrequest', 'alexdowad', 'mergeexpectation', 'overflow', 'stack']","{'overflow': 100, 'stack': 100}"
"['expectation', 'method', 'overflow', 'stack', 'failsprocess', 'method', 'error', 'message', 'errorgenerator', 'array', 'wouldobject', 'arrayjoinedmethod', 'expectation', 'internalcause', 'expectation', 'infinite', 'resultingstackgenerate', 'array', 'error']","{'overflow': 100, 'stack': 100}"
"['mergerequest', 'rspec', 'mergereentrant', 'switch', 'deadlock']",{'deadlock': 100}
"['switch', 'deadlock']",{'deadlock': 100}
"['mergerequest', 'issue']",{'issue': 100}
"['short', 'length', 'increase', 'relish', 'lookingsource', 'markdown', 'hyperlinklonger']",{'length': 100}
"['error', 'message', 'issue']",{'issue': 100}
"['wrong', 'doublemethod', 'generator', 'error', 'class', 'check', 'levelmessage', 'indicateclass', 'converse', 'instance', 'doublerspec', 'issue']",{'issue': 100}
"['message', 'error', 'indication', 'whetherobject', 'class', 'instance', 'changecreate', 'generator', 'error', 'message', 'specificdefault', 'class', 'instance', 'whetherobject', 'method', 'implementrspec', 'issue']",{'issue': 100}
"['argument', 'formattingrspec', 'issue']",{'issue': 100}
"['expose', 'object', 'class', 'target']",{'expose': 100}
"['address', 'request', 'issueaddress', 'issue']",{'issue': 100}
"['cbcad', 'dacdc', 'mergerspec', 'generator', 'error', 'request', 'samphippengenerator', 'error', 'length']",{'length': 100}
"['generator', 'error', 'length']",{'length': 100}
"['followup', 'request', 'issuefollowup', 'issue']",{'issue': 100}
"['thread', 'rspec', 'spacepossible', 'thread', 'problem', 'sleep']",{'thread': 100}
"['mergerequest', 'issue', 'block', 'setting', 'super', 'issue']",{'issue': 100}
"['rescue', 'leaveinconsistent', 'partial', 'doublestaterescue', 'issue']",{'issue': 100}
"['mergerequest', 'issue']",{'issue': 100}
"['refactor', 'stack']",{'stack': 100}
"['helpful', 'clarifygiven', 'expectation', 'rspecsimilar', 'issue']",{'issue': 100}
"['stuff', 'issue']",{'issue': 100}
"['matcher', 'directlyrather', 'removeexercise', 'issue', 'surfacedmessage', 'failureconstraint', 'confusingtodos', 'remindconstraint', 'confusion', 'disallowpendingenable', 'necessary', 'removal', 'changecurrent']",{'issue': 100}
"['style', 'issue']",{'issue': 100}
"['frozen', 'bizare', 'proxy', 'duplicate', 'issue']",{'issue': 100}
"['warning', 'output', 'deprecationrspec', 'issue']",{'issue': 100}
"['methoddouble', 'implementation', 'stashanyinstance', 'method', 'overridden', 'recorderobject', 'implementation', 'wouldfuture', 'stack', 'singleton', 'wouldmethod', 'object', 'stashanyinstance', 'class', 'singleton', 'defines', 'recorder', 'beginmethod', 'class', 'objectmethod', 'singleton', 'rspec', 'original', 'stashingmethod', 'removedobject', 'implementation', 'original', 'singletonancestor', 'support', 'issuemethod', 'affectfallback', 'method', 'behavior', 'stashoriginal', 'behaviorrefactors', 'reasoneasier', 'responsibility', 'methoddoubleresponsibilityclose']",{'stack': 100}
"['deprecation', 'issue']",{'issue': 100}
"['deprecation', 'issue']",{'issue': 100}
"['mergerequest', 'issue', 'error', 'message', 'forgets', 'issue']",{'issue': 100}
"['method', 'default', 'error', 'message', 'forgets', 'issue']",{'issue': 100}
"['acaberequest', 'issue']",{'issue': 100}
"['support', 'issue']",{'issue': 100}
"['specific', 'issue']",{'issue': 100}
"['mergerequest', 'issue']",{'issue': 100}
"['expose', 'method', 'object', 'business']",{'expose': 100}
"['cafff', 'mergerequest', 'issue', 'cengineeringsupport', 'issue']",{'issue': 100}
"['support', 'issue']",{'issue': 100}
"['acdeerequest', 'issue']",{'issue': 100}
"['mergerequest', 'issue', 'close', 'support']",{'issue': 100}
"['issue', 'replicate']",{'issue': 100}
"['address', 'update', 'issue']",{'issue': 100}
