message,fuzzy
"['arbitrary', 'sleep', 'removelaunch', 'sleep', 'launch', 'actuallytherefore', 'synchronizedlaunch', 'thread', 'launcher', 'startcontextreturnreplace', 'unsynchronize', 'sleep', 'launchmethod', 'relevantworse', 'synchronize']",{'thread': 100}
"['arbitrary', 'sleep', 'removelaunch', 'sleep', 'launch', 'actuallytherefore', 'synchronizedlaunch', 'thread', 'launcher', 'startcontextreturnreplace', 'unsynchronize', 'sleep', 'launchmethod', 'relevantworse', 'synchronize']",{'thread': 100}
"['dependency', 'removeheritrix', 'eliminatesmavenfirst', 'method', 'unnecessarysince', 'cooky', 'buffer', 'savingbufferedwriter', 'reason']",{'buffer': 100}
"['mergeclient', 'request', 'updateclient', 'update', 'security', 'library', 'address']",{'Security': 100}
"['client', 'update', 'security', 'library', 'address']",{'Security': 100}
"['cdbfba', 'mergecleaner', 'thread', 'request', 'configureevictor']",{'thread': 100}
"['concurrentto', 'consistent']",{'concurrent': 91}
"['mitigate', 'failure', 'randomarbitary', 'value', 'prace', 'possible', 'quitecount', 'thread', 'cookie', 'practice', 'limitquite', 'worstcount', 'thread', 'stale']",{'thread': 100}
"['thread', 'spawn']",{'thread': 100}
"['mergerequest', 'issue', 'ruebotchangelog', 'address']",{'issue': 100}
"['thread', 'threadlocal', 'usingthread', 'thing', 'easiestconnection', 'hbase']",{'thread': 100}
"['fdadforigin', 'error', 'master', 'remoteorigin', 'mastertravisci', 'setupcuris', 'status', 'fetch', 'extraction', 'testingextraction', 'issue', 'challenge', 'alertredirection', 'reffer', 'content', 'location', 'headerkafkakafka', 'upgradesomewhat', 'browser']",{'issue': 100}
"['issue', 'challenge', 'alertnoisy', 'issue', 'challenge', 'alertaccount', 'error', 'empty', 'fatal', 'update']","{'issue': 100, 'fatal': 100}"
"['exceptionignorecookies', 'thread']",{'thread': 100}
"['nlevitt', 'request', 'receiverreceiver', 'deadlock']",{'deadlock': 100}
"['thread', 'producer', 'crawl', 'toepool']",{'thread': 100}
"['length', 'empty', 'response', 'content', 'header']",{'length': 100}
"['length', 'world', 'update']",{'length': 100}
"['setter', 'writerevisitfor', 'restore', 'issue', 'value', 'ignore', 'warning']",{'issue': 100}
"['aaafarequest', 'umbra', 'nlevittshutdown', 'trace', 'severe', 'normal', 'stack']",{'stack': 100}
"['shutdown', 'trace', 'severe', 'normal', 'stack']",{'stack': 100}
"['ddcbf', 'mergerequest', 'umbra', 'nlevittstarter', 'thread', 'crawl', 'finish', 'restarter']",{'thread': 100}
"['starter', 'thread', 'crawl', 'finish', 'restarter']",{'thread': 100}
"['deadlock', 'deactivatequeue', 'kenji']",{'deadlock': 100}
"['infinite', 'thread', 'amqpurlreceiver']",{'thread': 100}
"['annotation', 'restore', 'binary', 'thread', 'severe', 'processbinary']",{'thread': 100}
"['trace', 'beansexception', 'stack']",{'stack': 100}
"['startup', 'deadlock', 'crawl', 'beansexception']",{'deadlock': 100}
"['issue', 'extractor', 'archive', 'benefit', 'improvement', 'address']",{'issue': 100}
"['mistake', 'integer', 'master', 'arithmetic']",{'integer': 100}
"['template', 'generation', 'report', 'template', 'report', 'template']",{'generation': 100}
"['buffer', 'bufferimpl', 'session', 'ummsession']",{'buffer': 100}
"['millerjobname', 'incorrect', 'engine', 'representation', 'return']",{'incorrect': 100}
"['jobname', 'incorrect', 'engine', 'representation', 'return', 'namedgeneration', 'addedportion', 'generation']","{'incorrect': 100, 'generation': 100}"
"['fetchhttp', 'thread', 'support', 'contamination', 'proxy', 'credential', 'request']",{'thread': 100}
"['buffer', 'member', 'recorddns', 'dummy']",{'buffer': 100}
"['buffer', 'kenji', 'patchdefault', 'objectbuffers', 'necessary', 'weakreference']",{'buffer': 100}
"['toepools', 'condition', 'problem', 'multiple', 'duplicate', 'concurrent', 'happensafest', 'launch', 'blunt', 'method', 'synchronize', 'performance']",{'concurrent': 100}
"['synchronize', 'synchronization', 'method', 'inconsistent', 'concurrent']",{'concurrent': 100}
"['extractorjs', 'unescape', 'issue']",{'issue': 100}
"['storedqueuerobust', 'concurrent']",{'concurrent': 100}
"['issue', 'launch', 'browseerror', 'catch', 'entire', 'trace', 'renderinterpretation', 'property', 'listsnapshots', 'invalid', 'getsnapshots', 'rename']",{'issue': 100}
"['begintextseedmodulerefactor', 'announceseeds', 'thread', 'value', 'signal', 'thread', 'countdownlatch', 'callingprofile', 'crawlerdefault', 'meaning']",{'thread': 100}
"['buffer', 'actualtextutilsinput', 'dereference']",{'buffer': 100}
"['catch', 'eritrix', 'heritrix', 'tangentrecorderbasis', 'memory', 'prefixreveal', 'buffer']",{'buffer': 100}
"['connection', 'optionfetchhttpdefault', 'usehttp', 'content', 'track', 'inputoffer', 'alternate', 'stream', 'replaymessagebodyentity', 'necessarynecessary', 'content', 'decompressedcharsequence', 'content', 'replaybuffer', 'random', 'accesstouch', 'buffer', 'short', 'decode', 'matter', 'stream', 'random', 'stream', 'recorder', 'functionalitycharset', 'instance', 'ratherseekable', 'constructor', 'convenience']",{'buffer': 100}
"['exceptioninvalid', 'class', 'timeoutseconds', 'propertytimeoutseconds', 'propertyinvalid', 'parameter', 'setter', 'writablegetter', 'return', 'matchchange', 'integer']",{'integer': 100}
"['saxexception', 'marshaldocumentbroken', 'connection', 'eofexceptionthrow', 'trace', 'stack', 'massiveappropriate']",{'stack': 100}
"['attempt', 'length', 'previous', 'inflater', 'exhaust']",{'length': 100}
"['issue', 'robustify', 'window', 'message', 'improvebetter', 'attempt', 'target', 'filesystems', 'timely', 'writer', 'ensure', 'filename', 'unique', 'restore']",{'issue': 100}
"['improper', 'literal', 'javascript', 'stringextractorjsinterpretation', 'fallback', 'creation']",{'improper': 100}
"['putifabsent', 'conditionstats', 'constructor', 'creation', 'condition', 'anotherstats', 'structure', 'object', 'thread', 'unsafe', 'switch', 'sincethread']",{'thread': 100}
"['thread', 'writer', 'stats']",{'thread': 100}
"['arcwriterwarcarcadapt', 'object', 'settingflush', 'stream', 'monitor', 'special', 'access', 'object', 'setting', 'value', 'copyingwritebuffersize', 'frequentflushes', 'setting', 'optimizationarcwriterpooladapt', 'object', 'settingadhoc', 'testingwarcwriteradapt', 'object', 'settingelsewhere', 'checksize', 'rollover', 'removegenerator', 'method', 'extraneous', 'staticwarcwriterpooladapt', 'object', 'settingadhoc', 'classwarcwritertestadapt', 'object', 'interface', 'favorprovide', 'record', 'common', 'interface', 'classadapt', 'deriveavoid', 'exception', 'throwingarcwritertestadapt', 'object', 'settingwarcs', 'checksize', 'rollover', 'recordstats', 'processor', 'calculate', 'addition', 'offset', 'positiondelegate', 'generation', 'recordwritebuffersize', 'interface', 'frequentflushes']",{'generation': 100}
"['resource', 'profile', 'engine', 'archive', 'restlet', 'crawlerresource', 'profile', 'synch', 'engine', 'archive', 'restlet', 'crawler']",{'synch': 100}
"['frontier', 'method', 'synchronization', 'workqueue', 'removemanagerthread', 'outbound', 'inbound', 'simplify', 'queue', 'removereceive', 'findeligible', 'finish', 'scheduleeliminate', 'holdqueues', 'settingqueue', 'target', 'sendtoqueue', 'thread', 'reentrant', 'safety', 'findeligibleuri', 'queuefront', 'session', 'budget', 'ready', 'trigger', 'active', 'arrivinginactivequeues', 'management', 'simplifysimplify', 'overflowworkqueueactive', 'budget', 'redefine', 'identical', 'major', 'queue', 'instance', 'cache', 'allqueues', 'synchronizebudget', 'frontier', 'recovery', 'checkpoint', 'reset', 'queuestress', 'method']",{'thread': 100}
"['deadlock', 'latestassume', 'thread', 'current', 'batch', 'draininbound', 'queue']","{'deadlock': 100, 'thread': 100}"
"['deadlock', 'unreleasedmethod', 'enddispositiondisposition', 'method', 'enddisposition', 'exclusive', 'release', 'completion']",{'deadlock': 100}
"['common', 'apache', 'removecommon', 'apachereference', 'common', 'class', 'removeclass', 'round', 'dispose', 'creation', 'instance', 'robinslows', 'rollover', 'crawl', 'writer', 'recyclerollover', 'external', 'ready', 'check', 'isoversizerollover', 'record', 'splitimplement', 'makewriter', 'appropriate', 'class', 'removenever', 'behavior', 'timeout', 'adjustconstructor', 'adjustcomplete', 'poolmaxwaitms', 'eventual', 'thread', 'reusable', 'creation']",{'thread': 100}
"['prevents', 'premature', 'length', 'bloomfilterbit', 'bitfield', 'saturationsubarrays', 'class', 'bitfields', 'round', 'option', 'redundant', 'performance', 'powerproblem', 'number', 'bitwise', 'overflowmethod', 'buggy', 'redundantsourceconfiguration', 'parameter', 'flexibility', 'filter', 'instance', 'addedcommentfilter', 'paramters']",{'length': 100}
"['prevents', 'premature', 'length', 'bloomfilterbit', 'bitfield', 'saturationconstructor', 'length', 'arithmetic', 'calculatingslight', 'optimizationbloom', 'superclass', 'class', 'abstractbottom', 'default', 'sanity', 'check']",{'length': 100}
"['performanceunique', 'override', 'observation', 'thread', 'bottleneck', 'callingimplementation', 'override', 'comment', 'subclass']",{'thread': 100}
"['infinite', 'error', 'fatal', 'custom', 'presetgetregex']",{'fatal': 100}
"['stack', 'extraneous']",{'stack': 100}
"['incorrect', 'source', 'crawl', 'persist', 'loadedinsist', 'catalog', 'getclasscatalogmember', 'source']",{'incorrect': 100}
"['incorrect', 'operator', 'string', 'comparisonobject', 'value']",{'incorrect': 100}
"['thread', 'facility', 'special', 'independent', 'recorder', 'usable', 'crawlerthread', 'reusable', 'store', 'instance', 'recorder', 'local', 'staticreusable', 'instance', 'recorder']",{'thread': 100}
"['certificate', 'attempt', 'issuer', 'problem', 'server', 'archive', 'verification', 'continuum']",{'issue': 91}
"['timingmanagerthread', 'stats', 'thread', 'recovery']",{'thread': 100}
"['output', 'trace', 'thread', 'response', 'severe', 'exception', 'response', 'exception', 'error', 'thread', 'server', 'warningclose', 'writer', 'writehtml']",{'thread': 100}
"['thread', 'format']",{'thread': 100}
"['internal', 'setmap', 'ensure', 'concurrentconvert', 'sheetsbyname', 'implementation', 'concurrent', 'classconcurrent', 'sharedmap', 'implementation', 'convertcompareto', 'problem', 'ensure']",{'concurrent': 100}
"['report', 'generation', 'showinggethrefpath', 'public', 'utility', 'method', 'staticgethrefpath']",{'generation': 100}
"['prerequisite', 'overlay', 'parallelqueues', 'massive', 'repeat', 'fetch', 'queuefound', 'issue', 'scheduling']",{'issue': 100}
"['thread', 'stuckalternate', 'object', 'implementation', 'cache', 'simplifiedobject', 'memory', 'cache', 'concurrenttrivial', 'provision', 'instance', 'interfaceimplement', 'getoruse', 'mainlytrivial', 'implementation', 'memory', 'cachedbdbmap', 'carvedrefactor', 'source', 'utility', 'toggle', 'cachedbdbmap', 'methodmethod', 'environment', 'convenienceothersplace', 'concurrentmap', 'update']",{'thread': 100}
"['thread', 'stuckalternate', 'object', 'implementation', 'cache', 'simplifiedobject', 'memory', 'cache', 'concurrenttrivial', 'provision', 'instance', 'interfaceimplement', 'getoruse', 'mainlytrivial', 'implementation', 'memory', 'cachedbdbmap', 'carvedrefactor', 'source', 'utility', 'toggle', 'cachedbdbmap', 'methodmethod', 'environment', 'convenienceothersplace', 'concurrentmap', 'update']",{'thread': 100}
"['thread', 'stuckinclude', 'stack']","{'thread': 100, 'stack': 100}"
"['cachedbdbmapsexpunge', 'replaceexpunge', 'memory', 'canary', 'sensitive', 'force', 'otherwiseexpunge', 'memory', 'reuse', 'geturi', 'access', 'stringsupport', 'report', 'repeat', 'recordremovemanner', 'getqueuefor', 'concurrent', 'compliant']","{'Sensitive': 100, 'concurrent': 100}"
"['issue', 'report']",{'issue': 100}
"['crawl', 'contention', 'performance', 'pbaclacereplace', 'atomiclong', 'longwrapperputifabsent', 'clean', 'concurrent']",{'concurrent': 100}
"['trial', 'guidehelpful', 'message', 'errorchange', 'update', 'contenterror', 'button', 'customize', 'restlet', 'stack']",{'stack': 100}
"['enable', 'report', 'restletifyfortify', 'report', 'generation']",{'generation': 100}
"['occurs', 'thread', 'contention', 'isolategetinterpreter', 'synchronizationgetinterpreter', 'decisionfor', 'superfluous', 'method', 'synchronization', 'bottleneck', 'interpretergetinterpreter', 'synchronizationgetinterpreter', 'superfluous', 'method', 'innerprocess', 'synchronization', 'bottleneck', 'interpreter']",{'thread': 100}
"['support', 'crawl', 'delay', 'directive', 'improvementrespect', 'integer', 'crawl', 'boolean', 'generates', 'crawl', 'delay', 'point', 'stringcrawldelay', 'return', 'floatfloat', 'value']",{'integer': 100}
