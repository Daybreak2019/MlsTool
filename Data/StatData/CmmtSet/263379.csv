message,fuzzy
"['cedbearequest', 'bluca', 'mergeproblem', 'window', 'wepoll', 'issue']",{'issue': 100}
"['warning', 'ubsanproblem', 'warning', 'ubsanconversion', 'alignment', 'issue']",{'issue': 100}
"['mingwmingw', 'pthread']",{'thread': 92}
"['mingw', 'pthreadconditional', 'pthread', 'zeromq', 'variable', 'mingwconditional', 'mutexes', 'posix', 'zeromq', 'critital', 'sectionconditional', 'pthread', 'coursebuild', 'critical', 'patch', 'mingwmutexes', 'pthread', 'posix', 'sectionconditionaltestedwerror', 'libbsd', 'debug', 'pthread', 'stage', 'configure', 'prefix', 'enable', 'libzmq', 'libunwind', 'mingwversion', 'mingwmingw']",{'thread': 92}
"['gummif', 'strtokstrtok', 'problem', 'thread']",{'thread': 100}
"['mergerelicense', 'skaes', 'commits', 'request', 'mergeproblem', 'permission', 'relicense', 'skaes', 'commits']",{'permission': 100}
"['permission', 'relicense', 'skaes', 'commits', 'statement', 'solution', 'permission']",{'permission': 100}
"['problem', 'thredasolution', 'thread', 'thredadrabczyk']",{'thread': 100}
"['mergeoverflow', 'window', 'martin', 'stack', 'request', 'mergeoverflow', 'window', 'stack']",{'stack': 100}
"['overflow', 'window', 'stack']","{'overflow': 100, 'stack': 100}"
"['mergerequest', 'bluca', 'fuzzersproblem', 'ignores', 'curve', 'setsockopt', 'length', 'parameter']",{'length': 100}
"['problem', 'ignores', 'curve', 'setsockopt', 'length', 'parameteroverflow', 'solution', 'length']",{'length': 100}
"['problem', 'ignores', 'setsockopt', 'length', 'string', 'assumeslength', 'solution']",{'length': 100}
"['buffer', 'problem', 'terminatedensure', 'valid', 'string', 'solution']",{'buffer': 100}
"['length', 'check', 'input', 'problemsolution']",{'length': 100}
"['buffer', 'handshake', 'problem', 'mightoverflow', 'solution', 'check']",{'buffer': 100}
"['problem', 'socket', 'crash', 'return', 'invalidproblem', 'socket', 'crash', 'return', 'invalidsolution', 'value', 'return', 'socket', 'destruction', 'callingenotsock', 'making', 'return', 'errno', 'stephane', 'phane']",{'crash': 100}
"['compile', 'crossing', 'master', 'compilingmingw', 'autotoolsmingwconfigure', 'mingwincludeddirectory', 'error', 'fatalincludecompilationcaught', 'discussion', 'mingw', 'thread']",{'thread': 100}
"['abebfrequest', 'bluca', 'fuzzersrecursion', 'overflow', 'problem', 'mtrie', 'stack']","{'overflow': 100, 'stack': 100}"
"['recursion', 'overflow', 'problem', 'mtrie', 'stackiterative', 'solution', 'algorithm', 'function']",{'overflow': 100}
"['mergerequest', 'bluca', 'mergeproblem', 'documentation', 'safety', 'thread']",{'thread': 100}
"['problem', 'curve', 'complains', 'buffer', 'greeting', 'uninitialisedsolution', 'curve', 'likely', 'greeting', 'memset', 'falseclang']",{'buffer': 100}
"['support', 'sanitizer', 'thread']",{'thread': 100}
"['problem', 'range', 'address', 'invalid', 'access', 'string', 'solution', 'length', 'check', 'stringlength', 'check']",{'length': 100}
"['message', 'problem', 'client', 'unfinishedactive', 'process', 'delimiter', 'state', 'alreadymessage', 'unfinishedsolution', 'rollback', 'issue', 'reference']",{'issue': 100}
"['problem', 'definition', 'internal', 'severity', 'issue', 'securityreasonable', 'attempt']",{'issue': 100}
"['channel', 'somdoronalternative', 'problem', 'thread']",{'thread': 100}
"['alternative', 'problem', 'threadcreate', 'alternative', 'solution', 'thread']",{'thread': 100}
"['failscreate', 'solution', 'thread', 'socket']",{'thread': 100}
"['issue', 'request', 'mergeproblem', 'building']",{'issue': 100}
"['somdoronproblem', 'thread', 'zeromq', 'socket']",{'thread': 100}
"['problem', 'thread', 'zeromq', 'socketsolution', 'socket', 'operation', 'return']",{'thread': 100}
"['sigiesectimeouts', 'intermittent', 'deadlock']",{'deadlock': 100}
"['relicense', 'permission', 'submittingrelicense']",{'permission': 100}
"['socket', 'client', 'thread', 'server']",{'thread': 100}
"['strtok', 'problem', 'state', 'issue', 'threadstrtok', 'solution']",{'issue': 100}
"['dbbcb', 'mergestrcpy', 'sigiesecbuffer', 'overrun']",{'overrun': 100}
"['insecure', 'problem', 'strcpy', 'inefficientlength', 'memcpy', 'solution']",{'insecure': 100}
"['mergeanalyze', 'improvement', 'request', 'sigiesecanalysis', 'static', 'issue', 'improvement']",{'issue': 100}
"['targetingbuild', 'solution', 'issue']",{'issue': 100}
"['somdoronproblem', 'error', 'transport', 'return', 'incorrect']",{'incorrect': 100}
"['delivers', 'problem', 'subscriber', 'socketmessage', 'behavior', 'solution', 'argument', 'dbufferwrite', 'buffer', 'dbuffer', 'withoutalready', 'message', 'reference', 'countdistribute', 'order', 'preventmessage', 'front', 'release', 'front', 'message']",{'buffer': 92}
"['issue', 'problem', 'solution', 'socket']",{'issue': 100}
"['ecceb', 'mergerequest', 'master', 'rcxduderelicense', 'permission']",{'permission': 100}
"['relicense', 'permission']",{'permission': 100}
"['mvilim', 'relicenserelicense', 'permission']",{'permission': 100}
"['relicense', 'permission']",{'permission': 100}
"['mergeminiway', 'request', 'relicenserelicense', 'permission']",{'permission': 100}
"['relicense', 'permission']",{'permission': 100}
"['cdfaca', 'mergerequest', 'mergerelicense', 'permission']",{'permission': 100}
"['relicense', 'permission']",{'permission': 100}
"['cbeaa', 'mergerequest', 'denniskleinrelicense', 'permission']",{'permission': 100}
"['relicense', 'permission']",{'permission': 100}
"['mastergraph', 'script', 'performance', 'generation']",{'generation': 100}
"['graph', 'script', 'performance', 'generation']",{'generation': 100}
"['mergejacquesg', 'request', 'winthreadnamemingw', 'thread']",{'thread': 100}
"['problemsolution', 'concurrent', 'timer', 'heartbeat']",{'concurrent': 100}
"['airoldievalue', 'default', 'problem', 'incorrect']",{'incorrect': 100}
"['problem', 'insecure', 'memory', 'plaintextplaintext', 'solution']",{'insecure': 100}
"['zeromq', 'secpolicyproblem', 'security', 'policy']",{'Security': 100}
"['problem', 'security', 'policybranch', 'solution', 'communication', 'public', 'private', 'maintainer']",{'Security': 100}
"['patch', 'philippeleitecompare', 'thread']",{'thread': 100}
"['function', 'thread']",{'thread': 100}
"['guillonconnection', 'issue', 'proxy']",{'issue': 100}
"['connection', 'issue', 'proxycommit', 'issueproxy', 'target', 'connection', 'addressaddress', 'proxyproxy', 'error', 'status', 'reset', 'connection']",{'issue': 100}
"['bdefeclang', 'request', 'bluca', 'mergeproblem', 'clang', 'comment', 'format', 'issue']",{'issue': 100}
"['airoldieproblem', 'thread', 'socket']",{'thread': 100}
"['problem', 'thread', 'socketmethod', 'solution', 'signalersocket', 'instance', 'poller', 'associate', 'thread']",{'thread': 100}
"['sigiesec', 'migrate', 'securityplain', 'mechanism', 'migrate', 'security', 'unity']",{'Security': 100}
"['overflow', 'reconnect', 'problem', 'backoff', 'exponential', 'integer', 'intervaloverflow', 'guard', 'solution', 'integer', 'calculation']","{'overflow': 100, 'integer': 100}"
"['mergerequest', 'relicense', 'trevorbernardpermission', 'relicense', 'issue', 'trevor', 'bernard']",{'issue': 100}
"['permission', 'relicense', 'issue', 'trevor', 'bernard']","{'permission': 100, 'issue': 100}"
"['steve', 'relicense', 'permission']",{'permission': 100}
"['fbcdaf', 'mergerequest', 'mallocfail', 'eelisallocation', 'memory', 'crash']",{'crash': 100}
"['allocation', 'problem', 'memory', 'crash', 'programallocation', 'solution', 'enomem', 'report', 'memory', 'failure', 'application']",{'crash': 100}
"['snprintf', 'problem', 'failsifdef', 'solution']",{'Sprintf': 93}
"['parameter', 'problem', 'thread', 'initialisedifndef', 'solution']",{'thread': 100}
"['problem', 'thread', 'countingstart', 'solution']",{'thread': 100}
"['problem', 'thread', 'spacesolution']",{'thread': 100}
"['linux', 'overwrites', 'prefix', 'threadsolution', 'pthread', 'function', 'class', 'threadprefix', 'thread', 'context', 'account', 'option']",{'thread': 100}
"['problem', 'thread', 'complicatessolutionparameter', 'optional', 'operatingsystem', 'threadparameter', 'optionalparameter', 'threadthreadepoll', 'abilityreaper']",{'thread': 100}
"['mergerequest', 'mkoppanen', 'relicenserelicense', 'permission']",{'permission': 100}
"['relicense', 'permission']",{'permission': 100}
"['sigiesec', 'issue']",{'issue': 100}
"['problem', 'string', 'redundant', 'operationsolution', 'length', 'memcpy', 'string', 'reuse']",{'length': 100}
"['overflow', 'string', 'problem', 'false', 'solution']",{'overflow': 100}
"['overflow', 'problem', 'pointer', 'issue', 'executionoverflow', 'refactor', 'solution', 'check', 'boundguido', 'guidovranken', 'vranken']","{'overflow': 100, 'issue': 100}"
"['length', 'lenghtsmall']",{'length': 100}
"['hgourvest', 'masterdesactivate', 'crash', 'application', 'android']",{'crash': 100}
"['issue', 'whitespacesolution']",{'issue': 100}
"['mergerequest', 'bluca', 'stable', 'proxy', 'eligible', 'statistic', 'event', 'getters', 'example', 'context', 'thread', 'option']",{'thread': 100}
"['mergeoverflow', 'toonetown', 'buffer', 'request', 'mergereturn', 'wsaenobufs']",{'buffer': 100}
"['assert', 'problem', 'wsaenobufs', 'window', 'large', 'returnwsaenobufs', 'valid', 'solution', 'zeromq', 'issue', 'libzmq']",{'issue': 100}
"['implementation', 'problem', 'pollersolution', 'thread', 'leastolder', 'compatible']",{'thread': 100}
"['cdabbrequest', 'bluca', 'stalebotproblem', 'stale', 'linger', 'issue', 'github']",{'issue': 100}
"['problem', 'stale', 'linger', 'issue', 'githubsolution', 'issue', 'stale', 'enable', 'stableinactivity', 'closelabel', 'excludedrequestrequest', 'featureproblem', 'reproducedcritical']",{'issue': 100}
"['large', 'memory', 'increase', 'footprint', 'issue', 'number', 'subscription']",{'issue': 100}
"['mergebjovke', 'request', 'mergeproblem', 'issue']",{'issue': 100}
"['problem', 'clang', 'format', 'whitespace', 'solution', 'issue']",{'issue': 100}
"['message', 'problem', 'message', 'sendmore', 'socket', 'dgram', 'crash', 'return', 'resend']",{'crash': 100}
"['grant', 'relicense', 'permission']",{'permission': 100}
"['compiler', 'architecture', 'strictarchitetures', 'patch', 'occurs', 'issue', 'portionbuilt']",{'issue': 100}
"['dadbaissue', 'request', 'antonrdupdate', 'issue']",{'issue': 100}
"['problem', 'value', 'return', 'issue', 'description', 'incompleteinformation', 'maximum', 'solution', 'specifyingreturn']",{'issue': 100}
"['problem', 'threadsolution', 'atomics', 'issue', 'architecture']",{'issue': 100}
"['byron', 'relicense', 'mallettmallett', 'permission']",{'permission': 100}
"['problem', 'issue', 'whitespaceclang', 'format']",{'issue': 100}
"['grantcurrent', 'license', 'permission', 'relicense', 'zeromq']",{'permission': 100}
"['problem', 'socket', 'issue', 'connectionidentifier', 'solution', 'local', 'parameter', 'attach']",{'issue': 100}
"['masariello', 'masteroverflow', 'problem', 'stack']",{'stack': 100}
"['overflow', 'problem', 'suffers', 'stack', 'bloatinginstance']","{'overflow': 100, 'stack': 100}"
"['mergeduplication', 'request', 'sigiesec', 'reduceselect', 'problem', 'window', 'requirement', 'stack']",{'stack': 100}
"['information', 'stack', 'installobsolete', 'information', 'solution']",{'stack': 100}
"['problem', 'redundant', 'method', 'suboptimal', 'issue', 'style', 'stringsolution', 'issue']",{'issue': 100}
"['violates', 'problem', 'memberduplication', 'solution', 'independent', 'share']",{'violate': 93}
"['various', 'issue', 'style', 'various', 'issue']",{'issue': 100}
"['problem', 'integer', 'variable', 'literalreplace', 'literal', 'solution']",{'integer': 100}
"['sigiesecproblem', 'thread']",{'thread': 100}
"['problem', 'threadsolution', 'regular', 'function', 'thread']",{'thread': 100}
"['mergesplit', 'config', 'poller', 'request', 'config', 'poller', 'thread']",{'thread': 100}
"['poller', 'threadsolution', 'window', 'platform', 'definition', 'disallow', 'poller', 'separate', 'thread']",{'thread': 100}
"['socket', 'connection', 'duplicate', 'preventconnects', 'multiple', 'endpoint', 'documentation', 'issue']",{'issue': 100}
"['mergerequest', 'issue', 'style', 'sigiesecstyle', 'issue']",{'issue': 100}
"['cbdfeb', 'mergerequest', 'issue', 'style', 'sigiesecstyle', 'issue']",{'issue': 100}
"['problem', 'compiler', 'error', 'triggeraround', 'refactor', 'solution', 'issue']",{'issue': 100}
"['mergerequest', 'simias', 'mergeoption', 'problem', 'expose', 'socket']",{'expose': 100}
"['option', 'problem', 'expose', 'socketsolution', 'option']",{'expose': 100}
"['destruction', 'socket', 'shutdown', 'context', 'threadsolution', 'thread', 'socket']",{'thread': 100}
"['problem', 'socket', 'shutdown', 'poller', 'context', 'assertsgetsockopt', 'solution', 'query', 'socket', 'safety', 'thread']",{'thread': 100}
"['random', 'problem', 'application', 'global', 'deinitsolution', 'tweetnacl', 'issue', 'original', 'restrictgetrandom', 'atexit', 'application', 'function', 'registerimposes', 'createdcleanup', 'backward', 'incompatiblechange', 'abort', 'causelibsodium', 'documentation', 'initialisation', 'althoughissue', 'thread', 'reportedlibsodium', 'deinit', 'globalrisky', 'optionwindow', 'getrandom', 'linux', 'tweetnacl', 'glibcoriginal', 'linux']","{'issue': 100, 'thread': 100}"
"['issue', 'partialissueissueissueissueissueissueissueissue']",{'issue': 100}
"['failure', 'problem', 'detection', 'causewhether', 'solution', 'detectstatic', 'compiler', 'check', 'thread', 'supportfeature', 'preprocessor', 'properclang', 'version']",{'thread': 100}
"['problem', 'static', 'order', 'fiasco', 'initializationstatic', 'available', 'solution', 'implementation', 'local', 'thread']",{'thread': 100}
"['problem', 'issue']",{'issue': 100}
"['failure', 'problem', 'snprintfavailable', 'snprintf', 'solution']",{'Sprintf': 93}
"['acbad', 'mergeevent', 'timer', 'request', 'failure', 'assertion', 'deadlock']",{'deadlock': 100}
"['mergecleanup', 'mechanism', 'request', 'sigiesecstyle', 'problem', 'issue']",{'issue': 100}
"['zeromq', 'issue', 'libzmq', 'connection', 'duplicate']",{'issue': 100}
"['travistravis', 'solution', 'issue', 'workaroundtravis', 'issue']",{'issue': 100}
"['mergerequest', 'bluca', 'mergeproblem', 'curve', 'ignore', 'failure', 'debian', 'issue']",{'issue': 100}
"['thread', 'prefix']",{'thread': 100}
"['issue', 'install']",{'issue': 100}
"['solution', 'error', 'integer', 'print', 'avoidlength', 'error', 'modifier', 'supportversion']",{'integer': 100}
"['thread', 'backgroundoption']",{'thread': 100}
"['bfbbffrequest', 'bluca', 'mergeproblem', 'affinity', 'documentation', 'global', 'priority', 'check', 'thread']",{'thread': 100}
"['enhancement', 'thread', 'secondary', 'context', 'threadcontext', 'thread']",{'thread': 100}
"['problem', 'disconnect', 'failsbreak', 'connection', 'solutionreconnection', 'messageapplication', 'thread', 'equivalent', 'callingsubsequent', 'attempt', 'endpointconnects', 'socketconnection', 'endpointpermanentlyexercise', 'corner']",{'thread': 100}
"['mergerequest', 'bluca', 'mergeproblem', 'buffer', 'return', 'statistic']",{'buffer': 100}
"['buffer', 'return', 'statisticsimpler', 'solution']",{'buffer': 100}
"['command', 'statisticcommand', 'statistic', 'issue']",{'issue': 100}
"['setthreadname', 'problem', 'cosmetic', 'fatalproduction', 'assert', 'threadgithub', 'issue', 'closeevgenyklimov']",{'issue': 100}
"['mergetemplate', 'issue', 'request', 'sigiesecproblem', 'report', 'information']",{'issue': 100}
"['variable', 'stack', 'mechanism', 'gssapiinstead', 'solution']",{'stack': 100}
"['problem', 'security', 'curvesolution', 'curve', 'configuration', 'parametrize', 'mechanism']",{'Security': 100}
"['metadata', 'problem', 'various', 'buffer', 'mechanism', 'overrun', 'possible', 'relatedencryption', 'problem', 'curve', 'solution', 'addedbuffer', 'overflow', 'problem', 'solution', 'target', 'large', 'buffer', 'length', 'parameter', 'excludedendif', 'solution', 'removemetadata', 'problem', 'location', 'various', 'buffer', 'overrun', 'possible', 'relatedduplication', 'actual', 'solution', 'buffer', 'reduceconversion', 'problem', 'error', 'pointer', 'syntax', 'relatedargument', 'solution', 'constmetadata', 'problem', 'large', 'assertionarbitrary', 'metadata', 'solution']","{'buffer': 100, 'overrun': 100, 'overflow': 100, 'length': 100}"
"['problem', 'curve', 'protocol', 'error', 'functionprotocol', 'error', 'problem', 'curvecommand', 'solution', 'hello', 'erroneousproblem', 'curve', 'protocol', 'error', 'insufficientcommand', 'solution', 'erroneous', 'versionmessage', 'problem', 'error', 'invalid', 'hellomessage', 'solution', 'hello', 'correctnonce', 'problem', 'failscorrect', 'solution', 'prefixproblem', 'solution', 'cmakenonce', 'problem', 'failscorrect', 'solution', 'prefixproblem', 'solution', 'cmakecommand', 'problem', 'length', 'initiate', 'invalidsolution', 'addedduplication', 'reusable', 'function', 'solutionduplication', 'reusable', 'function', 'problem', 'staticstatic', 'solutioncrypto', 'intermediate', 'problem', 'static', 'functionstatic', 'function', 'solution', 'memberinstance', 'problem', 'twiceclose', 'solution', 'offendingproblem', 'staticstatic', 'solutioncommand', 'problem', 'initiate', 'invalidsolution', 'addedproblem', 'foundsolution', 'sourceinitializer', 'wrong', 'problem', 'ordersolution', 'problem', 'window', 'failssolution', 'withinconflict', 'problem', 'darwin', 'custom', 'definition', 'macro', 'function', 'htonllsolution', 'macro', 'function', 'htonllnullptr', 'problem', 'platformreplace', 'solution', 'nullptrproblem', 'compile', 'libsodium', 'adaptproblem', 'brokensyntax', 'solutionproblem', 'content', 'cookie', 'initiate', 'garbagesolution', 'excludedendif', 'solution', 'removeunreachable', 'error', 'solutionproblem']",{'length': 100}
"['sparc', 'problem', 'sigbuscompiler', 'alignment', 'solution', 'forceinside', 'buffer', 'pointer', 'ensure', 'memoryusingmutexescontains', 'althoughcompiler', 'structbuffer', 'extrabuffer', 'atomic', 'single']",{'buffer': 100}
"['problem', 'occasionallyrefactor', 'solution', 'socket', 'threadsocket', 'inproc', 'control', 'shutdown', 'signaltermination', 'thread']",{'thread': 100}
"['eabbd', 'mergeproduce', 'curve', 'error', 'request', 'sigiesecproblem', 'sizeof', 'status', 'length', 'sends', 'string']",{'length': 100}
"['problem', 'sizeof', 'status', 'length', 'sends', 'stringsolution', 'status']",{'length': 100}
"['output', 'curve', 'console', 'event', 'issue', 'securityfixingmechanism', 'method', 'implementmoment', 'error', 'value', 'detaildefaultgeneric', 'sense', 'enoughgranularity', 'levelimplementation', 'error', 'detailerror', 'event', 'detailmicrosoft', 'member', 'extenstion', 'access', 'removedcompilation', 'replacedadaptationcomparison', 'event', 'valueprevious', 'adaptation', 'model', 'introducedoutput', 'detail', 'removedprotocol', 'error', 'error', 'greetingmismatch', 'greeting', 'failure', 'mechanism', 'handshakeprotocol', 'error', 'method', 'handlingprotocol', 'event', 'check', 'numberproblem', 'linux', 'withoutsolutioncompilation', 'conditional', 'properlytimeouts', 'sleep', 'insteadproblem', 'timeout', 'definition', 'problem', 'dependency', 'timeouts', 'solution', 'timing', 'place', 'dependency', 'reduceproblem', 'monitor', 'linux', 'failure', 'event', 'event', 'solution', 'outputproblem', 'erroneous', 'assertionproblem', 'extra', 'failure', 'event', 'garbage', 'assertion', 'serversolution', 'event', 'assertiondirective', 'problem', 'existent', 'directive', 'solution', 'includeproblem', 'reason', 'appveyor', 'unknown', 'failure', 'assertionimprove', 'output', 'solution', 'debugproblem', 'libsodiumfailure', 'problem', 'assertionactual', 'solution', 'behaviour', 'reflect', 'assertionerror', 'problem', 'assertion', 'conditionfailure', 'problem', 'assertionbehavior', 'solution', 'generalize', 'assertionfailure', 'problem', 'assertionassertion', 'solution', 'monitor', 'event', 'debuggability', 'macro', 'functionproblem', 'analogous', 'garbageextract', 'function', 'solution', 'commonproblem', 'withoutdummy', 'introduce', 'solution', 'variableattempt', 'workaround', 'removeproblem', 'eagain', 'error', 'complete', 'inbuffer', 'handshakeattempt', 'solutionproblem', 'whethererror', 'debug', 'outputimprove', 'output', 'compilation', 'withoutlanguage', 'erroneous', 'revertedrenamederror', 'epipe', 'assumption', 'fresh', 'context', 'serverdiagnostic', 'output', 'addedbehavior', 'reflect', 'assertionlength', 'maximum', 'observelength', 'maximum', 'observetimeout', 'check', 'valgrind', 'increaseserver', 'closetimeout', 'check', 'valgrind', 'increasetimeout', 'check', 'valgrind', 'increasegeneralize', 'valgrind', 'formattingdiagnostic', 'outputgeneralize', 'valgrind', 'assertion']",{'issue': 100}
"['fbbbbdcrequest', 'bluca', 'mergeurandom', 'problem', 'tweetnacl', 'thread']",{'thread': 100}
"['efaddbjovke', 'request', 'mutex', 'problem', 'multiple', 'solution', 'printout', 'linux', 'serialize', 'stack', 'thread', 'trace']","{'stack': 100, 'thread': 100}"
"['mutex', 'problem', 'multiple', 'solution', 'printout', 'linux', 'serialize', 'stack', 'thread', 'trace']","{'stack': 100, 'thread': 100}"
"['curvechange', 'revert', 'solutioncurve', 'encryption', 'stonehousewithout']",{'encryption': 100}
"['problem', 'abort', 'socket', 'creation', 'androidandroid', 'solution', 'android', 'thread', 'permissionabort', 'process', 'error', 'keepalive', 'optionauthentication', 'setting', 'jeromq']",{'thread': 100}
"['mastergrant', 'relicense', 'permission']",{'permission': 100}
"['grant', 'relicense', 'permission']",{'permission': 100}
"['basic', 'security', 'gssapicoverage', 'solution', 'curvelibzmq', 'builtreport', 'status', 'variable', 'keytab', 'principal', 'basedcomment', 'source', 'kerberos', 'configuredotherwise', 'principalprincipalclient', 'serverprincipal', 'differentprincipal', 'threadattempt', 'credential']",{'Security': 100}
"['mergebjovke', 'request', 'mergeoverflow', 'problem', 'window', 'simple', 'zeromq', 'stack']",{'stack': 100}
"['overflow', 'recommendation', 'problem', 'solution', 'window', 'simple', 'zeromq', 'notice', 'stack', 'install']","{'overflow': 100, 'stack': 100}"
"['enable', 'freebsd', 'getaddrinfo', 'detectretry', 'freebsd', 'issue', 'release', 'ancientimplementation', 'current', 'support']",{'issue': 100}
"['appveyor', 'herbrechtsmeiercurve', 'appveyor', 'security', 'option']",{'Security': 100}
"['curve', 'appveyor', 'security', 'optioncommand', 'mismatch', 'appveyor', 'optioncommand', 'rename', 'curve', 'cmake', 'security', 'optioncorrectstefan', 'herbrechtsmeier']",{'Security': 100}
"['problem', 'support', 'windowdefine', 'windowreference', 'issue', 'preventgettickcount', 'availablecompiler', 'definitionconvenitnece', 'cmakebrute', 'compilation', 'forcecompiler', 'versioncosmetic']",{'issue': 100}
"['mergerequest', 'tailhook', 'relicensecolomiets', 'relicense', 'permission']",{'permission': 100}
"['colomiets', 'relicense', 'permission']",{'permission': 100}
"['daceefrequest', 'bluca', 'mergeproblem', 'redundant', 'refactor', 'thread']",{'thread': 100}
"['problem', 'redundant', 'threadsolution', 'thread', 'background']",{'thread': 100}
"['mergerequest', 'bluca', 'problem', 'thread', 'background']",{'thread': 100}
"['problem', 'thread', 'backgroundthread', 'solution', 'pthread', 'everywould', 'thread', 'internal', 'reaper', 'realitywould', 'churn', 'worthuseful']",{'thread': 100}
"['crashmacos', 'crash', 'possiblereturn', 'value']",{'crash': 100}
"['mergerequest', 'laplaceyang', 'mergeproblem', 'solution', 'thread', 'modify']",{'thread': 100}
"['problem', 'solution', 'thread', 'modifycommand', 'solution']",{'thread': 100}
"['problem', 'thread', 'differentchange', 'revert', 'solutionalternative', 'solution', 'thread']",{'thread': 100}
"['curve', 'event', 'solution', 'failure', 'success', 'event', 'handshake', 'security', 'curve']",{'Security': 100}
"['vector', 'operation', 'multi', 'threadcontainer', 'safety', 'threadsource', 'clear', 'operation', 'multi', 'event', 'threadvector', 'source', 'nullptr', 'reaper', 'delete', 'thread']",{'thread': 100}
"['vector', 'operation', 'multi', 'threadcontainer', 'safety', 'threadsource', 'clear', 'operation', 'multi', 'event', 'threadvector', 'source', 'nullptr', 'reaper', 'delete', 'thread']",{'thread': 100}
"['union', 'problem', 'pointerattribute', 'solution', 'compiler', 'alignmentclearerviolation', 'alignment', 'crash', 'pointer', 'architecturesparcchecker', 'compatible', 'avoidthough', 'suffer', 'application', 'rebuildadvantage']",{'crash': 100}
"['issue', 'check', 'update', 'installmakefile', 'parallel']",{'issue': 100}
"['mergerequest', 'moscow', 'masterclient', 'problem', 'crash', 'socket']",{'crash': 100}
"['socket', 'crash', 'clientsolution']",{'crash': 100}
"['documentation', 'problem', 'markupeffect', 'getsockoptoptionsolution', 'option', 'length']",{'length': 100}
"['travistravis', 'solution', 'reinstall', 'workaround', 'fixedlittle', 'issue']",{'issue': 100}
"['mergeabort', 'aburgm', 'flush', 'request', 'mergeassert', 'flush', 'buffer', 'macro', 'stderr']",{'buffer': 100}
"['flush', 'buffer', 'macro', 'stderrmessage', 'stderr', 'particularsuppose', 'raiseexception', 'terminates', 'processbuffer', 'chance', 'stdio', 'flushinstance', 'problem', 'linkedhandler', 'exception', 'overwrite', 'program', 'eitherstderr', 'message']",{'buffer': 100}
"['overflow', 'problem']",{'overflow': 100}
"['integer', 'problem']",{'integer': 100}
"['facae', 'mergestyle', 'hitstergtd', 'request', 'testsrcfdproblem', 'srcfd', 'wrapping', 'issue', 'style']",{'issue': 100}
"['problem', 'srcfd', 'wrapping', 'issue', 'stylesolution']",{'issue': 100}
"['dgram', 'incorrect', 'problem', 'logic']",{'incorrect': 100}
"['standard', 'white', 'vcxproj', 'incorrect']",{'incorrect': 100}
"['parameter', 'scheduling', 'problem', 'unusedsolutionalthough', 'convention', 'appropriate', 'thread', 'supportpriority']",{'thread': 100}
"['master', 'hitstergtdstyle', 'problem', 'issue']",{'issue': 100}
"['coverage', 'problem', 'autoconf', 'issue', 'macro', 'coveragestatement', 'check', 'contains', 'keyword', 'statement', 'frontend', 'upstream', 'solution', 'macro', 'autoconf', 'candidateupstream', 'overlord', 'package', 'appliedherein', 'solution', 'detect']",{'issue': 100}
"['mergerequest', 'zmqpoll', 'hitstergtdstyle', 'problem', 'comment', 'issue']",{'issue': 100}
"['dcaac', 'mergerequest', 'style', 'hitstergtdstyle', 'problem', 'issue']",{'issue': 100}
"['sendiov', 'hitstergtdrecviov', 'problem', 'multiple', 'issue']",{'issue': 100}
"['multiple', 'recviov', 'issue', 'sendiovsolutionparameter', 'check', 'countstate', 'errorstate', 'errorcleanup', 'consistency', 'method', 'coveragebluca']",{'issue': 100}
"['style', 'problem', 'issue', 'relatedsolution']",{'issue': 100}
"['mergerequest', 'decoder', 'hitstergtdstyle', 'problem', 'issue']",{'issue': 100}
"['problem', 'clang', 'warning', 'searchsubsequent', 'problem', 'travis', 'solution', 'properlyclang', 'issue', 'cmake', 'clang', 'issue', 'building']",{'issue': 100}
"['master', 'somdoronproblem', 'thread', 'socket']",{'thread': 100}
"['mergerequest', 'jimklimov', 'mergeproblem', 'crash', 'pedantic']",{'crash': 100}
"['problem', 'crash', 'pedantic', 'recent', 'includingproblem', 'portable', 'header', 'compilation', 'warning', 'deprecation', 'pedantic', 'recent', 'includingmessage', 'directive', 'solution', 'limit', 'compiler', 'clang', 'pragma', 'warning', 'error', 'deprecation', 'paranoid', 'support']",{'crash': 100}
"['master', 'yuvallangernetbsd', 'thread', 'scheduling']",{'thread': 100}
"['netbsd', 'thread', 'schedulingimplementation', 'thread', 'prioritynetbsd', 'reassign', 'platformfunction', 'onlinepubskamil', 'credit', 'riastradh']",{'thread': 100}
"['requestproblem', 'socket', 'protocol', 'level', 'session', 'check', 'accountpossibility', 'optionlonger', 'possiblity', 'integer', 'presentframe', 'delimiter']",{'integer': 100}
"['problem', 'curve', 'security', 'failsproper', 'preprocessor', 'solution', 'macro']",{'Security': 100}
"['problem', 'wildcard', 'brokenbuffer', 'length', 'solution', 'increase']",{'length': 100}
"['problem', 'static', 'analyzer', 'coverity', 'severalsolution', 'static', 'analyzer', 'coverity', 'libzmqmember', 'redefinition', 'variable', 'issue', 'uninitializedcouple', 'instance', 'previous', 'functionreturn', 'occurrence']",{'issue': 100}
"['master', 'somdoronproblem', 'dynamic', 'nodejs', 'issue']",{'issue': 100}
"['problem', 'memorysolution', 'buffer', 'memset', 'valgrind', 'temporary', 'noise']",{'buffer': 100}
"['problem', 'memorysolution', 'buffer', 'memset', 'valgrind', 'temporary', 'noise']",{'buffer': 100}
"['problem', 'memorysolution', 'buffer', 'memset', 'valgrind', 'temporary', 'noise']",{'buffer': 100}
"['problem', 'configure', 'option', 'annoyingmeasurement', 'default', 'performance', 'enabledefault', 'eventfdkeygen', 'curve', 'default', 'generation', 'enabledefault']",{'generation': 100}
"['cdfae', 'mergerequest', 'obache', 'posix', 'detect', 'priority', 'thread', 'support']",{'thread': 100}
"['posix', 'detect', 'priority', 'thread', 'support']",{'thread': 100}
"['memcpy', 'optionubsan', 'undefined', 'alignment', 'issue', 'catchlibzmq']",{'issue': 100}
"['overflow', 'error']",{'overflow': 100}
"['master', 'somdoronproblem', 'zeromq', 'pattern', 'thread']",{'thread': 100}
"['stream', 'encrypt', 'timer', 'issue', 'cipher', 'mechanism', 'handshake', 'heartbeat', 'address']","{'issue': 100, 'cipher': 100}"
"['problem', 'integer']",{'integer': 100}
"['buffer', 'option']",{'buffer': 100}
"['mergerequest', 'swansontec', 'unusual', 'connection', 'crash']",{'crash': 100}
"['problem', 'windowissueeffect', 'latency', 'window', 'issuefirstmessage', 'unaffectedswitch', 'sends', 'effect', 'zeromqlatencyinproc', 'signaler', 'happensclient', 'server', 'inprocclient', 'prime', 'signallersocket', 'dummy', 'connection', 'potentiallydelayedsends', 'signallerconfusingreceive', 'solution', 'buffer', 'floodbuffer', 'discard']",{'buffer': 100}
"['addedzeromq', 'libzmq', 'issue']",{'issue': 100}
"['winrandom', 'tweetnaclrandom', 'problem', 'infinite', 'window', 'generation', 'stuckchange', 'failure', 'solution']",{'generation': 100}
"['honor', 'deallocate', 'buffer', 'reference']",{'buffer': 100}
"['buffer', 'option']",{'buffer': 100}
"['lsniks', 'masterrollback', 'multipart', 'issue']",{'issue': 100}
"['rollback', 'multipart', 'issue']",{'issue': 100}
"['precedence', 'issue', 'pointer', 'equivalent', 'likely', 'snippet']",{'issue': 100}
"['client', 'problem', 'threadsafemessage', 'solution', 'increase', 'client', 'server', 'numberbetter', 'stress', 'thread']",{'thread': 100}
"['manual', 'missingpatch', 'issue']",{'issue': 100}
"['mergezeromq', 'revert', 'issue', 'request', 'mergereturn', 'check', 'revert', 'solution']",{'issue': 100}
"['mergericnewton', 'request', 'mastersocket', 'inproc', 'crash']",{'crash': 100}
"['socket', 'inproc', 'crash']",{'crash': 100}
"['zeromq', 'issue']",{'issue': 100}
"['master', 'somdoronproblem', 'socket', 'thread', 'support']",{'thread': 100}
"['master', 'ebrahimichange', 'issue', 'macro']",{'issue': 100}
"['issue', 'macro']",{'issue': 100}
"['issue', 'macro', 'object']",{'issue': 100}
"['master', 'somdoronproblem', 'thread', 'socket']",{'thread': 100}
"['thread', 'socket']",{'thread': 100}
"['thread', 'socket']",{'thread': 100}
"['check', 'thread', 'option', 'socket']",{'thread': 100}
"['master', 'ebrahimiticket', 'output', 'cmake', 'wrong', 'issue']",{'issue': 100}
"['ticket', 'system', 'output', 'cmake', 'improvement', 'issue']",{'issue': 100}
"['pijyoibuffer', 'decoder', 'overflow']",{'overflow': 100}
"['potential', 'integer', 'wraparound']",{'integer': 100}
"['mergerequest', 'leonarf', 'patchpriority', 'documentation', 'thread', 'option']",{'thread': 100}
"['priority', 'documentation', 'thread', 'optiondocumentation', 'context', 'option']",{'thread': 100}
"['staticbuffer', 'allocates', 'memory', 'mallocedcounter', 'creates', 'reference', 'objectmemcpyreceive', 'small', 'buffer']",{'buffer': 100}
"['buffer', 'message']",{'buffer': 100}
"['mergerequest', 'mergebuild', 'issue']",{'issue': 100}
"['message', 'receivemessage', 'buffer', 'reference', 'construct', 'allocatedreceive']",{'buffer': 100}
"['issue', 'gmake', 'check']",{'issue': 100}
"['listener', 'backend', 'issue']",{'issue': 100}
"['problem', 'integer']",{'integer': 100}
"['master', 'hintjensproblem', 'issue']",{'issue': 100}
"['bdbca', 'mergerequest', 'master', 'kreuzbergerdocumentation', 'issue']",{'issue': 100}
"['mergerequest', 'rodgert', 'masterframe', 'metadata', 'issue', 'identity', 'address']",{'issue': 100}
"['frame', 'metadata', 'issue', 'identity', 'address']",{'issue': 100}
"['master', 'somdoronproblem', 'socket', 'client', 'thread', 'server']",{'thread': 100}
"['safety', 'thread', 'window']",{'thread': 100}
"['safety', 'thread']",{'thread': 100}
"['mergeserversocket', 'request', 'somdoronproblem', 'thread', 'socket']",{'thread': 100}
"['mergerequest', 'rodgert', 'granularity', 'inter', 'structure', 'cache', 'align', 'thread']",{'thread': 100}
"['memory', 'consumption', 'downside', 'increasedconstraineddiscussion', 'rationale', 'issue']",{'issue': 100}
"['integer', 'problem', 'definition', 'incompletelayer', 'avoiddefine', 'solution', 'unconditionallydefine', 'layer']",{'integer': 100}
"['master', 'hintjensmismatch', 'problem', 'debug', 'mechanism', 'security']",{'Security': 100}
"['master', 'hintjensproblem', 'security']",{'Security': 100}
"['problem', 'security', 'downgradedsolution', 'socket', 'mechanism', 'definedspeculative']",{'Security': 100}
"['master', 'hintjensnodrop', 'property', 'issue']",{'issue': 100}
"['hurtonm', 'masterresolve', 'issue']",{'issue': 100}
"['mergejlauenercern', 'request', 'parameter', 'context', 'thread', 'option']",{'thread': 100}
"['parameter', 'context', 'thread', 'optionenvironment']",{'thread': 100}
"['pthreadsometime', 'rationale', 'priority', 'scheduling', 'threadwithin', 'thread', 'serverpthread', 'support', 'plannedwindow', 'platform']",{'thread': 100}
"['ceacf', 'mergericnewton', 'request', 'masterzeromq', 'libzmq', 'issue']",{'issue': 100}
"['xfail', 'issue', 'revert', 'failingreverts']",{'issue': 100}
"['problem', 'security', 'blockmessage', 'tryingeagain', 'solution', 'timeout']",{'Security': 100}
"['hurtonm', 'mastercommand', 'reason', 'error', 'prefix', 'length']",{'length': 100}
"['command', 'reason', 'error', 'prefix', 'length']",{'length': 100}
"['concurrent', 'error', 'parallel', 'ignore']",{'concurrent': 100}
"['issue', 'xfail']",{'issue': 100}
"['afefd', 'mergerequest', 'master', 'willstranghandshake', 'connection', 'limit', 'issue']",{'issue': 100}
"['handshake', 'connection', 'limit', 'issue']",{'issue': 100}
"['security', 'addedadditional', 'message', 'people', 'error']",{'Security': 100}
"['tchar', 'swprintf']",{'Sprintf': 93}
"['issue', 'gssapi']",{'issue': 100}
"['issue', 'gssapi']",{'issue': 100}
"['dbdde', 'mergerequest', 'gssapi', 'connamaramechanism', 'kerberos', 'security', 'gssapi']",{'Security': 100}
"['hurtonm', 'masterresolve', 'issue']",{'issue': 100}
"['selection', 'generation', 'openpgm', 'nuget', 'package']",{'generation': 100}
"['reasonable', 'zeromq', 'libsodium', 'relax', 'patch', 'issue', 'requirement', 'libzmq', 'specifies', 'program', 'support', 'issuedrelease', 'patch']",{'issue': 100}
"['symbol', 'cmake', 'missinglibzmq', 'librarycaught', 'ubuntu', 'issue']",{'issue': 100}
"['mergeguruofquality', 'request', 'mergebuild', 'linux', 'issue', 'autotools']",{'issue': 100}
"['linux', 'issue', 'autotoolsscript', 'version', 'srcdir']",{'issue': 100}
"['validation', 'issue']",{'issue': 100}
"['validation', 'issue']",{'issue': 100}
"['issue', 'fixedrouter', 'message']",{'issue': 100}
"['support', 'detectingshutdown', 'connection', 'network', 'crash', 'client', 'failureconnection', 'application', 'derterminebuffermessage', 'contribution', 'length', 'applicationconnection', 'symmetric', 'process', 'application', 'connectionmessage', 'zeromq', 'close', 'length', 'application', 'sends', 'connectionconflict']","{'crash': 100, 'length': 100}"
"['issue', 'lingerissue', 'zeromqshannen']",{'issue': 100}
"['resolution', 'clock', 'timer', 'issue']",{'issue': 100}
"['resolution', 'clock', 'timer', 'issue']",{'issue': 100}
"['mergerequest', 'netimperia', 'patchpermission', 'window', 'update', 'crash']",{'crash': 100}
"['integer', 'consistant']",{'integer': 100}
"['abstract', 'length', 'pathname', 'detectionsocket', 'abstract', 'character', 'pathnames', 'firstcharacter', 'differentiateabstract', 'length', 'empty', 'addresskernel', 'pathname', 'length', 'addressabstract', 'length', 'string', 'addresslength', 'initial', 'string', 'followinginitial', 'address', 'family']",{'length': 100}
"['issue', 'addedrouter', 'dealer']",{'issue': 100}
"['failure', 'randomstart', 'handler', 'thread', 'gettinghandler', 'socket', 'creates', 'parent', 'threadalways', 'socketauthentication']",{'thread': 100}
"['socket', 'option', 'addedhandler', 'field', 'domainhandler', 'securitysyndrome', 'socket', 'security', 'neverrequest', 'installexplicit', 'password', 'domain', 'username']",{'Security': 100}
"['security', 'cmake']",{'Security': 100}
"['failure', 'checkcheck', 'security', 'littleissue', 'todos', 'outstanding', 'addedauthentication', 'double', 'check']",{'Security': 100}
"['conflate', 'double', 'buffer', 'optionhandle', 'double', 'simple', 'buffer', 'implementationinstead', 'destructor', 'invoke', 'closemutex']",{'buffer': 100}
"['mergericnewton', 'request', 'issue', 'space']",{'issue': 100}
"['issue', 'space']",{'issue': 100}
"['leewoosung', 'hotfixes', 'request', 'mergelibzmq', 'issue', 'socket']",{'issue': 100}
"['libzmq', 'issue']",{'issue': 100}
"['curve', 'security', 'addedskippedlibsodium', 'warning']",{'Security': 100}
"['ianbarber', 'masterstream', 'issue', 'small', 'engine']",{'issue': 100}
"['encryption', 'message', 'authentication', 'curvezmq']",{'encryption': 100}
"['curve', 'security', 'option', 'addedclient', 'serverclientclientserverexample']",{'Security': 100}
"['print', 'issue']",{'issue': 100}
"['fbcbbb', 'mergerequest', 'hurtonm', 'masterselect', 'socket', 'mechanism', 'security', 'option']",{'Security': 100}
"['select', 'socket', 'mechanism', 'security', 'option']",{'Security': 100}
"['master', 'hintjensplain', 'security', 'option']",{'Security': 100}
"['plain', 'security', 'addedoptionchangeprogram']",{'Security': 100}
"['abstract', 'mechanism', 'security']",{'Security': 100}
"['libzmq', 'issue']",{'issue': 100}
"['libzmq', 'issue']",{'issue': 100}
"['multipart', 'issue']",{'issue': 100}
"['revisionprotocol', 'revision', 'security', 'basismaintains', 'backward', 'compatibility']",{'Security': 100}
"['improvement', 'performancecommand', 'thread', 'option', 'numberworker', 'option', 'numberbuffer', 'command', 'optioncommand', 'optionbetter', 'function', 'throughputoption', 'delay', 'socket']",{'thread': 100}
"['sends', 'message', 'checksubscribtion', 'message', 'status', 'length', 'ensures']",{'length': 100}
"['eaadddcdolan', 'request', 'bcopy', 'compilation', 'bzero', 'memset', 'issue']",{'issue': 100}
"['client', 'connection', 'optionreceive', 'message', 'clientaddedcreate', 'router', 'optionmessage', 'ignoredmessage', 'length', 'connection']",{'length': 100}
"['bbdcbradez', 'request', 'masterresolve', 'issue']",{'issue': 100}
"['socket', 'endpoint', 'infrastructure', 'application', 'thread']",{'thread': 100}
"['message', 'decoder', 'encoderbecome', 'supposedprotocol', 'escapevalid', 'field', 'value', 'length']",{'length': 100}
"['protocol', 'extendprotocol', 'exchange', 'version', 'supportreject', 'connection', 'library', 'socketsocketprotocol', 'exchange', 'connectionmessage', 'socket', 'protocol', 'encodes', 'greeting', 'verionformat', 'greeting', 'message', 'followsgreetingadaptationversionlengthprotocol', 'adaptation', 'valueadaptaionmessage', 'network', 'length', 'current', 'adaptaionimplementatatio', 'closepatch', 'support']",{'length': 100}
"['return', 'terminatedstand', 'bugfix', 'shutdown', 'arthurstate', 'impossible', 'afaics', 'wrong', 'possible', 'flushthough', 'aroudn', 'shutdown', 'issue', 'introducedaround']",{'issue': 100}
"['turning', 'segfault', 'missinganalysis', 'pointer', 'checkconversion', 'error', 'implicit', 'memsize', 'memcmp', 'argument', 'error', 'buffer', 'return', 'memcmp']",{'buffer': 100}
"['insteadanalysis', 'staticsequence', 'error', 'integer', 'value', 'suspiciousoverflow', 'cycle', 'error', 'variable', 'memsize', 'nread']",{'integer': 100}
"['compilation', 'warning', 'issue']",{'issue': 100}
"['reconnection', 'validation', 'various', 'revert', 'issue', 'whitespace']",{'issue': 100}
"['vulnerable', 'block', 'revert', 'pointer', 'function', 'disconnect', 'terminatereverts']",{'vulnerable': 100}
"['failure', 'invalid', 'connectionhostname', 'invalidvalid', 'existent', 'hostnames', 'issue', 'cable', 'buggy', 'server']",{'issue': 100}
"['vulnerable', 'block', 'function', 'disconnect']",{'vulnerable': 100}
"['whitespace', 'statement', 'incorrect']",{'incorrect': 100}
"['reconnection', 'validation', 'various', 'issue', 'whitespace', 'store', 'straightforward', 'instructs', 'resend']",{'issue': 100}
"['mergesteve', 'author', 'issue', 'request', 'mergeauthor', 'issue']",{'issue': 100}
"['mergesteve', 'author', 'issue', 'libzmq']",{'issue': 100}
"['discussion', 'traffic', 'message', 'sockopt', 'attempt', 'unavailable', 'point', 'occurs', 'awkward', 'outbound', 'inbound', 'class', 'introduce', 'sockopt', 'attempt', 'callback', 'patch', 'shutdown', 'issue', 'socket', 'preempt', 'thinkplease', 'documentation', 'reflect', 'check']",{'issue': 100}
"['manpage', 'issue']",{'issue': 100}
"['regression', 'monitor', 'request', 'mergesocket', 'function', 'infrastructure', 'global', 'issue', 'pointer']",{'issue': 100}
"['mastererror', 'visual', 'compile', 'issue']",{'issue': 100}
"['multiple', 'crash', 'socket']",{'crash': 100}
"['multiple', 'crash', 'application', 'assertionchange', 'patch', 'behaviour', 'socketconnection', 'reject']",{'crash': 100}
"['usage', 'cornercreate', 'endpointcommand', 'endpoint', 'ourselfsownedapplication', 'thread', 'couldunable', 'thread', 'objectuntill', 'socketleasteverythingreproduce', 'withoutconnect', 'socketforever', 'sleepnetstat', 'previouslyuntill', 'regardless', 'false', 'terminatehappens']",{'thread': 100}
"['libzmq', 'issue']",{'issue': 100}
"['length', 'check', 'address']",{'length': 100}
"['pieterh', 'mastervalgrind', 'issue', 'libzmq', 'support']",{'issue': 100}
"['pieterh', 'mastersegfault', 'condition', 'issue']",{'issue': 100}
"['segfault', 'condition', 'issue']",{'issue': 100}
"['pieterh', 'masterbroken', 'implementation', 'issue']",{'issue': 100}
"['complex', 'issue']",{'issue': 100}
"['pieterh', 'mastervestige', 'thread', 'socket']",{'thread': 100}
"['thread', 'socket']",{'thread': 100}
"['stuff', 'thread']",{'thread': 100}
"['context', 'thread']",{'thread': 100}
"['thread', 'socketdistinct', 'initialisation', 'specify', 'context', 'functiontherefrom', 'thread', 'sockethowever', 'inheritance', 'interference', 'existingconstruct', 'withinsemanticallystructure']",{'thread': 100}
"['socket', 'enotconn', 'issue']",{'issue': 100}
"['state', 'issue', 'session', 'uninitialisedsustrik']",{'issue': 100}
"['distribution', 'patch', 'issue', 'libzmq']",{'issue': 100}
"['router', 'assert', 'issue', 'fixedsustrik']",{'issue': 100}
"['message', 'distribution', 'algorithm', 'issue', 'fixedsustrik']",{'issue': 100}
"['descriptor', 'issue', 'closeprocess', 'image', 'couldpatch', 'solvesustrik']",{'issue': 100}
"['number', 'message', 'issue', 'closesustrik']",{'issue': 100}
"['premature', 'issue', 'deallocationsustrik']",{'issue': 100}
"['command', 'socketpairs', 'ypipes', 'storedcommand', 'socket', 'buffer', 'storingbuffer', 'problem', 'patch', 'spacecommand', 'socketpair', 'store', 'ypipessignal', 'storedsingle', 'socketpairsustrik']",{'buffer': 100}
"['issue', 'request', 'outstandingrequest', 'pattern', 'worker', 'reply', 'noone', 'resultrequest', 'optimisation', 'situationrequest', 'inbound', 'socket', 'queuedoutbound', 'socket', 'request', 'queuedsustrik']",{'issue': 100}
"['format', 'patternchange', 'introduces', 'patchidentify', 'insteadsocket', 'unique', 'label', 'stack', 'matching', 'requestsustrik']",{'stack': 100}
"['issue', 'fixedsustrik']",{'issue': 100}
"['issue', 'solvedsustrik']",{'issue': 100}
"['platform', 'error', 'issue', 'fixedsustrik']",{'issue': 100}
"['thread', 'throughputbobby', 'jakabosky']",{'thread': 100}
"['reaper', 'thread', 'periodicallysustrik']",{'thread': 100}
"['initial', 'reaperdestroys', 'reaper', 'thread', 'signal', 'eintrreturn', 'etermsustrik']",{'thread': 100}
"['documentation', 'updaterelationship', 'clarifyoption', 'socketsocket', 'safety', 'migration', 'thread', 'clarifyminor', 'spellinglucina']",{'thread': 100}
"['scope', 'thread', 'thunkersteven']",{'thread': 100}
"['mailbox', 'signaler', 'renamedcommand', 'queue', 'reason', 'thread', 'signalercommand', 'signal', 'mailbox', 'renamederlangsustrik']",{'thread': 100}
"['integer', 'thread', 'identifiedrenames', 'comprehensible', 'patch', 'threadsustrik']","{'integer': 100, 'thread': 100}"
"['crash', 'ypipe']",{'crash': 100}
"['crash', 'ypipe']",{'crash': 100}
"['error', 'comparison', 'issue']",{'issue': 100}
"['semantics', 'migration', 'thread', 'socketanother', 'migrate', 'thread', 'barrier', 'caller', 'memory', 'ensure', 'calledtarget', 'socketimplement', 'semantics', 'behaviourpipermail', 'zeromqreturn', 'deterministicstill', 'discard', 'queuedblock', 'outstandingconfigurable', 'timeout', 'equivalent', 'mechanism']",{'thread': 100}
"['message', 'device', 'vulnerable', 'invalidissue', 'zeromqmessage', 'invalid', 'assertion']",{'vulnerable': 100}
"['getaddrinfo', 'issue']",{'issue': 100}
"['transient', 'connection', 'inproc', 'generation', 'identity']",{'generation': 100}
"['nbytes', 'issue']",{'issue': 100}
"['assertion', 'issue']",{'issue': 100}
"['false', 'issue']",{'issue': 100}
"['structure', 'thread', 'clearing']",{'thread': 100}
"['etimedout', 'issue', 'assertion']",{'issue': 100}
"['poller', 'issue']",{'issue': 100}
"['message', 'sndmore', 'issue', 'rcvmore']",{'issue': 100}
"['illegal', 'issue', 'number']",{'issue': 100}
"['socket', 'obsolete', 'application', 'parameter', 'thread', 'number']",{'thread': 100}
"['dispatcher', 'thread']",{'thread': 100}
"['rewritten', 'signaler', 'thread', 'number']",{'thread': 100}
"['issue', 'semantics']",{'issue': 100}
"['problem', 'window', 'issue']",{'issue': 100}
"['assertion', 'issue']",{'issue': 100}
"['assertion', 'issue']",{'issue': 100}
"['autoconfpackage', 'version', 'master', 'sourcepropagatesdocumentation', 'generation']",{'generation': 100}
"['heavy', 'requester', 'issue', 'connection', 'concurrency']","{'issue': 100, 'concurren': 90}"
"['report', 'error', 'posix', 'errno', 'convention', 'thread']",{'thread': 100}
"['current', 'thread']",{'thread': 100}
"['synchronisation', 'thread', 'algorithm']",{'thread': 100}
