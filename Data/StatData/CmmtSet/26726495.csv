message,fuzzy
"['request', 'referenceattempt', 'issue', 'referencepoint', 'context', 'method', 'authenticateprincipal']",{'issue': 100}
"['comment', 'issue', 'comment', 'issue', 'reflectfrederic', 'fredbi', 'bidonfixupfrederic', 'fredbi']",{'issue': 100}
"['example', 'streamfrederic', 'fredbi', 'examplebuilt', 'jigsaw', 'issue', 'example', 'illustratedusage', 'demonstrates', 'client', 'acknowledgedfrederic', 'fredbi', 'generate', 'codegenfrederic', 'fredbi']",{'issue': 100}
"['array', 'header', 'response', 'client', 'issue', 'parameter', 'array', 'header', 'response', 'client', 'issue', 'parameter', 'header', 'default', 'value', 'response', 'client', 'issue', 'parameter', 'fixedclient', 'behavior', 'changeparameter', 'default', 'valueparams', 'whenever', 'method', 'default', 'serverwhenever', 'header', 'default', 'response', 'value', 'client', 'generation', 'failure', 'codegen', 'enabledfrederic', 'fredbi', 'bidonstream', 'template', 'fixup', 'responsefrederic', 'fredbi']","{'issue': 100, 'generation': 100}"
"['validation', 'integernumerical', 'validation', 'integerselect', 'appropriate', 'validator', 'dependingparameter', 'float', 'alternative', 'selectsconversion', 'explicit', 'uselesstemplate', 'share', 'parameter', 'schemaconstraint', 'integer', 'factor', 'multipleoffrederic', 'fredbi', 'bidonfixupfrederic', 'fredbi', 'bidonaliasedfrederic', 'fredbi']",{'integer': 100}
"['model', 'parallelopenapi', 'processing', 'condition', 'parallel', 'dependencyfixture', 'parallel', 'refactoredtemplate', 'condition', 'global', 'fixedclone', 'template', 'shadow', 'genopts', 'generation', 'contribtemplate', 'custom', 'config', 'globalfrederic', 'fredbi']",{'generation': 100}
"['control', 'external', 'addedcontrol', 'external', 'addedgranular', 'schema', 'external', 'support', 'everyparameter', 'anonymous', 'responsecollection', 'external', 'generatedefinition', 'location', 'model', 'default', 'definition', 'level', 'external', 'supportvalidation', 'novalidation', 'external', 'supportcontrol', 'nullability', 'issue', 'deconfliction', 'alias', 'external', 'packageexample', 'comment', 'addedmarkdown', 'addedbroken', 'codegen', 'contextvalidate', 'binary', 'breakingfrederic', 'fredbi', 'bidonreadme', 'fixupfrederic', 'fredbi']",{'issue': 100}
"['failure', 'issue', 'fixedfrederic', 'fredbi']",{'issue': 100}
"['operation', 'empty', 'similar', 'issue', 'fixedcommitoperation', 'orderedfrederic', 'fredbi']",{'issue': 100}
"['external', 'packageinterface', 'principal', 'defaultprincipal', 'target', 'simple', 'import', 'generation', 'package', 'assumedprincipal', 'location', 'specifiedcommitalias', 'model', 'external', 'packagedefault', 'importfrederic', 'fredbi']",{'generation': 100}
"['enums', 'support', 'insensitiveenumeration', 'sensitive', 'strictmechanism', 'swagger', 'supportsensitivity', 'distinguish', 'foldingparameter', 'support', 'optionprevious', 'behavior', 'commandenumeration', 'switch', 'optionfeature', 'default', 'operation', 'sensefunction', 'validation', 'enumcasevendor', 'extensioncommand', 'operation', 'optionspecificationparameter', 'definition', 'extensionchange', 'invalidatedvalidate', 'openapi', 'updateskorvaga', 'pheepi']",{'Sensitive': 100}
"['template', 'model', 'thing', 'model', 'motivation', 'beforehand', 'clarifytemplate', 'model', 'template', 'issue', 'blank', 'removederror', 'syntax', 'default', 'contributes', 'serializers', 'polymorphiccontributes', 'readability', 'templatefrederic', 'fredbi', 'blank', 'modification', 'slight', 'goformatfrederic', 'fredbi', 'examplefrederic', 'fredbi']",{'issue': 100}
"['mergeinconsitent', 'mfranczy', 'generator', 'request', 'mergeswagger', 'issue']",{'issue': 100}
"['generateusage', 'model', 'output', 'definition', 'generation', 'regardless', 'option']",{'generation': 100}
"['usage', 'model', 'output', 'definition', 'operation', 'generation', 'regardless']",{'generation': 100}
"['review', 'codegen', 'packageimport', 'review', 'codegen', 'redundant', 'import', 'goimport', 'generation', 'removedtemplate', 'specific', 'import', 'language', 'codegen', 'funcmapmangle', 'operation', 'generation', 'package', 'introducedlocation', 'option', 'override', 'operation', 'generation', 'package', 'alterhonor', 'definition', 'generation', 'global', 'package', 'stratoscale', 'contribissueoverridemanglingmanglingmanglingoverride', 'target', 'package', 'manglingmodel', 'aliasingfrederic', 'fredbi', 'fixupfrederic', 'fredbi', 'bidonserver', 'fixupfrederic', 'fredbi']",{'generation': 100}
"['throttle', 'memory', 'generation', 'parallel', 'codegenseveral', 'large', 'memory', 'whenevercircleci', 'memory', 'limit', 'pickedconcurrent', 'codegen', 'throttle', 'numberspeedfrederic', 'fredbi']",{'generation': 100}
"['schema', 'generation', 'morlay']",{'generation': 100}
"['format', 'validation', 'modelslice', 'combination', 'format', 'original', 'kubernetes', 'kubernetesblockclient', 'generation', 'codegen', 'requirescirclecifrederic', 'fredbi']",{'generation': 100}
"['mergesecutiry', 'definition', 'overwrite', 'request', 'hmjamdefinition', 'security']",{'Security': 100}
"['definition', 'security']",{'Security': 100}
"['support', 'issue']",{'issue': 100}
"['incapable', 'object', 'format', 'binary', 'string', 'objectfromat', 'whereas', 'impliesaround', 'triedinterface', 'stringinterface', 'string', 'issuecomment', 'client', 'issue', 'resultunderstand', 'oneof', 'particular', 'setting', 'appropriate', 'pointer', 'definedcloserelatedaeneasr']",{'issue': 100}
"['generator', 'issue', 'packagefrederic', 'fredbi']",{'issue': 100}
"['generation', 'regression', 'value']",{'generation': 100}
"['generation', 'regression', 'prefix', 'value', 'supportpascalize', 'function', 'testingfrederic', 'fredbi']",{'generation': 100}
"['generation', 'annotation', 'route', 'support']",{'generation': 100}
"['generation', 'annotation', 'route', 'supportfrederic', 'fredbi']",{'generation': 100}
"['enable', 'generation', 'exclusion', 'inclusiongregory']",{'generation': 100}
"['issue', 'codegenopenapi', 'issue', 'codegen', 'strfmtinitializedfrederic', 'fredbi']",{'issue': 100}
"['sensitive', 'codegen', 'script', 'mergefrederic', 'fredbi']",{'Sensitive': 100}
"['flatten', 'issuewindow', 'reactivatedfixture', 'source', 'issue', 'fixedfixture', 'assert', 'addedanalysis', 'dependency', 'openapi', 'updatefrederic', 'fredbi', 'bidonbreak', 'openapi', 'expectation', 'codegen', 'pinnedfrederic', 'fredbi', 'bidonexpectation', 'codegen', 'check', 'dependency', 'update', 'adjustedfrederic', 'fredbi']",{'issue': 100}
"['logger', 'forcelogger', 'forcelogger', 'default', 'setapi', 'overwrite', 'forcegilcrease', 'signedswagger', 'badge', 'codetriagebadge', 'people', 'numberhelper', 'swagger', 'badge', 'algorithm', 'issue', 'project', 'subscriber', 'codetriageproject', 'project', 'codetriagebadge', 'accomplishdeveloper', 'others', 'badge', 'longterm', 'people', 'contribute', 'maintainability', 'success', 'popular', 'example', 'codetriage', 'readmesrender', 'badge', 'image', 'gmail', 'client', 'emailrender', 'badge', 'crystal', 'image', 'gmail', 'client', 'emailquestion', 'commentmessage', 'feedback', 'source', 'thanks', 'projectgilcrease', 'signedstratoscale', 'basic', 'templatesignature', 'joakim', 'soderberggilcrease', 'signedmultiple', 'deduce', 'operation', 'package', 'firstdefault', 'operationmaxime', 'signedgilcrease', 'signedorder', 'object', 'nestedkofler', 'signedgilcrease', 'signedexclude', 'codecov', 'chore', 'expectation', 'patch', 'coveragefrederic', 'fredbi', 'bidongilcrease', 'signedinterface', 'client', 'chore', 'acknowledgesfrederic', 'fredbi', 'bidongilcrease', 'signedclient', 'param', 'chore', 'acknowledgesfrederic', 'fredbi', 'bidongilcrease', 'signedcommandinside', 'import', 'packagenikolov', 'signedjason', 'wraxall', 'signedjason', 'wraxall', 'wjaseproperty', 'order', 'supportkofler', 'signedjason', 'wraxall', 'signedjason', 'wraxall', 'wjasecommand', 'addedjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjaselocation', 'header', 'paramjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjasefixture', 'updatedjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'header', 'default', 'method', 'response', 'removedjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjaseparams', 'template', 'append', 'query', 'urlbuilder', 'supportquery', 'update', 'support', 'turnquistjason', 'wraxall', 'signedjason', 'wraxall', 'refactoredjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjaseanalyser', 'processing', 'ignorejason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'igore', 'diffsjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'ability', 'ignore', 'operationjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjaseaddedjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'compatibilty', 'compatabiltyjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'scopelint', 'issuejason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjasenumeric', 'validation', 'proper', 'parse', 'element', 'futuresignedjason', 'wraxall', 'signedjason', 'wraxall', 'wjasesignedbuildingsignedgoconst', 'reviewsignedupdatesignedsignedsignedconst', 'lintersignedjason', 'wraxall', 'signedjason', 'wraxall', 'wjasevarious', 'gocrest', 'addedjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjasegitignore', 'vendor', 'folderjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjaselower', 'error', 'warningjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjaseupdatedjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'gitignore', 'addedjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjasegitignore', 'addedjason', 'wraxall', 'signedjason', 'wraxall', 'wjasereadme', 'updatedjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjasereadme', 'updatedjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjaseaddingjason', 'wraxall', 'signedjason', 'wraxall', 'wjaseignore', 'updatedjason', 'wraxall', 'signedjason', 'wraxall', 'wjasecircle', 'issue', 'closedjason', 'wraxall', 'setting', 'reviewer', 'updatedjason', 'wraxall', 'wjaseglobal', 'capitalisation', 'updatedjason', 'wraxall', 'wjaseaskedjason', 'wraxall', 'issuejason', 'wraxall', 'formattingjason', 'wraxall', 'formattingjason', 'wraxall', 'wjasegoimportsjason', 'wraxall', 'wjasespurious', 'warning', 'nukedjason', 'wraxall', 'addedjason', 'wraxall', 'wjasesuggestion', 'resolvedjason', 'wraxall', 'wjasecleaningjason', 'wraxall', 'report', 'coverage', 'packagejason', 'wraxall', 'suggestionjason', 'wraxall', 'kitchensinkjason', 'wraxall', 'improvingjason', 'wraxall', 'issuejason', 'wraxall', 'jwraxalladdedjason', 'wraxall', 'jwraxallremovedjason', 'wraxall', 'jwraxallempty', 'error', 'addedjason', 'wraxall', 'jwraxallcoverage', 'addedjason', 'wraxall', 'extra', 'coveragejason', 'wraxall', 'jwraxallgilcrease', 'signedclient', 'param', 'chore', 'acknowledgesfrederic', 'fredbi', 'client', 'acknowlegde', 'binary', 'paramfrederic', 'fredbi', 'bidongilcrease', 'signedoutput', 'option', 'conflictingfrederic', 'fredbi', 'bidongilcrease', 'signedcommand', 'includingfrederic', 'fredbi', 'bidongilcrease', 'signedstandard', 'support', 'addedopenapi', 'runtime', 'client', 'codegen', 'server', 'supportfrederic', 'fredbi', 'signedenable', 'generates', 'serverfrederic', 'fredbi', 'successful', 'error', 'response', 'client', 'return', 'unexpectedfrederic', 'fredbi', 'bidongilcrease', 'signeddirective', 'honour', 'field', 'generatingsignedgilcrease', 'signedlogger', 'forcelogger', 'default', 'setapi', 'overwrite', 'forcegilcrease', 'signedbindata', 'regenerategilcrease']",{'issue': 100}
"['commandinside', 'import', 'packagenikolov', 'signedjason', 'wraxall', 'signedjason', 'wraxall', 'wjaseproperty', 'order', 'supportkofler', 'signedjason', 'wraxall', 'signedjason', 'wraxall', 'wjasecommand', 'addedjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjaselocation', 'header', 'paramjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjasefixture', 'updatedjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'header', 'default', 'method', 'response', 'removedjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjaseparams', 'template', 'append', 'query', 'urlbuilder', 'supportquery', 'update', 'support', 'turnquistjason', 'wraxall', 'signedjason', 'wraxall', 'refactoredjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjaseanalyser', 'processing', 'ignorejason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'igore', 'diffsjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'ability', 'ignore', 'operationjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjaseaddedjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'compatibilty', 'compatabiltyjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'scopelint', 'issuejason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjasenumeric', 'validation', 'proper', 'parse', 'element', 'futuresignedjason', 'wraxall', 'signedjason', 'wraxall', 'wjasesignedbuildingsignedgoconst', 'reviewsignedupdatesignedsignedsignedconst', 'lintersignedjason', 'wraxall', 'signedjason', 'wraxall', 'wjasevarious', 'gocrest', 'addedjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjasegitignore', 'vendor', 'folderjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjaselower', 'error', 'warningjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjaseupdatedjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'gitignore', 'addedjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjasegitignore', 'addedjason', 'wraxall', 'signedjason', 'wraxall', 'wjasereadme', 'updatedjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjasereadme', 'updatedjason', 'wraxall', 'wjasejason', 'wraxall', 'signedjason', 'wraxall', 'wjaseaddingjason', 'wraxall', 'signedjason', 'wraxall', 'wjaseignore', 'updatedjason', 'wraxall', 'signedjason', 'wraxall', 'wjasecircle', 'issue', 'closedjason', 'wraxall', 'setting', 'reviewer', 'updatedjason', 'wraxall', 'wjaseglobal', 'capitalisation', 'updatedjason', 'wraxall', 'wjaseaskedjason', 'wraxall', 'issuejason', 'wraxall', 'formattingjason', 'wraxall', 'formattingjason', 'wraxall', 'wjasegoimportsjason', 'wraxall', 'wjasespurious', 'warning', 'nukedjason', 'wraxall', 'addedjason', 'wraxall', 'wjasesuggestion', 'resolvedjason', 'wraxall', 'wjasecleaningjason', 'wraxall', 'report', 'coverage', 'packagejason', 'wraxall', 'suggestionjason', 'wraxall', 'kitchensinkjason', 'wraxall', 'improvingjason', 'wraxall', 'issuejason', 'wraxall', 'jwraxalladdedjason', 'wraxall', 'jwraxallremovedjason', 'wraxall', 'jwraxallempty', 'error', 'addedjason', 'wraxall', 'jwraxallcoverage', 'addedjason', 'wraxall', 'extra', 'coveragejason', 'wraxall']",{'issue': 100}
"['swagger', 'badge', 'codetriagebadge', 'people', 'numberhelper', 'swagger', 'badge', 'algorithm', 'issue', 'project', 'subscriber', 'codetriageproject', 'project', 'codetriagebadge', 'accomplishdeveloper', 'others', 'badge', 'longterm', 'people', 'contribute', 'maintainability', 'success', 'popular', 'example', 'codetriage', 'readmesrender', 'badge', 'image', 'gmail', 'client', 'emailrender', 'badge', 'crystal', 'image', 'gmail', 'client', 'emailquestion', 'commentmessage', 'feedback', 'source', 'thanks', 'project']",{'issue': 100}
"['valid', 'generation', 'reference', 'route', 'description']",{'generation': 100}
"['package', 'manglingconsistent', 'functional', 'generation', 'regardingmeaningful', 'reserveddirectory', 'target', 'subdir', 'specifiedpackage', 'server', 'modelreplacesfrederic', 'fredbi']",{'generation': 100}
"['fredbi', 'debugdebugasjson', 'issue']",{'issue': 100}
"['multiple', 'issue', 'parameter', 'supportyuankui', 'liyuakui']",{'issue': 100}
"['enhance', 'generation', 'language', 'refect']",{'generation': 100}
"['mergeextension', 'chenziliang', 'generation', 'request']",{'generation': 100}
"['parallel', 'generation', 'headache', 'essentiallyopenapi', 'resolution', 'cachedattempt', 'unsuccessful', 'modelfrederic', 'fredbi']",{'generation': 100}
"['wrong', 'implementation', 'format', 'checkformat', 'stringbehaivior', 'integer', 'string', 'numberchange', 'format', 'decision', 'specifieddecides', 'usingebihara', 'kousuke']",{'integer': 100}
"['stratoscale', 'template', 'optionstratoscale', 'generator', 'templatebindata', 'generator', 'stratoscale', 'templatecommand', 'startedcommand', 'templatereplace', 'template', 'specific', 'default', 'contributor', 'generateoverride', 'operation', 'contributorreviewlength', 'limitclient', 'generation', 'server', 'addedpetstore', 'stratoscale', 'regen', 'example']",{'generation': 100}
"['reviewdocument', 'generation', 'modeloauth', 'exampledispatch', 'usage', 'smallgitbook', 'adaptation', 'smallupdate', 'model', 'ordercomment']",{'generation': 100}
"['serializer', 'tupleadditional', 'conflict', 'array', 'index', 'issueelement', 'issue', 'tuple', 'anonymous', 'objectallof', 'special', 'nullable', 'allofs', 'issue']",{'issue': 100}
"['vendor', 'updateminimal', 'analysis', 'openapi', 'enablesopenapi', 'onboards', 'runtimeproducer', 'consumer', 'runtime', 'openapiopenapi', 'runtime', 'consumer', 'optional', 'fallbackopenapi', 'runtime', 'authentication', 'optionalvalidate', 'openapi', 'onboards', 'enhancementvalidate', 'optimization', 'openapi', 'regexp', 'cacheanalysis', 'openapi', 'generation', 'issuevalidation', 'issue', 'paramvalidation', 'modelopenapi', 'multipart', 'vendor', 'special', 'runtime', 'update']","{'generation': 100, 'issue': 100}"
"['josephspurrier', 'masterinside', 'generation', 'parameter', 'struct']",{'generation': 100}
"['dependency', 'explanationrunningquestion', 'setup', 'issue']",{'issue': 100}
"['bbefa', 'mergerequest', 'definition', 'security', 'requirement']",{'Security': 100}
"['definition', 'security', 'requirementsecurity', 'definition', 'stable', 'codegentemplate', 'joint', 'requirement', 'openapi', 'empty', 'requirement', 'temporaryanalysis', 'openapi', 'vendor', 'workaround', 'update']",{'Security': 100}
"['flatten', 'model', 'support', 'generation']",{'generation': 100}
"['vendor', 'updateopenapi', 'response', 'propagates', 'issue']",{'issue': 100}
"['enable', 'inline', 'validation', 'parameterfixture', 'correction', 'previousslice', 'validation', 'issue', 'parameter', 'address']",{'issue': 100}
"['fixture', 'issue']",{'issue': 100}
"['allof', 'schema', 'generation']",{'generation': 100}
"['simple', 'issueparams', 'header', 'default', 'simple', 'collection', 'issue', 'appliedscript', 'monochrome', 'expansion', 'shellparameter', 'simple', 'header', 'responsedefault', 'format', 'duration', 'default', 'initializationdefault', 'initialization', 'bsonobjectidfixture', 'codegenfixture', 'isstream', 'attention', 'format', 'reviewdefault', 'runtime', 'function', 'method', 'structs', 'genxxx', 'funcmap', 'enhancement', 'futureselect', 'right', 'method', 'default', 'value']",{'issue': 100}
"['mergezacheddy', 'genoperation', 'parameter', 'request', 'mergeparameter', 'presence', 'support']",{'generation': 91}
"['format', 'generation', 'validateresolution', 'template', 'custom', 'asset', 'repository', 'dependencytimeout', 'appveyor', 'increasedformat', 'validate', 'generation']",{'generation': 100}
"['sensitive', 'windowcompare', 'window', 'generateimport']",{'Sensitive': 100}
"['shutdown', 'serverswagger', 'issue']",{'issue': 100}
"['swagger', 'resolution', 'binarychangechange', 'generation', 'serverflattenswagger', 'serverbindata', 'server', 'modifyvendor', 'updatescannerswagger', 'serverchange', 'resolution', 'referencechange', 'filepathchange', 'filepathtestingvendor', 'updatevendor']",{'generation': 100}
"['fixture', 'occurs', 'demonstrates', 'panic', 'issue']",{'issue': 100}
"['template', 'client', 'generation', 'operationgroups', 'server', 'support']",{'generation': 100}
"['hound', 'inferenceproblem', 'appveyor', 'applies', 'stderrmessage', 'switch', 'output', 'generation', 'stderrconflict', 'behavior', 'different', 'baseimport', 'context', 'gofmt', 'initializeconflict']",{'generation': 100}
"['empty', 'content', 'responseruntime', 'openapi', 'issue']",{'issue': 100}
"['mergeconflict', 'luminal', 'discriminator', 'request', 'mergeconflict', 'discriminator', 'generation', 'model']",{'generation': 100}
"['conflict', 'discriminator', 'generation', 'modelmodel', 'whosediscriminator', 'pointer', 'resultinterface', 'compiler', 'avoidensure', 'version', 'characterpascalize', 'transform']",{'generation': 100}
"['expands', 'generation', 'correctlyexpands', 'generation', 'correctlyexpansion', 'support', 'abscencevalidate', 'vendor', 'return', 'dependency', 'update', 'packageexpandedminor', 'refactoringexpands', 'generation', 'hound', 'flattens', 'generationswagger', 'flattens', 'sendinginstead', 'operation', 'original', 'resolver', 'flattenedgettinginstead', 'knowndef', 'original', 'resolver', 'adhere', 'result']",{'generation': 100}
"['multitag', 'issue', 'generationcorrects', 'multiple', 'presence', 'directory', 'structurecorrects', 'directory', 'structure', 'folder', 'redundancymultiple']",{'issue': 100}
"['afbaf', 'mergerequest', 'import', 'gopath', 'issue']",{'issue': 100}
"['ensure', 'import', 'security']",{'Security': 100}
"['template', 'value', 'discriminates', 'empty', 'regenerate', 'security']",{'Security': 100}
"['template', 'value', 'discriminates', 'empty', 'regenerate', 'security']",{'Security': 100}
"['grofersextension', 'expose']",{'expose': 100}
"['mergeayjiayou', 'request', 'customize', 'mergeauthencator', 'generation']",{'generation': 100}
"['mergemikkeloscar', 'operation', 'request', 'securityoperation', 'template', 'security', 'expose']","{'Security': 100, 'expose': 100}"
"['operation', 'template', 'security', 'expose']","{'Security': 100, 'expose': 100}"
"['server', 'referencecommand', 'switch', 'model', 'existingswagger', 'model', 'generate', 'serverswagger', 'model', 'client', 'model', 'import', 'setting', 'incorrect']",{'incorrect': 100}
"['swagger', 'mixin', 'issue']",{'issue': 100}
"['mergerupor', 'request', 'github', 'mastervalidation', 'issue', 'original', 'effect', 'restore']",{'issue': 100}
"['validation', 'issue', 'original', 'effect', 'restore']",{'issue': 100}
"['mergerequest', 'gaplyk', 'definition', 'implementation', 'security']",{'Security': 100}
"['definition', 'implementation', 'security']",{'Security': 100}
"['parser', 'model', 'scanner', 'error', 'warning', 'print', 'generation', 'schema', 'update']",{'generation': 100}
"['mergerequest', 'mitch', 'mergeruntime', 'generation', 'generator', 'flagext', 'server']",{'generation': 100}
"['runtime', 'generation', 'generator', 'flagext', 'server']",{'generation': 100}
"['version', 'template', 'issue']",{'issue': 100}
"['mergevalidate', 'generation', 'exient', 'request', 'mergeprior', 'client', 'validate', 'server']",{'generation': 100}
"['abbdfallof', 'marshal', 'simon', 'issue', 'request']",{'issue': 100}
"['marshal', 'issue']",{'issue': 100}
"['cfeabdefault', 'client', 'exient', 'request', 'customizbletransport', 'expose']",{'expose': 100}
"['transport', 'expose']",{'expose': 100}
"['definition', 'response', 'issue', 'description', 'support']",{'issue': 100}
"['mergemcswitch', 'request', 'sequence', 'mergeparameter', 'sequence', 'issue']",{'issue': 100}
"['allof', 'issue', 'numbervendor', 'updatedectect', 'singleextra', 'singlelocal', 'schema', 'inclusionallof']",{'issue': 100}
"['mergeswagger', 'option', 'request', 'expose', 'option', 'configuration', 'server']",{'expose': 100}
"['configuration', 'server', 'expose', 'option']",{'expose': 100}
"['hound', 'issue']",{'issue': 100}
"['mergerequest', 'gaplyk', 'masterschema', 'empty', 'issue']",{'issue': 100}
"['allof', 'exists', 'property', 'empty', 'issue', 'schema', 'struct']",{'issue': 100}
"['object', 'security', 'requirementarray', 'scheme', 'scopelonger', 'slice', 'issue', 'returingsince', 'oauth', 'securityarray', 'expectingspecificationharley']","{'Security': 100, 'issue': 100}"
"['generation', 'validator', 'model', 'suffix']",{'generation': 100}
"['zasran', 'request', 'starexprstarexpr', 'issue']",{'issue': 100}
"['starexpr', 'issue']",{'issue': 100}
"['zasranbuiltin', 'support', 'issue']",{'issue': 100}
"['afdffrequest', 'swagger', 'mergeprocess', 'multicore', 'goroutings', 'generation', 'speed']",{'generation': 100}
"['process', 'multicore', 'goroutings', 'generation', 'speed']",{'generation': 100}
"['eaabf', 'mergerequest', 'jwmaag', 'mergeassumption', 'generation', 'generator', 'package', 'server']",{'generation': 100}
"['generation', 'generator', 'assumption', 'serverjwmaag']",{'generation': 100}
"['mergerequest', 'swagger', 'additionaladditional', 'property', 'issue', 'generation']","{'issue': 100, 'generation': 100}"
"['galeoneswagger', 'issue']",{'issue': 100}
"['error', 'messagemessage', 'package', 'primitive', 'unknownbetter', 'diagnostic', 'issueswagger', 'issue']",{'issue': 100}
"['afaabfrequest', 'swagger', 'mergeempty', 'issue']",{'issue': 100}
"['length', 'content']",{'length': 100}
"['primitive', 'issue', 'unknownkhliupin']",{'issue': 100}
"['golint', 'issue']",{'issue': 100}
"['mergerequest', 'swagger', 'issueenums', 'issue']",{'issue': 100}
"['mergebugfix', 'content', 'akutz', 'length', 'request', 'mergelength', 'setting', 'bugfix', 'content']",{'length': 100}
"['length', 'setting', 'bugfix', 'contentlength', 'request', 'patch', 'contenttransfer', 'contentwrittenlength', 'contentidentity', 'writetransfer', 'producerequest', 'payloadcontent']",{'length': 100}
"['mergepieter', 'lazzaro', 'issue', 'request']",{'issue': 100}
"['additional', 'swagger', 'discriminator', 'request', 'mergeclient', 'generation', 'bitbucket']",{'generation': 100}
"['mergeecnahc', 'request', 'buffer', 'empty', 'generator']",{'buffer': 100}
"['reading', 'buffer', 'empty', 'generator']",{'buffer': 100}
"['cbadd', 'mergerequest', 'solution', 'issue']",{'issue': 100}
"['golint', 'strfmt', 'issue']",{'issue': 100}
"['generation', 'backslash']",{'generation': 100}
"['parser', 'definition', 'security']",{'Security': 100}
"['generation', 'package']",{'generation': 100}
"['generation', 'package']",{'generation': 100}
"['generation', 'update', 'website']",{'generation': 100}
"['generation', 'update', 'website']",{'generation': 100}
"['vendor', 'medium', 'generation', 'style']",{'generation': 100}
"['definition', 'integer', 'incorrect']","{'integer': 100, 'incorrect': 100}"
"['authentication', 'client', 'issue']",{'issue': 100}
"['generation', 'inital']",{'generation': 100}
"['issue', 'aleksandroperation', 'package']",{'issue': 100}
"['additional', 'property', 'issue']",{'issue': 100}
"['conversion', 'issue']",{'issue': 100}
"['functionworkinghugothemessite', 'issue']",{'issue': 100}
"['httpkit', 'security', 'middleware']",{'Security': 100}
"['allof', 'property', 'support', 'generation']",{'generation': 100}
"['ensure', 'generation', 'import']",{'generation': 100}
"['ensure', 'generation', 'import']",{'generation': 100}
"['security', 'package', 'middleware']",{'Security': 100}
"['security', 'package', 'middleware']",{'Security': 100}
"['parameter', 'generation', 'issue']","{'generation': 100, 'issue': 100}"
"['parameter', 'generation', 'issue']","{'generation': 100, 'issue': 100}"
"['generation', 'support', 'param']",{'generation': 100}
"['error', 'sanity', 'generation']",{'generation': 100}
"['golint', 'issue']",{'issue': 100}
"['parameter', 'object', 'issue']",{'issue': 100}
"['golint', 'issue']",{'issue': 100}
