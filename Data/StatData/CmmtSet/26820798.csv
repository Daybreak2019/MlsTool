message,fuzzy
"['termination', 'attempt', 'worker', 'thread', 'workaround', 'crashnodejs', 'discussion', 'issue']","{'thread': 100, 'issue': 100}"
"['helper', 'extract', 'environmentensure', 'plugin', 'environmentinternals', 'trick', 'refactor', 'plugin', 'deploy', 'usableensure', 'environment', 'importedconvertyargs', 'strange', 'issue', 'compatibilitydependency', 'number', 'attemptdynamic', 'importprovide', 'instance', 'filename', 'worker', 'sharedworker', 'withinexcerpt', 'serialization', 'support', 'errorprefix', 'reporter', 'titlewindow', 'timeout', 'delay']",{'issue': 100}
"['available', 'thread', 'workermessage', 'execution', 'efficient', 'share', 'available', 'worker', 'communication', 'sense', 'enablecommit', 'worker']",{'thread': 100}
"['thread', 'workerdefault', 'thread']",{'thread': 100}
"['document', 'config', 'concurrency']",{'concurren': 90}
"['template', 'discussion', 'issue']",{'issue': 100}
"['configurationasynchronous', 'eslint', 'helper', 'configuration', 'worker', 'thread', 'support', 'pluginsupport', 'package', 'configuration', 'implementation', 'special', 'generation']","{'thread': 100, 'generation': 100}"
"['directory', 'neededcache', 'issue', 'potential', 'permission', 'avoidissuecomment', 'avajs', 'issue']","{'issue': 100, 'permission': 100}"
"['available', 'worker', 'communicationserialization', 'available', 'worker', 'communicationfuture', 'minimal', 'advancedcrash', 'buffer', 'sendsnodejs', 'workaround', 'issuereporter', 'integration']",{'buffer': 100}
"['selectorissuecomment', 'avajs', 'issue']",{'issue': 100}
"['stack', 'print', 'error', 'empty']",{'stack': 100}
"['template', 'tweak', 'issue']",{'issue': 100}
"['configuration', 'document', 'update', 'variousspecific', 'updatelabel', 'github', 'account', 'recent', 'rewritebetter', 'location', 'github', 'standardtemplate', 'configure', 'issue']",{'issue': 100}
"['store', 'trace', 'object', 'assertionerror', 'stack', 'error']",{'stack': 100}
"['output', 'reporter', 'stack']",{'stack': 100}
"['stack', 'assertion']",{'stack': 100}
"['process', 'worker', 'expose', 'withinfilename', 'expose']",{'expose': 100}
"['errorchange', 'stack', 'thing', 'error']",{'stack': 100}
"['upgrade', 'concordancedeepequal', 'improves', 'snapshotvalue', 'formattingbigint', 'supportsupport', 'object', 'length', 'propertysupportprevious', 'snapshot', 'versionsnapshot', 'update']",{'length': 100}
"['ensure', 'implementationinstance', 'expose']",{'expose': 100}
"['dependency', 'issue']",{'issue': 100}
"['module', 'access', 'worker', 'option', 'dedicatedmodule', 'circular', 'option', 'setting', 'gettingoption', 'future', 'issue', 'catch', 'causeddependency']",{'issue': 100}
"['trace', 'bluebird', 'integration', 'stack']",{'stack': 100}
"['minimum', 'utils', 'stack', 'version']",{'stack': 100}
"['permission', 'issue', 'assumerather', 'package', 'option', 'shrinkwrappackage', 'rebuildbinary', 'executable', 'runningsince', 'result', 'executable', 'installingbinary', 'executablescript', 'windowoffline', 'appveyor', 'lockedwindow', 'issue', 'appveyor', 'buildoptional', 'workaroundworkaround', 'issuefresh', 'packagedependency', 'appveyor']","{'permission': 100, 'issue': 100}"
"['value', 'invalid', 'concurrencymessage', 'value', 'warning', 'updatenegative', 'detect', 'value', 'integer']",{'integer': 100}
"['limit', 'number', 'concurrency']",{'concurren': 90}
"['improper', 'usage']",{'improper': 100}
"['package', 'buffer', 'update']",{'buffer': 100}
"['newish', 'buffer', 'unavailable', 'buffer', 'ensure', 'release']",{'buffer': 100}
"['specific', 'value', 'issue', 'custom', 'error']",{'issue': 100}
"['dependency', 'updatecompatibility', 'issuecomment', 'issue', 'linter', 'sindresorhus']",{'issue': 100}
"['value', 'concurrency']",{'concurren': 90}
"['pending', 'finish', 'observablecommit', 'force', 'assertion', 'finishingasyncawait', 'errorcallbackerrordiscourage', 'logic', 'previous', 'behaviorassertion', 'asynchronous', 'synchronousissuecomment', 'avajs', 'issue']",{'issue': 100}
"['snapshot', 'usablemanage', 'accessor', 'snapshot', 'thread', 'runnerrunner', 'snapshotwithout', 'snapshotgenerate', 'snapshotdifference', 'output', 'subtleformat', 'assertionideal']",{'thread': 100}
"['assertionerrors', 'usage', 'thrown', 'improper', 'annotate']",{'improper': 100}
"['instance', 'runner', 'expose', 'worker']",{'expose': 100}
"['concurrent', 'sequence', 'simplifycollect']",{'concurrent': 100}
"['dependency', 'issue']",{'issue': 100}
"['ensure', 'crash', 'failure', 'workerensure', 'return', 'promiselogic', 'error', 'propagateuncaught', 'exception', 'runner', 'erroruncaught', 'runner', 'errorprevents', 'causinguncaught', 'fixup', 'exception', 'runner', 'erroruncaught', 'fixup', 'exception', 'runner', 'error']",{'crash': 100}
"['stack', 'utilsclose']",{'stack': 100}
"['minor', 'issue']",{'issue': 100}
"['regression', 'runningvalue', 'immediate', 'issue']",{'issue': 100}
"['crash', 'snapshotrepeat']",{'crash': 100}
"['stack', 'internalcommit', 'sindresorhus', 'clean', 'stack']",{'stack': 100}
"['transpilation', 'reduceperformance', 'startup', 'stack']",{'stack': 100}
"['recipe', 'systemjs', 'updateistanbuljs', 'issuecomment', 'issue', 'comment', 'purpose', 'systemjs', 'jamestalmage']",{'issue': 100}
"['french', 'translation', 'issue']",{'issue': 100}
"['extract', 'generation', 'config', 'babel', 'submoduleextract', 'generation', 'config', 'babel', 'submoduledefaultreassign', 'validatefeedback']",{'generation': 100}
"['config', 'concurrency']",{'concurren': 90}
"['issueclick', 'preview', 'pretty', 'issue', 'comment', 'print', 'template', 'deletesmarkdown', 'reformat', 'close', 'paste', 'multiplerequest', 'versionsection', 'configthier', 'section', 'projectrequest', 'minimal', 'reproductionclose']",{'issue': 100}
"['macromacro', 'basicsupport', 'macro', 'function', 'language', 'pretty', 'title', 'specify', 'string', 'template', 'macro', 'issuecomment', 'enhance', 'issue', 'implementation', 'shipping', 'comment', 'proposal', 'sindresorhus', 'breakreadme', 'indentationargument', 'spreadmacro', 'array', 'allowargument', 'providedtitle']",{'issue': 100}
"['improvefinish', 'verbose', 'current', 'reporter', 'subsequent', 'restart', 'loggerwatcher', 'logger', 'restart', 'reporterbetter', 'watcherobject', 'return', 'assertionpassedassert', 'rerunreporter', 'reporter', 'clearenteredconsistent', 'output', 'finish', 'emptyrejection', 'exception', 'print', 'empty', 'errorwhitespace', 'verbose', 'reporter', 'stack', 'trailingempty', 'finish', 'print', 'alwayscompare', 'helper', 'useful', 'debug', 'reporter', 'printreporter', 'multiple', 'separation', 'horizontalreporterremove', 'debug', 'output']",{'stack': 100}
"['improper', 'detectimproper', 'detectcommon', 'misuse', 'protectscustom', 'creation', 'babelthrow', 'helper', 'jamestalmage', 'plugin', 'babelrelative', 'colorprotect', 'frame', 'babel', 'syntax', 'errorframe', 'graph', 'sizable', 'dependency', 'babelframe', 'section', 'middle', 'redundantupdate']",{'improper': 100}
"['template', 'issue', 'comment', 'instruction']",{'issue': 100}
"['mergesindresorhus', 'request', 'crash', 'mergecrash']",{'crash': 100}
"['sindresorhus', 'error', 'syntax', 'mergetranspile', 'crash']",{'crash': 100}
"['refactortryrun', 'method', 'statsprocess', 'premature', 'crash']",{'crash': 100}
"['variable', 'watcher', 'bufferpartial', 'variable', 'buffer', 'receivedoriginal', 'intent']",{'buffer': 100}
"['mergerequest', 'issue', 'template', 'sindresorhus', 'mergetemplate', 'issue']",{'issue': 100}
"['template', 'issue']",{'issue': 100}
"['mergesotojuan', 'request', 'workerwithout', 'crash']",{'crash': 100}
"['stack', 'error']",{'stack': 100}
"['clean', 'stack', 'childduplicate', 'performance']",{'stack': 100}
"['mergerequest', 'jamestalmage', 'shorten', 'stack', 'mergeshorten']",{'stack': 100}
"['revert', 'regenerator', 'transform', 'dependency', 'plugin', 'babelcommit', 'revertstransform', 'regenerator', 'issue']",{'issue': 100}
"['mergerequest', 'trace', 'sindresorhus', 'stack', 'mergereadme', 'trace', 'clean', 'stack']",{'stack': 100}
"['readme', 'trace', 'clean', 'stack']",{'stack': 100}
"['mergerequest', 'jamestalmage', 'utils', 'stack', 'mergenicer', 'stack', 'utils']",{'stack': 100}
"['stack', 'utils']",{'stack': 100}
"['mergetranspile', 'request', 'jamestalmage', 'thread', 'mergetranspile', 'thread']",{'thread': 100}
"['mergetrace', 'request', 'jamestalmage', 'stack', 'mergetrace', 'stack']",{'stack': 100}
"['trace', 'stack']",{'stack': 100}
"['project', 'issueisaac', 'issue']",{'issue': 100}
"['bfdfd', 'mergerequest', 'sindresorhus', 'stack', 'errorassert', 'trace', 'stack', 'error']",{'stack': 100}
"['assert', 'trace', 'stack', 'error']",{'stack': 100}
"['undocument', 'assertionremove', 'probablysindresorhus', 'issuecomment', 'issue']",{'issue': 100}
"['source', 'improveprovide', 'package', 'source', 'stacksource', 'input', 'script', 'generate', 'fixtureinput', 'script', 'fixture', 'errorfixture', 'updatesource', 'fixture', 'commentinginputsourcemap', 'inline', 'causefails', 'source', 'expectedusingoriginal', 'trace', 'source', 'exception', 'trace', 'source', 'exception', 'stack', 'usingaccount', 'source', 'initial', 'takinganother', 'source', 'fixture', 'source', 'inline', 'superfluous', 'stacksupport', 'source', 'behavior', 'loggerevanw', 'source', 'support']",{'stack': 100}
"['quicker', 'incorrecty']",{'incorrect': 95}
"['observable', 'object', 'return', 'errorlegacyreferencesindresorhus', 'issuecomment', 'issue']",{'issue': 100}
"['mergenovemberborn', 'trace', 'request', 'input', 'sourcemaps', 'stack', 'mergesource', 'trace', 'input', 'stack']",{'stack': 100}
"['initial', 'trace', 'source', 'support', 'stacktrace', 'stack', 'alreadycontains']",{'stack': 100}
"['mergenovemberborn', 'pragma', 'request', 'source', 'mergetrace', 'source', 'support', 'pragmas', 'stack']",{'stack': 100}
"['trace', 'source', 'support', 'pragmas', 'stackcompute', 'source', 'stack', 'usingfunction', 'source', 'default', 'retrieval', 'supportsource', 'pragmadependency', 'pragmas', 'requiredparty', 'errordependency', 'sourceinline', 'source']",{'stack': 100}
"['close', 'issue']",{'issue': 100}
"['enable', 'bluebird', 'stack']",{'stack': 100}
"['transpile', 'function', 'regenerator', 'blacklist', 'generator']",{'blacklist': 100}
"['parallelism', 'concurrency']",{'concurren': 90}
"['issue', 'stdout', 'workaround']",{'issue': 100}
"['stack', 'error']",{'stack': 100}
"['concurrent', 'runner', 'serial']",{'concurrent': 100}
"['concurrent', 'serial']",{'concurrent': 100}
