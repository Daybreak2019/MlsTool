message,fuzzy
"['converter', 'buffer', 'protobuf']",{'buffer': 100}
"['converter', 'return', 'buffer', 'protobufconverter', 'return', 'buffer', 'protobufminor', 'cleanup']",{'buffer': 100}
"['security', 'release', 'patch', 'supportsecurity', 'patch']",{'Security': 100}
"['schema', 'format', 'integer', 'number', 'optional']",{'integer': 100}
"['waitforinit', 'expose']",{'expose': 100}
"['producer', 'strategy', 'console', 'support', 'option', 'subjectclasssubject', 'longerlogic', 'configuration', 'property', 'subjectvalue', 'allowsdefault', 'producer', 'console', 'subject', 'logicpreviouslyspread', 'functionalityclassschema', 'message', 'error', 'unsupported', 'platformversion', 'maven', 'protoc', 'incorrect']",{'incorrect': 100}
"['plugins', 'kafka', 'client', 'security']",{'Security': 100}
"['checkstyle', 'issue']",{'issue': 100}
"['proper', 'catch', 'instance', 'client', 'issue', 'library', 'integration', 'kafka']",{'issue': 100}
"['ability', 'serialization', 'versionability', 'serialization', 'versionaddress', 'issue', 'schema']",{'issue': 100}
"['performance', 'objectmapper', 'singletonstatic', 'expensive', 'singletonpossible', 'thread']",{'thread': 100}
"['performance', 'objectmapper', 'singletonstatic', 'expensive', 'singletonpossible', 'thread']",{'thread': 100}
"['configuration', 'provider', 'issue', 'basic', 'credentialschema', 'issue', 'address', 'registry', 'confluentincschema', 'applies', 'registry', 'confluentinc']",{'issue': 100}
"['subject', 'schema', 'subject', 'schema', 'retrieveschema', 'getallsubjects', 'client', 'maven', 'issue', 'registry', 'method']",{'issue': 100}
"['minor', 'integer']",{'integer': 100}
"['resourceschema', 'invalid', 'topic', 'client', 'requestspace', 'responds', 'character', 'servererror', 'content', 'statusthrown', 'insteadresolve', 'issue']",{'issue': 100}
"['enable', 'confluent', 'plugins', 'classpath', 'security']",{'Security': 100}
"['security', 'infer', 'protocol']",{'Security': 100}
"['converter', 'stringreplaces', 'string', 'instance', 'static', 'incorrect', 'method']",{'incorrect': 100}
"['checkstyle', 'issue']",{'issue': 100}
"['reference', 'plugin', 'security']",{'Security': 100}
"['default', 'bytebuffer', 'short', 'valuedefault', 'schema', 'similar', 'integer', 'short', 'avrodata', 'value', 'value', 'default']",{'integer': 100}
"['store', 'thread', 'store', 'thread', 'tombstone']",{'thread': 100}
"['issue', 'legacy']",{'issue': 100}
"['performance', 'couple', 'regress', 'issue', 'converterschema', 'strategy', 'subjectimplement', 'strategy', 'availableschema', 'patchreturn', 'strategy', 'deprecation', 'versionreset', 'insideproperty', 'schema', 'avoidprevent', 'version', 'check']",{'issue': 100}
"['datastructure', 'lookup', 'interface', 'generation', 'refactordatastructures', 'lookup', 'interface', 'generation', 'refactor']",{'generation': 100}
"['schema', 'registry', 'confluentinc', 'issueschema', 'registry', 'confluentinc', 'issue']",{'issue': 100}
"['request', 'issue', 'wicknicksconfigs', 'topic', 'createtopic', 'exists']",{'issue': 100}
"['enable', 'public', 'serde', 'issue']",{'issue': 100}
"['return', 'schema', 'endpoint', 'literal', 'issuereturn', 'schema', 'endpoint', 'literal', 'issue']",{'issue': 100}
"['getallversionspossible', 'getallversions', 'expose', 'checkversion']",{'expose': 100}
"['issue', 'kafka', 'registry', 'adapt']",{'issue': 100}
"['default', 'schema', 'optionalschema', 'issue', 'address', 'registry', 'confluentincdefault', 'schema', 'property']",{'issue': 100}
"['filter', 'protocol', 'warning', 'setting', 'security']",{'Security': 100}
"['thread', 'safety', 'avrodata', 'cache']",{'thread': 100}
"['mergerequest', 'group', 'document', 'output', 'input', 'issue']",{'issue': 100}
"['feedback', 'reviewchange', 'support', 'possible', 'toggledreference', 'object', 'insidebracket', 'complex', 'commentconfiguration', 'configurable', 'tidiedissue', 'followingunion', 'support', 'complexensure', 'confluentinc', 'record', 'field', 'ensure', 'place', 'record', 'field', 'issue', 'extra', 'ensure', 'ignoringschema', 'input', 'issue']",{'issue': 100}
"['eacbd', 'mergerequest', 'issue', 'hotelsdotcom', 'mergeincompatibility', 'schema', 'generalize']",{'issue': 100}
"['issue', 'followingunion', 'support', 'complexschema', 'issue', 'ensure', 'registry', 'record', 'field', 'ensure', 'place', 'record', 'field', 'issue', 'extra', 'ensure', 'ignoringschema', 'input', 'issue']",{'issue': 100}
"['sensitive', 'exception']",{'Sensitive': 100}
"['aedeb', 'mergerequest', 'alexlod', 'integerreference', 'integer']",{'integer': 100}
"['reference', 'integer']",{'integer': 100}
"['mergejcustenborder', 'request', 'issue', 'mergeissue']",{'issue': 100}
"['parse', 'check', 'property', 'issue']",{'issue': 100}
"['mergerequest', 'eugenemiretsky', 'structs', 'issue', 'optional']",{'issue': 100}
"['array', 'optional', 'issue']",{'issue': 100}
"['string', 'record', 'issue', 'optional']",{'issue': 100}
"['script', 'configs', 'issue', 'copycat', 'review', 'address', 'kafka']",{'issue': 100}
"['mergerequest', 'mergeseveral', 'restapitest', 'exception', 'issue', 'behavior']",{'issue': 100}
"['issue', 'consistent']",{'issue': 100}
"['restapitest', 'exception', 'issue', 'behavior']",{'issue': 100}
"['restapitest', 'exception', 'issue', 'behavior']",{'issue': 100}
"['mergerequest', 'mergereturn', 'string', 'config', 'issue', 'unkno', 'subject']",{'issue': 100}
"['issue', 'method']",{'issue': 100}
"['issue', 'check', 'subject']",{'issue': 100}
"['return', 'string', 'unknown', 'config', 'issue', 'subject']",{'issue': 100}
"['faede', 'mergemerge', 'request', 'issue', 'rename', 'confluentincissue', 'rename']",{'issue': 100}
"['rename', 'generic', 'class', 'issue']",{'issue': 100}
"['serializer', 'switch', 'confluent', 'config', 'class', 'abstractconfiginstead', 'config', 'encoder', 'public', 'issue', 'interfaceserializer', 'version', 'class', 'changeddrawback', 'dependency', 'extraensure', 'compatibility', 'common', 'confluentpretty']",{'issue': 100}
"['request', 'issue', 'confluentincclear', 'rename']",{'issue': 100}
"['mergerequest', 'theduderog', 'masterstart', 'information', 'registry', 'expose']",{'expose': 100}
"['mergerequest', 'theduderog', 'mastersimple', 'layout', 'incorrect']",{'incorrect': 100}
"['mergeremote', 'master', 'origin', 'issue', 'branchconflict']",{'issue': 100}
"['successful', 'issue', 'response', 'update']",{'issue': 100}
"['ceedb', 'mergerequest', 'confluentinc', 'issuepossible', 'issue', 'schema', 'lookup']",{'issue': 100}
"['possible', 'issue', 'schema', 'lookup']",{'issue': 100}
"['issue', 'serializer']",{'issue': 100}
"['mergemulti', 'issue']",{'issue': 100}
"['check', 'local', 'issue', 'request', 'registration', 'cachemaster', 'config', 'request', 'issue', 'update']",{'issue': 100}
"['mergemerge', 'timeout', 'request', 'kafkastore', 'issue', 'confluentinctimeout', 'kafka', 'setting', 'store']",{'issue': 100}
"['issue', 'subject']",{'issue': 100}
"['issue', 'review', 'comment']",{'issue': 100}
"['schema', 'issue', 'config']",{'issue': 100}
"['request', 'registration', 'expose', 'confluentincschema', 'function', 'level', 'registration', 'expose']",{'expose': 100}
"['version', 'documentation', 'string', 'reflect', 'integer', 'versionid']",{'integer': 100}
"['mergemerge', 'request', 'issue', 'dependency', 'cleanup']",{'issue': 100}
"['schemaregistry', 'issue', 'interface']",{'issue': 100}
"['schema', 'topic', 'factor', 'replication', 'issue']",{'issue': 100}
"['aeefe', 'mergerequest', 'confluentinc', 'close', 'resource', 'issue', 'registry', 'server']",{'issue': 100}
"['close', 'resource', 'issue', 'registry', 'server']",{'issue': 100}
"['address', 'issue', 'review']",{'issue': 100}
"['setting', 'permission', 'class']",{'permission': 100}
"['support', 'issue', 'failover']",{'issue': 100}
"['error', 'issue']",{'issue': 100}
"['geoff', 'issue']",{'issue': 100}
"['store', 'thread', 'update', 'indentation', 'operation', 'convention', 'local', 'reader', 'kafka']",{'thread': 100}
