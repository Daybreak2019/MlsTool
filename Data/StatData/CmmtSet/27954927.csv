message,fuzzy
"['relevant', 'analyzer', 'static', 'jetbrains', 'warningaction', 'report', 'false', 'github', 'valid', 'mostlyoptimistic', 'retry', 'removal', 'incorrect', 'parameter']",{'incorrect': 100}
"['custom', 'integervalue', 'cache', 'simpleridentity', 'semantics', 'requirereference', 'integerconstructorfuture', 'removal', 'release', 'constructorcustom', 'value', 'classsimilar', 'integer', 'mirrorwithin', 'valueof', 'instance', 'return', 'cachedfactory', 'function', 'convenviencesuccinct', 'restore']",{'integer': 100}
"['machine', 'window', 'compilationexcludepaths', 'ignore', 'errorprone', 'warning', 'optionbuilddir', 'regular', 'windowinstead', 'regex', 'invalid', 'charactergeneric', 'cross', 'prone', 'issue', 'error']",{'issue': 100}
"['commitcritical', 'varhandles', 'buffer', 'writesimilar']",{'buffer': 100}
"['strategy', 'buffer', 'thread', 'randomlycontention', 'reset', 'optimizedfield', 'private', 'insidestripedbecomes', 'fallback', 'local', 'thread', 'allowedsatisfactory', 'perfect', 'losesbenefit', 'throughput', 'thanks', 'equivalentcaffeine', 'retry', 'event', 'exceedsretry', 'whereas', 'longadder', 'counterretain', 'allocation', 'trick', 'growthfield', 'unsafe']","{'buffer': 100, 'thread': 100}"
"['initialization', 'local', 'thread', 'fallback']",{'thread': 100}
"['varhandles', 'jctools', 'supportdefault', 'performance', 'access', 'benefitsanity', 'queue', 'fallbackjctools', 'issue']",{'issue': 100}
"['eviction', 'cachewriter', 'introduce', 'deprecate', 'thread', 'entry', 'exceptionreplaces', 'commonwrites', 'method', 'variousflexibility', 'behaviorlistener', 'weakkeys', 'asynccachevalue', 'future', 'priorcachewriter', 'incompatible', 'eithercachewriter']",{'thread': 100}
"['variable', 'expiration', 'optimizationoverwhelm', 'buffer', 'writeentry', 'maximum', 'causemainance', 'catch', 'backpressuremajor', 'event', 'bufferimproves', 'buffer', 'variable', 'optimizationcalculation', 'facboy', 'christopher']",{'buffer': 100}
"['runtime', 'simulator', 'largeevent', 'elegant', 'stream', 'approach', 'partitioningiterator', 'batch', 'spinedbuffer', 'element', 'maximum', 'chunkcause', 'memory', 'trace', 'pausesecond', 'tracesimulator', 'trace', 'double', 'startupoperation', 'buffer', 'foreachconcurrent', 'policy', 'startup', 'prefetchingreduces', 'memory']",{'buffer': 100}
"['metric', 'policy', 'custom', 'simulatorcommon', 'policy', 'additiontrack', 'desire', 'algorithm', 'example', 'specificeviction', 'policy', 'unmark', 'clockentry', 'searchcapture', 'length', 'policy', 'register', 'policystatsefficiency', 'reporter', 'value', 'object', 'churn', 'avoidsinstead', 'metric', 'accessfield', 'instance', 'accessor', 'method', 'primitivemetric', 'policy', 'reporter', 'printacross', 'emptyreport', 'metric', 'characteristic', 'metric', 'trace', 'weight']",{'length': 100}
"['servicerunningevery', 'classloader', 'thread', 'default', 'configdefault', 'classloader', 'bundle', 'configuration', 'override', 'defineaddedbundle', 'reproducible', 'header']",{'thread': 100}
"['cache', 'simulation', 'support', 'policy', 'largedifferent', 'weight', 'entry', 'tracemultiple', 'characteristic', 'policy', 'support', 'entry', 'evictmaximum', 'integer', 'settingsmall', 'photo', 'value', 'tracechance', 'minimize', 'minimal', 'migration', 'introducingweight', 'policy', 'entry', 'compatibility', 'adaptsize', 'trace', 'simulatorsimulator', 'different', 'weight', 'treatdistinct', 'entry', 'workload', 'noticablesimulator', 'group', 'sincetrace']",{'integer': 100}
"['variable', 'logic', 'improveissuecomment', 'caffeine', 'issue']",{'issue': 100}
"['incorrectlycachewriter', 'implementationalternative', 'implementation', 'sufferversion', 'changeoccur', 'eviction', 'explicit', 'removal', 'entryresponsible', 'removalentry', 'necessary', 'criterioneviction', 'thread', 'entry', 'eagerlyentry', 'discard', 'structure', 'policycontinue', 'thread', 'removal', 'couldentry', 'modest', 'performance', 'differencecoarser', 'difference', 'linearizable', 'library', 'performoptimistic', 'entry', 'desire', 'removal', 'pessimisticfollow']",{'thread': 100}
"['jcache', 'thread', 'context', 'classloaderjcache', 'hibernate', 'support', 'class', 'springdiffers', 'thread', 'current', 'contextehcache', 'provider', 'class', 'matchredundant', 'hibernate', 'differs', 'integrationclassloaders']",{'thread': 100}
"['isolate', 'guavapackage', 'atomic', 'bundle', 'splitfails', 'verifier', 'class', 'rathergoogle', 'issue', 'guava']",{'issue': 100}
"['simulation', 'overflow']",{'overflow': 100}
"['errorprone', 'gradle', 'local', 'caffeine', 'compilerclasspath', 'rewritecause', 'project', 'transitive', 'dependencyseems', 'compilergradle', 'issue']",{'issue': 100}
"['errorprone', 'resolveclean', 'crash', 'buildgoogle', 'prone', 'issue', 'error']","{'crash': 100, 'issue': 100}"
"['executor', 'thread', 'cache']",{'thread': 100}
"['optional', 'scheduler', 'thread', 'support', 'cache', 'maintenance', 'routine', 'periodicallyeviction', 'replay', 'policyreference', 'expiration', 'policyalgorithm', 'batch', 'avoidnormal', 'performs', 'cache', 'maintenance', 'effect', 'routinemaintenance', 'cache', 'routine', 'activityrequires', 'scheduling', 'backgroundindicate', 'memory', 'activitytransient', 'system', 'cachelogic', 'trigger', 'business', 'cache', 'timing', 'leverageremovallistener', 'notifydefer', 'manage', 'cache', 'createschedule', 'executor', 'maintenance', 'similarlydefault', 'scheduler', 'cache', 'routinescheduler', 'augments', 'maintenance', 'periodicallyadditional', 'scheduling', 'period', 'reference', 'assistscheduler', 'reasonable', 'limit', 'cacheexpiration', 'neverduration', 'maintenance', 'cacheinstead', 'delay', 'scheduler', 'guaranteeoccur', 'queue', 'delay', 'priority', 'additional', 'similarlyeffortvariable', 'scheduling', 'bucket', 'timerwheel', 'expirationexample', 'timer', 'cascadeschedule', 'bucket', 'cascade', 'minuteschedule', 'durationreturn', 'method']",{'thread': 100}
"['spotbugs', 'jmhigspret', 'includereporteddiegoeliascosta', 'spotjmhbugs', 'issue']",{'issue': 100}
"['cache', 'overflow', 'guava', 'handlingcachebuilder', 'avoidgoogle', 'fdaabedeabdfdad', 'guavagoogle', 'issue']","{'overflow': 100, 'issue': 100}"
"['incompatible', 'ehcache', 'removeincompatibility', 'ehcache', 'package', 'statisticincompatibility', 'compareehcache', 'detail', 'issue']",{'issue': 100}
"['maximum', 'duration', 'expirationduration', 'maximumcalcuation', 'expirationtime', 'currenttime', 'overflowoccur', 'thread', 'calculatesoccur', 'expirationtime', 'entry', 'whenever', 'sweepmaximum', 'thread', 'access', 'timestampduration', 'result', 'maximumbroad', 'safety', 'concurrency', 'overflow']","{'thread': 100, 'concurren': 90, 'overflow': 100}"
"['caffeine', 'cachenumber', 'caffeinevalue', 'compute', 'check', 'necessary', 'placeholderpower', 'necessary', 'increasingdefault', 'caffeine', 'drawback', 'compute', 'progress', 'function', 'problem', 'expensive', 'issue', 'computeifabsent', 'synchronizesblack', 'linearize', 'anticipate', 'indeedorder', 'bandwagon', 'synchronization', 'tryingwarmup', 'contention', 'caffeine', 'pretty', 'characteristic', 'cache', 'throughput', 'hammer', 'caffeine', 'thread', 'throughput', 'input', 'death', 'query', 'deduplicates', 'deadlock', 'general', 'spiral', 'capacity', 'system', 'cache', 'request', 'number', 'bucket', 'pretty', 'cache', 'additional', 'pathological', 'compensate', 'presizes', 'somethingstuff', 'misunderstood', 'sense']","{'issue': 100, 'thread': 100, 'deadlock': 100}"
"['policy', 'buffer', 'cache']",{'buffer': 100}
"['transaction', 'storage', 'paper', 'difference', 'incorrect', 'major', 'copyright', 'authorizer']",{'incorrect': 100}
"['instance', 'container', 'starvation', 'couldtimeout', 'thread', 'awaits']",{'thread': 100}
"['static', 'cleanup', 'intellij', 'analysisimport', 'quirk', 'editscomplains', 'import', 'intellij', 'issue', 'analyzer', 'static', 'issue', 'javaccould', 'somewhatfriendlier', 'project']",{'issue': 100}
"['internal', 'randomness', 'stabilize', 'guavadifferent', 'segment', 'caffeinerandomness']",{'randomness': 100}
"['potential', 'overflow']",{'overflow': 100}
"['stale', 'notification', 'update', 'clearsimilar', 'guard', 'concurrent', 'update', 'clearstale', 'version', 'ensure', 'synchronization', 'demonstratelatest', 'value']",{'concurrent': 100}
"['stale', 'notification', 'updatebrowse', 'thanks', 'updatesynchronize', 'entry', 'block', 'checknotifies', 'performscomputation', 'expensiveeviction', 'computation', 'performedentry', 'computation', 'listener', 'removalvalue', 'initiallyvalue', 'entry', 'modify', 'writerwriter', 'listener', 'removal', 'stalecomputation', 'mightslight', 'value', 'eviction', 'async', 'allowingoften', 'block', 'incorrect', 'updateprimary']",{'incorrect': 100}
"['radarquery', 'permission', 'caffeine', 'planningeviction', 'cassandra', 'addingmango', 'cache', 'golang']",{'permission': 100}
"['unexpectedsmall', 'scheduling', 'performance', 'policy', 'entrant', 'threadmaintenance', 'thrown', 'exception', 'performedthrownever', 'forkjoinpooldefault', 'executor', 'reentrant', 'customtrust', 'reentrant', 'sinceforeignthrown', 'causedassumption', 'unrelatedunpredictable', 'despitestillscenario', 'plugin', 'buildscanlarge', 'performance', 'issue']",{'issue': 100}
"['update', 'jctoolsoccurs', 'buffer', 'writeconsumer', 'difficult', 'issuereproduce', 'previous', 'shadeddivergency', 'minimize', 'cache', 'guava', 'minoradapter', 'mirroreveryones', 'thanks']",{'buffer': 100}
"['ensure', 'backpressurewrites', 'workload', 'relativelyhandoff', 'async', 'buffer', 'writer', 'maintenancepoint', 'bufferforce', 'cache', 'backpressurewriter', 'maintenace', 'clean', 'performs', 'previouslyorder', 'buffer', 'priorcould', 'observe', 'prematurefront', 'admission', 'additionwriter', 'evictentry', 'worldnicer']",{'buffer': 100}
"['error', 'google', 'prone', 'issue']",{'issue': 100}
"['maintenance', 'executor', 'writer', 'policy', 'updatemaintenance', 'possible', 'previous', 'iteration', 'thread', 'amortizedexecutor', 'system', 'advantagewould', 'buffer', 'writemaintenance', 'assumption', 'runningthread', 'synthetic', 'runningnormal', 'usage', 'scheduledworker', 'executor', 'workload', 'refresh', 'synthetic', 'happenfuturemaintenance', 'unable', 'worker', 'append', 'thread', 'tryingamortize', 'maintenance', 'degradewasteful', 'progressincrease', 'penalty', 'responsewould', 'refreshremovedouglea', 'executor', 'thanks', 'oversightexhaust']","{'thread': 100, 'buffer': 100}"
"['import', 'eclipsebuildship', 'gradle', 'import', 'priorwould', 'force', 'plugin', 'source', 'testedreplace', 'optional', 'highscalelib', 'click', 'cliff', 'trickusingclassloader', 'resolvecliff', 'choses', 'breakatomic', 'computes', 'mappingcount', 'methodjctools', 'likely', 'jigsaw', 'culprit', 'movedotherwise', 'trickbuild', 'issue']",{'issue': 100}
"['cache', 'benchmark', 'elasticsearch', 'suiteperforms', 'cache', 'result', 'stripedbiasedresult', 'elasticsearch', 'elastic', 'issue']",{'issue': 100}
"['workload', 'pressure', 'heavychange', 'modification', 'buffer', 'primarilyentry', 'update', 'cache', 'weightworld', 'stress', 'showingwrites', 'cache', 'queue', 'unboundednature', 'cache', 'workload', 'heavy', 'givenvisiblemaximum', 'footprintdemand', 'stress', 'simpleeviction', 'achievedversion', 'implementation', 'compatibleimplement', 'quality']",{'buffer': 100}
"['policy', 'tinylfu', 'simulatorrandom', 'cache', 'selection', 'randomcandidate', 'victim', 'windowlowest', 'frequencytinylfu', 'window', 'candidate', 'chance', 'tinylfuwould', 'buffer', 'approach', 'requiremaximum', 'reduces', 'entry', 'overheaddifference', 'analysisappears', 'tradeoff']",{'buffer': 100}
"['correctness', 'theoretical', 'matchrandommulti', 'likely', 'similar', 'small', 'tracepromotion', 'entry', 'difference', 'entry', 'prematurelyeviction', 'eligibility', 'causingconurrency', 'optimizationentry', 'policy', 'buffer', 'beneficial', 'tricksmall', 'effect', 'trace', 'lossy', 'difference', 'buffercause', 'statement', 'unnecessarypareto']",{'buffer': 100}
"['executor', 'removal', 'graceful', 'error', 'notification', 'handlingcould', 'rejecteddocumentation', 'resourcecould', 'rejection', 'thread', 'writer', 'increase', 'listenerstill', 'additional', 'penalty', 'stress', 'investigative']",{'thread': 100}
"['default', 'removeif', 'predicate', 'handledefault', 'collection', 'removeif', 'appropriate', 'implementationentryset', 'value', 'concurrent', 'affectsimilar', 'foundbugdatabase']",{'concurrent': 100}
"['removalinitial', 'project', 'structure', 'writtenpublic', 'theme', 'minor', 'stackeliminate', 'backoff', 'arena', 'backoff', 'arena', 'contention', 'updatethough', 'buffer', 'indicatesoffer', 'jctools', 'entry', 'table', 'synchronizationalternative', 'mpsclinkedqueuerelease', 'major', 'removal', 'scheduledperhaps', 'revisit', 'growablequeue', 'excellent', 'benchmark', 'advise']",{'buffer': 100}
"['space', 'object', 'buffer', 'falsebloat', 'objectvalue', 'server', 'classarray', 'large', 'primitivesignificant', 'bother', 'difference']",{'buffer': 100}
"['tinylfu', 'integration', 'progresswindow', 'eviction', 'integration', 'support', 'tinylfu', 'breaksingle', 'issue', 'assumption', 'aroundorder', 'weight', 'access', 'queue', 'handlingpolicy']",{'issue': 100}
"['separate', 'sensitive', 'timing', 'isolate']",{'Sensitive': 100}
"['edenqueue', 'optimizationavoids', 'optimization', 'entry', 'concurrent', 'usefulimpact']",{'concurrent': 100}
"['concurrent', 'usefulimpact']",{'concurrent': 100}
"['entry', 'resident', 'number', 'boundnumber', 'resident', 'entry', 'paper', 'discusauthor', 'bottom', 'reliesmaximum', 'stack', 'reference', 'length']","{'stack': 100, 'length': 100}"
"['finish', 'simulator', 'implementationversion', 'exceeds', 'referenceoften', 'paper', 'divergeversion', 'difference', 'slightpaper', 'differenceremains', 'pending', 'number', 'maximumresident', 'entry', 'paper', 'length', 'authorseparate', 'jackrabbit', 'resident', 'version', 'queueapproach', 'chosenjackrabbit', 'optimization', 'version', 'hottestentry', 'improves', 'concurrencyimpact', 'minimal', 'techniquepercentage', 'experimentedoptimal']",{'length': 100}
"['issue', 'window', 'buildpaper', 'pseudo', 'encodingjimfs', 'memory', 'window']",{'issue': 100}
"['simulator', 'simplifiedeviction', 'implementactor', 'logic', 'decoupledevent', 'large', 'concurrency', 'broadcastingexternal', 'wikipediaworld']",{'concurren': 90}
"['buffer', 'variant', 'falsecache', 'behavior', 'control', 'version', 'false', 'ensuringversion', 'atomicreference', 'reference', 'allowchance', 'greatermachine', 'performancemachine']",{'buffer': 100}
"['clean', 'buffer', 'paddinginterface', 'algorithm', 'implementation', 'buffereasier', 'experiment', 'boundedbuffer', 'versioninstead', 'field']",{'buffer': 100}
"['ehcache', 'benchmark', 'comparison', 'infinispanrewrite', 'backport', 'guavacause', 'contention', 'rewriteelement', 'sequential', 'thread', 'resultingehcache', 'rewrite', 'backport', 'minormethod', 'compute']",{'thread': 100}
"['default', 'cache', 'maintenance', 'periodic', 'amortorizedcontention', 'thread', 'penalty', 'asynchronous', 'design', 'operation', 'maintenance', 'delegatethereby', 'application', 'custom', 'latencyreentrant', 'definedreentrant', 'policy', 'custom', 'callerrecursive', 'previousoverall', 'thread', 'benchmark', 'observable', 'reducingbenchmark', 'previous', 'repeatable', 'throughputcorrectness']",{'thread': 100}
"['stack', 'concurrent', 'optimizationstack', 'bubbleobject', 'element', 'uncontrolled', 'deletion', 'growthstack', 'unlinkplace', 'sweep', 'concurrent', 'bubble', 'clearfield', 'traversal', 'optimisticallystack', 'similarity']","{'stack': 100, 'concurrent': 100}"
"['stack', 'discard', 'element']",{'stack': 100}
"['rewrote', 'stack', 'strategy', 'support', 'elimination', 'backoffoperation', 'eliminaton', 'oppositesimilar', 'operation', 'merges', 'batchstrategy', 'element', 'thread', 'backoff', 'arenastack', 'reference', 'thread', 'scalability', 'improvessharedtaken', 'previous', 'approach', 'simplerpaper', 'multiple', 'alternativestate', 'arena', 'model', 'differentmultiple', 'element', 'consumer', 'emptyelement', 'performance', 'resultingconsumer', 'penalty']","{'stack': 100, 'thread': 100}"
"['counter', 'buffer']",{'buffer': 100}
"['heavy', 'performancememory', 'dynamic', 'replacednumber', 'buffer', 'upper', 'result', 'limit', 'approach', 'mechanismperformance']",{'buffer': 100}
"['fastflow', 'strategy', 'buffer']",{'buffer': 100}
"['implementation', 'buffer', 'fasterreplace', 'previous', 'simple', 'style', 'algorithm', 'approachsequential', 'lossy', 'buffer', 'strictelement', 'cache', 'garbage', 'allowedcaffeine', 'purpose', 'general', 'throughput', 'avoidbuffer', 'throughput', 'entry', 'garbage', 'workaround', 'ticket', 'garbage', 'idealarray', 'location', 'algorithm', 'boxedwatch', 'garbage', 'append']",{'buffer': 100}
"['simple', 'buffer', 'completeness']",{'buffer': 100}
"['abstract', 'buffer', 'conditionclass', 'boundedbuffer', 'buffer', 'abstractedcondition', 'benefit', 'movingsegment', 'number']",{'buffer': 100}
"['benchmark', 'implementation', 'buffer', 'strategyrecent', 'buffer', 'conditionbenign', 'schemeinternal', 'version', 'updatedarray', 'similar', 'queue', 'performanceconsistent', 'benchmark', 'fluxuates', 'fixedfalse', 'evaluatedqueue', 'array', 'rewrite', 'adapt']",{'buffer': 100}
"['capacity', 'performance', 'buffer', 'recordrequires', 'space', 'volatile', 'extra', 'waste', 'draincontention', 'buffer', 'lossysequential', 'producer', 'extra', 'potential', 'store', 'garbagebuffer', 'stuckattempt', 'buffer', 'element', 'buffer']",{'buffer': 100}
"['thread', 'creation']",{'thread': 100}
"['expiration', 'buffer']",{'buffer': 100}
"['buffer', 'benchmark']",{'buffer': 100}
"['immediate', 'guava', 'incorrect', 'expiration']",{'incorrect': 100}
"['necessary', 'update', 'concurrent', 'handlepenalty']",{'concurrent': 100}
"['parallel', 'thread']",{'thread': 100}
"['generation', 'efficent', 'memory', 'attempt']",{'generation': 100}
"['potential', 'issue', 'livelock']",{'issue': 100}
