message,fuzzy
"['issue', 'javadoc']",{'issue': 100}
"['issue', 'javadoc']",{'issue': 100}
"['issue', 'deprecation']",{'issue': 100}
"['successful', 'javadoc', 'generation']",{'generation': 100}
"['compilation', 'issue', 'groovy']",{'issue': 100}
"['minimum', 'filename', 'length', 'logback', 'pattern', 'support']",{'length': 100}
"['array', 'length', 'point']",{'length': 100}
"['mergerequest', 'andyfeller', 'mergeconstant', 'parameter', 'incorrect']",{'incorrect': 100}
"['constant', 'parameter', 'incorrect']",{'incorrect': 100}
"['issue', 'commitcomment', 'logback']",{'issue': 100}
"['issue', 'number', 'backwards', 'history', 'logback', 'limit', 'behavior']",{'issue': 100}
"['timing', 'issue']",{'issue': 100}
"['consume', 'worker', 'clear', 'thread']",{'thread': 100}
"['diffie', 'issue', 'helman', 'release', 'future', 'document', 'negotiation']",{'issue': 100}
"['mergenurkiewicz', 'request', 'lbclassic', 'mergetrace', 'frame', 'logback', 'stack']",{'stack': 100}
"['issue', 'documentation']",{'issue': 100}
"['frame', 'logback', 'stack']",{'stack': 100}
"['mergerequest', 'logback', 'eyalfa', 'thread', 'logback', 'executor']",{'thread': 100}
"['thread', 'logback', 'executor']",{'thread': 100}
"['mergerequest', 'flaky', 'sierragolf', 'flaky', 'issue', 'multi']",{'issue': 100}
"['flaky', 'issue', 'multi']",{'issue': 100}
"['edcfe', 'mergerequest', 'master', 'nemececprudent', 'thread', 'logback', 'fileappender', 'interruption']",{'thread': 100}
"['prudent', 'thread']",{'thread': 100}
"['spawn', 'connector', 'thread']",{'thread': 100}
"['thread', 'exception', 'writeattempt', 'fileappenders', 'concurrent', 'nonexistentdirectorymodifies', 'patch', 'handleexception', 'directory', 'thrown', 'existingremove', 'patchcheck', 'condition', 'existencealready', 'performs', 'directoryexistencelogback']","{'thread': 100, 'concurrent': 100}"
"['release', 'updatemikhail', 'thread', 'mazursky']",{'thread': 100}
"['mergerequest', 'async', 'mikereinhold', 'appenderconfigurable', 'timeout', 'thread', 'worker']",{'thread': 100}
"['thread', 'workerdefault', 'appenders', 'function', 'configuration', 'parameter', 'suggestedrelease']",{'thread': 100}
"['thread', 'socketnode']",{'thread': 100}
"['issue', 'extraneous', 'manual', 'cleanup', 'syntax']",{'issue': 100}
"['issue', 'extraneous', 'manual', 'cleanup', 'syntax']",{'issue': 100}
"['thread', 'socketnode']",{'thread': 100}
"['extra', 'issue', 'length']","{'issue': 100, 'length': 100}"
"['connection', 'danglingconnection', 'methoddetermine', 'whethermethod', 'unnecessaryissue', 'check', 'serious', 'similarproblem', 'connection', 'neverremove', 'connection', 'extralogback', 'issue']",{'issue': 100}
"['afade', 'mergerequest', 'throwable', 'converter', 'proxy', 'ruckwood', 'trace', 'argument', 'lbcore', 'throwable', 'incorrect', 'depth']",{'incorrect': 100}
"['connection', 'danglingconnection', 'methoddetermine', 'whethermethod', 'unnecessaryissue', 'check', 'serious', 'similarproblem', 'connection', 'neverremove', 'connection', 'extralogback', 'issue']",{'issue': 100}
"['improvedconnection', 'socketconnectorasynchronous', 'dispatch', 'remote', 'eventqueue', 'event', 'relay', 'loggingqueue', 'length', 'method', 'append', 'dispatchdefault', 'previous', 'preservingqueue', 'length', 'appender', 'efficientlyreceiver', 'event']",{'length': 100}
"['logbackvalve', 'modifiedconsistent', 'executor', 'servicechange', 'recent', 'contextbase', 'concurrent', 'allowservice', 'asynchronous', 'ensures']",{'concurrent': 100}
"['improvedconnection', 'socketconnectorasynchronous', 'dispatch', 'remote', 'eventqueue', 'event', 'relay', 'loggingqueue', 'length', 'method', 'append', 'dispatchdefault', 'previous', 'preservingqueue', 'length', 'appender', 'efficientlyreceiver', 'event']",{'length': 100}
"['thread', 'configuration', 'reference']",{'thread': 100}
"['number', 'thread', 'ensures', 'constant', 'equalmaximumpoolsize', 'default']",{'thread': 100}
"['critical', 'assertion', 'sensitive', 'systemproper', 'assertion', 'field']",{'Sensitive': 100}
"['illegal', 'error', 'thread', 'configuration']",{'thread': 100}
"['integer', 'parser', 'fixingcorrect', 'display', 'supposedlyparse', 'integer']",{'integer': 100}
"['issue', 'string', 'parser', 'logback']",{'issue': 100}
"['deadlock', 'worker', 'logback', 'asyncappenderhannemann']",{'deadlock': 100}
"['timeout', 'lbgeneralissue', 'buildfound', 'issue', 'bisectingtrial']",{'issue': 100}
"['logbacklock', 'clarity', 'thread', 'object']",{'thread': 100}
"['reset', 'thread', 'account', 'harness']",{'thread': 100}
"['trace', 'lbclassic', 'exception', 'stack']",{'stack': 100}
"['extra', 'issue', 'length']","{'issue': 100, 'length': 100}"
"['lbcore', 'browsequote', 'issue', 'applies', 'attempt', 'complicate', 'route']",{'issue': 100}
"['removal', 'buffer']",{'buffer': 100}
"['release', 'preparingpresence', 'issue', 'proprety', 'restart', 'applicationlbcore']",{'issue': 100}
"['buffer', 'smtpappender', 'funtionality']",{'buffer': 100}
"['lbcore', 'fixedparent', 'injection', 'support']",{'injection': 100}
"['capability', 'buffer', 'smtpappender']",{'buffer': 100}
"['lbcore', 'preparingdependence', 'tightpriviledgesanyone', 'space', 'overflow', 'system']",{'overflow': 100}
"['thread', 'safety']",{'thread': 100}
"['issue', 'lbcore']",{'issue': 100}
"['generation', 'remark', 'dominik', 'manifest', 'baseddeclaration', 'manifest', 'import', 'logback', 'resolution', 'packagedeclaration', 'classic', 'manifest', 'import', 'logback', 'packageresolution', 'modification', 'bundle', 'resolvable', 'logback', 'withoutbundle', 'springsourcelbclassic']",{'generation': 100}
"['idion', 'recommendedconcurrent', 'issue', 'logback', 'subject']",{'issue': 100}
"['classic', 'sincelogback', 'default', 'class', 'component', 'relationlbclassic', 'issue']",{'issue': 100}
"['addedinternal', 'buffer']",{'buffer': 100}
"['concurrent', 'context', 'configuration']",{'concurrent': 100}
"['lbclassiclocate', 'classloader', 'class', 'thread', 'context', 'locateconfiguration', 'particularloader', 'class']",{'thread': 100}
"['lbclassic', 'relatessynchronization', 'method', 'iterator', 'removedstatusmanager', 'replacedreturn', 'statuslist', 'containedproblem', 'concurrency', 'statusmanager', 'avoidssynchronize', 'statusmanager', 'developerstatusmanager', 'lbclassic', 'listener', 'interface', 'status', 'suggestedantonlistener', 'status', 'joran', 'support']",{'concurren': 90}
"['registry', 'thread']",{'thread': 100}
"['problem', 'incorrect', 'mentionedmailinglogback', 'pipermail', 'march']",{'incorrect': 100}
"['length', 'support', 'string']",{'length': 100}
"['exceptionnative', 'methodhappen', 'access', 'thread']",{'thread': 100}
"['server', 'exception', 'crash']",{'crash': 100}
"['directory', 'example', 'removedupdate', 'generation']",{'generation': 100}
"['instance', 'propertygetpropertymap', 'loggingevent', 'access', 'property', 'provideverify', 'version', 'loggingevent', 'expose']",{'expose': 100}
"['class', 'linux', 'thread']",{'thread': 100}
