message,fuzzy
"['chore', 'security', 'notifiersecurity', 'mikaelbr', 'notifier', 'updaterelease', 'mikaelbr', 'notifiernotifier', 'changelog', 'mikaelbrcommits', 'notifier', 'mikaelbrpreview', 'dependabot']",{'Security': 100}
"['superbehavior', 'class', 'method', 'compatibledecaffeinate', 'issue']",{'issue': 100}
"['reason', 'tryingactual', 'issue']",{'issue': 100}
"['chore', 'security', 'acornacorn', 'security', 'update', 'acornjsrelease', 'acorn', 'acornjscommits', 'acorn', 'acornjspreview', 'dependabot']",{'Security': 100}
"['chore', 'security', 'acornacorn', 'security', 'update', 'acornjsrelease', 'acorn', 'acornjscommits', 'acorn', 'acornjspreview', 'dependabot']",{'Security': 100}
"['chore', 'security', 'handlebarwycats', 'security', 'update', 'handlebarrelease', 'wycatsrelease', 'wycats', 'changelog', 'mastercommits', 'wycats', 'comparepreview', 'dependabot']",{'Security': 100}
"['chore', 'security', 'lodashincludes', 'security', 'update', 'lodashrelease', 'lodashcommits', 'lodashpreview', 'dependabot']",{'Security': 100}
"['issue', 'shorthand', 'package', 'update', 'coffeedecaffeinate', 'coffee']",{'issue': 100}
"['postfix', 'operator', 'handleavoid', 'issue']",{'issue': 100}
"['exception', 'ignore', 'crash', 'worth', 'catch', 'patch', 'bubble', 'cleancallback', 'parameter', 'error', 'array']",{'crash': 100}
"['downgrade', 'point', 'regexes', 'unicodecoffeescript', 'failure', 'upgradingwithout', 'unicode', 'coffeescript', 'point', 'regexes', 'specificallyjavascript', 'whereas', 'requirespoint', 'incorrect', 'interpretedintroduces', 'variousbehavior', 'downgrade', 'style', 'coffeescript', 'unicodeescape', 'unicode', 'style', 'surrogate']",{'incorrect': 100}
"['multiple', 'template', 'github', 'featureretain', 'issue', 'default', 'readme', 'stumblemultiple', 'issue', 'request', 'template']",{'issue': 100}
"['crash', 'parsercoffeescript', 'coffeedifferent', 'syntax', 'implementeddecaffeinate']",{'crash': 100}
"['install', 'chore', 'greenkeeper', 'lockfilelockfile', 'greenkeeperio', 'issue', 'greenkeeper']",{'issue': 100}
"['semicolon', 'block', 'beyondlimit', 'causingsemicolon', 'instance', 'conversion', 'fundamental', 'issue', 'location', 'parser', 'commabetter', 'decaffeinate']",{'issue': 100}
"['optional', 'operation', 'member', 'function', 'dynamicsplice', 'slicedifference', 'syntax', 'variablenormal', 'typeoffollow', 'check', 'callee', 'function', 'typeof', 'whereascheck', 'simple', 'helper', 'convertissue', 'implementation', 'function', 'causingrightdifferent', 'parenthesisequivalent', 'stoppingsemantics', 'issue']",{'issue': 100}
"['string', 'increase', 'timeout', 'integrationsuper', 'increase', 'timeouttravis', 'issue']",{'issue': 100}
"['mochababel', 'crash', 'importforce', 'package']",{'crash': 100}
"['patchers', 'typescript', 'refactor', 'remainingbrand', 'requiredrather', 'structural', 'typescript', 'nominaldetail', 'issuemicrosoft', 'issue', 'typescriptmicrosoft', 'issue', 'typescript']",{'issue': 100}
"['patchers', 'stage', 'normalize', 'typescript', 'convertcouldalthough', 'reference', 'generallycontrol', 'aware', 'approach', 'child', 'nodepatcherfunctionpatcherrelease', 'typescript', 'settingiterables', 'spreadhelper', 'usage', 'crash', 'typescript', 'plugin', 'typescript']",{'crash': 100}
"['suggestion', 'default', 'enable', 'update', 'various', 'cleanup', 'decaffeinate', 'javascript', 'commentsuggestion', 'comment', 'cleanupdisablesdecaffeinate', 'const', 'variableprefer', 'option', 'constlonger', 'decaffeinate', 'module', 'convertchoose', 'configuration', 'threecommonjs', 'original', 'specify', 'usingcommonjsgenerates', 'default', 'module', 'alwayscorrectness', 'specify', 'moduledefault', 'force', 'module', 'effort', 'convertloose', 'specify', 'moduledefaultdecaffeinate', 'constructor', 'snippet', 'insert', 'automaticallysuper', 'typescript', 'threechoose', 'configurationworkaround', 'snippet', 'babel', 'insert', 'specify', 'typescriptconstructor', 'babel', 'enable', 'workaroundsuper', 'produceconstructor', 'workaround', 'babel', 'specify', 'crash', 'runtimeconstructor', 'invalid', 'allowwould', 'error', 'decaffeinate', 'superconstructor', 'default', 'disallow', 'specify', 'invalid']",{'crash': 100}
"['range', 'binary', 'crash', 'operatorbinary', 'operation', 'operator', 'alreadycustom']",{'crash': 100}
"['expression', 'switch', 'overhaul', 'returnassumption', 'general', 'exceptproduce', 'arraysimilar', 'block', 'emptycommit', 'thinggeneratingexpression', 'block', 'empty', 'condition', 'alwaysdefault', 'generateimplicit', 'style', 'empty', 'returnpatcher', 'implicit', 'instruct', 'useful', 'investigatedswitch', 'emptyfalse', 'switch', 'statementtriggerswitch', 'crash', 'empty']",{'crash': 100}
"['issue', 'document', 'coffeescript', 'correctness']",{'issue': 100}
"['whitespace', 'indentationnormalize', 'whitespace', 'indentation', 'character', 'everywhitespace', 'single', 'originalstrategy', 'clever', 'couldwhitespace', 'removeenough', 'crash']",{'crash': 100}
"['conditionals', 'postfix', 'similar', 'snippet', 'order', 'robustappendleft', 'issue', 'postfix', 'slice', 'rewritingstrategy', 'conditional', 'postfix', 'reorderedincorrect', 'conditional']",{'issue': 100}
"['array', 'requiresallows', 'array', 'babel', 'bunchfunction', 'single', 'slice', 'valuecheck', 'additionalsystem', 'expression', 'distinguish', 'assigneecould', 'decaffeinate', 'assignee', 'parserimplement', 'simple', 'attempt', 'function', 'argument', 'undefined', 'object', 'sincecoffeescript', 'crash', 'number', 'defensivenever']",{'crash': 100}
"['assignment', 'parensdefault', 'various', 'safer', 'assignment', 'detectparensexpression', 'similar', 'issue', 'involvingparens']",{'issue': 100}
"['necessary', 'extract', 'catch', 'assignment', 'assigneeassignee', 'catch', 'different', 'coffeescript', 'scopinggenerate', 'assignmentfunction', 'block', 'catch', 'catch', 'variableinstead', 'assignment', 'complex', 'variabledestructure', 'expansion', 'support', 'thoughextract', 'exception', 'alwaysforpatcher', 'similar', 'normalizestart', 'assigneecatch', 'traversal', 'assignment', 'account', 'scopeerror', 'crash', 'intermediate']",{'crash': 100}
"['complex', 'assignment', 'value', 'returnexpression', 'normal', 'style', 'original', 'returnrepeatable', 'comma', 'returnexpression', 'precedence', 'parenscomplex', 'normal', 'assignment', 'parens', 'alwaysavoid', 'sinceprecedence', 'issue', 'comma', 'returnworth', 'assignment', 'parens']",{'issue': 100}
"['space', 'crash']",{'crash': 100}
"['super', 'simple', 'crash', 'anonymous', 'withinsuper', 'super', 'coffeescript', 'referenceanonymous', 'classsuper', 'point', 'class', 'enclosingbecome']",{'crash': 100}
"['external', 'class', 'constructorgenerates', 'constructor', 'external', 'normalize', 'handleworry', 'initclasssuper', 'issue', 'methodconstructor', 'external', 'style', 'experession', 'handlestart']",{'issue': 100}
"['conditionals', 'crash', 'empty', 'empty', 'sometimescomment', 'block', 'removedignore']",{'crash': 100}
"['invalid', 'constructor', 'intelligentlyclass', 'constructor', 'javascript', 'major', 'coffeescript', 'differenceclass', 'constructor', 'javascript', 'super', 'requiresubclass', 'class', 'firstsignificant', 'decaffeinate', 'issue', 'causedsuper', 'subclasscoffeescript', 'semantics', 'superleast', 'issue', 'correctnesssubclass', 'backbone', 'caughtsuper', 'method', 'initializeanswer', 'option', 'threeincorrect', 'error', 'default', 'generatingsuper', 'constructor', 'omitserror', 'decaffeinate', 'subclassdifferent', 'issue', 'explainingaware', 'chance', 'people', 'coffeescriptissue', 'constructor', 'method', 'explicitgenerates', 'constructor', 'invalid', 'allowsuper', 'generates', 'correctconstructor', 'method', 'allowedruntime', 'crash', 'sanitygenerates', 'constructor', 'workaround', 'babel', 'enable', 'invalidtrick', 'snippet', 'constructor', 'babelsuper', 'runtime', 'constructor', 'allowingcompliant', 'babel', 'fullybreak', 'error', 'option', 'couldcheck', 'people', 'possible', 'option', 'futurecoffeescript', 'trick', 'hackysuper', 'class', 'allowextend', 'seemsnever', 'generate', 'defeat', 'seemspurpose']","{'issue': 100, 'crash': 100}"
"['detect', 'import', 'indent', 'break', 'rollup', 'recognizedtrivial', 'consistent', 'crash', 'causeddetectindent', 'rollupdetect', 'import', 'indent', 'detectindent', 'detect', 'indent', 'ironicleave', 'source']",{'crash': 100}
"['necessary', 'stage', 'normalize', 'parensavoid', 'token', 'sincecoffeescript', 'confuse', 'tokenizenormalize', 'detect', 'result', 'conditionapproach', 'expression', 'parenssimilar', 'issue', 'issue', 'patchingexpression', 'field']",{'issue': 100}
"['function', 'default', 'insert', 'negate', 'contentstartbehavior', 'outerstart', 'default', 'insertexpression', 'crash', 'surroundedparens', 'boundalready', 'subclass', 'extra', 'parens']",{'crash': 100}
"['gettingrange', 'string', 'problem', 'causesubtract', 'expose', 'check', 'index', 'error']",{'expose': 100}
"['decaffeinatehandle', 'target', 'array', 'filterobject', 'length', 'array', 'index', 'numericaliterable', 'filterseparate', 'prefswithout', 'array', 'object', 'filtercollection', 'semantics', 'array', 'jqueryobjectsense', 'default', 'wrappingloose', 'default', 'enable', 'future']",{'length': 100}
"['necessary', 'style', 'fragile', 'operationclose', 'paren', 'surround', 'sincesimilarexpression', 'access', 'member', 'includingexpression', 'repeatable', 'neededcomplexity', 'valid', 'resultlimit', 'assignment', 'validvalidassignment', 'container', 'problemincludes', 'assignment', 'order', 'patch', 'issue', 'appliedassignment', 'compound', 'operator']",{'issue': 100}
"['esnext', 'issue', 'update', 'scopingexpression', 'decaffeinate', 'style', 'insert', 'handlingtemporary', 'declaration', 'variable', 'value', 'currentdeclaration', 'actuallywould', 'generate', 'previous', 'iteration']",{'issue': 100}
"['rework', 'protocol', 'implicit', 'returnexpression', 'switch', 'conditional', 'patchedexpression', 'handleclass', 'method', 'return', 'implementeddeclare', 'returnswitch', 'conditional', 'withininneranother', 'issue', 'patchers', 'implicit', 'declaringexpression', 'patcher', 'returnaware', 'issue', 'patchers', 'properlybehavior', 'implicit', 'returnprotocol', 'implicit', 'class', 'declarescustom']",{'issue': 100}
"['block', 'catch', 'exception', 'crash', 'empty', 'assignee']",{'crash': 100}
"['string', 'usage', 'magic', 'update', 'warning', 'insertleft', 'insertright', 'magic', 'favor', 'deprecatedissue', 'append', 'prepend', 'precise', 'discussionharris', 'string', 'issue', 'magiccommit', 'silenceprettynodepatcher', 'cleanedinstead', 'callingleast', 'callinginsert', 'method', 'insertright', 'appendrightsense']",{'issue': 100}
"['negation', 'switch', 'deferswitch', 'string', 'patcher', 'operation', 'incorrect', 'track', 'removecondition', 'delay', 'practice', 'magic', 'towardstrategy', 'useful', 'operationpatchers']",{'incorrect': 100}
"['esnext', 'error', 'failure', 'reportingesnext', 'expose', 'relevant', 'exception', 'source', 'fieldfailure']",{'expose': 100}
"['slice', 'accountexpression', 'incorrect', 'slice', 'secondstart', 'refers', 'sinceright']",{'incorrect': 100}
"['stage', 'normalize', 'comma', 'unnecessaryconsistent', 'comma', 'trailingarray', 'argument', 'object', 'multilinefunction', 'implicit', 'argument', 'elementfunction', 'comma', 'trailingstage', 'incorrect', 'normalizeremove']",{'incorrect': 100}
"['cleaneroperand', 'array', 'precedencelogical', 'issue', 'operator']",{'issue': 100}
"['filterearlier', 'issue', 'careful', 'order', 'generallyhappen', 'order']",{'issue': 100}
"['allowstrategy', 'issue', 'close', 'thorough', 'issuewithin', 'class', 'arbitrary', 'supportexpression', 'context', 'class', 'support', 'handlecodebase', 'workingrearranges', 'transform', 'decidedweird', 'issue', 'magicmaybe', 'approach', 'implementation', 'prototype', 'class', 'fieldissue', 'necessary', 'prototype', 'widespread', 'property', 'correctnessclass', 'backbone', 'revisitedleave', 'class', 'field', 'currentbehavior', 'configurable', 'place', 'commanddemand']",{'issue': 100}
"['expression', 'object', 'issue', 'insert', 'magic', 'happeningexpression', 'style', 'patchsplit', 'consistent', 'paren', 'requiredhandle', 'inline', 'multiline']",{'issue': 100}
"['destructure', 'property', 'assignment', 'handleclosedecaffeinate', 'assignment', 'seeingmight', 'assignment', 'statementmechanism', 'ignore', 'usage', 'parameter', 'issue', 'object', 'default', 'field', 'alwaysassignment', 'effect']",{'issue': 100}
"['condition', 'operator', 'handleclosebehavior', 'binary', 'assignment', 'parens', 'negationparensalready', 'innerstart', 'parensotherwise', 'outerstart', 'issue', 'relatedeslint', 'reasonableimplementation', 'focus', 'correctness', 'parens']",{'issue': 100}
"['expression', 'incorrect', 'parensexpression', 'decaffeinate', 'constructor', 'invocation', 'parens', 'treatingbehavior', 'coffeescript', 'javascriptincorrectcoffeescript', 'parser', 'causeseems', 'parsedecaffeinate', 'stage', 'parser', 'coffeescriptdecaffeinate', 'argument', 'assumes', 'decaffeinate', 'constructor', 'constructor', 'withoutstyle', 'discouragedeslint', 'fixerparenspractical']",{'incorrect': 100}
"['range', 'error', 'crash', 'invalidclose']",{'crash': 100}
"['babel', 'update', 'buildpreset', 'babel', 'issue', 'rollup']",{'issue': 100}
"['decaffeinate', 'intermediate', 'runtostage', 'option', 'result', 'returndecaffeinate', 'intermediate', 'runtostage', 'option', 'result', 'returndecaffeinate', 'possiblestage', 'inspect', 'decaffeinate', 'intermediatenormal', 'addition', 'supportingcoffeescript', 'coffee', 'resultdecaffeinate', 'knowledge', 'consistent', 'format', 'positionpretty', 'seemseasier', 'figure', 'problemeasier', 'normalize', 'parsercontributor', 'internals', 'futureevaluate', 'decaffeinate', 'stage', 'falsedecaffeinate', 'formatter', 'parser', 'crash', 'virtual']",{'crash': 100}
"['implicit', 'parenpacement', 'implicit', 'parenwrong', 'close', 'paren', 'crash', 'placedevaluate', 'placeexample', 'alwaysmultiple', 'function', 'argument', 'takingclose', 'function', 'innerend', 'paren', 'place', 'alwaysclose', 'rightrightnewlines', 'bunchideal', 'comment', 'causeacceptable', 'comment', 'especiallystillmaybe', 'approach', 'insert', 'innerend', 'parenwould', 'right', 'contentendoutdent', 'unmatched', 'error']",{'crash': 100}
"['issue', 'esnext', 'variety']",{'issue': 100}
"['chore', 'issue', 'github', 'template']",{'issue': 100}
"['implicit', 'normalize', 'coffeescript', 'parseddecaffeinate', 'interesting', 'function', 'parser', 'anythingdecaffeinate', 'insertingclose', 'brace', 'application', 'parenscause', 'function', 'parser', 'coffeescript', 'applicationissue', 'implicit', 'parens', 'aroundproblem', 'function', 'bunch', 'causedhappens', 'codebase', 'tryingfailure', 'decaffeinateheuristic', 'close', 'paren', 'almostchange', 'issue', 'introducednewline', 'object', 'pretty', 'parensanother', 'harris', 'normalize', 'magiccloseclose']",{'issue': 100}
"['comment', 'empty', 'comment', 'statement', 'returndestroyedevaluate', 'decaffeinate', 'returnlittle', 'previous', 'patchsemicolon', 'crash', 'inputharris', 'string', 'magic']",{'crash': 100}
"['pretty', 'print', 'parseerrors', 'catch', 'addedposition', 'stringcause', 'crash', 'parens', 'character', 'insteadrather']",{'crash': 100}
"['decaffeinate', 'class', 'expose', 'patcherrordecaffeinate', 'class', 'expose', 'patcherroruseful', 'error', 'thrownconvertexport', 'simplify']",{'expose': 100}
"['issue', 'condition']",{'issue': 100}
"['patchererror', 'stack']",{'stack': 100}
"['combineharris', 'sorcery', 'issue']",{'issue': 100}
"['ensure', 'property', 'classtaken', 'decaf', 'issue', 'juliankrispel']",{'issue': 100}
"['decaf', 'juliankrispeldecaf', 'issue', 'juliankrispel']",{'issue': 100}
"['semicolon', 'bringafoul', 'flyingsheep', 'eslint', 'relyingissuecomment', 'decaffeinate', 'issue']",{'issue': 100}
"['source', 'stack']",{'stack': 100}
"['range', 'issue', 'method']",{'issue': 100}
"['ensure', 'iifesissuecomment', 'decaffeinate', 'eventualbuddha', 'issue']",{'issue': 100}
"['modificationcoffeescript', 'source', 'violates', 'consequentmodify', 'character', 'preconditionindex', 'returnposition', 'character', 'parse', 'returntransformation']",{'violate': 93}
"['aggressive', 'fixingrange', 'string', 'matchright', 'addedhappens', 'conditionrange', 'incorrect', 'point', 'followingparenthesis', 'block']",{'incorrect': 100}
