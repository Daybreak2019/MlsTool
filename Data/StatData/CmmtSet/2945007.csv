message,fuzzy
"['issue', 'workaround']",{'issue': 100}
"['deadlock', 'ofctl', 'possiblereconnects', 'request', 'datapathdatapath', 'threaddeadlock', 'request', 'watanabefujita', 'tomonori']",{'deadlock': 100}
"['deadlock', 'ofctl', 'disconnect']",{'deadlock': 100}
"['architecture', 'convertionfailingvalue', 'integer', 'convertedvalue', 'architecture', 'runningrange', 'integer', 'small', 'handleskaplons', 'slawek', 'kaplonskiiwase', 'yusuke', 'reviewedfujita', 'tomonori']",{'integer': 100}
"['thread', 'develmessage', 'mailmantoshihiro', 'iwamotofujita', 'tomonori']",{'thread': 100}
"['blacklist', 'eventletopenstacktoshihiro', 'iwamotofujita', 'tomonori']",{'blacklist': 100}
"['switch', 'exampleenvironment', 'multi', 'destination', 'switchcause', 'issue', 'switchanother', 'destination', 'sourceanother', 'switch', 'different', 'multiplepatch', 'jerico', 'moeyersons']",{'issue': 100}
"['length', 'typeerror', 'instance', 'packet', 'raisevalue', 'default', 'typeerror', 'packetpayload', 'field', 'appliedvalue', 'patch', 'default', 'binary', 'emptyvalue', 'confirms', 'fieldapplies', 'icmpv', 'patch', 'improvement', 'fisher', 'williamiwase', 'yusuke']",{'length': 100}
"['close', 'activity', 'outgoing', 'thread', 'message', 'remainedsession', 'remote', 'activity', 'rpcsessionmemory', 'garbagesession', 'activity', 'patch', 'rpcsession', 'closeiwase', 'yusuke', 'signedfujita', 'tomonori']",{'thread': 100}
"['icmpv', 'length', 'valid', 'option', 'packet', 'asserticmpv', 'length', 'fieldvalue', 'invalidpatch', 'assertion', 'exceptionicmpv', 'fisher', 'williamshivaram', 'mysoresatoshi', 'fujimoto', 'signedfujita', 'tomonori']",{'length': 100}
"['length', 'packet', 'flowspecnumeric', 'bitmask', 'operator', 'fieldvalue', 'length', 'fieldpacket', 'flowspec', 'library', 'serializingvalue', 'length', 'fieldpatch', 'serialize', 'flowspec', 'messagesatoshi', 'fujimoto', 'signedfujita', 'tomonori']",{'length': 100}
"['issue', 'eventlet', 'workaroundpatch', 'workaround', 'adopts', 'eventletfollowingissue', 'burkholder', 'raymondiwase', 'yusuke', 'signedfujita', 'tomonori']",{'issue': 100}
"['grossmann', 'github', 'issue', 'marceliwase', 'yusuke', 'signedfujita', 'tomonori']",{'issue': 100}
"['enable', 'packet', 'attribute', 'length', 'extendedexceeds', 'lengthpatch', 'enablesiwase', 'yusuke', 'signedfujita', 'tomonori']",{'length': 100}
"['application', 'implementoption', 'threadenables', 'patch', 'thread', 'usingreconstructs', 'configuration', 'bgpspaker', 'applicationmanager', 'config', 'protocol', 'serviceprotocol', 'serviceiwase', 'yusuke', 'signedfujita', 'tomonori']",{'thread': 100}
"['buffer', 'packet', 'emptypayload', 'library', 'packet', 'detectspacketlibrary', 'packet', 'parseenables', 'patch', 'buffer', 'ignore', 'emptyiwase', 'yusuke', 'signedfujita', 'tomonori']",{'buffer': 100}
"['default', 'table', 'vsctl', 'catchinteger', 'columnempty', 'return', 'rangedefaultdefault', 'integer', 'failsinformationenables', 'patch', 'default', 'catch', 'emptyiwase', 'yusuke', 'signedfujita', 'tomonori']",{'integer': 100}
"['address', 'stplibcompatibility', 'python', 'introducedimplementation', 'addressvalue', 'integer', 'bridge', 'comparedvalue', 'patch', 'integer', 'addressbridge', 'comparingmuraoka', 'shinpei', 'signedfujita', 'tomonori']",{'integer': 100}
"['message', 'ofproto', 'offset', 'malformedparser', 'issue', 'message', 'major', 'aggregate', 'statistic', 'similarpresent', 'snippet', 'parser', 'ofphello', 'messageopinion', 'similarpatch', 'message', 'appliedissue', 'description', 'reproduce', 'aggregate', 'retrieve', 'statsaggregateflow', 'localhost', 'statsaggregate', 'request', 'vswitch', 'stats', 'replyreplybuffer', 'messagemessage', 'struct', 'malformedmessage', 'contentoffsetoffsetlength', 'offset', 'messageofpstats', 'lengthiteration', 'offset', 'constant', 'resultingoffset', 'infinite', 'parser', 'trappedcontrollermessage', 'parseroffset', 'processing', 'patch', 'introduces', 'checkmessage', 'malformedrzepka', 'mrzepka', 'michalfujita', 'tomonori']",{'issue': 100}
"['conversion', 'morganpatch', 'incorrect', 'conversion', 'morganoriginalincorrectcorrectiwase', 'yusuke', 'signedfujita', 'tomonori']",{'incorrect': 100}
"['controller', 'validate', 'length', 'controller', 'accepts', 'malicious', 'message', 'switchresult', 'makingensures', 'patch', 'length', 'message', 'openflowmessage', 'specifiedvaluesecure', 'samuel', 'dependable', 'purdue', 'thanks', 'orlikowskifujita', 'tomonori']",{'length': 100}
"['navigates', 'stack', 'module', 'insteadlocate', 'module', 'inspectpatch', 'request', 'papostolescuiwase', 'yusuke', 'signedfujita', 'tomonori']",{'stack': 100}
"['minimum', 'frame', 'length', 'packet', 'ethernetethernetii', 'frame', 'ethernetpreamble', 'frameheader', 'payloadpatch', 'kawai', 'hiroakiiwase', 'yusuke', 'signedfujita', 'tomonori']",{'length': 100}
"['optionalcause', 'version', 'issue', 'conflictversion', 'projectreadme', 'document', 'optionalneutronyamamoto', 'takashi', 'signedfujita', 'tomonori']",{'issue': 100}
"['ovsdb', 'issue', 'protocol', 'variablewrong', 'config', 'patch', 'previousjason', 'signedfujita', 'tomonori']",{'issue': 100}
"['empty', 'ofperrormsg', 'field', 'handledefines', 'messageotherwise', 'unlessempty', 'field', 'switchpatch', 'length', 'field', 'checkenough', 'field', 'yurochkoiwase', 'yusuke', 'signedfujita', 'tomonori']",{'length': 100}
"['parameter', 'validate', 'packet', 'supersedes', 'destinationmessage', 'length', 'lengthvalidate', 'length', 'length', 'matchaccommodate', 'singlelength', 'sense', 'document', 'specifiedvalueerror', 'classvictor', 'orlikowskifujita', 'tomonori']",{'length': 100}
"['buffer', 'packet', 'gaurd', 'extravendor', 'attemptinglength', 'exceptedidentifier', 'tuples', 'multiplecommon', 'implementationbufferjason', 'signedfujita', 'tomonori']",{'buffer': 100}
"['thread', 'ensurefailstoshihiro', 'iwamotofujita', 'tomonori']",{'thread': 100}
"['default', 'length', 'fieldiwase', 'yusuke', 'signedfujita', 'tomonori']",{'length': 100}
"['controller', 'buffer', 'multiple', 'message', 'single', 'openflowsubsequent', 'message', 'includingbinary', 'message', 'binary', 'message', 'openflowparser', 'packet', 'message', 'composesubsequent', 'message', 'classpatch', 'buffer', 'messagemessage', 'openflow', 'lenghtiwase', 'yusuke', 'signedfujita', 'tomonori']",{'buffer': 100}
"['stability', 'connection', 'issue', 'disconnection', 'switchevent', 'control', 'plane', 'interruption', 'socket', 'datapathexhaustion', 'result', 'resource', 'descriptor', 'ultimatelypotential', 'socket', 'leakedsmall']",{'issue': 100}
"['issue', 'causeinteger', 'iwamotofujita', 'tomonori']",{'issue': 100}
"['python', 'field', 'packet', 'integer', 'truncate', 'timerpatch', 'explicit', 'integer', 'conversion', 'timernecessary', 'pythonvalue', 'coerce', 'python', 'integer', 'point', 'automaticallythrow', 'python', 'function', 'smfadi', 'signedfujita', 'tomonori']",{'integer': 100}
"['value', 'filter', 'python', 'stack', 'inspection', 'smfadi', 'signedfujita', 'tomonori']",{'stack': 100}
"['buffer', 'insteadbuffer', 'supportpreviousiwase', 'yusuke', 'signedfujita', 'tomonori']",{'buffer': 100}
"['label', 'withdrawnincomplete', 'crash', 'toshiki', 'tsuboifujita', 'tomonori', 'signedtoshiki']",{'crash': 100}
"['integer', 'python', 'calculate', 'numberfumihiko', 'kakuma', 'signedfujita', 'tomonori']",{'integer': 100}
"['continuous', 'patch', 'buffer', 'python', 'replacecontinuous', 'patch', 'buffer', 'python', 'replacefumihiko', 'kakuma', 'signedfujita', 'tomonori']",{'buffer': 100}
"['integer', 'python', 'avoidvalue', 'stringtoshihiro', 'iwamotofujita', 'tomonori']",{'integer': 100}
"['buffer', 'python', 'removebuffer', 'python', 'neededunpack', 'replaceremovetoshihiro', 'iwamotofujita', 'tomonori']",{'buffer': 100}
"['integer', 'python', 'division', 'appropriatetoshihiro', 'iwamotofujita', 'tomonori']",{'integer': 100}
"['python', 'integer', 'operation', 'floatkobayashi', 'satoshi', 'signedfujita', 'tomonori']",{'integer': 100}
"['message', 'length', 'fieldfunctionvalue', 'length', 'fieldmessage', 'writingmessage', 'sendingyamamoto', 'takashi', 'signedfujita', 'tomonori']",{'length': 100}
"['calculate', 'hardware', 'length', 'packet', 'addressrussell', 'reportedtakahashi', 'minoru', 'signedfujita', 'tomonori']",{'length': 100}
"['enable', 'option', 'manager', 'standard', 'patch', 'necessary', 'python', 'library', 'issue', 'debugger', 'option', 'monkey', 'overwrite', 'eventletkobayashi', 'satoshi', 'signedfujita', 'tomonori']",{'issue': 100}
"['problem', 'security', 'restfulsorry', 'includesuggestedpatchpatch', 'restful', 'subject', 'problem', 'request', 'function', 'inputsomeone', 'directoryimportrequest', 'parse', 'formatbuiltin', 'function', 'disabletakeshi', 'signediwase', 'yusuke', 'signedfujita', 'tomonori']",{'Security': 100}
"['problem', 'security', 'restfulrequest', 'function', 'inputsomeone', 'removeimport', 'directoryrequest', 'parse', 'suggestbuiltin', 'function', 'formatevaluatevalue', 'compatible', 'hexadecimalexperimenter', 'array', 'asciiordertakeshi', 'signediwase', 'yusuke', 'signedfujita', 'tomonori']",{'Security': 100}
"['consistency', 'statistic', 'length', 'field', 'group', 'check', 'meter', 'message', 'replynatarajan', 'sriram', 'signedfujita', 'tomonori']",{'length': 100}
"['issue', 'occurskobayashi', 'satoshi', 'signedfujita', 'tomonori']",{'issue': 100}
"['actual', 'length', 'wouldvalue', 'optionfujita', 'tomonori']",{'length': 100}
"['issue', 'followingunicode', 'createdyuichi', 'signedfujita', 'tomonori']",{'issue': 100}
"['normalize', 'modify', 'issue', 'followingunicode', 'ofpmatch', 'ofpmatch', 'createdyuichi', 'signedfujita', 'tomonori']",{'issue': 100}
"['failuredependsspecifiedfails', 'instantiatingpythonpath', 'managerloadingloadingloadingloadingloadingloadingquantumifaces', 'instantiatingcontext', 'creatingconfswitchset', 'instantiatingcontext', 'networktunnel', 'instantiatingcontext', 'tunnel', 'dpsetrecent', 'tracebackmanager', 'stack', 'modulestackcontextstackkwargsstackstackassertassertionerroravoid', 'patch', 'context', 'doubleyoshihiro', 'ykaneko', 'kaneko', 'signedfujita', 'tomonori']",{'stack': 100}
"['modify', 'length', 'fieldframe', 'wireshark', 'length', 'length', 'field', 'issuefollows', 'patch', 'length', 'field', 'goetjeyuichi', 'signedfujita', 'tomonori']",{'length': 100}
"['modify', 'length', 'fieldframe', 'wireshark', 'length', 'length', 'field', 'goetjeyuichi', 'signedfujita', 'tomonori']",{'length': 100}
"['packet', 'calculate', 'lengthfirst', 'encode', 'lengthsince', 'length', 'lengthpatch', 'followsreturnreturnpatch', 'argument', 'defaulttakahashi', 'minoru', 'signedfujita', 'tomonori']",{'length': 100}
"['boundary', 'ofpmatch', 'boundary', 'length', 'goetjeyuichi', 'signedfujita', 'tomonori']",{'length': 100}
"['incorrect', 'removebasedimplementation', 'openflowstructure', 'different', 'defines', 'specification', 'openflowstructheader', 'structconfig', 'property', 'asyncproperty', 'structsizeof', 'structimplementationempty', 'implementationvalue', 'removesimon', 'horms', 'horman', 'signedfujita', 'tomonori']",{'incorrect': 100}
"['dependency', 'ofproto', 'updateupdate', 'dependency', 'mainline', 'ofproto', 'includebranch', 'includesbundle', 'messagemonitor', 'messagemessage', 'request', 'forwardstatus', 'table', 'messagemonitor', 'update', 'entry', 'length', 'message', 'replysimon', 'horms', 'horman', 'signedfujita', 'tomonori']",{'length': 100}
"['length', 'assert', 'check', 'addedlenght', 'multipleudechukwu', 'rnudechufujita', 'tomonori']",{'length': 100}
"['message', 'errorvalue', 'length', 'packet', 'receivesdifference', 'exampleinternal', 'suitablemessage', 'notify', 'watanabefujita', 'tomonori']",{'length': 100}
"['cryptic', 'crashexception', 'payload', 'length', 'happensflowforwardingyamamoto', 'takashi', 'signedfujita', 'tomonori']",{'length': 100}
"['buffer', 'problem', 'bytearray', 'bytearray', 'crashversion', 'crashtravis', 'crashtraviserrorrecent', 'tracebackpacket', 'yamamotobinmsgparser', 'packet', 'yamamotobinmsg', 'kwargsparser', 'packet', 'yamamotoyamamotoreturnpackage', 'netaddr', 'strategy', 'argument', 'length', 'unpack', 'erroryamamoto', 'takashi', 'signedfujita', 'tomonori']","{'buffer': 100, 'length': 100}"
"['reduction', 'number', 'thread', 'stplibnumber', 'simplification', 'threadthree', 'thread', 'sendingconfig', 'threadtopologychange', 'threadthreadunifiedthreadfumitaka', 'watanabefujita', 'tomonori']",{'thread': 100}
"['return', 'greenlet', 'thread', 'ryuappstart', 'originalfujita', 'tomonori', 'signedyamamoto', 'takashi']",{'thread': 100}
"['return', 'method', 'greenlet', 'thread', 'ryuappapplication', 'manager', 'withoutright', 'finish', 'runningfujita', 'tomonori']",{'thread': 100}
"['initialization', 'startup', 'ryuappinstantiation', 'ryuappspawn', 'event', 'thread', 'ryuappgenerate', 'event', 'ryuapp', 'necessary', 'event', 'event', 'thread', 'createdevent', 'ryuapp', 'missingevent', 'generates', 'ryuappstartup', 'phase', 'address', 'ryuappryuapp', 'eventstart', 'eventyamahata', 'isaku', 'signedyamamoto', 'takashi', 'signedfujita', 'tomonori']",{'thread': 100}
"['icmpv', 'default', 'parameter', 'length', 'calculation', 'packet', 'supportyuichi', 'signedfujita', 'tomonori']",{'length': 100}
"['object', 'icmpv', 'length', 'packet', 'includesimplify', 'creation', 'purposeyuichi', 'signedfujita', 'tomonori']",{'length': 100}
"['packet', 'timing', 'calculate', 'length', 'serializeyuichi', 'signedfujita', 'tomonori']",{'length': 100}
"['default', 'parameter', 'length', 'calculation', 'packet', 'supportyuichi', 'signedfujita', 'tomonori']",{'length': 100}
"['parameter', 'length', 'calculation', 'packet', 'supportyuichi', 'signedfujita', 'tomonori']",{'length': 100}
"['packet', 'stack', 'protocolyuichi', 'signedfujita', 'tomonori']",{'stack': 100}
"['length', 'field', 'ensureyamamoto', 'takashi', 'signedfujita', 'tomonori']",{'length': 100}
"['ofpmatch', 'length', 'updateyamamoto', 'takashi', 'signedfujita', 'tomonori']",{'length': 100}
"['visible', 'length', 'ofpmatchyamamoto', 'takashi', 'signedfujita', 'tomonori']",{'length': 100}
"['ofpmatch', 'length', 'updateyamamoto', 'takashi', 'signedfujita', 'tomonori']",{'length': 100}
"['visible', 'length', 'ofpmatchyamamoto', 'takashi', 'signedfujita', 'tomonori']",{'length': 100}
"['parser', 'packetpayload', 'length', 'basic', 'header', 'includelengthfujita', 'tomonori']",{'length': 100}
"['permission', 'wrongyuichi', 'signedfujita', 'tomonori']",{'permission': 100}
"['octet', 'library', 'packet', 'patch', 'library', 'packet', 'truncatechange', 'returnpayload', 'class', 'length', 'packet', 'octetheader', 'parserpaste', 'seemsimproveyamamoto', 'takashicrampton', 'shaunyamahata', 'isaku', 'signedfujita', 'tomonori']",{'length': 100}
"['startup', 'module', 'ofproto', 'exception', 'detactionpatch', 'followingcontroller', 'updatestatus', 'touch', 'config', 'stackrecent', 'tracebackmanager', 'stack', 'moduleimport', 'appmanagerstack', 'moduleimportcontroller', 'stack', 'moduleimportcontroller', 'stack', 'moduleargument', 'yamamoto', 'takashiyamahata', 'isaku', 'signedfujita', 'tomonori']",{'stack': 100}
"['startup', 'module', 'ofproto', 'exception', 'detactionpatch', 'followingcontroller', 'updatestatus', 'touch', 'config', 'stackrecent', 'tracebackmanager', 'stack', 'moduleimport', 'appmanagerstack', 'moduleimportcontroller', 'stack', 'moduleimportcontroller', 'stack', 'moduleargument', 'yamamoto', 'takashiyamahata', 'isaku', 'signedfujita', 'tomonori']",{'stack': 100}
"['import', 'errorfdafedfafefpatch', 'followingrecent', 'tracebackmanager', 'stack', 'moduleimport', 'appmanagerstack', 'moduleimportcontroller', 'stack', 'moduleimportcontroller', 'stack', 'modulecontroller', 'stackmodnamestackofproto', 'stack', 'moduleimportimporterror', 'module', 'namedyoshihiro', 'ykaneko', 'kaneko', 'signedfujita', 'tomonori']",{'stack': 100}
"['capable', 'ofconfig', 'class', 'issue', 'switchimplement', 'direct', 'classyamahata', 'isaku', 'signedfujita', 'tomonori']",{'issue': 100}
"['ofpport', 'length', 'field', 'missingfujita', 'tomonori']",{'length': 100}
"['packet', 'class', 'variableenough', 'length', 'check', 'protocolminimum', 'lengthfujita', 'tomonori']",{'length': 100}
"['packet', 'calculate', 'length', 'totalcalculate', 'length', 'totalfujita', 'tomonori']",{'length': 100}
"['class', 'method', 'length', 'handleparserpointless', 'length', 'class', 'variablearray', 'class', 'statschange', 'insteadarray', 'vendorstats', 'scheme', 'structimplementation', 'invent', 'complicatedbecomesfujita', 'tomonori', 'signedyamahata', 'isaku']",{'length': 100}
"['length', 'class', 'constanthowever', 'class', 'length', 'variablelength', 'statsfujita', 'tomonori']",{'length': 100}
"['ofppacketout', 'serializerxffffffffhowever', 'python', 'integer', 'assert', 'insteadrecent', 'tracebackpymodules', 'geventresultactioncontrollercontrollercontrollerserialize', 'ofprotoofprotoassertassertionerroryamahata', 'isaku', 'signedfujita', 'tomonori']",{'integer': 100}
"['wrong', 'controller', 'stack', 'datapath', 'tracecomment', 'error', 'clarify', 'servingyamahata', 'isaku', 'signedfujita', 'tomonori']",{'stack': 100}
"['parser', 'classbuffer', 'underflow', 'ratherincrement', 'offset', 'necessary', 'method', 'parserexpect', 'length', 'parse', 'classsimon', 'horms', 'horman', 'signedfujita', 'tomonori']","{'underflow': 100, 'length': 100}"
