message,fuzzy
"['deprecation', 'security', 'symfony', 'chore']",{'Security': 100}
"['issue', 'phpstan', 'chore']",{'issue': 100}
"['eedcb', 'mergemerge', 'issue', 'request', 'vincentchalamondeprecate', 'option']",{'issue': 100}
"['mergemerge', 'issue', 'request', 'vincentchalamonallow', 'openapi', 'definition', 'schema']",{'issue': 100}
"['mergemerge', 'issue', 'request', 'vincentchalamonsymfony']",{'issue': 100}
"['association', 'apiproperty', 'security', 'graphql', 'field', 'support']",{'Security': 100}
"['openapi', 'security', 'scheme']",{'Security': 100}
"['collection', 'recursive', 'issue']",{'issue': 100}
"['checker', 'resource', 'access', 'security', 'object', 'serializer', 'check']",{'Security': 100}
"['upgrade', 'issue', 'phpstan']",{'issue': 100}
"['schema', 'custom', 'wrong', 'filter', 'generation']",{'generation': 100}
"['array', 'security', 'openapi']",{'Security': 100}
"['scheme', 'security', 'openapischeme', 'security', 'openapi']",{'Security': 100}
"['mergevarnish', 'julienfalque', 'header', 'length', 'requestvarnish', 'chunk', 'header', 'length']",{'length': 100}
"['chunk', 'header', 'length']",{'length': 100}
"['implementation', 'improvesimplementation', 'issue', 'improvescontext', 'poulain', 'contact']",{'issue': 100}
"['operation', 'security', 'openapi', 'server']",{'Security': 100}
"['symfony', 'issue', 'serializersymfony', 'legacysymfony', 'generate', 'reference', 'router']",{'issue': 100}
"['specify', 'possibility', 'generation', 'strategyability', 'absolute', 'generatedallow', 'strategy', 'generation', 'insteadstrategy', 'resource', 'manage', 'generation', 'switch', 'attributefunction']",{'generation': 100}
"['issue', 'phpstan']",{'issue': 100}
"['issue', 'phpstan']",{'issue': 100}
"['attribute', 'security', 'apipropertyimplement', 'attribute', 'security', 'barthelet', 'fredericb']",{'Security': 100}
"['mergemerge', 'branchlocation', 'statuslocation', 'status', 'header', 'preventphpcs', 'issueupdateequal', 'value', 'query', 'large', 'value', 'throwstatic', 'bottom', 'doctrine', 'filterpropertyremove', 'fieldtype', 'doctrine', 'customallow', 'normalization', 'traversable', 'interface', 'classfixer', 'issue', 'collection', 'classhydra', 'writablefilter', 'collection', 'relation', 'existsissue', 'apparition', 'hydra', 'condition']",{'issue': 100}
"['phpcs', 'issue']",{'issue': 100}
"['issue', 'friendsofphp', 'fixer']",{'issue': 100}
"['mergeremote', 'issue']",{'issue': 100}
"['fixer', 'issue']",{'issue': 100}
"['issue', 'apparition', 'hydra', 'condition']",{'issue': 100}
"['issue', 'openapi', 'swagger', 'property', 'platform', 'classseems', 'issue', 'teohhanhui', 'thanks']",{'issue': 100}
"['request', 'structure', 'nullability', 'ocramiusschema', 'array', 'generation']",{'generation': 100}
"['unknown', 'schema', 'string', 'object', 'rollingdefer', 'issue', 'platform', 'versiondescriptiontypefactoryyield', 'stringyield', 'stringdummy', 'yield', 'class', 'stringdummy', 'yield', 'class', 'stringdunglas', 'potential', 'string', 'object', 'reviewingplatform', 'commentplatform', 'commentreproduceinstead', 'object', 'convertyield', 'objectyield', 'objectdummy', 'yield', 'object', 'classdummy', 'yield', 'object', 'class']",{'issue': 100}
"['anyof', 'openapi', 'nullable', 'complynullability', 'openapioneof', 'fixedspecification', 'integer', 'openapivalid', 'openapisimple', 'nullableanyof', 'nullable', 'reference']",{'integer': 100}
"['schema', 'array', 'generation', 'version', 'typefactoryarrayschema', 'definition', 'string', 'object', 'definitionarray', 'objectarrayarray', 'objectarray', 'symfony', 'supportschema', 'definition', 'object', 'explicit', 'withoutarrayarray']",{'generation': 100}
"['security', 'definition', 'request', 'jibbarth', 'openapi', 'oauth']",{'Security': 100}
"['mergemerge', 'branchupdatecollection', 'graphql', 'detectionresource', 'schema', 'building', 'classresource', 'schema', 'generation', 'class']",{'generation': 100}
"['mergeschema', 'teohhanhui', 'resource', 'requestresource', 'schema', 'generation', 'class']",{'generation': 100}
"['resource', 'schema', 'generation', 'class']",{'generation': 100}
"['issue', 'phpstan', 'doctrine', 'persistence', 'release']",{'issue': 100}
"['request', 'antograssiot', 'segment', 'generation']",{'generation': 100}
"['segment', 'generation']",{'generation': 100}
"['context', 'stampissueissuecorrect', 'issue', 'passingminor', 'issue']",{'issue': 100}
"['error', 'update', 'exception', 'thrown', 'clarifyerror', 'issue', 'course', 'phpunit']",{'issue': 100}
"['mergemerge', 'security', 'request', 'antograssiotsyntax', 'notation']",{'Security': 100}
"['security', 'check', 'legacy']",{'Security': 100}
"['openapi', 'expose', 'ensure', 'normalizer']",{'expose': 100}
"['separation', 'issue', 'query']",{'issue': 100}
"['issue', 'phpstan']",{'issue': 100}
"['operation', 'making', 'graphql', 'leveloperation', 'level', 'group', 'security', 'serialization', 'making', 'collection', 'query', 'typebuilder', 'elseifplace', 'typebuilder', 'requestedauthorization', 'reorderschemabuilder']",{'Security': 100}
"['mergepersister', 'context', 'issue', 'kurzyxpersister', 'context']",{'issue': 100}
"['varnish', 'overflow', 'header', 'ability', 'length', 'control', 'command']","{'overflow': 100, 'length': 100}"
"['mergemerge', 'issue', 'request', 'vincentchalamondeprecate', 'attribute', 'security']","{'issue': 100, 'Security': 100}"
"['security', 'request', 'language', 'expressioncustom', 'service', 'language', 'framework', 'expression']",{'Security': 100}
"['mongodb', 'supportmongodb', 'itemproviderpagination', 'extensioncompiler', 'query', 'extensionerror', 'docblockfactory', 'fatal', 'reflection', 'phpdocumentorsmallremoverefactor', 'bundle', 'configurationmongodb', 'filter', 'abstractionmongodb', 'filter', 'patch', 'styleciscrutinizer', 'namespace', 'abstractfilterlocation', 'dataprovider', 'namespacemongodb', 'providerdefinition', 'dataprovider', 'removecorrect', 'namespacemongodb', 'hotfixplatform', 'ignoreplatform', 'ignoremongo', 'behatmongo', 'symfonymongo', 'appveyor', 'travismongo', 'behatmongo', 'symfonymongo', 'appveyor', 'travissamvdb', 'supportconflictbridge', 'filter', 'doctrinebridge', 'bundle', 'compiler', 'symfonybridge', 'bundle', 'symfonybridge', 'bundle', 'symfonybridge', 'bundle', 'compiler', 'symfonybridge', 'bundle', 'symfonyphpunit', 'behatmongodb', 'booleanfilter', 'search', 'propertyhelperchange', 'propertyhelperfinal', 'privatetrait', 'propertyhelper', 'servicefilterfilter', 'existsfilter', 'filter', 'compiler', 'mongodb', 'apifiltercommon', 'filter', 'reference', 'numericfilter', 'orderfilter', 'rangebetter', 'subresources', 'management', 'interfacelookup', 'paginationmongodbproviderorderextensionpaginatorcontext', 'issue', 'reference', 'behatfilter', 'existsmongodb', 'mongodbodmfilter', 'booleanfilterfilter', 'existsfilter', 'numercifilter', 'removefilter', 'search', 'issue', 'vincentchalamonmongodbrepositorypaginatorphpstanexperimental', 'usable', 'trait', 'annotationbetter', 'configurationprovider', 'issue', 'foundnormalizer', 'relation', 'issuevendor', 'phpunit', 'lookupensure', 'abstractfilterbrokenroutingalcaeus', 'commentpaginationminorfilter', 'simplify']","{'fatal': 100, 'issue': 100}"
"['request', 'convertermanage', 'generation', 'documentation', 'converter']",{'generation': 100}
"['expose', 'property', 'parameter', 'expose', 'property', 'parameter', 'collection', 'group', 'expose']",{'expose': 100}
"['manage', 'generation', 'documentation', 'converter']",{'generation': 100}
"['minor', 'issue', 'quality']",{'issue': 100}
"['expose', 'swagger', 'format', 'expose', 'swagger', 'reponse', 'formatextends', 'interface', 'rename']",{'expose': 100}
"['internal', 'utility', 'issue', 'issuecomment']",{'issue': 100}
"['mergemerge', 'ossinkine', 'issue', 'requestswagger', 'array', 'generation', 'parameter']","{'issue': 100, 'generation': 100}"
"['expose', 'swagger', 'paginationexpose', 'swagger', 'paginationgarcia']",{'expose': 100}
"['expose', 'mutation']",{'expose': 100}
"['issue', 'detection', 'parameter', 'identifier', 'doctrine', 'platform', 'subresource']",{'issue': 100}
"['swagger', 'array', 'generation', 'parameter']",{'generation': 100}
"['issue', 'phpstan']",{'issue': 100}
"['fatal', 'error', 'subresource', 'definedapisubresource', 'propertyproper', 'error', 'fatal', 'resultiscollection', 'member']",{'fatal': 100}
"['mergemerge', 'request', 'moltencoreiodepth', 'issue', 'subresource']",{'issue': 100}
"['cbfadfmerge', 'request', 'moltencoreiomaxdepth', 'subresources', 'issue', 'support']",{'issue': 100}
"['resource', 'specify', 'operation', 'formaterror', 'injection', 'update', 'service', 'exception', 'deprecationformatsprovider', 'documentactiondeclaration', 'shortest', 'supportinjection', 'update', 'trigger', 'warning', 'documentation', 'service', 'deprecationdeclare', 'formatphpdoc', 'update']",{'injection': 100}
"['filter', 'array', 'issue', 'notation']",{'issue': 100}
"['issue', 'qualityissue', 'qualityuseless', 'space']",{'issue': 100}
"['generation', 'normalizer', 'cache']",{'generation': 100}
"['issue', 'qualityissue', 'qualityuseless', 'space']",{'issue': 100}
"['eccedmerge', 'scrutinizer', 'request', 'dunglasscrutinizer', 'issue', 'quality']",{'issue': 100}
"['scrutinizer', 'issue', 'quality']",{'issue': 100}
"['crash', 'operation', 'default', 'crash', 'array', 'snippet']",{'crash': 100}
"['mergemerge', 'issue', 'request', 'antograssiotdatefilter']",{'issue': 100}
"['issue', 'quality']",{'issue': 100}
"['swagger', 'issue', 'subcollection', 'documentation']",{'issue': 100}
"['issue', 'insight']",{'issue': 100}
"['mergemerge', 'request', 'dunglascustom', 'security', 'request', 'voter', 'expression']",{'Security': 100}
"['mergemerge', 'tseho', 'request', 'mastersymfony', 'conflict', 'injection', 'dependency']",{'injection': 100}
"['custom', 'security', 'request', 'voter', 'expression']",{'Security': 100}
"['conflict', 'injection', 'symfony', 'version']",{'injection': 100}
"['mergesoyuka', 'issue', 'small', 'stylingissue', 'small', 'behat']",{'issue': 100}
"['issue', 'shouldeagerload', 'sensiolab']",{'issue': 100}
"['issue', 'phpstan']",{'issue': 100}
"['issue', 'stricter']",{'issue': 100}
"['mergeerror', 'soyuka', 'security', 'request', 'normalizerexpose', 'format', 'information']",{'Security': 100}
"['expose', 'format', 'information']",{'expose': 100}
"['mergemerge', 'security', 'request', 'dunglasallow', 'access', 'resource', 'configure', 'class']",{'Security': 100}
"['request', 'platform', 'simperfitreproduce', 'issue', 'relation']",{'issue': 100}
"['reproduce', 'issue', 'relation']",{'issue': 100}
"['issue', 'swagger', 'group', 'generator']",{'issue': 100}
"['issue', 'behat']",{'issue': 100}
"['issue', 'quality']",{'issue': 100}
"['mergemerge', 'request', 'dunglas', 'qualityscrutinizer', 'issue', 'quality']",{'issue': 100}
"['scrutinizer', 'issue', 'quality']",{'issue': 100}
"['issue', 'quality']",{'issue': 100}
"['request', 'generator', 'hotfix', 'query', 'simperfitscrutinizer', 'issue', 'hotfix']",{'issue': 100}
"['scrutinizer', 'issue', 'hotfix']",{'issue': 100}
"['mergemerge', 'swagger', 'teohhanhui', 'requestrefactor', 'swagger', 'generation']",{'generation': 100}
"['refactor', 'swagger', 'generation']",{'generation': 100}
"['complete', 'security']",{'Security': 100}
"['security', 'header']",{'Security': 100}
"['editor', 'request', 'configindentation', 'issue']",{'issue': 100}
"['indentation', 'issue']",{'issue': 100}
"['fcbdfmerge', 'platform', 'request', 'qualityscrutinizer', 'issue']",{'issue': 100}
"['issue', 'scrutinizr']",{'issue': 100}
"['issue', 'pagination', 'event']",{'issue': 100}
"['context', 'generation', 'extract']",{'generation': 100}
"['mergemerge', 'soyuka', 'request', 'caseinsensitivefilter', 'search', 'insensitive']",{'Sensitive': 90}
"['filter', 'search', 'insensitive']",{'Sensitive': 90}
"['bcfbd', 'mergemerge', 'issue', 'request', 'simperfitresource', 'apiresource', 'annotation', 'hotfix']",{'issue': 100}
"['mergemerge', 'issue', 'request', 'simperfitvalue', 'exception']",{'issue': 100}
"['mergescrutinizer', 'issue', 'request', 'simperfitfilter', 'dupplication']",{'issue': 100}
"['mergemerge', 'issue', 'request', 'simperfitallow', 'parse']",{'issue': 100}
"['mergemerge', 'issue', 'request', 'simperfitnumericfilter', 'booleanfilter']",{'issue': 100}
"['vincentchalamon', 'request', 'ordercontext', 'issue']",{'issue': 100}
"['context', 'issue']",{'issue': 100}
"['bdaecemerge', 'teohhanhui', 'requestsymfony', 'injection', 'dependency']",{'injection': 100}
"['injection', 'dependency']",{'injection': 100}
"['issue', 'query', 'string', 'requestparser']",{'issue': 100}
"['bebaddunglas', 'injection', 'metadata', 'request', 'dependency']",{'injection': 100}
"['ffeffmerge', 'csarrazi', 'request', 'doctrine', 'leftjoininstead', 'issue']",{'issue': 100}
"['sprintf', 'prefix', 'function']",{'Sprintf': 100}
"['mergemerge', 'keywords', 'jdeniau', 'request', 'reservederror', 'keywords', 'generation']",{'generation': 100}
"['keywords', 'generation']",{'generation': 100}
"['mergemerge', 'security', 'request', 'theofidrysecurity']",{'Security': 100}
"['issue', 'quality']",{'issue': 100}
"['request', 'issue']",{'issue': 100}
"['jshint', 'issue', 'angular', 'integration']",{'issue': 100}
"['simplify', 'request', 'converter', 'jderussesimplify', 'nameconverter', 'injection']",{'injection': 100}
"['issue', 'scrutinizr']",{'issue': 100}
"['refactor', 'issue', 'sroze']",{'issue': 100}
"['issue', 'scrutinizr']",{'issue': 100}
"['issue', 'insight']",{'issue': 100}
