message,fuzzy
"['plugin', 'reject', 'staticmethod', 'attribunboundmethod', 'issue', 'static', 'unable', 'attributesince', 'unboundmethodimplement', 'unboundmethod', 'mimic']",{'issue': 100}
"['mergemerge', 'requestregex', 'incorrect']",{'incorrect': 100}
"['regex', 'incorrect']",{'incorrect': 100}
"['request', 'issuefailure', 'issue']",{'issue': 100}
"['failure', 'issue']",{'issue': 100}
"['mergerequest', 'andrelouiscaron', 'xunit', 'stack', 'captureissue']",{'stack': 100}
"['request', 'patchfails', 'issue', 'parse', 'bugfixenvironment', 'addedmerge']",{'issue': 100}
"['mergemerge', 'request', 'pitrou', 'issuemodule', 'issue']",{'issue': 100}
"['reachable', 'module', 'issue']",{'issue': 100}
"['stdout', 'xunitscore', 'place', 'xunit', 'capturestream', 'plugin', 'capturescore', 'exactlycapture', 'score', 'insteadobject', 'stream', 'xunitplugin', 'replacedexpect', 'wouldmaintain', 'single', 'stack']",{'stack': 100}
"['issue', 'parse']",{'issue': 100}
"['configuration', 'patch', 'google', 'issue', 'doctest']",{'issue': 100}
"['global', 'request', 'unittestdefine', 'assertion', 'helper', 'noisy', 'stack', 'scope']",{'stack': 100}
"['assertion', 'helper', 'noisy', 'stack', 'scope', 'closebecomes', 'tracebacks', 'module', 'frame', 'bucket', 'backward']",{'stack': 100}
"['update', 'changelog', 'issue']",{'issue': 100}
"['class', 'issue', 'fixture', 'addedfunctionalteardown', 'multiprocess', 'issue']",{'issue': 100}
"['unicode', 'message', 'issue', 'prevents', 'decode']",{'issue': 100}
"['module', 'issue']",{'issue': 100}
"['module', 'issue', 'coverage']",{'issue': 100}
"['issue', 'author', 'takafumi']",{'issue': 100}
"['variable', 'incorrect']",{'incorrect': 100}
"['issue', 'package']",{'issue': 100}
"['generator', 'issue']",{'issue': 100}
"['issue', 'error']",{'issue': 100}
"['selector', 'overhaul', 'attributeattribute', 'method', 'issueplugin', 'class', 'issue', 'static', 'methodclass', 'issue', 'method', 'attribute', 'mixingplugin', 'class', 'issue', 'methodissueclass', 'attribute', 'applyingdecorator', 'child', 'class', 'parent', 'method', 'attribute', 'addedplugin', 'access', 'wantclass', 'addition', 'primary', 'direct', 'setattr', 'regressionchangeassertassert', 'falsereturn', 'falserefactor']",{'issue': 100}
"['pickle', 'issue', 'infinite']",{'issue': 100}
"['issue', 'value']",{'issue': 100}
"['credit', 'issue', 'patch']",{'issue': 100}
"['custom', 'exception', 'issue']",{'issue': 100}
"['plugin', 'ascii', 'contains', 'exception', 'message', 'issue']",{'issue': 100}
"['issue', 'generation', 'native', 'coveragepeignier', 'timothee', 'thanks', 'verboseoutput', 'doctest', 'ideallycheck', 'sanity']","{'issue': 100, 'generation': 100}"
"['plugins', 'succinct', 'option', 'issue']",{'issue': 100}
"['decorator', 'class', 'issue']",{'issue': 100}
"['issue', 'changelog', 'entry', 'xunit']",{'issue': 100}
"['python', 'addskip', 'issue']",{'issue': 100}
"['comment', 'issue']",{'issue': 100}
"['issue', 'keyword', 'doesnt', 'python', 'foogod']",{'issue': 100}
"['module', 'issue', 'package', 'setup']",{'issue': 100}
"['plugin', 'override', 'issue', 'manager', 'default']",{'issue': 100}
"['filter', 'whitespace', 'compatibilty', 'issue']",{'issue': 100}
"['issue', 'stats']",{'issue': 100}
"['patch', 'issue']",{'issue': 100}
"['proper', 'crash', 'method']",{'crash': 100}
"['actual', 'issue', 'example']",{'issue': 100}
"['worker', 'issue']",{'issue': 100}
"['pickle', 'force', 'issue', 'debug', 'window']",{'issue': 100}
"['forgot', 'issue', 'catch']",{'issue': 100}
"['plugin', 'bracket', 'issue']",{'issue': 100}
"['sprint', 'pycon']",{'Sprintf': 92}
"['pjenvey', 'issue']",{'issue': 100}
"['pjenvey', 'issue']",{'issue': 100}
"['compatiblity', 'issue']",{'issue': 100}
"['multiprocess', 'issue']",{'issue': 100}
"['patch', 'compatibility', 'jython', 'issue']",{'issue': 100}
"['score', 'issue', 'plugins', 'default']",{'issue': 100}
"['issue', 'regression']",{'issue': 100}
"['ironpython', 'issue']",{'issue': 100}
"['patch', 'import', 'issue', 'namespace', 'changelog']",{'issue': 100}
"['monkeypatch', 'support', 'frame', 'doctest', 'stack']",{'stack': 100}
"['issue', 'regression']",{'issue': 100}
"['generation', 'attribute', 'module']",{'generation': 100}
"['verbosity', 'issue']",{'issue': 100}
"['store', 'patch', 'stdout', 'stack']",{'stack': 100}
"['plugin', 'issue', 'functional', 'compat']",{'issue': 100}
