message,fuzzy
"['changelog', 'generation']",{'generation': 100}
"['documentation', 'serializedocumentation', 'serializefixture', 'ember', 'package', 'serializereview', 'confuse', 'ensure', 'serialize', 'value', 'issue', 'thoburn', 'chris']",{'issue': 100}
"['chore', 'polymorphic', 'deactivate', 'issue', 'storefront', 'partner']",{'issue': 100}
"['scenario', 'chore', 'fixture', 'staticscript', 'fixture', 'generation', 'staticupdate', 'markerrelationship', 'scenario', 'unusedexample', 'payload', 'reviewconfusion']",{'generation': 100}
"['securityupdate', 'security', 'includesreleasechangelogcompare', 'commitssupport', 'preview', 'dependabot', 'preview', 'dependabot']",{'Security': 100}
"['lockfile', 'issue']",{'issue': 100}
"['securityupdate', 'isaac', 'security', 'includesisaac', 'releasecompare', 'isaac', 'commitssupport', 'preview', 'dependabot']",{'Security': 100}
"['bugfix', 'address', 'findrecord', 'polymorphic', 'issue', 'identifierbugfix', 'address', 'findrecord', 'polymorphic', 'issue', 'identifierincoherent', 'cache', 'subtype', 'record', 'polymorphic', 'issue', 'share', 'dmitry', 'krasnoukhov']",{'issue': 100}
"['assertion', 'value', 'model', 'expose', 'attributevalue', 'model', 'expose', 'attribute', 'production']",{'expose': 100}
"['timeout', 'chore', 'issue']",{'issue': 100}
"['prettier', 'version', 'chore', 'issue']",{'issue': 100}
"['bugfix', 'issue', 'fastboot', 'release', 'canaryfastboot', 'bugfix', 'issue', 'canarychange']",{'issue': 100}
"['crypto', 'error', 'bugfix', 'message', 'fastboot', 'release', 'canary']",{'crypto': 100}
"['enable', 'fastboot', 'release', 'bugfixfastbootfailsenable', 'fastbootleverage', 'generation', 'changeapplication']",{'generation': 100}
"['adapter', 'integration', 'refactor', 'chorechore', 'usage', 'integration', 'adapter', 'refactorremovecontext', 'review', 'informationconstrecord', 'strictequal', 'assertion', 'integer', 'label', 'stringlinter', 'error']",{'integer': 100}
"['typescript', 'configure', 'eslint', 'typescript', 'configureupdate', 'eslint', 'eslint', 'typescriptdetailtypescript', 'package', 'master', 'eslint', 'parsertypescript', 'package', 'master', 'eslint', 'typescript', 'disablesrenames', 'changedobvious', 'includereplaces', 'eslint', 'prettierconfig', 'javascript', 'prettier', 'includingupdate', 'script', 'typescriptcurrent', 'eslint', 'causingerror', 'neccessary', 'disabledenable', 'changeenable', 'eslint', 'typescript', 'prettiereslint', 'typescript', 'enable', 'prototype', 'typescriptprototype', 'typescript', 'enable', 'eslint', 'builtinsenable', 'empty', 'pattern', 'typescriptpattern', 'emptyerror', 'typescript', 'implementeddefinition', 'attempt', 'eslint', 'interpretingleast', 'typescriptenable', 'typescript', 'typescript', 'consoleerror', 'eslint', 'replacedaddress', 'function', 'ember', 'ratherenable', 'empty', 'typescriptempty', 'eslint', 'typescript', 'enablesenable', 'eslint', 'typescript', 'unusedeslint', 'typescript', 'enablesfalse', 'inline', 'issueeslint', 'typescript', 'issue']",{'issue': 100}
"['debug', 'ember', 'chore', 'withoutregister', 'injection', 'setup', 'container', 'registration', 'adapter', 'store', 'debug', 'adapter', 'debugregister', 'adapter', 'debug']",{'injection': 100}
"['injection', 'chore', 'default', 'favor', 'eliminateinjection', 'chore', 'default', 'favor', 'eliminateremove', 'registration', 'setup', 'containerblock', 'debugdefaultdeprecate', 'overloadaddition', 'serializerupdate', 'comment']",{'injection': 100}
"['typescript', 'bugfix', 'package', 'warning', 'embertypescript', 'addon', 'issue', 'ember', 'compiles', 'folderexplanation', 'typescript', 'ember', 'releaseaddon', 'directory', 'addonsaddon', 'mergedguaranteecontinue', 'addonsbuild', 'addontypescript', 'ember']",{'issue': 100}
"['helper', 'refactor', 'createstore', 'choreemberjs', 'issuerefactors', 'createstorehelpful', 'createstorerelease', 'dependency', 'injection', 'adapter', 'interop', 'store', 'removedthink', 'adapteremberjs', 'package', 'adapter', 'fdeacafedde', 'store', 'interop', 'possibleproperty', 'factory', 'adapter', 'createstorehelper', 'emberjs', 'package', 'fdeacafedde', 'ember']",{'injection': 100}
"['update', 'ember', 'qunitsource', 'ember', 'isolation', 'issue']",{'issue': 100}
"['bugfix', 'check', 'arity', 'queryfails', 'record', 'array', 'option', 'issue', 'check', 'arity']",{'issue': 100}
"['securityupdate', 'lodash', 'security', 'includeslodash', 'releasecompare', 'lodash', 'commitssupport', 'preview', 'dependabot']",{'Security': 100}
"['securityupdate', 'lodash', 'security', 'includeslodash', 'releaselodash', 'commitssupport', 'preview', 'dependabot']",{'Security': 100}
"['lodash', 'securityupdate', 'lodash', 'security', 'includeslodash', 'releasecompare', 'lodash', 'commitssupport', 'preview', 'dependabot']",{'Security': 100}
"['chore', 'issue']",{'issue': 100}
"['issue', 'script', 'version']",{'issue': 100}
"['syntax', 'qunit', 'chore', 'convertingsyntax', 'qunit', 'chore', 'prettier', 'issue']",{'issue': 100}
"['azure', 'update', 'pipelinetarget', 'request', 'masterconfig', 'azure', 'pairityconfig', 'travis', 'approach', 'differentbranch', 'blacklist', 'expressdevops', 'azure', 'available', 'expression', 'syntax', 'processheroiceric', 'buildid', 'result', 'emberexample', 'master', 'runningheroiceric', 'buildid', 'result', 'emberexample', 'target', 'request', 'master', 'buildbuildid', 'result', 'ember', 'emberjsexample', 'target']",{'blacklist': 100}
"['bugfix', 'ember', 'releasefetch', 'dependency', 'emberallows', 'application', 'dependency', 'nativedependency', 'fetch', 'fetch', 'dependency', 'issue', 'emberfetch', 'ember', 'readmeensure', 'fetch', 'ember', 'versionerror', 'space', 'prone', 'addon', 'helper', 'adapter', 'function', 'ember', 'future', 'versionutility', 'ember', 'fetchmixin', 'usage', 'global', 'adapter', 'enablesmodule', 'fetch']",{'issue': 100}
"['publish', 'bugfix', 'issue', 'release', 'scriptpackage', 'addon', 'publishingupdate', 'documentation', 'releaserequire', 'token', 'publish', 'ember', 'expirehandle', 'lerna', 'publish', 'likely', 'expiredrecover', 'separate', 'script', 'publishingerror', 'surface', 'repromptcorrect', 'pointguard', 'opportunity', 'finer', 'point', 'occurs', 'release', 'outsideupdate', 'cycle', 'changelog', 'release']",{'issue': 100}
"['parent', 'record', 'child', 'bugfix', 'unloadrecordreset', 'parent', 'record', 'child', 'original', 'issue']",{'issue': 100}
"['unusedremove', 'unusedrevert', 'changelog', 'generation']",{'generation': 100}
"['securityepeli', 'update', 'security', 'includesepeli', 'releaseepeli', 'changelog', 'masterepeli', 'commitssupport', 'dependabot']",{'Security': 100}
"['generation', 'chore', 'modernize', 'integration', 'client']",{'generation': 100}
"['fixup', 'issue', 'ember', 'transpilationensure', 'minimallyspecificbugfix', 'transpilation', 'previouslyreference']",{'issue': 100}
"['eslint', 'ember', 'eslint', 'issue', 'eslint', 'directoryattempt', 'config', 'error', 'prettier', 'eslintinfer']",{'issue': 100}
"['bugfix', 'properlyfailingsuspiciouslyisempty', 'issueprettierproxy', 'issuestill', 'upgrade', 'potential', 'issuepayload', 'member', 'issue', 'emberobserver']",{'issue': 100}
"['bugfix', 'issue', 'recordarraypeekall', 'bugfix', 'issue', 'recordarrayremove', 'unneededfilter', 'ember']",{'issue': 100}
"['issue', 'travis']",{'issue': 100}
"['request', 'issue']",{'issue': 100}
"['relationship', 'bugfix', 'manymany', 'releaserelationship', 'exists', 'manymany', 'relatedrelationship', 'ensure', 'eedeeafacfbdb', 'issue']",{'issue': 100}
"['model', 'injection', 'helper', 'factory']",{'injection': 100}
"['dbeearequest', 'unload', 'runspiredfindrecord', 'unloadrecord', 'issue']",{'issue': 100}
"['coverage', 'bugfix', 'issue']",{'issue': 100}
"['debeef', 'mergeimprove', 'emberjs', 'request', 'buildresolve', 'module', 'issue']",{'issue': 100}
"['module', 'issue', 'github', 'emberactual', 'substack', 'upstream', 'issueresolve', 'upstream', 'actual', 'substackupgrade']",{'issue': 100}
"['issue', 'debug']",{'issue': 100}
"['record', 'release', 'mixindifferent', 'record', 'emberjs', 'issue', 'confusion']",{'issue': 100}
"['attribute', 'emberrelationship', 'inspector', 'crash', 'classimprove']",{'crash': 100}
"['mergereset', 'ensure', 'record', 'lenght', 'array', 'request', 'rwjbluereset', 'ensure', 'record', 'length', 'array', 'bugfix']",{'length': 100}
"['reset', 'ensure', 'record', 'length', 'array', 'bugfixmiddle', 'object', 'ember', 'destroyedlonger', 'property', 'object', 'notify', 'content', 'avoidensure', 'mixin', 'lengthfiredreset', 'length', 'cleanup']",{'length': 100}
"['pangratz', 'object', 'bugfix', 'requestrequest', 'bugfix', 'issue']",{'issue': 100}
"['bugfix', 'issue']",{'issue': 100}
"['adapteroptions', 'property', 'bugfix', 'documentclose', 'emberjs', 'issue']",{'issue': 100}
"['addon', 'changelog', 'upgradeclose', 'emberjs', 'issue']",{'issue': 100}
"['record', 'plural', 'singlewould', 'object', 'foreachguard', 'usingemberjs', 'issue']",{'issue': 100}
"['mergerequest', 'record', 'emberjsfindrecord', 'reference', 'incorrect']",{'incorrect': 100}
"['findrecord', 'reference', 'incorrect']",{'incorrect': 100}
"['availability', 'bugfixclose', 'emberjs', 'issue']",{'issue': 100}
"['emberjsbuild', 'issue']",{'issue': 100}
"['release', 'bugfix', 'issue']",{'issue': 100}
"['testindebugpoint', 'issue', 'address']",{'issue': 100}
"['expose', 'argument', 'array', 'bugfix']",{'expose': 100}
"['eefdee', 'mergecache', 'length', 'request', 'topaxicache', 'cleanup', 'length']",{'length': 100}
"['cache', 'length']",{'length': 100}
"['dcdcd', 'mergecache', 'fivetanley', 'length', 'requestcache', 'length']",{'length': 100}
"['cache', 'length']",{'length': 100}
"['array', 'methodreduce', 'close', 'issue', 'memory', 'method']",{'issue': 100}
"['mergerequest', 'acburdine', 'patch', 'mergeargument', 'incorrect']",{'incorrect': 100}
"['bbbdd', 'mergerequest', 'alexspeller', 'peekall', 'mergereference', 'store', 'incorrect']",{'incorrect': 100}
"['reference', 'incorrect']",{'incorrect': 100}
"['sourcemap', 'bugfix', 'empty', 'bowerember', 'issue', 'component']",{'issue': 100}
"['bower', 'issue']",{'issue': 100}
"['release', 'update', 'inflector', 'bugfix', 'default', 'issue', 'emberhandlebar', 'issueinflector', 'ember', 'stefanpenner']",{'issue': 100}
"['mergerequest', 'sebweaver', 'mergebugfix', 'issue']",{'issue': 100}
"['mergerequest', 'sebweaver', 'mergebugfix', 'issue']",{'issue': 100}
"['caace', 'mergemerge', 'workaround', 'emberjs', 'request', 'revert', 'emberproperty', 'setting', 'length', 'revert']",{'length': 100}
"['releaseemberjs', 'issue']",{'issue': 100}
"['property', 'setting', 'length', 'revert']",{'length': 100}
"['mergerequest', 'ember', 'workaroundproperty', 'setting', 'length']",{'length': 100}
"['property', 'setting', 'length', 'contentemberjs', 'workaround']",{'length': 100}
"['activemodel', 'adapter', 'issue']",{'issue': 100}
"['mergemerge', 'initializer', 'request', 'methodprefer', 'bugfix', 'injection']",{'injection': 100}
"['request', 'method', 'registrymethod', 'bugfix', 'injection']",{'injection': 100}
"['qunit', 'jquery', 'issue', 'workaround']",{'issue': 100}
"['source', 'ember', 'allowclose', 'emberjs', 'issue']",{'issue': 100}
"['bdffdcd', 'mergemerge', 'warning', 'request', 'zoeesilcock', 'belongsto', 'featureresolve', 'incorrect', 'option', 'warning']",{'incorrect': 100}
"['incorrect', 'option', 'warning']",{'incorrect': 100}
"['brocfile', 'issue']",{'issue': 100}
"['cffafbbb', 'mergemerge', 'request', 'turbo', 'issue', 'jsdocjsdoc', 'issue']",{'issue': 100}
"['acfbae', 'mergemerge', 'request', 'turbo', 'issue', 'jsdocjsdoc', 'issue']",{'issue': 100}
"['mergemerge', 'emberjs', 'request', 'issue', 'buildbuild', 'issue']",{'issue': 100}
"['mergesberan', 'record', 'array', 'request', 'documentationdocumentation', 'recordarray', 'incorrect']",{'incorrect': 100}
"['documentation', 'recordarray', 'incorrect']",{'incorrect': 100}
"['documentation', 'asyncdocumationtionemberjs', 'issue']",{'issue': 100}
"['mergerequest', 'master', 'jakesjews', 'mergelocal', 'relates', 'issue', 'rename']",{'issue': 100}
"['errorimprove', 'error', 'feedback', 'issue']",{'issue': 100}
"['feedback', 'issue']",{'issue': 100}
"['factory', 'association', 'request', 'polymorphic', 'model', 'hjdivadaround', 'check', 'issue']",{'issue': 100}
"['check', 'issuecontainer', 'subclass', 'modelfor', 'retrievedmodel', 'subtype', 'modelforcheck', 'polymorphic', 'superclass', 'issue']",{'issue': 100}
"['mergerelationship', 'unload', 'emberjs', 'requestrelationship', 'incorrect', 'iteration', 'clear', 'issue']","{'incorrect': 100, 'issue': 100}"
"['jqxhr', 'thrownerror', 'jquery', 'errorthrownemberjs', 'issue']",{'issue': 100}
"['error', 'record', 'changetraditional', 'record', 'assumingremoverecords', 'plain', 'addrecordsassumption', 'javascriptsafelyiterate', 'object', 'foreachfalsegithub', 'issue']",{'issue': 100}
"['mergerequest', 'jasalguero', 'addendum', 'mergerelationship', 'empty', 'issue', 'async']",{'issue': 100}
"['mergerequest', 'grishace', 'mergeresult', 'request', 'issue']",{'issue': 100}
"['request', 'issue']",{'issue': 100}
"['relationship', 'empty', 'issue', 'async']",{'issue': 100}
"['batch', 'length', 'request', 'hasmany', 'issue']","{'length': 100, 'issue': 100}"
"['bcfcf', 'mergerequest', 'expose', 'option']",{'expose': 100}
"['expose', 'optionhelper', 'expose', 'option', 'keepinguseful', 'record', 'behaviour', 'default', 'serializercould']",{'expose': 100}
"['mergerequest', 'example', 'adapter', 'mergeadapter', 'incorrect']",{'incorrect': 100}
"['issue', 'grammatical']",{'issue': 100}
"['issue', 'grammatical']",{'issue': 100}
"['cache', 'model', 'factoryrelationship', 'emberrelationship', 'value', 'arounddetail', 'result', 'becomeswould', 'cachereference', 'destroystill', 'exists', 'referencecontainer', 'createcache', 'container', 'value', 'factoryfactory', 'factoryinstead', 'cache', 'createsrelationship', 'return', 'accepts', 'store', 'functionalternative', 'ember', 'expectedinstead', 'check', 'typekey', 'alwaysproblem', 'others', 'dodge', 'issue', 'leaverelationship', 'classwould', 'codebase', 'invasive', 'impactrelationship', 'currentclass', 'model', 'level', 'cachedfalse', 'refactor', 'writerelationship', 'factory', 'object', 'consumer']",{'issue': 100}
"['mergerequest', 'jimmay', 'patch', 'mergedocumentation', 'incorrect']",{'incorrect': 100}
"['mergerequest', 'pathfortype', 'mergepathfortype', 'semicolon', 'incorrect']",{'incorrect': 100}
"['relationship', 'property', 'issue', 'potentialincrease', 'value', 'purpose']",{'issue': 100}
"['mergerequest', 'pushpayload', 'mergereturn', 'incorrect', 'pushpayload', 'documentation', 'store']",{'incorrect': 100}
"['return', 'incorrect', 'pushpayload', 'documentation', 'store']",{'incorrect': 100}
"['banner', 'generation']",{'generation': 100}
"['renameunderscore', 'serializers', 'adapternormalize', 'resolver', 'appkit', 'issue', 'emberfullpath', 'moduleunderscore', 'exampleinstead', 'serializers', 'unnecessary', 'arguedinstead', 'adapter', 'serializerconvention', 'matchclass', 'serializer', 'strangelyclass', 'matchinstead', 'adapter', 'class', 'renameactive', 'model', 'serializer']",{'issue': 100}
"['mergerequest', 'marcioj', 'mergeproperty', 'expose', 'manyarray']",{'expose': 100}
"['model', 'system', 'documentsystem', 'incorrect', 'example', 'model', 'bradleypriest', 'thanks']",{'incorrect': 100}
"['travis', 'failureconfig', 'update', 'ensures', 'ember', 'present', 'config', 'valuecherry', 'present', 'information', 'ember', 'pointforce', 'upgrade', 'system', 'latestticket', 'reference', 'travistravis', 'issue']",{'issue': 100}
"['detect', 'flush', 'queue', 'localmitigate', 'ebryn', 'issue']",{'issue': 100}
"['property', 'expose', 'manyarray']",{'expose': 100}
"['update', 'emberfeature', 'multi', 'commitscommit', 'messagedocumentation', 'automatic', 'publishingready', 'connection', 'serverphantomjs', 'timeout', 'withoutpresent', 'defeatureify', 'abortupdate', 'qunitupdate', 'runner', 'qunit', 'issue', 'embertotal', 'output', 'moduledone', 'failureinstead']",{'issue': 100}
"['adapter', 'thread']",{'thread': 100}
"['client', 'generation']",{'generation': 100}
"['jqxhr', 'resolution', 'thenableresolve', 'needle', 'emberjs', 'issue']",{'issue': 100}
"['versionlonger', 'seemspatch', 'openssl', 'vulnerability', 'check', 'hostname', 'client']",{'OpenSSL': 100}
"['expose', 'integration']",{'expose': 100}
"['incorrect', 'warning', 'request']",{'incorrect': 100}
"['mergerequest', 'fivetanley', 'patch', 'mergeupload', 'issue']",{'issue': 100}
"['upload', 'issue']",{'issue': 100}
"['legacy', 'injection']",{'injection': 100}
"['uncovers', 'issue', 'sideloadingsummary', 'changehelper', 'assertion', 'flagequals', 'stateequalshelper', 'comment', 'green', 'teardown', 'local', 'cleanedfunction', 'unnecessaryconsistent', 'format', 'assertionsetup', 'whitespace', 'assertionindividual', 'assertion', 'block', 'setup', 'commentstate', 'model', 'assertiongiven', 'ensure', 'record']",{'issue': 100}
"['mergerequest', 'klaaspieter', 'cross', 'browser', 'issue']",{'issue': 100}
"['issue', 'address', 'hasmany', 'creationensures', 'creatingeither', 'hasmany', 'record', 'embeddedcommentparent', 'childretains', 'dirtyembeddedrelationship', 'thing']",{'issue': 100}
"['afdca', 'mergemerge', 'error', 'request', 'yappbox', 'incorrect', 'error', 'message']",{'incorrect': 100}
"['reference', 'issue']",{'issue': 100}
"['inline', 'injection']",{'injection': 100}
"['fixme', 'anotherknown', 'issue']",{'issue': 100}
"['mergerequest', 'lukemelia', 'injection', 'mergeinjection']",{'injection': 100}
"['controller', 'specify', 'injection']",{'injection': 100}
"['register', 'ember', 'injection']",{'injection': 100}
"['client', 'extract', 'generation']",{'generation': 100}
"['update', 'ember', 'injection', 'integration']",{'injection': 100}
"['update', 'syntax', 'injection']",{'injection': 100}
"['integer', 'number', 'attributeupdaterevision', 'reflect', 'readme']",{'integer': 100}
"['variable', 'association', 'hasone', 'hasmany', 'issue']",{'issue': 100}
"['mergerequest', 'elucid', 'undefined', 'integer', 'coerce', 'string']",{'integer': 100}
"['fbedd', 'mergerequest', 'ghempton', 'master', 'mergemodelarray', 'issue', 'modelcache']",{'issue': 100}
