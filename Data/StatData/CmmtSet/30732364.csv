message,fuzzy
"['assertion', 'transpilation', 'typescript', 'errormicrosoft', 'typescript', 'issue']",{'issue': 100}
"['double', 'issue']",{'issue': 100}
"['mergefalcor', 'stack', 'master', 'netflix', 'trace']",{'stack': 100}
"['stack', 'refactor']",{'stack': 100}
"['incorrect', 'value']",{'incorrect': 100}
"['deddd', 'mergemichaelbpaulson', 'requeststill', 'issue', 'serializable', 'getcache']",{'issue': 100}
"['mergejhamlet', 'issue', 'close', 'functionality']",{'issue': 100}
"['integration', 'issue']",{'issue': 100}
"['reflectfalcor', 'netflix', 'issue']",{'issue': 100}
"['issue', 'function', 'derefs', 'selector']",{'issue': 100}
"['mergemaster', 'michaelbpaulson', 'requestinfinite', 'operation', 'recursion', 'issue']",{'issue': 100}
"['issue', 'address', 'syncronous']",{'issue': 100}
"['mergetrxcllnt', 'issue', 'requesteslint', 'address']",{'issue': 100}
"['range', 'double', 'issue']",{'issue': 100}
"['generation', 'favor']",{'generation': 100}
"['negative', 'potential', 'array', 'length']",{'length': 100}
"['lowerfalcor', 'contributor', 'casingfalcor', 'netflix', 'issue']",{'issue': 100}
"['datasource', 'issue']",{'issue': 100}
"['issue', 'ensure']",{'issue': 100}
