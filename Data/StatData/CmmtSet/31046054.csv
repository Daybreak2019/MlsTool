message,fuzzy
"['router', 'advertisement', 'error', 'router', 'advertisement', 'daemon', 'docker', 'issue', 'machine', 'systemd', 'nspawnerror', 'producedstart', 'controller', 'daemon', 'error', 'network', 'initializingdefault', 'libnetwork', 'error', 'bridgeunable', 'advertisement', 'routerdocker', 'systemchange', 'error', 'patch', 'messagegithub', 'sebastiaan', 'stijn']",{'issue': 100}
"['resolver', 'error', 'response', 'library', 'deecdcebbbbcbd', 'commiterror', 'updatedchange', 'response', 'checkresponse', 'check', 'replyretry', 'clientbeabcefefacafd', 'incorrect', 'situation', 'checkerror', 'response', 'failedconnect', 'servererror', 'wouldconsider', 'result', 'lookupattempt', 'lookupbeabcefefacafd', 'version', 'wouldresolvequery', 'resolver', 'forwardingtimeout', 'resolver', 'serverquery', 'resolver', 'resolver', 'recordwould', 'ignore', 'version', 'lookupresolvequery', 'resolver', 'forwardingexternal', 'resolver', 'empty', 'response', 'returnedupdate', 'error', 'logic', 'patch', 'continueerror', 'response', 'receivederror', 'response']",{'incorrect': 100}
"['update', 'vendorcomparecompatibility', 'kernel', 'address', 'issue', 'olderattribute', 'destination', 'attribute', 'destination', 'address', 'check', 'statsconstantgithub', 'sebastiaan', 'stijn']",{'issue': 100}
"['balancer', 'performance', 'improvingbalancer', 'module', 'issue', 'swarm', 'situationconnection', 'entrymodule', 'packet', 'whenever', 'droppingreuse', 'connection', 'status', 'forcingconnection', 'initiate', 'timeout', 'client', 'requestmodule', 'setting', 'handlingconnection', 'entry', 'existingbalancer', 'swarm', 'request', 'forwardbackendandrew']",{'issue': 100}
"['panic', 'overlay', 'driverdriver', 'issue', 'panic', 'index', 'overlay', 'rangecurkeys', 'mismatch', 'indexerror', 'updatekeysupdatereconfigure', 'update', 'failuredasgupta']",{'issue': 100}
"['update', 'golanggolanggolang', 'includessyscall', 'milestone', 'tracker', 'issuemilestone', 'golang', 'issuegolanggolang', 'securitymilestone', 'tracker', 'issuemilestone', 'golang', 'update', 'securityrelease', 'choosecause', 'public', 'invalid', 'chain', 'cryptocertificate', 'chain', 'trustedcrypto', 'connection', 'accepts', 'serververifies', 'crash', 'clientcertificate', 'server', 'clientrecover', 'crash', 'applicationcertificate', 'openpgp', 'cryptoclient', 'cryptopanic', 'eitheraccepts', 'isuserauthority', 'public', 'malformedcertificate', 'thanks', 'danieldisclosure', 'previous', 'regilero', 'thankgithub', 'sebastiaan', 'stijn']",{'crash': 100}
"['networkdb', 'flakyfixedlibnetwork', 'docker', 'issue', 'addresslibnetwork', 'docker', 'issue', 'addressimportingfunction', 'condition', 'check', 'interval']",{'issue': 100}
"['mergeespensuenson', 'request', 'struct', 'incorrect']",{'incorrect': 100}
"['bccda', 'mergemaster', 'suwang', 'request', 'mergeresolve', 'bridge', 'issue']",{'issue': 100}
"['fdaac', 'mergegolang', 'arkodg', 'request', 'mergeversion', 'contains', 'security']",{'Security': 100}
"['mergemerge', 'restart', 'request', 'issue', 'docker', 'arkodg', 'ipvlansystem', 'macvlan', 'support', 'network', 'restarts', 'dockerd', 'ipvlan']",{'issue': 100}
"['system', 'macvlan', 'support', 'network', 'restarts', 'dockerd', 'ipvlancarry', 'networkdeletedlibnetwork', 'docker', 'issue', 'addressdasgupta']",{'issue': 100}
"['vishvananda', 'netlinkchange', 'includedspecification', 'creation', 'indexsyscall', 'constantgretap', 'range', 'metadata', 'indexsittun', 'attribute', 'encapsulation', 'iptun', 'tunnel', 'support', 'addedstatistic', 'expose', 'statesupport', 'setting', 'advmss', 'support', 'routecalcrtable', 'array', 'parameternetlink', 'support', 'addedsupport', 'udpzerocsum', 'queuemultiqueue', 'tuntap', 'retrieve', 'neighbourtunnel', 'kernel', 'macvlans', 'support', 'function', 'index', 'gettingeliminate', 'netlinkdescriptor', 'overwritereference', 'kernel', 'instructionfilter', 'addresssupportoptionqdisc', 'supportgithub', 'sebastiaan', 'stijn']",{'expose': 100}
"['mergemerge', 'request', 'insensitive', 'arkodg', 'lookupquery', 'record', 'insensitive']",{'Sensitive': 90}
"['query', 'record', 'insensitiveserver', 'insensitive', 'statequery', 'svcrecords', 'ascii', 'characterabide', 'lowerrelates', 'issuedasgupta']",{'Sensitive': 90}
"['mergesynch', 'pradipd', 'request', 'mergepeerdelete', 'connectivity', 'network', 'issue', 'synchronization']",{'issue': 100}
"['deletion', 'addition', 'issue', 'connectivity', 'network', 'endpoint', 'synchronizationdhara', 'pradip', 'pradipd']",{'issue': 100}
"['mergefcrisciani', 'crash', 'request', 'mergepossible', 'pointer', 'exception']",{'crash': 100}
"['increase', 'request', 'group', 'concurrentincrease', 'concurrent', 'request']",{'concurrent': 100}
"['increase', 'concurrent', 'requestalleviates', 'libnetwork', 'address', 'docker', 'issueremediate', 'limit', 'issue', 'silva', 'alves', 'thiago']","{'concurrent': 100, 'issue': 100}"
"['thread', 'problem', 'fixeddetailgolang', 'commitroutine', 'thread', 'anothersetnamespace', 'cleanup', 'method', 'drivernamespace', 'thread', 'woulddifferent', 'addressaround', 'lockosthreads', 'crisciani', 'flavio']",{'thread': 100}
"['refactor', 'leaveinstead', 'initializemutex', 'sandbox', 'subnet', 'traditional', 'networkstate', 'initializationlibnetwork', 'destroys', 'network', 'trulysubnet', 'sandbox', 'redirect', 'pointernastyaddition', 'function', 'patch', 'mergesjoinsandbox', 'cleanersubnet', 'network', 'seriesreduce', 'potential', 'modify', 'overlay', 'subnetsperformance', 'minorobscurecrucial', 'pattern', 'driver', 'peerdb', 'network', 'messageherein', 'asynchronous', 'defer', 'notificationrelease', 'peerdb', 'deadlock', 'block', 'method', 'networkpeerdbtelfer', 'ctelfer', 'chris']",{'deadlock': 100}
"['makefile', 'protocol', 'buffer', 'check', 'protocdiffer']",{'buffer': 100}
"['length', 'precision', 'limit', 'stringslice', 'certain', 'previous', 'limit', 'length', 'stringfield', 'sandbox', 'endpoint', 'string', 'assumesslice', 'sandbox', 'leastsmaller', 'issue', 'stringprecision', 'slice', 'argument', 'format', 'string', 'specifierdocumentation', 'package', 'golangslice', 'precision', 'length', 'output', 'formattedbehavior', 'number', 'limit', 'string', 'precision', 'interpolationtelfer', 'ctelfer', 'chris']","{'length': 100, 'issue': 100}"
"['assert', 'redundant', 'faulty', 'message', 'removeformat', 'argument', 'incorrect', 'messagetestdnsoptionslocationerror', 'equal', 'ndotsactual', 'ndotsinstead', 'ndots', 'option', 'message', 'extra', 'stringremove', 'patch', 'messageenough', 'error', 'catch', 'information', 'printtestdnsoptionslocationerror', 'equal', 'ndotsactual', 'ndotsgithub', 'sebastiaan', 'stijn']",{'incorrect': 100}
"['present', 'network', 'balancingnewer', 'container', 'creates', 'network', 'endpointservice', 'libnetwork', 'assigns', 'endpointunique', 'address', 'interface', 'service', 'traffic', 'return', 'order', 'routearrives', 'endpoint', 'balancingdestination', 'backend', 'balance', 'linuxunique', 'traffic', 'endpointswarm', 'scheme', 'resultservice', 'balancingscheme', 'service', 'similar', 'containeroperate', 'windowextra', 'network', 'addressalways', 'extra', 'stack', 'deployment', 'orderallocate', 'address', 'sufficient', 'spacepreserve', 'endpoint', 'patchfunctionality', 'activates', 'normalizesvariable', 'function', 'perspective', 'separatebalancertelfer', 'ctelfer', 'chris']",{'stack': 100}
"['default', 'collision', 'gatewaytruncate', 'default', 'gateway', 'network', 'endpoint', 'ambiguouslenghty', 'prefix', 'network', 'overflow', 'length', 'sanboxgateway', 'ctelfer', 'chris']","{'overflow': 100, 'length': 100}"
"['buffer', 'protocol', 'driver', 'regeneratenetworkdb', 'current', 'different', 'versionprotoc']",{'buffer': 100}
"['dockerfile', 'buffer', 'protocol', 'support']",{'buffer': 100}
"['regression', 'request', 'overlay', 'deadlockoverlay', 'spurious', 'deadlock', 'driver']",{'deadlock': 100}
"['networkmodifyoperation', 'peerdb', 'message', 'deletenetwork', 'entailflush', 'goroutine', 'entrydeadlockstart', 'acquireseventnotify', 'peerdb', 'block', 'request', 'receivesattempt', 'flush', 'block', 'peerdbchannel', 'operation', 'synchronous', 'peerdboperation', 'issue', 'peerdb', 'flush', 'patchdeletenetwork', 'unlocks', 'commitsection', 'critical', 'createnetworkperform', 'protects', 'createnetworknotification', 'driver', 'peerdbregression', 'complete', 'solution', 'introducedtelfer', 'ctelfer', 'chris']",{'issue': 100}
"['modifypresent', 'replaces', 'workaround', 'issue', 'patchwithin']",{'issue': 100}
"['mergefcrisciani', 'readme', 'request', 'mergeorphan', 'expose', 'readme', 'network']",{'expose': 100}
"['orphan', 'expose', 'readme', 'readme', 'example', 'crisciani', 'flavio']",{'expose': 100}
"['mergebitseq', 'request', 'mergeduplicate', 'issue']",{'issue': 100}
"['concurrent', 'accesspanic', 'access', 'concurrent', 'commitabhinandan']",{'concurrent': 100}
"['library', 'duplicate', 'issueduplicate', 'contains', 'issue', 'addressedswarmkit', 'datastore', 'condition', 'offset', 'calculationbitsequence', 'offsetstart', 'middle', 'instanceblockavailable', 'instance', 'curent', 'findingblock', 'currentavailableabhinandan']",{'issue': 100}
"['mergefcrisciani', 'transient', 'request', 'mergemaxsetstringlen', 'crash']",{'crash': 100}
"['cdbeb', 'mergefcrisciani', 'transient', 'request', 'mergetransient', 'length', 'limit']",{'length': 100}
"['transient', 'length', 'limitavoid', 'transient', 'crisciani', 'flavio']",{'length': 100}
"['mergefcrisciani', 'watchmiss', 'request', 'mergewatchmiss', 'thread', 'context']",{'thread': 100}
"['watchmiss', 'thread', 'contextinformation', 'netlink', 'crisciani', 'flavio']",{'thread': 100}
"['delete', 'cluster', 'issue', 'disablingshutdown', 'service', 'service', 'disablingservice', 'cluster', 'delete', 'siege', 'ensure', 'downtime']",{'issue': 100}
"['image', 'multi', 'issue']",{'issue': 100}
"['mergemerge', 'fcrisciani', 'request', 'bridge', 'crashdriver', 'bridge', 'concurrent', 'createnetwork']",{'concurrent': 100}
"['networkdb', 'diagnose', 'frameworkdebug', 'possibility', 'introducesallow', 'localhost', 'expose', 'localhost', 'discoveredparameter', 'query', 'pretty', 'option', 'passingbinary', 'valueparameter', 'query', 'unsafe', 'crisciani', 'flavio']",{'expose': 100}
"['implementationreadlock', 'update', 'reaptimepossible', 'readlock', 'bulksync', 'creatingupdate', 'concurrent', 'logic', 'fetch', 'database', 'cleanup', 'networkensure', 'preciselyroutine', 'slowdownprocess', 'possible', 'lifetimeproblem', 'entry', 'stillamong', 'residual', 'reaptimeslower', 'repropagate', 'entry', 'multipleremain', 'crisciani', 'flavio']",{'concurrent': 100}
"['driver', 'bridge', 'concurrent', 'driver', 'createnetworkoperation', 'issue', 'concurrentexception', 'crash', 'proper', 'configurationprevious', 'address', 'issueoriginal', 'frequency', 'failureconfirmfailure', 'crisciani', 'flavio']","{'concurrent': 100, 'issue': 100, 'crash': 100}"
"['mergeaaronlehmann', 'sprintfs', 'request', 'mergeavoid', 'trivial', 'sprintf']",{'Sprintf': 100}
"['mergecpuguy', 'request', 'goroutine', 'thread']",{'thread': 100}
"['goroutine', 'threadgoroutine', 'thread', 'issue', 'preventsmount', 'network', 'execution', 'puttingcpuguy', 'cherry', 'commitcpuguy']","{'thread': 100, 'issue': 100}"
"['mergemerge', 'fcrisciani', 'service', 'request', 'issueconnectivity', 'service', 'issue']",{'issue': 100}
"['mergefcrisciani', 'request', 'mergewaitgroup', 'crash']",{'crash': 100}
"['mergeabhinandanpb', 'request', 'allocation', 'calculation', 'issue', 'byteoffset']",{'issue': 100}
"['infra', 'networkdb', 'testinginteraction', 'expose', 'diagnose', 'frameworkimage', 'dockerfile', 'buildperiodic', 'queue', 'print', 'statsserver', 'client', 'testkit', 'integrationleave', 'crisciani', 'flavio']",{'expose': 100}
"['networkdb', 'settingbuffer', 'length', 'introduce', 'possibility', 'specifyallow', 'whole', 'limit', 'networkinterfacehandy', 'identify', 'stats', 'queueidentify', 'unbalance', 'throughput', 'crisciani', 'flavio']",{'length': 100}
"['mergemerge', 'fcrisciani', 'network', 'request', 'extranetworknodes', 'number', 'networkdb', 'entry', 'incorrect']",{'incorrect': 100}
"['issue', 'fixedcheck', 'crisciani', 'flavio']",{'issue': 100}
"['allocation', 'calculation', 'issue', 'byteoffsetdouble', 'byteoffsetoffset', 'value', 'double', 'calculationhappens', 'ordinal', 'startingsequence', 'calculation', 'error', 'result']",{'issue': 100}
"['ebcef', 'mergemerge', 'fcrisciani', 'request', 'issue']",{'issue': 100}
"['specific', 'linux', 'kernel', 'configlower', 'linux', 'neighbor', 'overflow', 'issue', 'probability', 'crisciani', 'flavio']","{'overflow': 100, 'issue': 100}"
"['scope', 'override', 'local', 'network', 'contains', 'issue', 'commitissuelibnetwork', 'docker', 'issuescope', 'support', 'local', 'network', 'swarm', 'introducedoverriden', 'driver', 'network', 'configurationallow', 'removedoption', 'allocation', 'driverabhinandan']",{'issue': 100}
"['trivial', 'sprintfinstead', 'concatenation', 'sprintf', 'string', 'simple', 'stringdetect', 'compiler', 'number', 'problemerror', 'runtime', 'aaron', 'lehmann']",{'Sprintf': 100}
"['agentsetup', 'clusterprovider', 'checkswarm', 'concurrent', 'daemoncause', 'access', 'integration', 'agentsetuppanic', 'resultingaboch']",{'concurrent': 100}
"['bbfeb', 'mergeaboch', 'request', 'mergechange', 'overlay', 'encryption']",{'encryption': 100}
"['encryption', 'cluster']",{'encryption': 100}
"['expose', 'option', 'network', 'ingresaboch']",{'expose': 100}
"['mergeaboch', 'errlog', 'request', 'mergeerror', 'incorrect', 'message']",{'incorrect': 100}
"['error', 'incorrect']",{'incorrect': 100}
"['docker', 'halfclose', 'issue', 'proxy']",{'issue': 100}
"['mergesanimej', 'debug', 'request', 'mergedebug', 'incorrect', 'message']",{'incorrect': 100}
"['debug', 'incorrect', 'manohar', 'santhosh']",{'incorrect': 100}
"['messagediscard', 'function', 'iptables', 'codederror', 'false', 'docker', 'positivepresence', 'concurrent', 'networkcommon', 'message', 'fixedaboch']",{'concurrent': 100}
"['logrus', 'removingdebug', 'error', 'panic', 'fatal', 'stringinstead', 'logrus', 'project', 'import']",{'fatal': 100}
"['cfcbd', 'bacffb', 'mergeresolvererror', 'msabansal', 'request', 'mergeshown', 'daemon', 'error', 'resovler', 'message', 'incorrect', 'startup']",{'incorrect': 100}
"['mergeaboch', 'request', 'mergeallow', 'concurrent', 'agentclose']",{'concurrent': 100}
"['daemon', 'error', 'resovler', 'message', 'incorrect', 'msabansal', 'sabansal']",{'incorrect': 100}
"['issue', 'address', 'issue', 'addressdocker', 'issuecause', 'address', 'multiplecorrectbridgename', 'issuereturn', 'firstchange', 'addressallow', 'address', 'possibility']",{'issue': 100}
"['deadlock', 'getsvcrecords', 'potentialaboch']",{'deadlock': 100}
"['acdedd', 'mergesanimej', 'request', 'mergereset', 'swarm', 'encryption']",{'encryption': 100}
"['reset', 'swarm', 'encryption', 'manohar', 'santhosh']",{'encryption': 100}
"['slice', 'checkcause', 'providedcause', 'integration', 'problem', 'docker', 'currenthappen', 'paniccheck', 'length', 'aaron', 'lehmann']",{'length': 100}
"['mergemerge', 'address', 'request', 'tgraf', 'crashremote', 'plugin', 'address', 'return', 'empty', 'string', 'crash']",{'crash': 100}
"['encryption', 'addressnetlinkcould', 'removenetlink', 'librarycanonical', 'address', 'addressipsec', 'driver']",{'encryption': 100}
"['mergeaboch', 'request', 'mergeadjust', 'encryption', 'container']",{'encryption': 100}
"['mergeaboch', 'request', 'dataplane', 'encryption']",{'encryption': 100}
"['encryption', 'containeraboch']",{'encryption': 100}
"['decline', 'overflow', 'endpointleijitang']",{'overflow': 100}
"['mergeipseckeys', 'sanimej', 'request', 'mergeswitch', 'encryption', 'ipsec', 'overlay', 'subsystem']",{'encryption': 100}
"['service', 'record', 'service', 'record', 'service', 'record', 'issue', 'mrjana', 'radhakrishnan']",{'issue': 100}
"['mergeaboch', 'request', 'mergereduce', 'overlay', 'noise', 'encryption']",{'encryption': 100}
"['switch', 'encryption', 'ipsec', 'susbsystem', 'manohar', 'santhosh']",{'encryption': 100}
"['bulksync', 'responsemeant', 'bulksyncnode', 'incorrect', 'unnecessarilyresponse', 'mrjana', 'radhakrishnan']",{'incorrect': 100}
"['encryption', 'layer', 'driver', 'support', 'network', 'overlayaboch']",{'encryption': 100}
"['encyrption', 'controller', 'method', 'agentinterface', 'manohar', 'santhosh']",{'encryption': 90}
"['cceee', 'mergejmzwcn', 'request', 'issue', 'libnetwork', 'problem']",{'issue': 100}
"['mergeaboch', 'request', 'mergecross', 'issue', 'compilation']",{'issue': 100}
"['mergesanimej', 'request', 'mergequery', 'increase', 'limit', 'concucrrent']",{'concurrent': 95}
"['ddefd', 'bfeac', 'mergesanimej', 'thread', 'request', 'reexec', 'iptables', 'process', 'setup']",{'thread': 100}
"['cross', 'issue', 'compilationcircle', 'cross', 'targetwindow', 'buildbreakage', 'solaris', 'buildaboch']",{'issue': 100}
"['overlay', 'destroysandboxmember', 'error', 'network', 'overlay', 'concurrentinterface', 'exists', 'sandbox', 'error', 'subnet', 'leavemember', 'subnets', 'variable', 'networkdestroy', 'sandbox', 'trigger', 'subnet', 'vxlancreation', 'thread', 'trigger', 'destroysandboxgiven', 'interface', 'thread', 'vxlanallow', 'interruption', 'initializationinterface', 'vxlan', 'consequentaboch']",{'thread': 100}
"['mergesanimej', 'request', 'mergequery', 'number', 'limit', 'concurrent']",{'concurrent': 100}
"['fdbda', 'mergesanimej', 'request', 'mergereference', 'pointer', 'servedns', 'concurrent']",{'concurrent': 100}
"['mergemavenugo', 'request', 'mergepossible', 'inconsistency', 'issue', 'state']",{'issue': 100}
"['possible', 'fixing', 'inconsistency', 'issue', 'statepossible', 'ungracefulactual', 'inconsistent', 'endpointinconsistency', 'madhu', 'venugopal']",{'issue': 100}
"['mergemavenugo', 'request', 'mergepanic', 'issue']",{'issue': 100}
"['panic', 'issue', 'fixedgovet', 'didnt', 'error', 'catch', 'madhu', 'venugopal']",{'issue': 100}
"['request', 'expose', 'aidanhsenableipv', 'expose', 'setting']",{'expose': 100}
"['enableipv', 'expose', 'settingaidan', 'hobson', 'sayers', 'aidanhs']",{'expose': 100}
"['mergeaboch', 'request', 'mergecreation', 'default', 'network', 'concurrent']",{'concurrent': 100}
"['expose', 'sandbox', 'madhu', 'venugopal']",{'expose': 100}
"['requestclient', 'concurrent', 'requestdispense', 'specifydifferent', 'predefinedcommon', 'local', 'global', 'issuespace', 'addressaboch']",{'concurrent': 100}
"['service', 'discovery', 'sandbox', 'problem', 'issue', 'firstobject', 'endpoint', 'versioncreate', 'database', 'endpoint', 'progress', 'updatecurrent', 'containerservice', 'record', 'retrieve', 'containerupate', 'service', 'previouscreate', 'small', 'endpoint', 'order', 'anothercontext', 'sandbox', 'endpointpopulation', 'record', 'service', 'record', 'container', 'issuesometimes', 'service', 'container', 'endpoint', 'initial', 'endpointcreation', 'endpointcompatible', 'hostname', 'entry', 'mrjana', 'radhakrishnan']",{'issue': 100}
"['detect', 'pushreservation', 'block', 'currentthink', 'block', 'insteadissue', 'couplehappencreation', 'allocationphantom', 'length', 'sequenceeffectsomewhere', 'allocation', 'middleincorrect', 'bitmask', 'completelysequenceaboch']",{'length': 100}
"['mergesanimej', 'request', 'mergeoverlay', 'maintenance', 'network', 'issue']",{'issue': 100}
"['mergedenverdino', 'master', 'request', 'mergestore', 'cluster', 'issue']",{'issue': 100}
"['mergeaboch', 'request', 'mergebroadcast', 'reserve', 'address', 'bitseq', 'length']",{'length': 100}
"['config', 'expose', 'networkaboch']",{'expose': 100}
"['mergemavenugo', 'libkv', 'request', 'mergeupdate', 'boltdb', 'libkv', 'connection', 'concurrent']",{'concurrent': 100}
"['mergemavenugo', 'request', 'integration', 'docker', 'issue']",{'issue': 100}
"['integration', 'docker', 'issue', 'fixedchange', 'localstorefunction', 'container', 'convenience', 'madhu', 'venugopal']",{'issue': 100}
"['dbfecfb', 'mergemavenugo', 'request', 'mergeavoid', 'libnetwork', 'boltdb', 'deadlock']",{'deadlock': 100}
"['incorrect', 'datastore', 'writeaboch']",{'incorrect': 100}
"['container', 'configs', 'updatehosts', 'networkingdnsoptions', 'incorrect', 'checkaboch']",{'incorrect': 100}
"['expose', 'option', 'ndotsdocker', 'thockin', 'hockin']",{'expose': 100}
"['mergeaboch', 'request', 'mergereorganize', 'generation', 'function']",{'generation': 100}
"['reorganize', 'generation']",{'generation': 100}
"['incorrect', 'kernel', 'check', 'version', 'bridgekernel', 'wrong', 'check', 'version', 'logicaboch']",{'incorrect': 100}
"['sandbox', 'controllersandbox', 'hashmap', 'accessrandom', 'sandbox', 'vulnerable', 'return', 'result', 'couldunpredictable', 'totallyempty', 'checkerror', 'process', 'mrjana', 'radhakrishnan']",{'vulnerable': 100}
"['mergeexpose', 'erikh', 'request', 'mergeremote', 'expose', 'structs', 'driver']",{'expose': 100}
"['wrong', 'pointalready', 'wrong', 'pointconnectivity', 'networkcause', 'variable', 'golang', 'issue', 'capturereference', 'return', 'value', 'iterators', 'range', 'mrjana', 'radhakrishnan']",{'issue': 100}
"['mergeqthcn', 'request', 'mergeusage', 'incorrect']",{'incorrect': 100}
"['remote', 'expose', 'structs', 'driver']",{'expose': 100}
"['mergeaboch', 'request', 'mergeerror', 'bitseq', 'incorrect', 'constructor']",{'incorrect': 100}
"['bitseq', 'incorrect', 'constructorerror', 'ignore', 'foundinitial', 'datastoreregression', 'introducedaboch']",{'incorrect': 100}
"['centos', 'issue', 'networkingdifferent', 'bridge', 'kernel', 'driverdifferent', 'mrjana', 'radhakrishnan']",{'issue': 100}
"['mergeaboch', 'request', 'mergestatistic', 'expose', 'interface', 'endpoint']",{'expose': 100}
"['statistic', 'expose', 'interface', 'endpointaboch']",{'expose': 100}
"['mergemavenugo', 'request', 'mergestore', 'issue', 'endpoint']",{'issue': 100}
"['store', 'issue', 'madhu', 'venugopal']",{'issue': 100}
"['package', 'bitseqversion', 'initialrelease', 'finite', 'reservationlarge', 'resourceequal', 'bitmaskconsecutive', 'bitmaskoperates', 'length', 'basicallyencode', 'bitmask', 'decodeaboch']",{'length': 100}
"['interface', 'refactor', 'expose', 'sandbox', 'untenablebecomes', 'continuestore', 'mrjana', 'radhakrishnan']",{'expose': 100}
"['interface', 'generategenericaccept', 'random', 'length', 'prefixuseful', 'various', 'netutils', 'mrjana', 'radhakrishnan']",{'length': 100}
"['aedbb', 'aaace', 'mergemrjana', 'request', 'mergepermission', 'issue']",{'issue': 100}
"['permission', 'issuepermission', 'setup', 'container', 'gettinginside', 'everycreate', 'tempfile', 'content', 'resolvconf', 'mrjana', 'radhakrishnan']",{'permission': 100}
"['basic', 'command', 'client', 'network', 'issue', 'madhu', 'venugopal']",{'issue': 100}
"['mergemrjana', 'request', 'mergeupdate', 'entry', 'issue']",{'issue': 100}
"['libnetwork', 'initialimplement', 'handler', 'defines', 'requirement', 'issue', 'addressaboch']",{'issue': 100}
"['mergetcfail', 'mrjana', 'request', 'mergeintermittent', 'problem', 'issue']",{'issue': 100}
"['libnetwork', 'issue', 'intermittent', 'fixednamespace', 'libnetwork', 'insidebehavior', 'result', 'unpredictableroutine', 'thread', 'sandbox', 'stillroutine', 'result', 'interface', 'unreachabledifferent', 'mrjana', 'radhakrishnan']","{'issue': 100, 'thread': 100}"
"['mergemrjana', 'request', 'mergemulti', 'thread']",{'thread': 100}
"['multi', 'thread', 'coverage', 'access', 'parallel', 'caller', 'sandbox', 'revert', 'namespacecleanup', 'simpler', 'machine', 'netnsreboot', 'mrjana', 'radhakrishnan']",{'thread': 100}
"['thread', 'getnetwork', 'leaveaboch']",{'thread': 100}
"['mergemavenugo', 'master', 'request', 'mergecause', 'package', 'golang', 'assumption', 'incorrect']",{'incorrect': 100}
"['option', 'support', 'addedbasic', 'libnetwork', 'generation', 'support', 'mrjana', 'radhakrishnan']",{'generation': 100}
"['method', 'support', 'addedargument', 'sandboxsandbox', 'driver', 'removebehavior', 'bridge', 'driver', 'readme', 'accordingsandbox', 'docker', 'issue', 'mrjana', 'radhakrishnan']",{'issue': 100}
"['mergemrjana', 'request', 'mergesandbox', 'assortment', 'issue']",{'issue': 100}
"['libnetwork', 'option', 'handlerequirement', 'issue', 'addressifaces']",{'issue': 100}
"['libnetwork', 'address', 'option', 'bridgerequirement', 'issue', 'addressbridge', 'contains', 'addressinterface', 'sanboxaboch']",{'issue': 100}
"['ccfec', 'mergeaboch', 'request', 'mergedriver', 'issue', 'delete', 'endpoint']",{'issue': 100}
"['driver', 'issue', 'delete', 'endpoint', 'removestore', 'interface', 'endpointavailable', 'interface', 'params', 'bridgeendpoint', 'removeattempt', 'delete', 'removal', 'endpoint', 'deferstore', 'bridge', 'sandbox', 'endpointcause', 'overflow', 'stackstart', 'convention', 'error', 'bridge', 'stringaboch']","{'issue': 100, 'overflow': 100}"
"['package', 'libnetwork', 'allocatordescriptionlibnetwork', 'driver', 'featuredriver', 'daemon', 'parity', 'docker', 'network', 'bridgeaddress', 'issuecurrenlty', 'dockertransport', 'order', 'reserve', 'driver', 'portmapper', 'networkissueimplementation', 'current', 'docker', 'directlyportmapper', 'bridge', 'portallocator', 'accessforce', 'functionportmapper', 'bridge', 'trigger', 'initializationportmapper', 'cyclenetwork', 'bridge', 'controlledmantain', 'libnetwrok', 'behaviormodularization', 'violates', 'networkinglibnetwork', 'bringingportallocator', 'dockerinitialize', 'portmapper', 'instancechange', 'dockermigrate', 'libnetwork', 'givenspecificinstance', 'portallocator', 'capable', 'singletoncurrentchange', 'whould', 'portallocatorchange', 'portallocator']",{'violate': 93}
"['generation', 'removal', 'libcontaineraddress', 'libcontainerentropy', 'reducedsalisbury']",{'generation': 100}
"['mergeaboch', 'portmapper', 'request', 'mergeportmapper', 'libnetwork', 'portallocator', 'issue']",{'issue': 100}
"['edbce', 'mergeaboch', 'request', 'mergerework', 'allocator', 'issue']",{'issue': 100}
"['mergeaboch', 'request', 'mergestatic', 'analysis', 'minor', 'issue']",{'issue': 100}
