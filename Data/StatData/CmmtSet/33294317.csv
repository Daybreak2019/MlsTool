message,fuzzy
"['edffbamerge', 'joddiy', 'requirement', 'requestrequirement', 'issue']",{'issue': 100}
"['requirement', 'issue']",{'issue': 100}
"['readme', 'issue']",{'issue': 100}
"['license', 'issue']",{'issue': 100}
"['update', 'conda', 'pysingaanaconda', 'package', 'tokenconda', 'issue', 'permissionversion', 'compatible', 'python']",{'issue': 100}
"['ccbebmerge', 'dcslin', 'requestinput', 'issue', 'check', 'operator', 'additional', 'autograd']",{'issue': 100}
"['input', 'issue', 'check', 'operator', 'additional', 'autograd']",{'issue': 100}
"['classification', 'preparation', 'model', 'binary', 'baseline', 'sentiment', 'addedoperation', 'different', 'tensor', 'length', 'cudnn', 'contiguous']",{'length': 100}
"['length', 'support', 'cudnn']",{'length': 100}
"['exclude', 'allreduce', 'synch', 'singa']",{'synch': 100}
"['enable', 'github', 'issue']",{'issue': 100}
"['mergemerge', 'forge', 'chrishkchris', 'requestdockerfile']",{'forger': 91}
"['buffer', 'function', 'optimize', 'communicator']",{'buffer': 100}
"['resnet', 'training', 'buffer']",{'buffer': 100}
"['false', 'buffer', 'default']",{'buffer': 100}
"['mergemerge', 'issue', 'dcslin', 'requestissue']",{'issue': 100}
"['upstream', 'issue']",{'issue': 100}
"['investigation', 'performance', 'issue']",{'issue': 100}
"['ffdaefmerge', 'chrishkchris', 'singa', 'concurrency', 'stream', 'parallelize', 'singa']",{'concurren': 90}
"['concurrency', 'computation', 'stream', 'communication', 'parallelize', 'singa']",{'concurren': 90}
"['concurrency', 'computation', 'stream', 'communication', 'parallelize', 'singa']",{'concurren': 90}
"['concurrency', 'computation', 'stream', 'communication', 'parallelize', 'singa']",{'concurren': 90}
"['shape', 'generation', 'softmax', 'cudnn']",{'generation': 100}
"['security', 'repository', 'policy']",{'Security': 100}
"['channel', 'security', 'singa']",{'Security': 100}
"['model', 'maturity', 'singa', 'assessment']",{'assessment': 100}
"['bddffmerge', 'moazreyad', 'singa', 'requestapache', 'security', 'singa']",{'Security': 100}
"['apache', 'security', 'singa']",{'Security': 100}
"['overflow', 'gradient']",{'overflow': 100}
"['general', 'format', 'label', 'imagebatchiter', 'singageneral', 'image', 'information', 'delimiter', 'definedindex', 'single', 'length', 'label', 'variablesingle', 'array', 'length', 'numpy', 'label', 'returnlength', 'return', 'label', 'batchsizeinformation', 'parse', 'batchsizeinformation']",{'length': 100}
"['package', 'conda', 'singainstall', 'conda', 'update', 'dockerfile', 'jenkinsreset', 'jenkinversion', 'compile', 'singa', 'unittestpackage', 'conda', 'singareplace', 'conda', 'protobuf', 'update', 'libprotobufchannel', 'conda', 'forge', 'rpath', 'otool', 'enablereplace', 'install', 'conda', 'package', 'nusdbsystem', 'singa']",{'forger': 91}
"['version', 'license', 'issue', 'update', 'package', 'prototxt']",{'issue': 100}
"['version', 'pysinga', 'multiple', 'singaproblem', 'solutionwheel', 'download', 'update', 'generation', 'jenkinssinga']",{'generation': 100}
"['multiple', 'label', 'entropy', 'singacross', 'entorpy', 'tensor', 'softmax', 'function', 'enable', 'layertruth', 'binary', 'array', 'ground', 'instancecross', 'multiple', 'unittests', 'label', 'instance', 'input', 'truth', 'tensor', 'integer', 'batch', 'groundbinary', 'matrixinstance', 'single', 'tensorvalue', 'single', 'truth', 'array', 'tensor', 'integer', 'groundbinary', 'array']","{'entropy': 100, 'integer': 100}"
"['window', 'singa', 'supportremove', 'generation']",{'generation': 100}
"['window', 'singa', 'supportfunction', 'error', 'improper', 'warningstatic']",{'improper': 100}
"['license', 'issue']",{'issue': 100}
"['model', 'cifar', 'singa', 'model', 'cifar', 'batch', 'normalizedrefer', 'pythonmethod', 'resetlikeresetcause', 'conditioninitialize', 'thread', 'mutexes', 'multirevise', 'input', 'tensor', 'support', 'batch', 'nomalization', 'layer']",{'thread': 100}
"['entropy', 'cross', 'computation', 'singadevice', 'update', 'support', 'layerversion', 'crossentropy']",{'entropy': 100}
"['entropy', 'cross', 'computation', 'singaimplement', 'cross', 'entropycompilationcheck']",{'entropy': 100}
"['singa', 'license', 'rewrite', 'issue', 'avoidrewritepriorityqueue', 'priority', 'protobuf', 'rnnlm', 'field', 'extensionfoundation', 'copyright', 'software', 'apacheheader']",{'issue': 100}
"['singastoreinputlayer', 'buffer', 'support', 'storage', 'maintainsthread', 'reading', 'store', 'setup', 'launchthread', 'method', 'computefeature', 'finish', 'launchanothermemory', 'observe', 'recordsize', 'extra', 'batchsizewithout', 'small', 'microsecond', 'order', 'visible', 'millisecond']",{'buffer': 100}
"['thread', 'driver', 'worker', 'condition', 'singaminorcheck', 'cpplint']",{'thread': 100}
"['thread', 'driver', 'worker', 'condition', 'singaquery', 'device', 'driver', 'driver', 'worker', 'context', 'finishdevice', 'context', 'setupwould', 'sleep', 'workercheck', 'function']",{'thread': 100}
"['cudnn', 'training', 'layerlatest', 'rebaseinside', 'input', 'output', 'fatal', 'layercheck', 'layer', 'commmentedupdate']",{'fatal': 100}
"['docker', 'support', 'scheduler', 'compile', 'brach', 'singa', 'mesos', 'dockerfile']",{'breach': 91}
"['minor', 'consisten', 'update', 'documentation', 'singainstallation', 'buffer', 'python', 'protocol', 'instruction', 'commentdependent', 'update', 'readme', 'install']",{'buffer': 100}
"['mergeopenblas', 'thread', 'singa', 'configurationmerge', 'master']",{'thread': 100}
"['openblas', 'thread', 'singa', 'configurationthread', 'jobproto', 'field', 'configuration', 'default', 'specifiesfield', 'worker', 'multiple', 'openblas']",{'thread': 100}
"['support', 'concurrent', 'singaformat', 'cleaninclude', 'utilsutilsutils']",{'concurrent': 100}
"['support', 'concurrent', 'singacould', 'concurrent', 'singaquickwhose', 'single', 'singastart', 'singasingasingasingaremove', 'singasingamanagement', 'multimultiple', 'managefirsthostfilezookeeperpassword', 'commandstart', 'singasingasingasingasingasingasinga', 'entiresingaremove', 'singasingamanagement', 'zookeeperthirdparty', 'installplease', 'zookeeper', 'ensure', 'manageexportfalse']",{'concurrent': 100}
"['support', 'concurrent', 'singascript', 'cleaninput', 'script', 'absolute', 'relativecatch', 'erros', 'external', 'binary', 'variable', 'generate', 'singa']",{'concurrent': 100}
"['hogwild', 'singaparameter', 'synchronization', 'server', 'fixbugmessage', 'endpoint', 'interprocs', 'dealer', 'processspecific', 'method', 'hostname', 'gethostip', 'linux', 'connectingsynchronization', 'issue', 'trigger', 'reminder', 'everywould', 'reminder', 'pollermessage', 'reminder']",{'issue': 100}
"['endpoint', 'zookeeper', 'processbalance', 'parameter', 'large', 'issue', 'server', 'avoidparam', 'group', 'number', 'serverquite', 'object', 'different', 'memory']",{'issue': 100}
"['install', 'default', 'permission']",{'permission': 100}
"['eaafbimplement', 'singleton', 'thread', 'singamerge', 'singleton', 'fixbug']",{'thread': 100}
"['thread', 'construction', 'update', 'implementation', 'static', 'singletonasingleton', 'argument', 'constructor', 'layer', 'random', 'mshadowthreadthread', 'specfic', 'tsingleton', 'singltonwithout', 'construtor', 'argument', 'system', 'random', 'mshadowreplace', 'random', 'mshaodw', 'srandseparate', 'object', 'thread', 'generate', 'tsingleton', 'instance', 'random', 'mshadowthread']",{'thread': 100}
"['thread', 'construction', 'update', 'implementation', 'static', 'singletonasingleton', 'argument', 'constructor', 'layer', 'random', 'mshadowthreadthread', 'specfic', 'tsingleton', 'singltonwithout', 'construtor', 'argument', 'system', 'random', 'mshadowreplace', 'random', 'mshaodw', 'srandseparate', 'object', 'thread', 'generate', 'tsingleton', 'instance', 'random', 'mshadowthread']",{'thread': 100}
"['member', 'thread', 'losslayers', 'multi', 'conflict', 'concurrent', 'worker', 'neuralnet', 'performance', 'display', 'performence']","{'thread': 100, 'concurrent': 100}"
"['simple', 'construct', 'message', 'worker', 'trainer', 'simplify', 'update', 'server', 'thread', 'version', 'response', 'param', 'worker', 'update', 'collectdeadlock', 'visualization', 'image', 'neural', 'generate', 'python', 'reading', 'script', 'workspace', 'scirpt']",{'thread': 100}
"['member', 'launch', 'function', 'thread', 'sublayers', 'computefeature', 'prefetchlayer', 'datalayer', 'parserlayer']",{'thread': 100}
