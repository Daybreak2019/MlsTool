message,fuzzy
"['choresetup', 'issue', 'action']",{'issue': 100}
"['injection', 'symbol', 'property']",{'injection': 100}
"['optional', 'injection', 'propertyargument', 'gettargets', 'constructor', 'update', 'correclty', 'optionalchore', 'updatechore', 'config', 'typescript', 'targetstyle', 'missingstyle', 'missingchangelog', 'updaterefactor', 'tsconfig']",{'injection': 100}
"['activation', 'scope', 'issue', 'request', 'inversifyscope', 'singleton', 'update']",{'issue': 100}
"['activation', 'singleton', 'scope', 'inversify', 'issue', 'inversifyjs']",{'issue': 100}
"['default', 'issue', 'request', 'inversify', 'target', 'optionalexclude', 'optional', 'update']",{'issue': 100}
"['codeclimate', 'moduleincludes', 'squash', 'followingremove', 'whitespace', 'style', 'trailingdeactivation', 'asyncsimpler', 'updateasync', 'updatedecorator', 'refactor', 'logic', 'common', 'extractrefactor', 'logic', 'update', 'error', 'redundant', 'methodrefactor', 'constructor', 'project', 'update', 'instancetsconfig', 'update', 'style', 'iterable', 'activation', 'activationloop', 'iterator', 'update', 'receiverefactor', 'paramenters', 'updatecontainer', 'refactor', 'generation', 'onactivation', 'iterator', 'update', 'methodrefactor', 'strategy', 'iterative', 'updaterefactor', 'logic', 'parameter', 'methodcognitive', 'onactivation', 'update', 'complexity', 'reducerefactor', 'resolveinstance', 'cognitive', 'update', 'complexity', 'reducerefactor', 'logic', 'common', 'extract', 'methodrefactor', 'paramenters', 'method', 'splitrefactor', 'express', 'asynccallbackstyle']",{'generation': 100}
"['injection', 'setter', 'withoutinjection', 'setter']",{'injection': 100}
"['injection', 'setter', 'withoutinjection', 'setter']",{'injection': 100}
"['injection', 'constructor', 'concrete', 'document']",{'injection': 100}
"['injection', 'multi']",{'injection': 100}
"['injection', 'constructor', 'concrete', 'example', 'document']",{'injection': 100}
"['public', 'expose', 'module', 'async', 'bigfix']",{'expose': 100}
"['buffer', 'vinyl', 'update', 'version', 'package', 'chore']",{'buffer': 100}
"['circular', 'dependencyimprovementcircular', 'dependency', 'incorrect', 'errorrelease', 'nodejs', 'issue', 'resolvedupdateupdateupdateupdateupdateupdatestack', 'issue', 'tryingupdatestack', 'error', 'tryingdebug', 'helperversion', 'circular', 'dependency']","{'incorrect': 100, 'issue': 100}"
"['issuefixedlatest', 'window', 'appveyor', 'version', 'nodejs', 'issue', 'removedlatest', 'version', 'update', 'sinonsmall', 'improvement']",{'issue': 100}
"['documentation', 'obsolete', 'deletecrypto', 'static', 'issue']",{'issue': 100}
"['import', 'filename', 'const', 'issue', 'readme']",{'issue': 100}
"['issue', 'stillsignedissue']",{'issue': 100}
"['inversifyjs', 'issue', 'inversify']",{'issue': 100}
"['metadatareaderreader', 'expose', 'metadatareader', 'expose', 'metadata']",{'expose': 100}
"['update', 'version', 'tslintupdate', 'version', 'package', 'tslint', 'choreupgrade', 'tslint', 'issue', 'solveupgrade', 'tslint', 'issue', 'solveupgrade', 'tslint', 'issue']",{'issue': 100}
"['issue', 'coverage']",{'issue': 100}
"['issue', 'propertyexplicitimplementrollback', 'harmonizecontainer', 'module', 'unbind', 'supportupdatedissue', 'isbound', 'containter', 'module', 'supportinjection', 'optional']",{'issue': 100}
"['module', 'unbind', 'issue', 'propertyexplicitimplementrollback', 'harmonizecontainer', 'module', 'unbind', 'supportupdatedissue', 'isbound', 'containter', 'module', 'support']",{'issue': 100}
"['issue', 'propertyexplicitimplementrollback', 'harmonize']",{'issue': 100}
"['injection', 'singleton', 'value', 'solves', 'dynamicimplementedgenerateupdatedglobal', 'array', 'tryingtsify']",{'injection': 100}
"['injection', 'implementation', 'property']",{'injection': 100}
"['release', 'headertemporal', 'issue', 'tracker', 'header']",{'issue': 100}
"['snapshot', 'kernel', 'restoreglobal', 'injection', 'removedreflect']",{'injection': 100}
"['global', 'injection', 'removedreflect', 'metadata']",{'injection': 100}
"['injection', 'support', 'injection', 'support', 'property']",{'injection': 100}
"['inversifyjs', 'inversify', 'issue', 'workinginjectable', 'raise', 'class', 'error', 'inversify']",{'issue': 100}
"['reflect', 'workaround', 'issue', 'metadata']",{'issue': 100}
"['injection', 'planning', 'multi']",{'injection': 100}
"['mergeremojansen', 'master', 'requestimplement', 'factory', 'provider', 'injection']",{'injection': 100}
"['solves', 'module', 'issue']",{'issue': 100}
"['reference', 'issue']",{'issue': 100}
"['mergeremojansen', 'master', 'issue', 'definition']",{'issue': 100}
"['issue', 'definition']",{'issue': 100}
"['issue', 'definition']",{'issue': 100}
"['issue', 'dependency']",{'issue': 100}
