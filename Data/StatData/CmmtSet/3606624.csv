message,fuzzy
"['observable', 'allowmethod', 'describe', 'blockvalue', 'observable', 'allowswift', 'syntax', 'signal', 'usingforce', 'value', 'resultingnative', 'objective', 'breakforce', 'integerresult', 'crash', 'observe', 'triedspecial', 'observation', 'keypath', 'overrideconversion', 'handlespecifies']",{'crash': 100}
"['submission', 'coverage', 'xcodecarthage', 'issue']",{'issue': 100}
"['submission', 'coverage', 'xcodecarthage', 'issue']",{'issue': 100}
"['mergeswift', 'request', 'runtime', 'infinite', 'recursion', 'reactivecocoa', 'mergeswift', 'infinite', 'issue', 'recursion', 'xcode']",{'issue': 100}
"['infinite', 'issue', 'recursion']",{'issue': 100}
"['mergecontrol', 'request', 'deadlock', 'event', 'reactivecocoa', 'mergesupport', 'reentrance']",{'deadlock': 100}
"['mergecontrol', 'deadlock', 'event', 'master']",{'deadlock': 100}
"['mergecontrol', 'deadlock', 'event', 'master']",{'deadlock': 100}
"['overload', 'association', 'errorous', 'crash']",{'crash': 100}
"['mergerequest', 'uikeyboard', 'reactivecocoa', 'issue']",{'issue': 100}
"['value', 'logic', 'observe', 'issue', 'deallocation']",{'issue': 100}
"['issue', 'safety', 'method', 'thread']","{'issue': 100, 'thread': 100}"
"['style', 'issue']",{'issue': 100}
"['setter', 'dynamicproperty', 'signal', 'expose']",{'expose': 100}
"['value', 'control', 'expose']",{'expose': 100}
"['nimble', 'workaround', 'issue']",{'issue': 100}
"['swift', 'observation', 'deallocation', 'lifetime', 'object', 'enablecomplete', 'signal', 'expose', 'lifetime', 'objectanother', 'lifetime', 'object', 'providesaccess', 'objective', 'property', 'lifetime']",{'expose': 100}
"['swift', 'observation', 'deallocation', 'lifetime', 'object', 'enablecomplete', 'signal', 'expose', 'lifetime', 'objectanother', 'lifetime', 'object', 'providesaccess', 'objective', 'property', 'lifetime']",{'expose': 100}
"['separate', 'source', 'buffer']",{'buffer': 100}
"['mergeusage', 'request', 'buffer', 'reactivecocoa', 'mergeremove', 'usage']",{'buffer': 100}
"['mergerequest', 'buffer', 'reactivecocoa', 'deprecate', 'mergedeprecate']",{'buffer': 100}
"['signalproducertravis', 'setting', 'update', 'swiftconfigs', 'playground', 'update', 'scriptplayground', 'migrate', 'swiftsanitizer', 'thread', 'reactivecocoa']",{'thread': 100}
"['action', 'expose', 'inout', 'modify']",{'expose': 100}
"['issue', 'producer']",{'issue': 100}
"['ccaefcb', 'mergetditchek', 'request', 'master', 'throttle', 'issue']",{'issue': 100}
"['readme', 'issue']",{'issue': 100}
"['mergerequest', 'buffer', 'reactivecocoa', 'atomic', 'reimplement']",{'buffer': 100}
"['throttle', 'issue']",{'issue': 100}
"['eecbb', 'mergerequest', 'buffer', 'reactivecocoa']",{'buffer': 100}
"['actiontype', 'extensionreactivecocoa', 'issue']",{'issue': 100}
"['covariant', 'specifiy', 'input', 'raccommandsimple', 'lightweight', 'input', 'issue', 'generic', 'catch', 'input', 'helpful', 'ensure', 'command', 'error', 'programmerunable', 'action', 'suggestion', 'compiler', 'raccommand', 'enhancement']",{'issue': 100}
"['flatten', 'signalproducer', 'signal', 'clarifyflatten', 'signal', 'inner', 'signalproducers', 'signalproducers', 'signal', 'usinglettersobserver', 'noerror', 'signalproducernumbersobserver', 'noerror', 'signalproducerobserver', 'signal', 'noerror', 'signal', 'usinglettersobserver', 'signal', 'noerrornumbersobserver', 'signal', 'noerrorsignal', 'printsignal', 'buffer', 'signalproducersigcobserver', 'signal', 'noerrorsigdobserver', 'signal', 'noerrorsignal', 'noerror', 'printsignal', 'buffer', 'print', 'nothingprint']",{'buffer': 100}
"['changelog', 'issue']",{'issue': 100}
"['context', 'expectcontains', 'operator', 'cache', 'replay', 'multicast', 'cautious', 'pattern', 'multiple', 'reactivecocoa', 'documentation', 'misuseinteger', 'behaviorsubject', 'subject', 'finalobservable', 'integer', 'behaviorsubjectlastnumber', 'finalseveral', 'comment', 'compile', 'thread', 'seemspattern', 'propertytype', 'semantics', 'propertytype', 'others', 'usingseveral', 'mutableproperty', 'observe', 'alrea', 'event', 'party', 'stackoverflow', 'signaldetailresult', 'semantics', 'testedoperator', 'semantics', 'signalproducer', 'signalproducer', 'underlyingvalue', 'producer', 'version', 'weird', 'reference', 'signalproducer', 'observer', 'producer', 'error', 'subsequentproducer', 'value', 'observersubscription', 'signalproducer', 'alive', 'disposes', 'observer', 'underlyingsubscription', 'signalproducer', 'producer', 'underlyingresult', 'operator', 'signalproducer', 'observer', 'different', 'versionoperator', 'signal', 'multicast', 'signalproducer', 'important', 'sense', 'implementedsingle', 'multicast', 'semantics', 'element', 'notice', 'allowsimplementation', 'thanks', 'actuallypossible', 'dosctringframework', 'operator', 'asyncimageview', 'renderers', 'semantics', 'multiple', 'nachosoto', 'master', 'optimization', 'neededoperator', 'subscription', 'combinelatest', 'signalproducer', 'producer', 'thing', 'propertytype', 'minimizes']","{'integer': 100, 'thread': 100}"
"['mergevadim', 'request', 'issue', 'signal', 'observer', 'generator']",{'issue': 100}
"['behavior', 'expose', 'concat', 'sends']",{'expose': 100}
"['issue', 'travis']",{'issue': 100}
"['performselector', 'object', 'crash']",{'crash': 100}
"['element', 'thread', 'generatorcommit', 'reverts']",{'thread': 100}
"['thread', 'element', 'generator']",{'thread': 100}
"['queuescheduler', 'modernize', 'behavior', 'simplifyresearch', 'warning', 'potential', 'support', 'comfortable', 'ability', 'queue', 'behaves', 'queuescheduler', 'issue', 'class', 'strangecaller', 'queue', 'assert', 'approach']",{'issue': 100}
"['propertyof', 'crash', 'signal', 'signalproducer']",{'crash': 100}
"['issue', 'restructure', 'rephrase']",{'issue': 100}
"['buffer', 'todaymaybe', 'people']",{'buffer': 100}
"['property', 'reactivecocoa', 'property', 'buffer']",{'buffer': 100}
"['buffer', 'recursion']",{'buffer': 100}
"['buffer', 'recursive', 'behavior']",{'buffer': 100}
"['mutability', 'warning', 'workaround', 'compiler', 'incorrect']",{'incorrect': 100}
"['operator', 'signal', 'protocol', 'extensionoperator', 'signal', 'protocol', 'couple', 'extensionfigure', 'implementfunction', 'crash', 'swiftforward', 'protocol']",{'crash': 100}
"['mergecapacity', 'request', 'buffer', 'reactivecocoa', 'mergecapacity', 'behavior', 'update', 'reflect']",{'buffer': 100}
"['compiler', 'workaround', 'crash', 'optimization']",{'crash': 100}
"['mergenorio', 'nomura', 'signal', 'request', 'buffer']",{'buffer': 100}
"['carthage', 'issue', 'loggingissuecomment', 'carthagecreate', 'signalproducersharescenario', 'issueobserver', 'retrieveacquires', 'signalproducerobserver', 'modify', 'signalproducerrelinquishes', 'signalproducerobserver', 'signalcause', 'carthage', 'signal']",{'issue': 100}
"['producer', 'comment', 'signal', 'incorrect']",{'incorrect': 100}
"['enable', 'optimization', 'stack']",{'stack': 100}
"['event', 'ensure', 'multiple', 'thread']",{'thread': 100}
"['observer', 'forwardingcould', 'thread', 'processing']",{'thread': 100}
"['mergelatest', 'request', 'reactivecocoa', 'deadlockswitchtolatest', 'deadlock', 'refactor']",{'deadlock': 100}
"['switchtolatest', 'naive', 'deadlock']",{'deadlock': 100}
"['ecdcf', 'mergerequest', 'rupert', 'issue', 'object', 'nsobject', 'mergeobject', 'nsobject', 'racdescription', 'issue']",{'issue': 100}
"['swift', 'request', 'liyihe', 'mergecontrol', 'refresh', 'update', 'thread']",{'thread': 100}
"['mergegavrix', 'request', 'buffer', 'bugfix', 'mergebehaviour']",{'buffer': 100}
"['refresh', 'update', 'thread']",{'thread': 100}
"['buffer', 'behavior']",{'buffer': 100}
"['uncurryruntime', 'crash']",{'crash': 100}
"['release', 'specify', 'compiler', 'issue']",{'issue': 100}
"['uncurry', 'combinepreviousruntime', 'crash']",{'crash': 100}
"['quickreactivecocoa', 'issue']",{'issue': 100}
"['fbcfc', 'mergerequest', 'crash', 'reactivecocoa', 'mergecrash']",{'crash': 100}
"['crash', 'uncurry']",{'crash': 100}
"['function', 'runtime', 'crash']",{'crash': 100}
"['runtime', 'aroundfunction', 'crash', 'syntax']",{'crash': 100}
"['terminates', 'interruption', 'startwithsignal', 'incorrect']",{'incorrect': 100}
"['fdbfd', 'mergepatch', 'request', 'kkazuo', 'memory', 'issue']",{'issue': 100}
"['property', 'compiler', 'crash']",{'crash': 100}
"['concurrent', 'queue', 'barrier']",{'concurrent': 100}
"['mergescheduler', 'request', 'immediate', 'thread', 'reactivecocoa', 'mergeuischeduler']",{'thread': 100}
"['buffer', 'signaldeallocate', 'disposes']",{'buffer': 100}
"['conversation', 'valuableissuecomment', 'reactivecocoa', 'issue']",{'issue': 100}
"['initial', 'rackvoproxy', 'discussion', 'issue', 'implementation', 'reactivecocoa']",{'issue': 100}
"['afaaa', 'mergeswift', 'request', 'issue', 'shulepov', 'mergedevelopment', 'swift', 'issue']",{'issue': 100}
"['continuation', 'thread']",{'thread': 100}
"['initializer', 'expose']",{'expose': 100}
"['replay', 'concatenate', 'buffer']",{'buffer': 100}
"['mergetalko', 'request', 'serial', 'mergedisposable', 'thread', 'safety']",{'thread': 100}
"['crash', 'racbacktrace']",{'crash': 100}
"['mergerequest', 'issue']",{'issue': 100}
"['method', 'reimplement', 'thread', 'osatomic', 'osspinlock']",{'thread': 100}
"['implementation', 'unsafe', 'thread']",{'thread': 100}
"['generation', 'racerror', 'error']",{'generation': 100}
"['slack', 'point', 'directlypeople', 'issue', 'anchor', 'email']",{'issue': 100}
"['fccdad', 'mergerequest', 'mattjgalloway', 'issue']",{'issue': 100}
"['recursive', 'scheduling', 'overflow']",{'overflow': 100}
"['unsafeness', 'setkeypath', 'document', 'thread', 'onobject']",{'thread': 100}
"['mergeoverflow', 'request', 'backtrace', 'reactivecocoa', 'stack', 'chain', 'overflow', 'backtrace', 'stack']","{'stack': 100, 'overflow': 100}"
"['question', 'readme', 'people', 'sentence', 'issue']",{'issue': 100}
"['ccbaf', 'mergedynamic', 'request', 'reactivecocoa', 'double', 'mergeswizzle', 'instance', 'issue', 'place', 'class']",{'issue': 100}
"['implementation', 'swizzledoriginal', 'message', 'additional', 'issue', 'class', 'alreadysuperclass', 'infinite', 'actualclass', 'super', 'class', 'usingsuperclass', 'super', 'class']",{'issue': 100}
"['directlyintroduce', 'crash', 'improvecause', 'expose', 'issue', 'underlyingincidence']","{'crash': 100, 'expose': 100, 'issue': 100}"
"['control', 'subscription', 'property', 'lifetime', 'objectdealloc', 'block', 'readingpossible', 'condition', 'thread', 'avoidstart']",{'thread': 100}
"['mergerequest', 'depth', 'reactivecocoa', 'stack', 'mergecounter', 'depth', 'rackvochannel', 'stack']",{'stack': 100}
"['staterather', 'deadlock', 'timeout']",{'deadlock': 100}
"['ownership', 'condition', 'disposable', 'swappingvalue', 'subsequent', 'thread', 'ownership', 'release', 'disposablewould']",{'thread': 100}
"['revert', 'request', 'switchtolatest', 'short', 'reactivecocoa', 'mergecommit', 'reverts', 'kastiglione', 'deadlock']",{'deadlock': 100}
"['thread', 'errorvalue', 'deliveron', 'thoughspecific', 'static', 'logic']",{'thread': 100}
"['ensure', 'terminates', 'thread']",{'thread': 100}
"['mergeflatten', 'request', 'reactivecocoa', 'crash', 'mergecrash', 'flatten', 'refactor']",{'crash': 100}
"['disposal', 'flatten', 'compound', 'crash', 'refactor']",{'crash': 100}
"['sample', 'incorrect']",{'incorrect': 100}
"['requirement', 'document', 'thread']",{'thread': 100}
"['local', 'buffer', 'switch']",{'buffer': 100}
"['style', 'reducebyand', 'issue']",{'issue': 100}
"['mergerequest', 'local', 'counter', 'thread', 'reactivecocoa', 'stack', 'mergestack', 'thread', 'counter']","{'thread': 100, 'stack': 100}"
"['mergedevelopment', 'local', 'counter', 'thread', 'stack', 'mergeconflictreactivecocoa']","{'thread': 100, 'stack': 100}"
"['mergeremote', 'local', 'counter', 'origin', 'thread']",{'thread': 100}
"['counter', 'origin', 'thread']",{'thread': 100}
"['state', 'storage', 'variable', 'local', 'thread']",{'thread': 100}
"['value', 'integer']",{'integer': 100}
"['thread', 'event']",{'thread': 100}
"['reproduces', 'issue']",{'issue': 100}
"['target', 'scheme', 'expose']",{'expose': 100}
"['mergewindow', 'request', 'buffer', 'reactivecocoa', 'deprecate', 'mergedeprecate', 'buffer', 'close', 'windowwithstart']",{'buffer': 100}
"['mergedevelopment', 'window', 'buffer', 'deprecate']",{'buffer': 100}
"['deprecate', 'buffer', 'close', 'windowwithstart']",{'buffer': 100}
"['thread', 'event']",{'thread': 100}
"['selector', 'delete', 'dynamic', 'generation']",{'generation': 100}
"['style', 'issue']",{'issue': 100}
"['thread', 'object']",{'thread': 100}
"['function', 'generation', 'extract', 'signature']",{'generation': 100}
"['scheduler', 'concurrent', 'queue', 'current', 'support']",{'concurrent': 100}
"['mergescheduler', 'expose', 'request', 'current', 'reactivecocoa']",{'expose': 100}
"['facaaa', 'mergedevelopment', 'scheduler', 'expose']",{'expose': 100}
"['mergedevelopment', 'scheduler', 'expose', 'current', 'mergeconflict']",{'expose': 100}
"['current', 'scheduler', 'expose']",{'expose': 100}
"['disposable', 'stack', 'array']",{'stack': 100}
"['dfbfb', 'mergerequest', 'thread', 'reactivecocoa', 'command', 'mergeraccommand', 'thread']",{'thread': 100}
"['raccommand', 'thread']",{'thread': 100}
"['raccommand', 'logic', 'thread']",{'thread': 100}
"['concurrencysince', 'cocoa', 'necessitatedchange', 'trigger', 'thread']",{'thread': 100}
"['nserror', 'issue', 'comparison']",{'issue': 100}
"['mergeenumeration', 'request', 'array', 'reactivecocoa', 'enumeration', 'stack']",{'stack': 100}
"['arithmetic', 'underflow', 'index', 'integer']","{'underflow': 100, 'integer': 100}"
"['length', 'enumeration', 'honor']",{'length': 100}
"['enumeration', 'stack', 'racsequence', 'overflow']","{'stack': 100, 'overflow': 100}"
"['dccde', 'mergerequest', 'safety', 'thread', 'reactivecocoa']",{'thread': 100}
"['byref', 'reactivecocoa', 'mergevalue', 'thread', 'boundary', 'reference']",{'thread': 100}
"['thread', 'boundary', 'reference']",{'thread': 100}
"['mergerequest', 'safety', 'concat', 'thread', 'reactivecocoa', 'mergeconcat', 'racsignal', 'thread', 'safety']",{'thread': 100}
"['concat', 'racsignal', 'thread', 'safety']",{'thread': 100}
"['mergeminor', 'request', 'reactivecocoa', 'issue', 'documentation', 'error']",{'issue': 100}
"['scheduler', 'thread']",{'thread': 100}
"['overflow', 'stack']","{'overflow': 100, 'stack': 100}"
"['overflow', 'thanks', 'deallocation', 'racsequence', 'coneko']",{'overflow': 100}
"['comma', 'incorrect']",{'incorrect': 100}
"['edfac', 'mergegithub', 'request', 'delay', 'throttle', 'mergedelay', 'thread', 'throttle', 'background']",{'thread': 100}
"['thread', 'throttle', 'refactor', 'background']",{'thread': 100}
"['method', 'thread']",{'thread': 100}
"['concurrent', 'interval', 'priority']",{'concurrent': 100}
"['timer', 'thread']",{'thread': 100}
"['bufferwithtime', 'buffer']",{'buffer': 100}
"['toproperty', 'safety', 'thread', 'onobject']",{'thread': 100}
"['delay', 'removeenough', 'scheduling', 'delay', 'block', 'ensure', 'current', 'occurs', 'thread']",{'thread': 100}
"['sparkle', 'thread', 'subscription']",{'thread': 100}
"['default', 'scheduler', 'refactor', 'backgroundscheduler', 'subscription', 'model', 'default', 'thread', 'racables', 'background', 'queue', 'operation', 'cancellation', 'block']",{'thread': 100}
"['control', 'order', 'disposable', 'enqueue', 'block', 'issue', 'necessary', 'return']",{'issue': 100}
"['synchronize', 'concurrent']",{'concurrent': 100}
"['memory', 'concurrency']",{'concurren': 90}
"['coneko', 'thread', 'dictionary']",{'thread': 100}
"['concurrent', 'return']",{'concurrent': 100}
"['baaddef', 'mergegithub', 'subscriber', 'request', 'thread', 'safety']",{'thread': 100}
"['thread', 'racsubscriber']",{'thread': 100}
"['overflow', 'libextobjc']",{'overflow': 100}
"['mergerequest', 'crash', 'github', 'mergecrash']",{'crash': 100}
"['racsequence', 'constructor', 'expose']",{'expose': 100}
"['disposable', 'thread', 'safety']",{'thread': 100}
"['block', 'expose']",{'expose': 100}
"['mergeasync', 'github', 'request', 'stack', 'mergebacktraces', 'asynchronous']",{'stack': 100}
"['master', 'stack']",{'stack': 100}
"['wrapper', 'expose']",{'expose': 100}
"['mergerequest', 'github', 'thread', 'mergensobject']",{'thread': 100}
"['vocabulary', 'target', 'refactoringdistinction', 'unnecessary', 'thread', 'target', 'improves']",{'thread': 100}
"['specify', 'target', 'raciosdemogithub', 'issue']",{'issue': 100}
"['disposable', 'expose']",{'expose': 100}
"['racasyncsubject', 'expose']",{'expose': 100}
"['header', 'expose']",{'expose': 100}
"['window', 'buffer']",{'buffer': 100}
"['method', 'return', 'expose', 'racvalue']",{'expose': 100}
"['expose', 'executeblock', 'header', 'private', 'property', 'canexecuteblock']",{'expose': 100}
"['canexecute', 'concurrent', 'number', 'operation']",{'concurrent': 100}
"['private', 'expose']",{'expose': 100}
"['lastobject', 'expose']",{'expose': 100}
