message,fuzzy
"['compiler', 'travisdeprecationcompilation', 'issue', 'addressmember', 'function', 'irremoteesp', 'travis', 'enableirin', 'irrecv', 'crankyoldgitplace', 'declaration', 'function', 'irremoteesp', 'travis', 'warning', 'temporary', 'unreachable', 'address', 'horrible']",{'issue': 100}
"['samsung', 'update', 'supportedirremoteesp', 'issuecomment', 'issue', 'crankyoldgit']",{'issue': 100}
"['arduino', 'duplicate', 'library', 'installclean', 'doxygenhappens', 'ensure', 'neverhappen', 'ensure', 'release', 'documentation', 'processchecklist', 'release', 'irremoteesp', 'maintainer', 'version', 'library', 'crankyoldgitarduino', 'issuecomment', 'issue']",{'issue': 100}
"['submodule', 'googletest', 'removedclean', 'arduino', 'update', 'attempt', 'compliance', 'strict', 'manager', 'issue', 'libraryresultinstallation', 'place', 'submodule', 'github', 'folder', 'warning', 'empty', 'manager', 'download']",{'issue': 100}
"['decodetostate', 'samsung', 'iracutils', 'different', 'lengthhandle', 'normal', 'setraw', 'length', 'kudos', 'yaroshd']",{'length': 100}
"['toshibaactoggle', 'support', 'swingadjustment', 'setting', 'anotherpotential', 'issue', 'setraw', 'memory', 'setraw', 'safer', 'memory', 'lengthsetraw', 'irtoshibaac', 'class', 'inbound', 'ignore', 'swingimplementation', 'upstream', 'tasmotafamous']",{'issue': 100}
"['ecoclim', 'support', 'detailedswitch', 'sensor', 'supportcover', 'extendedcommon', 'update', 'support', 'stdacconsistent', 'renamedaikin', 'minor', 'issue']",{'issue': 100}
"['shorten', 'globalirremoteesp', 'issuecomment', 'issue', 'crankyoldgit']",{'issue': 100}
"['kelvinator', 'supportedirremoteesp', 'issuecomment', 'issue', 'crankyoldgit']",{'issue': 100}
"['sensor', 'coolix', 'irremoteesp', 'issuecomment', 'issue']",{'issue': 100}
"['releasedefaultbits', 'result', 'incorrect', 'returneddecodelg', 'refactor', 'timingfeaturetimer', 'midea', 'supportsharpac', 'model', 'supportpanasonic', 'support', 'basicscreen', 'elite', 'supportirrecvdumpv', 'tolerancesupport', 'mirage', 'basicsupportportuguese', 'string', 'backfillupdate', 'addition', 'tolerance', 'recenttranslate', 'germanrefactorrefactorrefactorrefactorrefactorrefactorupdate', 'kaysun', 'class', 'doxygen']",{'incorrect': 100}
"['update', 'kaysun', 'supporteddecodes', 'sendmidea', 'verifyirremoteesp', 'issuecomment', 'issue', 'crankyoldgitkaysun', 'update']",{'issue': 100}
"['defaultbits', 'result', 'incorrect', 'returnedcorrecthappenkudos']",{'incorrect': 100}
"['screen', 'elite', 'supportscreen', 'elite', 'supportprotocol', 'constant', 'singlesynthetic', 'coverage', 'confirmedirremoteesp', 'issuecomment', 'issue', 'crankyoldgit']",{'issue': 100}
"['releasedocumentation', 'doxygen', 'state', 'whirlpoolchange', 'buffer', 'irmqttserver', 'packetfujitsu', 'supportneoclima', 'economy', 'support', 'fahrenheittechnibel', 'technibel', 'supporttranscold', 'basicrefactorchange', 'default', 'convertmode', 'whirlpooldebug', 'signal', 'samsungacquestion', 'mkkeywords', 'minorzhongxianrewrite', 'rewrite', 'fieldmodel', 'fujitsu', 'update', 'supportedclarify', 'scope', 'littlefs']",{'buffer': 100}
"['iamdshetty', 'mergeclean', 'issuecomment', 'issue']",{'issue': 100}
"['state', 'whirlpooloptional', 'whirlpoolremove', 'irremoteesp', 'issuecomment', 'issue']",{'issue': 100}
"['buffer', 'irmqttserver', 'packetrelease', 'pubsubclient', 'buffer', 'setbuffersize', 'library', 'knollearyarduino', 'compile', 'overridden', 'result', 'setuprequirementversion']",{'buffer': 100}
"['model', 'fujitsu', 'update', 'supportedirremoteesp', 'ashgllca', 'issuecomment', 'issue', 'aohgllc', 'crankyoldgitmodel', 'update']",{'issue': 100}
"['releasereleasechange', 'breakinglittlefs', 'spiffchange', 'turningchange', 'speed', 'haier', 'volta', 'supportsupportprotocol', 'volta', 'support', 'basiclevel', 'sanityairwell', 'rewrite', 'rewrite', 'haier', 'fieldrewrite', 'rewrite', 'fieldusage', 'incorrect', 'assertrewrite']",{'incorrect': 100}
"['usage', 'incorrect', 'assertirremoteesp', 'issuecomment', 'issue', 'crankyoldgit']","{'incorrect': 100, 'issue': 100}"
"['releaseirlgac', 'mistake', 'convertfanfeaturesanyo', 'protocol', 'detailedsupport', 'modification', 'danby', 'midearework', 'carrier', 'toshibaac', 'support', 'modelairwell', 'timingadjust', 'samsung', 'update', 'timingconsolidate', 'commonduplicate', 'irtoshibaac', 'calcchecksum', 'removecomment', 'update', 'doxygen', 'incorrect']",{'incorrect': 100}
"['timingadjust', 'average', 'updatedtoggle', 'debug', 'power', 'pioneerirremoteesp', 'issuecomment', 'issue', 'crankyoldgit']",{'issue': 100}
"['generic', 'sumnibbles', 'irlgac', 'protocol', 'class', 'error', 'compileirremoteesp', 'issuecomment', 'issue', 'crankyoldgit']",{'issue': 100}
"['warning', 'compiler', 'treatcompiler', 'place', 'various', 'werror', 'warning', 'catchmakefileexample', 'variousprotocol', 'irrecvdumpv', 'range', 'decodingprotocol', 'range', 'smartirrepeatercommon', 'commonaccontrolcompile', 'protocolcoverage', 'irrecvdumpv', 'variableknown', 'compiler', 'variable', 'issue', 'diagnostic', 'false', 'smartirrepeater']",{'issue': 100}
"['return', 'option', 'output', 'errorfound', 'result', 'issuedefault', 'return', 'generation', 'alwaysoutput', 'support', 'section']",{'generation': 100}
"['device', 'update', 'supportedirremoteesp', 'issuecomment', 'issue', 'crankyoldgit']",{'issue': 100}
"['device', 'update', 'supportedirremoteesp', 'issuecomment', 'issue', 'crankyoldgit']",{'issue': 100}
"['support', 'sectionoriginal', 'issue', 'collectedcorrect']",{'issue': 100}
"['support', 'sectiondenon', 'support', 'support', 'sectionoriginal', 'issue', 'collectedcorrect']",{'issue': 100}
"['native', 'support', 'fahrenheit', 'degree', 'setting', 'supportcoverageclean', 'style', 'existingupdate', 'supportedtasmota', 'issue', 'arendst']",{'issue': 100}
"['precision', 'sendpronto', 'improvepronto', 'simplistic', 'rawdata', 'entry', 'converthandle', 'repeatprecision', 'sendpronto', 'improvemultibracket', 'accurate', 'length', 'largeprecision', 'noticeable', 'integer']","{'length': 100, 'integer': 100}"
"['featuresetcleanaddedcommon', 'updatedexplain', 'fudge', 'shonpincrease', 'string', 'reservegetlighttoggle', 'horribleclean', 'lighttoggleirremoteesp', 'issuecomment', 'issue', 'crankyoldgit']",{'issue': 100}
"['option', 'decodeoption', 'protocol', 'offset', 'startingadditional', 'optional', 'irrecv', 'decodestart', 'protocol', 'entrydanger', 'protocol', 'startingconfirm', 'optiondetection', 'repeat', 'improvedetection', 'repeat', 'tweak', 'trailingworld', 'basedirremoteesp', 'issuecomment', 'issue', 'crankyoldgitenrico', 'gueli']",{'issue': 100}
"['device', 'samsungac', 'update', 'supportedirremoteesp', 'issuecomment', 'issue', 'crankyoldgit']",{'issue': 100}
"['setraw', 'coolix', 'update', 'powercoolix', 'update', 'power', 'internal', 'state', 'setrawpower', 'objectcoolix', 'messagereplaces', 'superficialtasmota', 'issue', 'arendst']",{'issue': 100}
"['electra', 'device', 'modelirremoteesp', 'issuecomment', 'issue', 'crankyoldgit']",{'issue': 100}
"['releasepower', 'incorrect', 'value', 'hitachiaccoolix', 'false', 'setpowerfeaturecommon', 'string', 'insteadability', 'vertical', 'hitachiac', 'swingexample', 'update', 'irmqttserver', 'discoverycommon']",{'incorrect': 100}
"['power', 'incorrect', 'value', 'hitachiacpower', 'constantoperate', 'power', 'update', 'method']",{'incorrect': 100}
"['support', 'hitachi', 'basicsupport', 'hitachi', 'basicdecodehitachiac', 'reportedirremoteesp', 'issuecomment', 'issue', 'crankyoldgitchangebetter', 'irremoteesp', 'issuecomment', 'issue', 'jamsinclair', 'crankyoldgit']",{'issue': 100}
"['routine', 'common', 'refactorsetbits', 'setbit', 'method', 'standardise', 'simplifygetbits', 'getbit', 'macro', 'standardisingmacro', 'program', 'overhead', 'handlingchange', 'setting', 'value', 'librarychange', 'minor', 'matchprotocol', 'refactorroutine', 'coveredaffect', 'modification', 'prettynumber', 'issue', 'potentialprogram', 'remainsworth', 'overallchange']",{'issue': 100}
"['generation', 'improveeverycover', 'library', 'includeexample', 'directory', 'check']",{'generation': 100}
"['generation', 'decode']",{'generation': 100}
"['update', 'senddaikin', 'irremoteesp', 'issuecomment', 'issue', 'crankyoldgit']",{'issue': 100}
"['value', 'integer', 'string', 'checkhandle', 'protocol', 'testedirremoteesp', 'issuecomment', 'issue', 'crankyoldgit']","{'integer': 100, 'issue': 100}"
"['amcor', 'support', 'basicamcor', 'support', 'basicappears', 'protocol', 'simple', 'manditorysendamcor', 'decodeamcorspace', 'protocol', 'length', 'fixedupdate', 'irmqttserverreverse', 'order', 'observation', 'temperature', 'confirmedlsbfirst']",{'length': 100}
"['stable', 'daikinirremoteesp', 'markszabo', 'issuecomment', 'issue']",{'issue': 100}
"['unexpected', 'sanity', 'conditionsanity', 'condition', 'check', 'assertperformancesituation', 'decodesony', 'underflowinteger', 'security', 'matchversion']",{'Security': 100}
"['removegoogletest', 'pthread', 'isystem', 'wextraincludedtestbody', 'member', 'function', 'virtualcomparison', 'limit', 'warning', 'wtype', 'false', 'rangeexpansion', 'macro']",{'thread': 92}
"['mutual', 'quiet', 'powerful', 'samsung', 'enforceirremoteesp', 'markszabo', 'issuecomment', 'issue']",{'issue': 100}
"['generic', 'template', 'issuegeneric', 'template', 'issuegeneric', 'update', 'issue']",{'issue': 100}
"['fujitsu', 'supportfujitsu', 'remote', 'support', 'asyglmcafujitsu', 'extendturbo', 'econo', 'powerful', 'handlemodel', 'reportexcept', 'special', 'appearupdate', 'econo', 'common', 'turbo', 'support', 'stuff', 'fujitsufujitsu', 'update', 'supportedfujitsu', 'model', 'remote', 'supporthorizontal', 'remote', 'protocol', 'seemsfujitsu', 'getquietoutsidetoggleswingvertimprove', 'specific', 'model', 'swingensure', 'example', 'setcmd', 'tweak', 'calledspecial', 'command', 'issue', 'reportedirremoteesp', 'markszabo', 'issuecomment', 'issue']",{'issue': 100}
"['temperature', 'continuecreate', 'conversion', 'standardupdate', 'atrociousirremoteesp', 'markszabo', 'issuecomment', 'issue']",{'issue': 100}
"['irdaikinesp', 'comfort', 'overhaul', 'daikinenlarge', 'sectionshorter', 'compatiblity', 'irmqttserver', 'messageusingupdategetcomfortirdaikinesp', 'senddaikin', 'refactor', 'decodedaikinchecksumincludingremovereduce', 'function', 'stack', 'optimiserewrote', 'decodedaikincommon']",{'stack': 100}
"['aircon', 'functionality', 'irmqttserver', 'basic', 'generic', 'setting', 'assistant', 'allowcommon', 'class', 'featurereboot', 'quitquitquitdiscovery', 'messageoperationcommon', 'elementdocument', 'function', 'adminfirmware', 'updatecommon', 'climate', 'setting', 'displayingaircon', 'climateallow', 'integer', 'strtodecodetype', 'recovery', 'state', 'climatetimer', 'classreadable', 'human', 'refactor', 'stringinformation', 'statscosmetic', 'general', 'improvementcomment', 'platformio', 'catch', 'irmqttserver', 'falselarger', 'update', 'valuediscovery', 'climate', 'personal', 'seemssplit']",{'integer': 100}
"['extendedassumption', 'samsung', 'incorrect', 'allowcountbitschecksum', 'attempt', 'samsungac', 'improvechecksum', 'creation']",{'incorrect': 100}
"['incorrect', 'defineletscontrolit', 'issue']","{'incorrect': 100, 'issue': 100}"
"['buffer', 'option', 'message', 'pullup', 'wholepullup', 'whole', 'messagebuffer', 'wholecomment', 'increase']",{'buffer': 100}
"['repeat', 'improvecoolix', 'value', 'variant', 'issue', 'support', 'message']",{'issue': 100}
"['increase', 'panasonic', 'issue', 'message', 'significantlyincrease', 'tolerance', 'value']",{'issue': 100}
"['samsung', 'improvementcorrect', 'samsungwrongextrahighlight', 'state', 'issuechange', 'hallako', 'withoutsamsung', 'length', 'support', 'extendedsamsung', 'special', 'supportsupport', 'message', 'verifymakefilecorrect', 'style', 'minor', 'issuechecksum', 'message', 'extendedsamsung', 'irsamsungac', 'sendextendedhandle', 'situation', 'extendedinside', 'irsamsungac', 'messageirremoteesp', 'markszabo', 'issuecomment', 'issuesamsung']",{'length': 100}
"['wifimanagerproduce', 'version', 'issue', 'compiler']",{'issue': 100}
"['releaseirmqttserver', 'arduino', 'crash', 'compileddefault', 'length', 'irmqttserverprotocol', 'irmqttserver', 'acknowledgementfeatureallow', 'initial', 'cablesupport', 'hitachianalyse', 'script']","{'crash': 100, 'length': 100}"
"['initial', 'hitachisupport', 'hitachi', 'basicexcept', 'basicallyspace', 'length', 'header']",{'length': 100}
"['default', 'length', 'irmqttserver']",{'length': 100}
"['experimental', 'support', 'decodeexperimental', 'support', 'paquechu', 'issue', 'informationdecodegreeclass']",{'issue': 100}
"['nikai', 'updatemarkszabo', 'irremoteesp', 'issuecomment', 'issue']",{'issue': 100}
"['integer', 'underflow', 'double', 'sendjvc', 'underflow', 'integercause', 'approx', 'spaceeliminate', 'similar', 'potentialsendwhynterderivative', 'instance', 'patch']","{'integer': 100, 'underflow': 100}"
"['underflow', 'space', 'integer', 'value', 'subtraction', 'negative', 'sendgenericcurrent']","{'underflow': 100, 'integer': 100}"
"['compile', 'issue']",{'issue': 100}
"['releasedebug', 'progress', 'incomplete', 'workingtimer', 'support', 'daikin', 'timer', 'workingoverflow', 'removebranchinformation', 'update', 'readmegeneralinstructionkelvinator', 'support', 'decodingkelvinator', 'support', 'decodingtweak', 'common', 'kelvinator', 'large', 'timingstate', 'unionexample', 'kelvinator', 'support', 'decodingsupport', 'initial', 'toshibasupport', 'initial', 'toshibaknown', 'modelexample', 'supportaircon', 'update', 'complexcorrect', 'fujitsuheader', 'flash', 'initial', 'toshibasupport', 'initial', 'toshibaknown', 'modeldebug', 'progress', 'incomplete', 'workingtimer', 'support', 'daikin', 'timer', 'workingheader', 'flash', 'cleanupincludebunch', 'cleanlinter', 'issue', 'minor', 'example', 'enhancementbunch', 'header', 'definelinter', 'issue', 'stylecheckheader', 'rework', 'readbitscheckheader', 'refactor', 'pointer', 'synthetic', 'decodedaikinhappen', 'refactoringpassingclean', 'usage', 'presentable', 'defineclean', 'style', 'previouscancel', 'confirms', 'setting', 'manualconflictingrelevantupdate', 'setfan', 'getfanreflect', 'usage', 'updateminorecono', 'quiet', 'powerfulquiet', 'sillyfrog', 'econo', 'correctlycreatedeconoupdate', 'output', 'message', 'daikinsenddaikin', 'current', 'replacecapacity', 'senddaikin', 'repeattimervalue', 'array', 'method', 'correctlytimer', 'addedturnedminor', 'qualityentire', 'timeout', 'appropriateearlier', 'alters', 'revertsremote', 'toshiba', 'support', 'initial', 'decodingremote', 'toshiba', 'support', 'update', 'timing', 'toshibaleast', 'mwildbolzreadable', 'human', 'similar', 'toshiba', 'refactor', 'statechecksum', 'decodedaikin', 'verificationsetraw', 'coveragedebug', 'neutral', 'platformexampleupdateupdateglobal', 'cache', 'rawdata', 'script', 'convertupdate', 'valuedecodehash', 'message', 'unknown', 'allowissuecapture', 'mwildbolzpower', 'updateknown', 'model', 'update', 'status', 'workingupdate', 'compatiablity', 'particular', 'mwildbolzkelvinator', 'update', 'similar', 'toshibasetraw', 'refactor', 'statechecksum', 'verificationcoveragebugfix', 'value', 'attempt', 'script', 'analysevalue', 'appropriate', 'detail', 'writingsendxyz', 'decodexyzalpha', 'common', 'support', 'message', 'spaceimprovevalue', 'detail', 'order', 'removehacky', 'rathergeneration', 'suggestedimprovementvaluerepeate', 'duplicateprotocol', 'initial', 'checkmidea', 'initial', 'checkissuemidea', 'protocolenable', 'construction', 'class', 'message', 'midea', 'irmideaacsleep', 'basic', 'setting', 'support', 'standardchecksum', 'verificationupdate', 'example', 'tolerancesharp', 'update', 'compatablitybugfix', 'protocol', 'message', 'panasonic', 'incorrectissueshortrelease', 'updatemagiquestmagiquest', 'support', 'decodeupgrade', 'irrecvdumpvexample', 'irrecvdumpv', 'simplify', 'improveversionreadable', 'human', 'compatible', 'displaydisplaymoveddisplay', 'number', 'minorlayout', 'dumpvreduce', 'minimum', 'threashold', 'generalcomment', 'parameter', 'sectionerror', 'helpererror', 'correctingreset', 'ensure', 'irsendtest', 'betterfunction', 'previous', 'reset', 'allowshortwould', 'situation', 'decode', 'stillreset', 'order', 'hencereset', 'irsendtest', 'outputstr', 'implicittweak', 'midea', 'timingmarkszabo', 'irremoteesp', 'issuecomment', 'issue', 'timingfinal', 'factor', 'common', 'result', 'automatic', 'timingfujitsu', 'support', 'improvefujitsu', 'support', 'improvefujitsudecodefujitsuacimprovefeatureupdate', 'support', 'statefujitsu', 'updatefujitsu', 'updateifdef', 'example']",{'issue': 100}
"['example', 'deprecateplenty', 'deprecation', 'place', 'noticepeople', 'stronglyclean', 'confusion', 'issue', 'outputunsupport', 'notice']",{'issue': 100}
"['quick', 'decode', 'dirtyconvert', 'commitprogram', 'argument', 'decodechangedirectory', 'renamecontrol', 'length', 'definestringerror', 'cpplint', 'cpplint', 'directory', 'addedheader', 'cpplint', 'stringcompilationcomment', 'usage', 'update']",{'length': 100}
"['usecperticksremove', 'usecpertickssimilify', 'store', 'thing', 'usecs', 'timingreduce', 'excesshandle', 'small', 'measurement', 'adjustment', 'decodingredundant', 'pretty', 'calctick', 'removeallow', 'longerpower', 'factor', 'protocol', 'compatible', 'value', 'sendraw', 'togther', 'usecs', 'buffer', 'factor', 'record', 'making', 'array']",{'buffer': 100}
"['copyingchange', 'buffer', 'selectable', 'recent', 'changedroutine']",{'buffer': 100}
"['fujitsu', 'extradebug', 'issue']",{'issue': 100}
"['buffer', 'captureclass', 'bufferclass', 'delete', 'bufferupdate', 'example', 'buffer', 'warning', 'irrecvdumpv']",{'buffer': 100}
"['length', 'issuespace', 'matchatleastbuffer', 'decodes', 'incorrect', 'calculation']","{'length': 100, 'incorrect': 100}"
"['panasonic', 'decodingpanasonic', 'decodingissuecover', 'issuepanasonic', 'bugfix', 'command', 'valuebugfix', 'example', 'irrecvdumpv', 'overflow']",{'overflow': 100}
"['issueissuebugfix', 'minimum', 'entry', 'assumption', 'incorrect', 'lengthbugfix', 'command', 'optional', 'space', 'wayward', 'statementcoverageversion']",{'incorrect': 100}
"['incorrect', 'invertedindicates', 'globalcacheupdate', 'status']",{'incorrect': 100}
"['improvementtogglerc', 'coveragehelper', 'simulate', 'function', 'togglingpress', 'release', 'support', 'decodingalways', 'issue', 'potentialdiscoveredsupport']",{'issue': 100}
"['mitsubishimitsubishi', 'coverage', 'bugfix', 'length', 'falselybugfix', 'clear', 'setfan', 'state', 'mitsubishiaccomment', 'stylestrict']",{'length': 100}
"['samsungsendsamsung', 'decodesamsung', 'coverage', 'encodesamsungincorrect', 'incorrect', 'encodesamsung', 'result']",{'incorrect': 100}
"['initial', 'checkfinallygoogletestirutils', 'buildguard', 'ifndef', 'arduino', 'allowcompile', 'arduino', 'outsidedesignedallow', 'styleifndef', 'arduino', 'specifictravis', 'update', 'buildirsend', 'senddataarduino', 'modify', 'compiledsenddata', 'coversenddata', 'contentsendingsendnec', 'encodenecinfrastructre', 'irsend', 'availblecommand', 'address', 'issue', 'encodenec', 'countorder', 'protocolchange', 'library', 'portablearduinodecodeneccover', 'decodenecvalue', 'command', 'address', 'orderhandle', 'command', 'address', 'message', 'standardsendblah', 'method', 'support', 'outputtravis', 'modifier', 'includetravis', 'updateupdate']",{'issue': 100}
"['handlerchange', 'precious', 'optimisationtoolchain', 'package', 'objdump', 'xtensafootprint', 'microsecond', 'timer', 'expense', 'anotherchangeoutside', 'overflow']",{'overflow': 100}
"['google', 'cpplint', 'issuegajillion', 'issue', 'addresscorrect', 'stylechange', 'output', 'minor', 'exampleexcept']",{'issue': 100}
"['upgradeclean', 'issuespecific', 'strict', 'length', 'constantcomment', 'stylecosmetic', 'mostlycomment', 'trust']",{'length': 100}
"['irrecv', 'matchrelocate', 'defines', 'routine', 'runtime', 'matchproper', 'macrospace', 'default', 'tolerancetolerance', 'causedallow', 'excess', 'different', 'matchingspace', 'incorrect', 'valueenforce', 'minimum']",{'incorrect': 100}
"['routine', 'upgradesendsony', 'updatesendsony', 'update', 'descriptionthough', 'protocol', 'supportconstant', 'value', 'definedefault', 'length', 'sendingnative', 'command', 'encode', 'address', 'formatupdate', 'decodesonypatch', 'sequentialdescription', 'functioncommand', 'address']",{'length': 100}
"['routine', 'upgrade', 'denonsupportfooter', 'decodedenon', 'detectionallow', 'different', 'length', 'enablefunctionguide', 'styleenfore', 'message', 'appropriatebetterstrict', 'compliance']",{'length': 100}
"['panasonic', 'incorrect', 'frequency', 'timingappears', 'panasonicadjust', 'global', 'cache', 'reference', 'timingresult']",{'incorrect': 100}
"['irrecv', 'matchrelocate', 'defines', 'routine', 'runtime', 'matchproper', 'macrospace', 'default', 'tolerancetolerance', 'causedallow', 'excess', 'different', 'matchingspace', 'incorrect', 'valueenforce', 'minimum']",{'incorrect': 100}
"['handlerchange', 'precious', 'optimisationtoolchain', 'package', 'objdump', 'xtensafootprint', 'microsecond', 'timer', 'expense', 'anotherchangeoutside', 'overflow']",{'overflow': 100}
"['negative', 'issue', 'massive', 'delay']",{'issue': 100}
"['incorrectmeant', 'length']",{'length': 100}
"['irsenddemo', 'rookiecause', 'support', 'issue', 'typicalpeople', 'preempt', 'serial', 'controlingprotocolcircuit', 'suggestedcomment', 'useful', 'bucket']",{'issue': 100}
"['requestirremoteesp', 'markszabo', 'issueletscontrolit', 'issue']",{'issue': 100}
"['update', 'sendlg', 'repeat', 'option', 'betterrework', 'senddatadelay', 'appropriatedefault', 'arduino', 'length', 'irremotecomment']",{'length': 100}
"['sendsamsung', 'senddata', 'updatedefault', 'length']",{'length': 100}
"['irtimerstart', 'micros', 'object', 'issue']",{'issue': 100}
"['version', 'number', 'issue', 'address']",{'issue': 100}
"['mergemaster', 'crankyoldgit', 'request', 'routine', 'longs', 'issue']",{'issue': 100}
"['markszabo', 'flash', 'irremoteesp', 'issuecomment', 'issue']",{'issue': 100}
"['markszabo', 'flash', 'irremoteesp', 'issuecomment', 'issue']",{'issue': 100}
"['issueirremoteesp', 'markszabo', 'issue']",{'issue': 100}
"['mergeallanmar', 'master', 'request', 'mergespace', 'buffer']",{'buffer': 100}
"['space', 'buffer', 'initialcommand', 'irremote']",{'buffer': 100}
