message,fuzzy
"['warning', 'collector', 'diamond', 'issue', 'inheritancediamond', 'issue', 'warning', 'collectoraddresssuggestion', 'review', 'applybenita', 'authoredbroken', 'return', 'hybrid', 'supportdeprecationconstruction', 'support', 'necessaryassertion', 'incorrectinheritance', 'deprecationcooperative', 'encounteredclass', 'ctors', 'getattr', 'legacydocumentation', 'reference', 'update', 'inheritanceclean', 'inheritanceenhanceimport', 'upwardsbenita']",{'issue': 100}
"['mergemerge', 'config', 'expose', 'request', 'purpose', 'config', 'expose']",{'expose': 100}
"['mergemerge', 'permission', 'request', 'bluetechsecurity', 'permission', 'improvement']",{'permission': 100}
"['command', 'argument', 'validation', 'examplecommand', 'argument', 'validation', 'error', 'messagecommand', 'value', 'incorrect', 'custom']",{'incorrect': 100}
"['request', 'bluetechminor', 'temporary', 'issue', 'directory', 'security']","{'issue': 100, 'Security': 100}"
"['level', 'stack']",{'stack': 100}
"['mergemerge', 'request', 'bluetech', 'typevar', 'prefixprefix', 'exceptioninfo', 'expose']",{'expose': 100}
"['setup', 'stack', 'pytest', 'removedpreparation']",{'stack': 100}
"['runner', 'removestack', 'finalizers', 'supposedempty', 'stack']",{'stack': 100}
"['expose', 'nodekeywords', 'needingreduce', 'value']",{'expose': 100}
"['aadca', 'mergemerge', 'request', 'bluetech', 'publicmarkgenerator', 'expose', 'pytest']",{'expose': 100}
"['issue', 'requestreason', 'issue', 'verbose']",{'issue': 100}
"['multiple', 'order', 'execution', 'custommarker', 'multiple', 'order', 'execution', 'multiple', 'marker', 'pytest', 'custom', 'issue', 'exampleremove', 'space', 'trailingextra', 'space', 'failingwhite', 'debug', 'space', 'issue', 'trimmingresolve', 'command']",{'issue': 100}
"['separate', 'rewrite', 'asserts', 'splitimport', 'pytestimport', 'importedplugin', 'issue', 'modulepytester', 'rewrittenpluginsolution', 'assertion', 'importedplugin', 'exclude', 'loader', 'pytester']",{'issue': 100}
"['workaround', 'spawn', 'crash', 'issue', 'pytesterstash', 'pytest', 'pytester', 'restoresimport', 'initializedmodule', 'readline', 'multi', 'causecrash']","{'crash': 100, 'issue': 100}"
"['request', 'issue', 'template']",{'issue': 100}
"['comment', 'request', 'bluetechrelease', 'number', 'comment', 'issue']",{'issue': 100}
"['release', 'number', 'comment', 'issue']",{'issue': 100}
"['issueinstead', 'issue']",{'issue': 100}
"['bestrelpath', 'request', 'bluetechheader', 'testpaths', 'crash', 'absolute', 'terminal']",{'crash': 100}
"['cdcac', 'mergefindpaths', 'confusion', 'request', 'bluetechfindpaths', 'regression', 'incorrect']",{'incorrect': 100}
"['header', 'testpaths', 'crash', 'absolute', 'terminal', 'testpaths', 'wouldspecify', 'unusual', 'absolutewrong', 'regressionfunction', 'bestrelpathexcept', 'weird', 'fallback', 'attributeerrorreturn']",{'crash': 100}
"['findpaths', 'regression', 'incorrect', 'fadcfbdf', 'pathlibreverse', 'wrong', 'parent', 'rootdirdirectory', 'config']",{'incorrect': 100}
"['discussion', 'issue', 'template']",{'issue': 100}
"['action', 'update', 'deadsnakesfewer', 'update', 'rewrote', 'version', 'major', 'action', 'security']",{'Security': 100}
"['parametrize', 'empty', 'python', 'leadingnotset', 'singleton', 'triggeringcheck', 'generation', 'isinstanceexplicit']",{'generation': 100}
"['fabcca', 'mergenicoddemus', 'issue', 'request']",{'issue': 100}
"['issue', 'request']",{'issue': 100}
"['isinitpath', 'session', 'definepylint', 'implementation', 'issue', 'complainssubclass', 'override', 'method', 'abstractcollectcleaner', 'method', 'reallyfscollector', 'package', 'method', 'previouspytest', 'removedcommits', 'ecfccfccaedf']",{'issue': 100}
"['issue', 'docstringpreparation']",{'issue': 100}
"['mergemerge', 'setlevel', 'restore', 'request', 'bluetech', 'handlerchangelog', 'issue']",{'issue': 100}
"['changelog', 'issue']",{'issue': 100}
"['crash', 'message']",{'crash': 100}
"['release', 'major', 'comment', 'issue']",{'issue': 100}
"['requestinstead', 'issue']",{'issue': 100}
"['kwarg', 'deindent', 'expose', 'signature']",{'expose': 100}
"['requestchangelog', 'issue']",{'issue': 100}
"['changelog', 'issue']",{'issue': 100}
"['april', 'pythonrelease', 'final', 'pythonarchive', 'python', 'thread']",{'thread': 100}
"['cosmetic', 'issue']",{'issue': 100}
"['requestdocumentation', 'issue']",{'issue': 100}
"['documentation', 'issue']",{'issue': 100}
"['introduce', 'stale', 'issue', 'guidelineintroduce', 'stale', 'issue', 'guidelinecloseasottile', 'anthony', 'sottilehatfield', 'anthony', 'sottilehatfield']",{'issue': 100}
"['conversion', 'params', 'removeattrs', 'class', 'composition', 'previousstandalone', 'function', 'issue']",{'issue': 100}
"['issue', 'point', 'development', 'section']",{'issue': 100}
"['issue', 'request']",{'issue': 100}
"['longrepr', 'string', 'pytrace', 'issue']",{'issue': 100}
"['bfeec', 'mergedahlitzflorian', 'issue', 'requestprevent', 'pytest', 'traceback']",{'issue': 100}
"['issue', 'requestreference', 'strict', 'marker']",{'issue': 100}
"['setup', 'issue']",{'issue': 100}
"['method', 'reference', 'issue', 'rename']",{'issue': 100}
"['pythonoption', 'expression', 'issue', 'causekeywords', 'pythonconstant', 'various', 'syntaxsomewhat', 'dangerous', 'arbitraryexcept', 'exception', 'requiresformat']",{'issue': 100}
"['bfefbeartyomkaltovich', 'patch', 'issue', 'update']",{'issue': 100}
"['issue', 'updateissue', 'pytest']",{'issue': 100}
"['issue', 'report']",{'issue': 100}
"['issue', 'pytest']",{'issue': 100}
"['hashable', 'instanceassumes', 'xdist', 'pytestissue', 'pytestxdist', 'issue', 'pytest']",{'issue': 100}
"['active', 'capsysbinary', 'stderrwould', 'capsysbinary', 'fixture', 'crash', 'printargument', 'typeerrorrelevant', 'confusion', 'functionreturn', 'function', 'writeorgreturn', 'binaryregular', 'return', 'value', 'eventuallyinput', 'original', 'writeorgcorrespond', 'incorrecthandledexplicit', 'writeorgcapturecurrent', 'annotation', 'inheritancewould', 'liskov', 'substitution', 'schemerefactoredissue', 'pytestbenita', 'message', 'modification']",{'crash': 100}
"['noticedunknown', 'status', 'handlingrerunfailures', 'issue', 'pytest']",{'issue': 100}
"['trigger', 'eventcontain', 'comment', 'issue', 'entry', 'eventissue', 'response', 'eventcomment', 'issue', 'originalactivity', 'eventcomment', 'triggeringsupport', 'startswith', 'changedcommand']",{'issue': 100}
"['travis', 'virtualenv', 'upgradejaraco', 'issue']",{'issue': 100}
"['comment', 'choice', 'incorrect']",{'incorrect': 100}
"['terminal', 'default', 'reportcharsreportchars', 'resetalternative', 'behavior', 'allowsdisable', 'issue', 'warning', 'pytestdisable', 'warning', 'withoutissue', 'pytest']",{'issue': 100}
"['issue', 'pytest']",{'issue': 100}
"['issue', 'pytestpytest']",{'issue': 100}
"['stack', 'register', 'finalizers', 'fixture', 'revertreverts']",{'stack': 100}
"['stack', 'register', 'finalizers', 'fixture']",{'stack': 100}
"['github', 'action', 'coveragerepository', 'overwritescodecov', 'token', 'containsupload', 'repository', 'branchsuggestionissuecomment', 'pytestupload', 'token', 'security', 'coverage', 'bogus', 'concernbelieve']",{'Security': 100}
"['yellowclose', 'issue', 'pytest']",{'issue': 100}
"['mergebetchernt', 'master', 'reserve', 'issue']",{'issue': 100}
"['whitespace', 'issue']",{'issue': 100}
"['reserve', 'issue']",{'issue': 100}
"['baecb', 'mergemerge', 'keyword', 'request', 'expression', 'insensitivekeyword', 'expression', 'insensitive']",{'Sensitive': 90}
"['security', 'section']",{'Security': 100}
"['expression', 'update', 'insensitive']",{'Sensitive': 90}
"['expression', 'insensitive']",{'Sensitive': 90}
"['report', 'phase', 'issue', 'teardown', 'junit']",{'issue': 100}
"['report', 'phase', 'issue', 'teardown', 'junit']",{'issue': 100}
"['pytesterclose', 'issue', 'pytest']",{'issue': 100}
"['parallel', 'terminal', 'pytestaround', 'workingmultiprocessingcpython', 'pythonissue', 'pytestparallel', 'issue', 'pytest', 'browsertron']",{'issue': 100}
"['iterator', 'support', 'generatorissue', 'pytestcreate', 'tuplesissuecomment', 'issue', 'pytestconversion', 'changelogissuecomment', 'issue', 'pytest']",{'issue': 100}
"['mergemerge', 'requestgetmodpath', 'result', 'incorrect']",{'incorrect': 100}
"['whitespace', 'issue']",{'issue': 100}
"['upgradeblack', 'bringsblack', 'issue']",{'issue': 100}
"['getmodpath', 'result', 'incorrect']",{'incorrect': 100}
"['requestdiscovery', 'incorrect']",{'incorrect': 100}
"['default', 'issue']",{'issue': 100}
"['warning', 'value', 'default', 'issue']",{'issue': 100}
"['filterwarnings', 'revert', 'crash', 'warningreverts']",{'crash': 100}
"['clean', 'warning', 'chmod', 'relatedissuecomment', 'issue', 'pytest']",{'issue': 100}
"['filterwarnings', 'error', 'requestfilterwarnings', 'warning', 'crash']",{'crash': 100}
"['issue', 'aspect']",{'issue': 100}
"['strike', 'climate', 'ditigal', 'pyteststrike', 'climate', 'bannerdeveloper', 'issue']",{'issue': 100}
"['traviscrash', 'failure', 'flaky', 'causeclose', 'issue', 'pytest']",{'issue': 100}
"['pastebin', 'erroroption', 'pytest', 'pastebin', 'exact', 'error', 'request', 'causeupload', 'failure', 'pytest', 'crash', 'failure', 'servicecontinuouspatch', 'catch', 'exception', 'httperror', 'throwncommunicate', 'pastebin', 'report', 'entire', 'backtrace']",{'crash': 100}
"['issue', 'requesterror', 'warning']",{'issue': 100}
"['function', 'async', 'issue', 'warningoliveira', 'nicoddemus', 'bruno']",{'issue': 100}
"['indentation', 'issue', 'docstrings']",{'issue': 100}
"['dfbab', 'mergemerge', 'issue', 'requestautouse', 'order', 'information', 'fixture']",{'issue': 100}
"['requestterminal', 'crash', 'discovery']",{'crash': 100}
"['terminal', 'crash', 'discovery']",{'crash': 100}
"['crash', 'filename', 'module', 'pyargs']",{'crash': 100}
"['impls', 'variableintermediate', 'generation']",{'generation': 100}
"['pytest', 'faulthandleroption', 'faulthandler', 'necessaryfaulthandlercommand', 'faulthandler', 'option', 'reasonfaulthandler', 'issue', 'pytestcommand', 'stillfaulthandler', 'pytest']",{'issue': 100}
"['stepwise', 'crash', 'stepwise', 'crash']",{'crash': 100}
"['abeda', 'mergeconversion', 'exposureconversion', 'exposure']",{'Exposure': 100}
"['cmdline', 'crash']",{'crash': 100}
"['warning', 'message', 'deprecationissuecomment', 'issue', 'pytest']",{'issue': 100}
"['travis', 'removeissuecomment', 'issue', 'pytest']",{'issue': 100}
"['issue', 'docstrings']",{'issue': 100}
"['introduce', 'fixturefaacdc', 'session', 'expose', 'functionalityxunit', 'plugins', 'compatible', 'remainstandard']",{'expose': 100}
"['issue', 'markerwould', 'value', 'marker', 'docstringdescriptive', 'encourages', 'message']",{'issue': 100}
"['issue', 'pytest']",{'issue': 100}
"['issue', 'requestformat', 'default']",{'issue': 100}
"['format', 'default', 'issue', 'improveformat', 'modulelevel', 'thing', 'github', 'thanks']",{'issue': 100}
"['pluggy', 'requiremetadata', 'importlib', 'pluggy', 'present', 'package', 'install', 'problempluggy', 'quicklypluggy', 'issue', 'pytest']",{'issue': 100}
"['changelog', 'issue']",{'issue': 100}
"['mergegithub', 'issue', 'revisit', 'templategithub', 'issue', 'revisit', 'template']",{'issue': 100}
"['github', 'issue', 'revisit', 'templateboilerplate', 'motivation']",{'issue': 100}
"['trace', 'pdbclsensures', 'issue']",{'issue': 100}
"['register', 'issue']",{'issue': 100}
"['issue', 'stillimport', 'loggingencodingerrorweakref', 'mightcommits', 'pytestcpython', 'python', 'cadccceeecfffae']",{'issue': 100}
"['reference', 'issue']",{'issue': 100}
"['mergemtime', 'nicoddemus', 'requestmtime', 'issue']",{'issue': 100}
"['mtime', 'issue']",{'issue': 100}
"['directivesolution', 'issue', 'partial', 'pytest']",{'issue': 100}
"['mergemerge', 'issue', 'request', 'hroncokinvocation', 'custom', 'pythonpath', 'pytest']",{'issue': 100}
"['azure', 'generation']",{'generation': 100}
"['issue', 'pytest']",{'issue': 100}
"['setting', 'expose', 'loggingpluginpatch', 'allowsthomas', 'hischandras', 'mitzki']",{'expose': 100}
"['parameter', 'messageissuecomment', 'issue', 'pytestprominent', 'parameter']",{'issue': 100}
"['improveissuecomment', 'issue', 'pytest']",{'issue': 100}
"['badbcf', 'mergewimglenn', 'issue', 'requestteststatus']",{'issue': 100}
"['hasattr', 'assertion', 'objectfetch', 'error', 'tryinghasattr', 'attributeerrortrace', 'stack', 'failedthough', 'pytestrelatedchange']",{'stack': 100}
"['assertion', 'rewritingassertion', 'rewrite', 'pytesteasier', 'comoparisonassertioncheck', 'objectattributebroken', 'hasattr', 'objecttrace', 'failure', 'stack', 'messagefailure']",{'stack': 100}
"['hyunchel', 'incorrect', 'request', 'exampleexample', 'cache']",{'incorrect': 100}
"['reference', 'issue', 'todos']",{'issue': 100}
"['markertransferkeywords', 'issue']",{'issue': 100}
"['issue', 'warning']",{'issue': 100}
"['requiredcaughtissuecomment', 'issue', 'pytest']",{'issue': 100}
"['streamclose', 'issue', 'pytest']",{'issue': 100}
"['defaultclose', 'issue', 'pytest']",{'issue': 100}
"['deselect', 'withoutclose', 'issue', 'pytest']",{'issue': 100}
"['issue', 'pytest']",{'issue': 100}
"['issuecomment', 'issue', 'pytesthardens']",{'issue': 100}
"['changelog', 'entryclose', 'issue', 'pytest']",{'issue': 100}
"['fixup', 'pyupgrade', 'incorrect']",{'incorrect': 100}
"['dirpath', 'isfileissuecomment', 'issue', 'pytest']",{'issue': 100}
"['suite', 'pytestcurrsize', 'maxsize', 'cacheinfomight', 'difference', 'reallylarger', 'suite', 'mentionedissuecomment', 'issue', 'pytest']",{'issue': 100}
"['bbbce', 'mergemerge', 'nicoddemus', 'fixture', 'issue', 'request']",{'issue': 100}
"['fixture', 'issue', 'request']",{'issue': 100}
"['issue', 'requestformat', 'warning', 'unicode', 'message', 'python']",{'issue': 100}
"['issue', 'pytest']",{'issue': 100}
"['false', 'error', 'pytraceuseless', 'trace', 'stack']",{'stack': 100}
"['issue', 'requestdocumentation']",{'issue': 100}
"['warning', 'string', 'delenv', 'issue', 'python', 'receivedescribedevident']",{'issue': 100}
"['warning', 'nicoddemus', 'request', 'conftestpyargs', 'warning', 'level', 'issue', 'conftest']",{'issue': 100}
"['pyargs', 'warning', 'level', 'issue', 'conftest']",{'issue': 100}
"['nicoddemus', 'rewrite', 'requestchange', 'crash', 'rewriter']",{'crash': 100}
"['relevant', 'reference', 'issue', 'python']",{'issue': 100}
"['crash', 'rewriter', 'fnmatch', 'unfortunatelystandard', 'fnmatch', 'different', 'moduleimplement', 'customcompatibility', 'backward', 'pathlibbound', 'system']",{'crash': 100}
"['issue', 'pytestaround', 'issuepluggymaster']",{'issue': 100}
"['config', 'function', 'issue', 'warning']",{'issue': 100}
"['warning', 'assert', 'tuple', 'rewrite', 'review', 'issue']",{'issue': 100}
"['issue', 'warning', 'configconfig', 'warning']",{'issue': 100}
"['issue', 'requestavoid', 'assert', 'infinite', 'rewrite', 'possible', 'recursion']",{'issue': 100}
"['specific', 'macosissuecomment', 'issue', 'pytestcloseoliveira', 'nicoddemus', 'bruno']",{'issue': 100}
"['changelog', 'issue', 'entry']",{'issue': 100}
"['warningdocumentation', 'reference', 'latestsince', 'issue']",{'issue': 100}
"['issue', 'requestautodocs', 'pytester']",{'issue': 100}
"['mergechangelog', 'nicoddemus', 'requestchangelog', 'issue']",{'issue': 100}
"['changelog', 'issue']",{'issue': 100}
"['mergeintegration', 'nicoddemus', 'requestwould', 'fixture', 'issue', 'functionality']",{'issue': 100}
"['issue', 'functionality']",{'issue': 100}
"['changelog', 'update', 'issue', 'template', 'entry', 'startmulti']",{'issue': 100}
"['issue', 'python']",{'issue': 100}
"['mergemerge', 'issue', 'request', 'egnartsms', 'paramfixture', 'parametrization', 'override']",{'issue': 100}
"['system', 'sectionvalid', 'issue']",{'issue': 100}
"['dcdaabmerge', 'requestexample', 'script', 'issue']",{'issue': 100}
"['statement', 'print', 'error', 'doctestsstack', 'overflow']",{'overflow': 100}
"['example', 'script', 'issue']",{'issue': 100}
"['stack', 'finalizer', 'finalizers', 'scope', 'exception']",{'stack': 100}
"['requestchangelog', 'issue']",{'issue': 100}
"['changelog', 'issue']",{'issue': 100}
"['example', 'factory', 'fixtureclose', 'issue', 'pytest']",{'issue': 100}
"['unicode', 'issue', 'flake', 'usage']",{'issue': 100}
"['issue', 'entryexample']",{'issue': 100}
"['usage', 'failure', 'issue', 'correctargument']",{'issue': 100}
"['febccaemerge', 'conda', 'nicoddemus', 'request', 'forge', 'badgeconda', 'forge', 'badge', 'anaconda']",{'forger': 91}
"['forge', 'badge', 'anacondabadge', 'forge', 'conda']",{'forger': 91}
"['eacda', 'mergemaster', 'rachel', 'requestdelete', 'issue']",{'issue': 100}
"['argument', 'stack', 'session', 'address']",{'stack': 100}
"['cefebaemaster', 'rachel', 'requestdocumentation', 'caplog', 'issue', 'fixture']",{'issue': 100}
"['issue', 'marker']",{'issue': 100}
"['issue', 'requestproduce', 'iterator']",{'issue': 100}
"['issue', 'requestexample', 'issue', 'documentation']",{'issue': 100}
"['example', 'issue', 'documentationissue', 'pytest']",{'issue': 100}
"['issue', 'pytestshouldnt', 'removal', 'deprecation']",{'issue': 100}
"['referencecycle', 'reference', 'valuesetattr', 'attribute', 'normallynever', 'process', 'garbage', 'lifetime', 'pythonclass', 'becomesperformance', 'problem', 'issue', 'reallygarbage', 'assertion', 'making', 'usingcreation', 'garbage', 'namedtuple', 'instance', 'functionallyreference']",{'issue': 100}
"['codetriage', 'pytest', 'badgenumber', 'people', 'badge', 'helpingbadge', 'source', 'pytest', 'subscriber', 'project', 'algorithm', 'codetriage', 'issue', 'order', 'project', 'badgelongterm', 'success', 'people', 'developer', 'invite', 'contribute', 'others', 'badgereadmes', 'popular', 'codetriage', 'badge', 'examplebadgebadge', 'crystalcomment', 'reply', 'badge', 'close', 'rightthanks', 'project', 'feedback']",{'issue': 100}
"['issue', 'requestunkown', 'traceback']",{'issue': 100}
"['babedb', 'mergemerge', 'logstart', 'sundtch', 'request', 'logfinishwritten', 'issue', 'finish']",{'issue': 100}
"['issue', 'finish']",{'issue': 100}
"['ceaaade', 'mergemerge', 'sundtch', 'stream', 'requestparser', 'expose']",{'expose': 100}
"['parser', 'expose']",{'expose': 100}
"['issue', 'requestoption', 'swallow']",{'issue': 100}
"['expose', 'noticedhandler', 'detail', 'update', 'return', 'record']",{'expose': 100}
"['fixtureattribute', 'value', 'update', 'incorrect', 'changelog', 'updatedocumentation', 'usage']",{'incorrect': 100}
"['issue', 'update']",{'issue': 100}
"['mergemerge', 'blurb', 'cryvate', 'issue', 'requestchangelog', 'issue', 'blurb']",{'issue': 100}
"['changelog', 'issue', 'blurb']",{'issue': 100}
"['removal', 'update', 'deprecation', 'milestone', 'pointhandle', 'proper', 'milestone', 'issue', 'topic', 'saner', 'separate', 'document']",{'issue': 100}
"['patch', 'issue', 'local']",{'issue': 100}
"['pyargs', 'symlink', 'comment', 'issue']",{'issue': 100}
"['mergemerge', 'catchlog', 'compiler', 'blacklist', 'requestblacklist', 'capturelog', 'plugin', 'pytest']",{'blacklist': 100}
"['blacklist', 'capturelog', 'plugin', 'pytestcatchlog', 'plugin', 'pytest', 'apparentlypeople']",{'blacklist': 100}
"['issue', 'requestescape', 'argument']",{'issue': 100}
"['warning', 'catchlog', 'pytest', 'issue', 'blockcatchlog', 'pytest', 'install', 'resultoption', 'conflict']",{'issue': 100}
"['changelog', 'issue', 'entry']",{'issue': 100}
"['requestbugfix', 'issue']",{'issue': 100}
"['additional', 'issue']",{'issue': 100}
"['mergemerge', 'dalton', 'fixture', 'request', 'fanduel', 'issue', 'collectioncollection', 'issue', 'fixture']",{'issue': 100}
"['eafcb', 'aecdfc', 'mergemerge', 'dalton', 'pytest', 'fixture', 'collection', 'issue', 'fanduel']",{'issue': 100}
"['edcaa', 'mergemerge', 'owentuz', 'setup', 'integration', 'issue', 'request', 'teardown', 'mismatch', 'unittest', 'documentbehaviour', 'setup', 'teardown', 'unittest', 'document']",{'issue': 100}
"['style', 'issue']",{'issue': 100}
"['issue', 'flake']",{'issue': 100}
"['relative', 'argument', 'windowcommand', 'argument', 'parse', 'shlexargument', 'window', 'incorrect', 'resultrelative']",{'incorrect': 100}
"['xpass', 'issue', 'request', 'documentdocumentation', 'xfail', 'xpass']",{'issue': 100}
"['issue', 'requestexample']",{'issue': 100}
"['beecdparametrize', 'xuanluong', 'multiple', 'metafunc', 'issue', 'requestdocumentation', 'update']",{'issue': 100}
"['mergedecorator', 'equality', 'xuanluong', 'issue', 'requestequality', 'bugfix', 'markdecorator', 'object', 'return']",{'issue': 100}
"['crash', 'prefix']",{'crash': 100}
"['issue', 'request', 'documentexample']",{'issue': 100}
"['flaky', 'testdir', 'issue', 'requesttestdir', 'issue', 'flaky']",{'issue': 100}
"['multiple', 'changelog', 'mihaic', 'issue', 'requestchangelog', 'issue', 'multiple', 'entry']",{'issue': 100}
"['changelog', 'issue', 'multiple', 'entryfunctionality', 'restores']",{'issue': 100}
"['baecb', 'mergemerge', 'flake', 'issue']",{'issue': 100}
"['expose', 'requestproperty', 'expose', 'pytestmark']",{'expose': 100}
"['ffdbdad', 'mergemerge', 'nicoddemus', 'issue', 'manager', 'context']",{'issue': 100}
"['mergemerge', 'changelog', 'nicoddemus', 'issue', 'requestchangelog', 'issue', 'entry']",{'issue': 100}
"['mergemerge', 'nicoddemus', 'collection', 'requestcommand', 'report', 'incorrect']",{'incorrect': 100}
"['mergemerge', 'nicoddemus', 'issue', 'request', 'module', 'doctestdecode', 'error', 'python', 'docstrings', 'doctests']",{'issue': 100}
"['changelog', 'issue', 'entrymultiple', 'worth', 'readability']",{'issue': 100}
"['unicode', 'issue', 'ascii']",{'issue': 100}
"['report', 'incorrect']",{'incorrect': 100}
"['changelog', 'issue']",{'issue': 100}
"['issue', 'requestcapture', 'manager', 'context']",{'issue': 100}
"['bbbda', 'mergenicoddemus', 'unicode', 'issue', 'python', 'doctests']",{'issue': 100}
"['unicode', 'issue', 'python', 'doctests']",{'issue': 100}
"['minor', 'issue']",{'issue': 100}
"['request', 'robinparametrize', 'argument', 'number', 'issue', 'wrong', 'assertionerror']",{'issue': 100}
"['parametrize', 'issue', 'message', 'error']",{'issue': 100}
"['setuptoolsmaster', 'setuptoolssetuptools', 'issue']",{'issue': 100}
"['adbdcpytest', 'search', 'requestworkaround', 'sphinx', 'search', 'issue']",{'issue': 100}
"['workaround', 'sphinx', 'search', 'issue']",{'issue': 100}
"['warning', 'xdist', 'temporary', 'directory', 'pytesterxdist', 'candidate', 'directory', 'current', 'consideredempty', 'warning', 'import', 'warning', 'ignoreraise', 'warning', 'xdist', 'pytest', 'execnet', 'upstreamxdist', 'issue', 'pytest']",{'issue': 100}
"['issue', 'valueerror']",{'issue': 100}
"['reference', 'issue', 'changelog']",{'issue': 100}
"['issue', 'requestconfiguration']",{'issue': 100}
"['aaddedocumentation', 'oscarh', 'issue', 'requestyield', 'issue', 'update', 'teardown']",{'issue': 100}
"['yield', 'issue', 'update', 'teardown']",{'issue': 100}
"['warning', 'incorrect']",{'incorrect': 100}
"['warning', 'incorrect']",{'incorrect': 100}
"['mergemaster', 'duncanbetts', 'requestfunctionality', 'issue', 'description']",{'issue': 100}
"['functionality', 'issue', 'description']",{'issue': 100}
"['issue', 'requestissue']",{'issue': 100}
"['issue', 'requestdiscovery', 'clarify']",{'issue': 100}
"['issue', 'error']",{'issue': 100}
"['clean', 'request', 'issue', 'unittesttestcase', 'clean', 'object', 'unittest']",{'issue': 100}
"['issue', 'requestrestore', 'pexpect']",{'issue': 100}
"['issue', 'requesthandle', 'import', 'ascii', 'plugins', 'error', 'message']",{'issue': 100}
"['reference', 'issue']",{'issue': 100}
"['assertion', 'truncationformat', 'issue', 'update', 'pytestpytest', 'clear', 'truncates', 'message', 'truncationentire', 'assertion', 'verbosity', 'output']",{'issue': 100}
"['buffer', 'attribute', 'stdin']",{'buffer': 100}
"['documentation', 'update', 'rootdir', 'discoverycover', 'issue', 'pytest']",{'issue': 100}
"['dafee', 'mergemerge', 'stranger', 'scope', 'pytest', 'issue', 'branchconflict']",{'issue': 100}
"['fadfe', 'mergeinvalid', 'class', 'stranger', 'issue', 'requestclass', 'custom', 'collection']",{'issue': 100}
"['parenthesis', 'issue', 'number']",{'issue': 100}
"['adafa', 'mergetomviner', 'issue', 'requestdisplay']",{'issue': 100}
"['guidance', 'europython', 'sprint', 'viner', 'thanks']",{'Sprintf': 92}
"['mergemerge', 'nicoddemus', 'inconsistent', 'setup', 'issue', 'request', 'teardownargument', 'optional', 'function']",{'issue': 100}
"['mergemerge', 'appveyor', 'nicoddemus', 'request', 'splitmultiple', 'appveyor', 'timeout', 'issue']",{'issue': 100}
"['appveyor', 'timeout', 'issue', 'splitbuild', 'timingappveyor']",{'issue': 100}
"['mergemerge', 'issue', 'requestassertion', 'warning', 'tuples']",{'issue': 100}
"['obestwalter', 'issue', 'changelog']",{'issue': 100}
"['pytest', 'version', 'issue', 'section']",{'issue': 100}
"['issue', 'proposal', 'section']",{'issue': 100}
"['universal', 'issue']",{'issue': 100}
"['issue', 'requestfalse', 'collapse', 'explanation']",{'issue': 100}
"['dfedamerge', 'getfuncargvalue', 'rename', 'tomviner', 'issue', 'requestgetfixturevalue', 'rename', 'getfuncargvalue']",{'issue': 100}
"['mergemerge', 'tomviner', 'pytest', 'issue', 'final', 'newline']",{'issue': 100}
"['newlines', 'issue', 'terminal']",{'issue': 100}
"['mergemerge', 'tomviner', 'issue', 'request', 'subrequestfixture', 'params', 'issue', 'getfuncargvalue']",{'issue': 100}
"['pytest', 'issue']",{'issue': 100}
"['mergemerge', 'assert', 'nicoddemus', 'rewrite', 'issue', 'request', 'conftestassert', 'conftest', 'issue', 'rewrite']",{'issue': 100}
"['assert', 'rewrite', 'upstream', 'issue', 'conftest']",{'issue': 100}
"['fixture', 'params', 'issue', 'getfuncargvalue']",{'issue': 100}
"['nicoddemus', 'fixture', 'issue', 'requestcapsys', 'method', 'capfd']",{'issue': 100}
"['mergemerge', 'nicoddemus', 'fixture', 'issue', 'request', 'yieldyield', 'normal', 'fixture']",{'issue': 100}
"['accdc', 'mergeguyzmo', 'issue', 'requestargument', 'issue', 'error']",{'issue': 100}
"['issue', 'error', 'shadowingargument', 'method', 'internal', 'defaultshall', 'stack', 'issuestacktrace', 'empty', 'outputinformation', 'meaningful', 'stillfailedissuegithub', 'guyzmo']","{'issue': 100, 'stack': 100}"
"['fcfaemerge', 'tomviner', 'issue', 'xfail']",{'issue': 100}
"['ddfba', 'mergemerge', 'tomviner', 'issue', 'request', 'ignorenorecursedirs', 'issue']",{'issue': 100}
"['norecursedirs', 'issue']",{'issue': 100}
"['migration', 'readthedocs', 'project', 'convertproject', 'subdomains', 'emaildomain', 'project', 'concern', 'cooky', 'security', 'startlatest']",{'Security': 100}
"['chunk', 'changelog', 'issue']",{'issue': 100}
"['sprint', 'update']",{'Sprintf': 92}
"['keyword', 'condition', 'issue', 'xfail']",{'issue': 100}
"['ebcfaa', 'mergeroolebo', 'issue', 'requestissue', 'support', 'exception']",{'issue': 100}
"['remote', 'pytest', 'issue']",{'issue': 100}
"['aacda', 'mergemalinoff', 'issue', 'requestcreates']",{'issue': 100}
"['field', 'length', 'error']",{'length': 100}
"['issue', 'requestdisplay', 'faith']",{'issue': 100}
"['issue', 'requestsyntaxerrors', 'collection', 'issue']",{'issue': 100}
"['collection', 'issue', 'decodinghappens', 'exception', 'badline']",{'issue': 100}
"['issue', 'requestconftest']",{'issue': 100}
"['aacbbf', 'dbaeeamerge', 'colon', 'tomviner', 'issue', 'request', 'double', 'junitjunit', 'issue', 'method']",{'issue': 100}
"['junit', 'issue', 'method']",{'issue': 100}
"['mergemerge', 'colon', 'tomviner', 'issue', 'request', 'double', 'junitcolon', 'mangle', 'parameter', 'double', 'junit']",{'issue': 100}
"['colon', 'issue', 'double', 'junit']",{'issue': 100}
"['sprint', 'company', 'attendee']",{'Sprintf': 92}
"['mergemerge', 'update', 'request', 'sprint', 'hackebrotsprint', 'company']",{'Sprintf': 92}
"['sprint', 'company', 'hackebrot', 'attendee']",{'Sprintf': 92}
"['mergemaster', 'nicoddemus', 'requestgithub', 'issue', 'template']",{'issue': 100}
"['github', 'issue', 'template']",{'issue': 100}
"['bfafadac', 'mergemerge', 'requestoption', 'issue', 'fulltrace']",{'issue': 100}
"['issue', 'fulltrace']",{'issue': 100}
"['lieve', 'campaign', 'pytest', 'sprint', 'indiegogo']",{'Sprintf': 92}
"['preliminary', 'header', 'sprint']",{'Sprintf': 92}
"['generation', 'howtorelease']",{'generation': 100}
"['collection', 'inection', 'docstrign']",{'injection': 94}
"['fdeaff', 'mergemerge', 'requestjunitxml', 'clean', 'issue']",{'issue': 100}
"['finalize', 'nodereporters', 'issue', 'intermediate']",{'issue': 100}
"['testcase', 'generation', 'junitxml', 'nodereporter']",{'generation': 100}
"['generation', 'junitxml', 'restrucutre']",{'generation': 100}
"['wheel', 'incorrect']",{'incorrect': 100}
"['nicoddemus', 'issue', 'requestentry', 'traceback', 'object', 'return', 'situation']",{'issue': 100}
"['mergemerge', 'tomviner', 'issue', 'request', 'getattrissue', 'getattr']",{'issue': 100}
"['issue', 'override', 'python']",{'issue': 100}
"['class', 'issue', 'setting']",{'issue': 100}
"['nodeid', 'missingkeyerror', 'nodeid', 'issue', 'somethingsomewhere']",{'issue': 100}
"['ebcbdmerge', 'issue', 'plugin', 'issue', 'attrname', 'lookup', 'shortcut']",{'issue': 100}
"['plugin', 'issue', 'attrname', 'lookup']",{'issue': 100}
"['generation', 'xdist', 'pytestsetup']",{'generation': 100}
"['mergemerge', 'issue', 'request', 'bjwebbexample', 'assertion', 'method', 'comparison']",{'issue': 100}
"['issue', 'changelogissue']",{'issue': 100}
"['requestremove', 'reference', 'distutils', 'issue']",{'issue': 100}
"['reference', 'distutils', 'issue']",{'issue': 100}
"['number', 'version', 'pytest', 'issue', 'branchminversion', 'importorskip', 'parsepresent', 'version', 'numberrunner']",{'issue': 100}
"['changelog', 'issue']",{'issue': 100}
"['mergemerge', 'tomviner', 'issue', 'request', 'issue', 'ensure']",{'issue': 100}
"['check', 'issue']",{'issue': 100}
"['request', 'maartenqgentest', 'issue', 'setuptools']",{'issue': 100}
"['issue', 'setuptools']",{'issue': 100}
"['mergeversion', 'hunse', 'importorskip', 'integer']",{'integer': 100}
"['ebdbc', 'mergepytest', 'issue', 'requestexception', 'issue', 'return']",{'issue': 100}
"['exception', 'issue', 'return']",{'issue': 100}
"['issue', 'requestfunction', 'report', 'pytest']",{'issue': 100}
"['issue', 'requestnameconstant', 'exists']",{'issue': 100}
"['pasteable', 'issue']",{'issue': 100}
"['mergenicoddemus', 'pytest', 'issue', 'request', 'pytester']",{'issue': 100}
"['mergemerge', 'issue', 'pytest']",{'issue': 100}
"['plugins', 'issue']",{'issue': 100}
"['mergemerge', 'issue', 'pytest']",{'issue': 100}
"['mergegetsourcelines', 'request', 'issue', 'errorfailure', 'handlebranch', 'pytest']",{'issue': 100}
"['getsourcelines', 'error', 'issue', 'closegetsourcelines', 'error']",{'issue': 100}
"['ddffadcmerge', 'issue', 'pytest']",{'issue': 100}
"['issue', 'requestissuebranch', 'pytest']",{'issue': 100}
"['scope', 'report', 'fixture', 'issue', 'independent', 'mismatchargument', 'fixtureissue']",{'issue': 100}
"['mergemerge', 'issue', 'pfctdayelise']",{'issue': 100}
"['mergereload', 'assert', 'issue', 'rewritingthanks', 'daniel']",{'issue': 100}
"['baeff', 'mergerequest', 'issue', 'pytestcomment']",{'issue': 100}
"['issue', 'requestconftest', 'issue', 'visibility']",{'issue': 100}
"['introduce', 'import', 'option', 'issue', 'error', 'ignore', 'courtesy', 'doctestcharles']",{'issue': 100}
"['issue', 'visibilityalways', 'nodeid', 'refactoringrelative', 'rootdir', 'commonancestor', 'testrun']",{'issue': 100}
"['xfails', 'pdbpp', 'removenecessary', 'pytestfancycompleterfuncsigsordereddictpdbpp', 'antocunipygmentspyreplfccbacbedcbcecc', 'pytestwmctrlmarca', 'pytest', 'shortsession', 'startplatform', 'darwin', 'python', 'pytestcollectedtestingsecond', 'issue', 'antocuni', 'pdbpp', 'doctestsbranch']",{'issue': 100}
"['exception', 'issue', 'python', 'crude']",{'issue': 100}
"['issue', 'changelogissue']",{'issue': 100}
"['fcaff', 'mergerequest', 'pytest', 'tomvinerescape', 'issue']",{'issue': 100}
"['issue', 'changelog']",{'issue': 100}
"['dedce', 'mergepfctdayelise', 'pytest', 'request', 'issueparametrize', 'specify', 'issue', 'abilitycustom', 'generatemerge']",{'issue': 100}
"['dfdce', 'mergerequest', 'pytest', 'tomvinercompound', 'assert', 'issue', 'percent']",{'issue': 100}
"['aceae', 'cadcdrequest', 'pytest', 'callables', 'issue']",{'issue': 100}
"['compound', 'assert', 'issue', 'percentbranch']",{'issue': 100}
"['callables', 'issue']",{'issue': 100}
"['aedfb', 'ddbbathanks', 'brunobruno', 'plugin', 'index', 'thanksnegation', 'issue', 'style']",{'issue': 100}
"['ebbafthanks', 'brunobruno', 'plugin', 'index', 'thanksnegation', 'issue', 'style']",{'issue': 100}
"['issue', 'requestnegation', 'issue', 'style']",{'issue': 100}
"['issue', 'requestnegation', 'issue', 'style']",{'issue': 100}
"['negation', 'issue', 'style']",{'issue': 100}
"['negation', 'issue', 'style']",{'issue': 100}
"['assert', 'custom', 'issue', 'message', 'valueerrorformat', 'unsupported', 'pytest', 'issue', 'character', 'valueerrorbranch']",{'issue': 100}
"['assert', 'custom', 'issue', 'message', 'valueerrorformat', 'unsupported', 'pytest', 'issue', 'character', 'valueerror']",{'issue': 100}
"['dedcbf', 'mergerequest', 'nicoddemus', 'pytestxunit', 'failure', 'collection', 'issue', 'error']",{'issue': 100}
"['pytestassertion', 'issue', 'explanation']",{'issue': 100}
"['xunit', 'failure', 'collection', 'issue', 'error']",{'issue': 100}
"['example', 'issue', 'error', 'syntaxthanks', 'bruno']",{'issue': 100}
"['mergeconftest', 'nodeid', 'visibility', 'fixture', 'issue', 'conftest']",{'issue': 100}
"['visibility', 'fixture', 'issue', 'conftestwould', 'pytest', 'fixture', 'discovery', 'package', 'reproducable', 'wolfgang', 'figuringconftest', 'nodeid']",{'issue': 100}
"['project', 'sscarwell', 'compat', 'issue', 'claim', 'thanks', 'readme']",{'issue': 100}
"['laszlo', 'issue', 'ronny', 'setuptools', 'thanks']",{'issue': 100}
"['compat', 'issue', 'python', 'example', 'tmpdir']",{'issue': 100}
"['example', 'issue']",{'issue': 100}
"['internal', 'issue', 'error']",{'issue': 100}
"['requestanother', 'issue']",{'issue': 100}
"['capfd', 'regression', 'issue', 'capsys', 'output']",{'issue': 100}
"['issue', 'removingseparatedbranch']",{'issue': 100}
"['mergeticosax', 'pytest', 'request', 'injection', 'fixture']",{'injection': 100}
"['david', 'issue', 'optionalargument']",{'issue': 100}
"['injection', 'fixturecontinuationbranch', 'unittest']",{'injection': 100}
"['issue', 'shorten', 'representation', 'enhance', 'tracebacksoption', 'default', 'display', 'tracebacksfirst', 'default', 'native']",{'issue': 100}
"['specifiy', 'switchfeature', 'issue', 'requestedfilename']",{'issue': 100}
"['issue', 'flake']",{'issue': 100}
"['argument', 'notset', 'issue', 'mightmonkeypatch', 'output', 'improves']",{'issue': 100}
"['mergemerge', 'issue', 'request']",{'issue': 100}
"['changelog', 'issue']",{'issue': 100}
"['display', 'issue', 'verbose', 'outputformat', 'result', 'verboseclass', 'result', 'param', 'methodexample', 'script', 'patch', 'updateregenerateissue']",{'issue': 100}
"['mergepytest', 'rouge', 'issue', 'document']",{'issue': 100}
"['issue', 'documentissue']",{'issue': 100}
"['unbound', 'class', 'issue', 'method']",{'issue': 100}
"['unbound', 'class', 'issue', 'methoddoubleissue']",{'issue': 100}
"['issue', 'pytestfinalizer', 'issue', 'fixture']",{'issue': 100}
"['issue', 'capsys', 'clarify', 'output']",{'issue': 100}
"['finalizer', 'issue', 'fixturestillissue']",{'issue': 100}
"['example', 'thanks', 'issue']",{'issue': 100}
"['issue', 'changelog']",{'issue': 100}
"['directory', 'issue']",{'issue': 100}
"['thanks', 'issue']",{'issue': 100}
"['upload', 'regen', 'sugar', 'pytest', 'github', 'issue', 'override', 'index']",{'issue': 100}
"['command', 'issue', 'initial', 'improvedargument', 'resultabramowitz', 'thanks', 'flaky']",{'issue': 100}
"['grana', 'daniel', 'issue', 'thanks', 'trial']",{'issue': 100}
"['level', 'stdout', 'issue', 'stream']",{'issue': 100}
"['streamline', 'issue', 'dupfile', 'encodingthoughtful']",{'issue': 100}
"['refine', 'issue', 'cleanup']",{'issue': 100}
"['insteadencourages', 'bettersuffer', 'issue']",{'issue': 100}
"['documentation', 'issue', 'includeimprove']",{'issue': 100}
"['skiptest', 'exception', 'issue', 'collection', 'thanks', 'schlaichcomplete']",{'issue': 100}
"['semantics', 'address', 'issue', 'clarify']",{'issue': 100}
"['reference', 'clearing', 'local', 'result', 'documentreference', 'exceptioninfo', 'local', 'object', 'returncycle', 'referenceexceptioninfoexceptionframe', 'stack', 'raising', 'exceptionframe', 'current', 'stackcurrent', 'local', 'variableexceptionreference', 'current', 'variable', 'local', 'cycle', 'preventframe', 'stack', 'reference', 'garbage', 'reference', 'cycleprogram', 'increase', 'memory', 'collection', 'official', 'situationdocumentation', 'statement', 'exception', 'pythonbranch']",{'stack': 100}
"['captire', 'stdio', 'issue', 'binary']",{'issue': 100}
"['fecdda', 'mergerequest', 'pelme', 'issue', 'python', 'package']",{'issue': 100}
"['issue', 'python', 'package', 'withoutbranch']",{'issue': 100}
"['github', 'issue', 'renderingbranch']",{'issue': 100}
"['interoperate', 'issue', 'betterimport', 'problem']",{'issue': 100}
"['issue', 'message']",{'issue': 100}
"['addoption', 'argparse', 'issue', 'pointthanks', 'daniel']",{'issue': 100}
"['changelog', 'issue', 'credit']",{'issue': 100}
"['generation', 'plugin', 'specific', 'issue', 'xfail']","{'generation': 100, 'issue': 100}"
"['junitxml', 'issue']",{'issue': 100}
"['cdbfcunicode', 'changelog', 'issue', 'assertionfloris', 'thanks', 'bruynooghe', 'completedepend']",{'issue': 100}
"['practises', 'discus', 'issue', 'rework', 'close', 'documentcommon', 'layout', 'discus', 'directoryinteracts', 'explicit', 'namespace']",{'issue': 100}
"['explode', 'decorator', 'function', 'fixture', 'address', 'issue', 'params']",{'issue': 100}
"['fixture', 'recursion', 'issue', 'refixalgorithm']",{'issue': 100}
"['class', 'issue', 'simplifiesalgorithm']",{'issue': 100}
"['issue', 'benchmark']",{'issue': 100}
"['fixture', 'autouse', 'issue', 'usefixturesdoctest']",{'issue': 100}
"['issue', 'compat', 'pytestplain', 'unittest', 'duplicate']",{'issue': 100}
"['special', 'issue', 'expression', 'syntax', 'example']",{'issue': 100}
"['function', 'scope', 'address', 'issue', 'modulefinalizer']",{'issue': 100}
"['issue', 'package', 'failure', 'issue']",{'issue': 100}
"['resultlog', 'issue', 'makingexists', 'attribute', 'reprcrash']",{'issue': 100}
"['issue', 'support']",{'issue': 100}
"['script', 'issue', 'bitbucket', 'pytest']",{'issue': 100}
"['import', 'crash', 'previousrewrote']",{'crash': 100}
"['crash', 'import', 'abilityindex', 'access']",{'crash': 100}
"['config', 'session', 'pytestconfig', 'objectwhole', 'issue']",{'issue': 100}
"['issue', 'flake']",{'issue': 100}
"['colorama', 'version', 'issue', 'dependinstead', 'ctypes']",{'issue': 100}
"['filename', 'fixture', 'issue']",{'issue': 100}
"['usage', 'issue', 'address']",{'issue': 100}
"['internal', 'issue', 'pytest', 'address', 'plugins', 'issue']",{'issue': 100}
"['junitxml', 'generates', 'issue', 'pytest']",{'issue': 100}
"['issue', 'unittest', 'pytest']",{'issue': 100}
"['documentation', 'reference', 'issue', 'tmpdir', 'descriptionfound']",{'issue': 100}
"['issue', 'collectslight', 'internal', 'introductionterminal', 'introduce', 'issue', 'experimentalintercept']",{'issue': 100}
"['respect', 'style', 'setup', 'issue', 'teardown', 'error']",{'issue': 100}
"['refactor', 'string', 'xfails', 'issue', 'parametrization']",{'issue': 100}
"['setupclass', 'thanks', 'issue', 'teardownclasssetupclass', 'agopian', 'patch', 'mathieu']",{'issue': 100}
"['rewriter', 'issue', 'assertion', 'method', 'support']",{'issue': 100}
"['issue', 'changelog']",{'issue': 100}
"['plugins', 'autouse', 'issue', 'fixtureplugin', 'fixture', 'autouse', 'nodeidlater', 'fixture', 'autouse', 'fixture', 'front', 'wrong', 'location']",{'issue': 100}
"['issue', 'ignore', 'problem']",{'issue': 100}
"['changelog', 'issue', 'entry']",{'issue': 100}
"['thanks', 'style', 'setup', 'issue', 'teardown', 'error', 'honoralready', 'changelog']",{'issue': 100}
"['issue', 'changelog']",{'issue': 100}
"['issue', 'params', 'module']",{'issue': 100}
"['directory', 'return', 'permission']",{'permission': 100}
"['parent', 'listchain', 'issue']",{'issue': 100}
"['issue', 'parent', 'instance']",{'issue': 100}
"['issue', 'thanks']",{'issue': 100}
"['mergejunitxml', 'generation', 'contains', 'control']",{'generation': 100}
"['issue', 'dependingassume']",{'issue': 100}
"['issue', 'dependingjason', 'thanks']",{'issue': 100}
"['stack', 'function', 'turning']",{'stack': 100}
"['setup', 'setupstate', 'issue', 'teardown', 'setup', 'doesnt', 'sideeffect', 'teardown']",{'issue': 100}
"['issue', 'xfail', 'python']",{'issue': 100}
"['junitxml', 'issue']",{'issue': 100}
"['example', 'issue', 'doctest', 'locationenhancement']",{'issue': 100}
"['expose', 'request', 'fixturerequest', 'object']",{'expose': 100}
"['issue', 'changelog']",{'issue': 100}
"['report', 'issue']",{'issue': 100}
"['print', 'issue']",{'issue': 100}
"['unicode', 'parametrization', 'issue', 'value']",{'issue': 100}
"['compilation', 'issue']",{'issue': 100}
"['plain', 'special', 'issue', 'unittest']",{'issue': 100}
"['plugin', 'optional', 'length']",{'length': 100}
"['suite', 'invocation', 'autouse', 'error', 'issue', 'relates', 'moinmoin']",{'issue': 100}
"['teardowns', 'fixture', 'issue']",{'issue': 100}
"['argument', 'issue', 'invocation']",{'issue': 100}
"['jython', 'workaround', 'issue', 'prolongjython', 'version', 'pytest']",{'issue': 100}
"['issue', 'method']",{'issue': 100}
"['funcarg', 'support', 'pytest', 'integration', 'issue', 'python']",{'issue': 100}
"['trove', 'classifier', 'issue']",{'issue': 100}
"['address', 'issue', 'message', 'error', 'interpreter']",{'issue': 100}
"['pylib', 'version', 'issue']",{'issue': 100}
"['setup', 'issue', 'teardown']",{'issue': 100}
"['refactor', 'issue', 'multiplecollection', 'python', 'cotainingfixture', 'python', 'funcargsusage', 'metafunc', 'pythonimplementation', 'python']",{'issue': 100}
"['attribute', 'flask', 'access', 'issue', 'error', 'ignore', 'example', 'request', 'module', 'object']",{'issue': 100}
"['fixture', 'proxy', 'issue', 'object']",{'issue': 100}
"['issue', 'sense']",{'issue': 100}
"['parametrize', 'value', 'issue']",{'issue': 100}
"['issue', 'traceback', 'pauseusingrather', 'complexity', 'heuristic', 'previoussourcelinesrequire', 'version']",{'issue': 100}
"['unset', 'assertrewrite', 'issue']",{'issue': 100}
"['issue', 'relates', 'conftestexample', 'report']",{'issue': 100}
"['function', 'scope', 'fixture', 'issue', 'point', 'actual', 'instance']",{'issue': 100}
"['class', 'level', 'issue', 'monkeypatch', 'descriptor']",{'issue': 100}
"['issue', 'runtest', 'subclass', 'method', 'support']",{'issue': 100}
"['clear', 'issue', 'ensure']",{'issue': 100}
"['issue', 'plugins']",{'issue': 100}
"['factory', 'chain', 'dependency', 'setup', 'failure', 'issue']",{'issue': 100}
"['builtin', 'issue', 'assertionerror']",{'issue': 100}
"['issue', 'failure']",{'issue': 100}
"['function', 'issue', 'broader', 'setupfunction']",{'issue': 100}
"['contact', 'stackoverflow', 'issue', 'point']",{'issue': 100}
"['access', 'funcargs', 'issue']",{'issue': 100}
"['setup', 'issue', 'xfail', 'xpass']",{'issue': 100}
"['capfd', 'issue', 'capsys', 'output']",{'issue': 100}
"['classname', 'junitxml', 'issue']",{'issue': 100}
"['changelog', 'issue']",{'issue': 100}
"['exclusive', 'issue', 'binary', 'junitxml']",{'issue': 100}
"['parametrize', 'class', 'issue']",{'issue': 100}
"['function', 'issue', 'wrongproduce', 'output']",{'issue': 100}
"['parametrize', 'refinement', 'series', 'issue', 'criticalcollaboration', 'funcargs', 'xunit', 'issue', 'cleanup']",{'issue': 100}
"['runtestprotocol', 'teardowns', 'setup', 'issue', 'teardown']",{'issue': 100}
"['changelog', 'issue', 'entry']",{'issue': 100}
"['aeaee', 'mergeoption', 'issue', 'pastebin', 'python']",{'issue': 100}
"['daniel', 'issue', 'doctest', 'nouri']",{'issue': 100}
"['issue', 'missfit']",{'issue': 100}
"['issue', 'funcargs']",{'issue': 100}
"['issue', 'changelog']",{'issue': 100}
"['mergethanks', 'contains', 'issue', 'junitxml']",{'issue': 100}
"['quick', 'issue', 'review']",{'issue': 100}
"['changelog', 'issue', 'number']",{'issue': 100}
"['abilityfoundstreamline', 'generation']",{'generation': 100}
"['failure', 'issue']",{'issue': 100}
"['people', 'issue']",{'issue': 100}
"['version', 'issue', 'download']",{'issue': 100}
"['finalization', 'issue', 'partial']",{'issue': 100}
"['style', 'setup', 'issue']",{'issue': 100}
"['changelog', 'issue']",{'issue': 100}
"['issue', 'error']",{'issue': 100}
"['markinfo', 'issue']",{'issue': 100}
"['internal', 'issue']",{'issue': 100}
"['comparisation', 'issue']",{'issue': 100}
"['exception', 'issue', 'tracebacks', 'doctests']",{'issue': 100}
"['junitxml', 'issue', 'timing', 'output']",{'issue': 100}
"['session', 'namespace', 'expose', 'pytest']",{'expose': 100}
"['internal', 'issue', 'custom', 'configure', 'tracebacks']",{'issue': 100}
"['subprocesses', 'config', 'methodplugin', 'xdist', 'issue', 'pytest']",{'issue': 100}
"['class', 'collection', 'issue', 'error']",{'issue': 100}
"['certain', 'crash', 'issue', 'python', 'clear', 'fresh', 'writer']","{'crash': 100, 'issue': 100}"
"['keyword', 'issue']",{'issue': 100}
"['grammar', 'issue', 'laura']",{'issue': 100}
"['error', 'issue']",{'issue': 100}
"['layout', 'issue']",{'issue': 100}
"['issue', 'pythonargument', 'devision', 'maxsize', 'syntax', 'integerpython']",{'issue': 100}
"['traceconfig', 'header', 'information', 'plugin', 'extra', 'version', 'issue']",{'issue': 100}
"['numpy', 'array', 'issue', 'assertion', 'expressionexception', 'raising', 'method', 'object']",{'issue': 100}
"['pylib', 'issue', 'update']",{'issue': 100}
"['combo', 'issue', 'python']",{'issue': 100}
"['eduardo', 'thanks', 'issue']",{'issue': 100}
"['reference', 'changelog', 'issue', 'version']",{'issue': 100}
"['assert', 'failure', 'issue', 'prettyprint', 'exception', 'failure', 'doctest', 'unexpectedrepresentation']",{'issue': 100}
"['setup', 'issue', 'wrong', 'teardown', 'xfailsetup', 'function', 'teardownxfail']",{'issue': 100}
"['issue', 'error']",{'issue': 100}
"['issue', 'update']",{'issue': 100}
"['issue', 'update']",{'issue': 100}
"['issue', 'conftest', 'outputbranch', 'trunk']",{'issue': 100}
"['introduce', 'issue', 'capturedefault', 'overridecontentimportbranch', 'trunk']",{'issue': 100}
"['issue', 'pythonbranch', 'trunk']",{'issue': 100}
"['issue', 'siblingsimplify', 'refinebranch', 'trunk']",{'issue': 100}
"['presence', 'doctestmodules', 'issue', 'fixingbranch', 'trunk']",{'issue': 100}
"['assertion', 'issue', 'represenationbranch', 'trunk']",{'issue': 100}
"['issue', 'updatebranch', 'trunk']",{'issue': 100}
"['issue', 'minorbranch', 'trunk']",{'issue': 100}
"['issue', 'adjustbranch', 'trunk']",{'issue': 100}
"['claim', 'issue', 'maciejapplybranch', 'trunk']",{'issue': 100}
"['issue', 'junitxmlbranch', 'trunk']",{'issue': 100}
"['issue', 'looponfailbranch', 'trunk']",{'issue': 100}
"['option', 'maxfailures', 'issue', 'introducinginformative', 'printbranch', 'trunk']",{'issue': 100}
"['decorator', 'class', 'issue', 'allowusingmarker', 'multiple', 'class', 'level', 'applieddecorator', 'xfail', 'condition', 'explanationbranch', 'trunk']",{'issue': 100}
"['issue', 'robust', 'bogus', 'careful', 'unexpectedacceptbranch', 'trunk']",{'issue': 100}
"['helper', 'introduce', 'issue', 'certain', 'useful', 'especiallyconfiguration', 'expectedapproach', 'declarativeconfiguration', 'wouldbranch', 'trunk']",{'issue': 100}
"['import', 'issue', 'treatbranch', 'trunk']",{'issue': 100}
"['issue', 'xdistbranch', 'trunk']",{'issue': 100}
"['issue', 'threebranch', 'trunk']",{'issue': 100}
"['issue', 'duplicatebranch', 'trunk']",{'issue': 100}
"['issue', 'deprecationbranch', 'trunk']",{'issue': 100}
"['issue', 'updatebranch', 'trunk']",{'issue': 100}
"['session', 'refinement', 'implementation', 'update', 'crash', 'collectionbranch', 'trunk']",{'crash': 100}
"['expose', 'exceptionactionrefine', 'runnerbranch', 'trunk']",{'expose': 100}
"['expose', 'exception', 'runtest', 'documentplugin', 'runner', 'definitionobsoletingbranch', 'trunk']",{'expose': 100}
"['logic', 'invalid', 'import', 'refine', 'issue', 'package', 'conftestbranch', 'trunk']",{'issue': 100}
"['refine', 'ascii', 'internal', 'issue', 'junitxml', 'method', 'outputbranch', 'trunk']",{'issue': 100}
"['unicode', 'issue', 'armin', 'changesetbranch', 'trunk']",{'issue': 100}
"['xdist', 'plugin', 'pytest', 'issue', 'point', 'looponfailingbranch', 'trunk']",{'issue': 100}
"['unbound', 'strike', 'import', 'superflous', 'issue', 'causelocalbranch', 'trunk']",{'issue': 100}
"['issue', 'prologicdiscussion', 'ronny', 'earlierbranch', 'trunk']",{'issue': 100}
"['address', 'setup', 'issue', 'teardownclass', 'calledraise', 'errorbranch', 'trunk']",{'issue': 100}
"['setup', 'level', 'issue', 'python', 'teardowndetail', 'performs', 'otherwisesuccessful', 'order', 'guess', 'setup', 'teardown', 'consideredsense', 'teardowns', 'failingbranch', 'trunk']",{'issue': 100}
"['pygments', 'generation', 'installedbranch', 'trunk']",{'generation': 100}
"['default', 'issue', 'bogus', 'terminal', 'getdimensionsbranch', 'trunk']",{'issue': 100}
"['basenamealready', 'guess', 'issue', 'althoughbranch', 'trunk']",{'issue': 100}
"['issue', 'soritngbranch', 'trunk']",{'issue': 100}
"['discovers', 'generation', 'chdir', 'standalone', 'script', 'testingbranch', 'trunk']",{'generation': 100}
"['standalone', 'script', 'issue', 'runningstandalonefilename', 'carefulbranch', 'trunk']",{'issue': 100}
"['termination', 'runresult', 'introduce', 'update', 'issue', 'durationbranch', 'trunk']",{'issue': 100}
"['capfd', 'cleanup', 'plugin', 'regen', 'funcarg', 'issue', 'usingbranch', 'trunk']",{'issue': 100}
"['streamline', 'overall', 'deprecation', 'issue', 'reducebranch', 'trunk']",{'issue': 100}
"['issue', 'windowbranch', 'trunk']",{'issue': 100}
"['issue', 'windowbranch', 'trunk']",{'issue': 100}
"['issue', 'execnetbranch', 'trunk']",{'issue': 100}
"['issue', 'update', 'smallbranch', 'trunk']",{'issue': 100}
"['compatibility', 'changelog', 'issue', 'rootlevelbranch', 'trunk']",{'issue': 100}
"['plugin', 'release', 'final', 'installchangelog', 'symlinkbeause', 'issue', 'installbranch', 'trunk']",{'issue': 100}
"['update', 'installationrework', 'installationmultiprocess', 'window', 'issue', 'entry', 'setuptoolsstrike', 'reference', 'sourcebranch', 'trunk']",{'issue': 100}
"['import', 'issue', 'pythonpathbranch', 'trunk']",{'issue': 100}
"['issue', 'patchalways', 'encodingbranch', 'trunk']",{'issue': 100}
"['depth', 'visit', 'issue', 'returnbranch', 'trunk']",{'issue': 100}
"['sanity', 'check', 'xspec', 'arbitraryretain', 'stdin', 'issue', 'python', 'fixingstream', 'reference', 'underlyingbranch', 'trunk']",{'issue': 100}
"['experiemntalprocess', 'scope', 'funcargs', 'setup', 'weird', 'issue', 'teardownbranch', 'trunk']",{'issue': 100}
"['issue', 'execnetbranch', 'trunk']",{'issue': 100}
"['issue', 'python', 'variousgateway', 'initializationbootstrapbranch', 'trunk']",{'issue': 100}
"['loggingwrites', 'introduce', 'unicode', 'issue', 'encodedfilebranch', 'trunk']",{'issue': 100}
"['regen', 'generation', 'improvebranch']",{'generation': 100}
"['existence', 'issue', 'multiprocessingfileno', 'redirection', 'methodbranch']",{'issue': 100}
"['issue', 'addressfunction', 'allowbranch']",{'issue': 100}
"['issue', 'tracker', 'removekeyword', 'subsitutionsetup', 'regen', 'insteadbranch', 'trunk']",{'issue': 100}
"['likely', 'registration', 'window', 'plugin', 'issue', 'comparisonbranch', 'trunk']",{'issue': 100}
"['apigen', 'issue', 'fixingbranch', 'trunk']",{'issue': 100}
"['issue', 'setuptools', 'mediatedscript', 'setuptools', 'installedbranch', 'trunk']",{'issue': 100}
"['issue', 'capturingworkaround', 'global', 'issue', 'objectbranch', 'trunk']",{'issue': 100}
"['issue', 'addressfillfuncargs', 'exposebranch', 'trunk']",{'issue': 100}
"['function', 'issue', 'addressintroduce', 'factor', 'funcargsremovebranch', 'trunk']",{'issue': 100}
"['issue', 'windowbranch', 'trunk']",{'issue': 100}
"['issue', 'delaybranch', 'trunk']",{'issue': 100}
"['synchronize', 'rsync', 'temporary', 'issue', 'executablebranch', 'trunk']",{'issue': 100}
"['issue', 'windowbranch', 'trunk']",{'issue': 100}
"['makefile', 'channel', 'provideclose', 'crash', 'finalizationbranch', 'trunk']",{'crash': 100}
"['infinite', 'recursion', 'issue', 'thanks', 'chrisbranch', 'trunk']",{'issue': 100}
"['class', 'cleanup', 'mechanic', 'refactoringsetdaemon', 'receiverthreadatexit', 'thread', 'receiver', 'blockbranch', 'trunk']",{'thread': 100}
"['issue', 'trackedbranch', 'trunk']",{'issue': 100}
"['rlcompleter', 'issue', 'pdbplusbranch', 'trunk']",{'issue': 100}
"['issue', 'trackerbranch', 'trunk']",{'issue': 100}
"['generation', 'menubar', 'method', 'splitgeneration', 'overrideapigenbranch', 'trunk']",{'generation': 100}
"['issue', 'konquerorbranch', 'trunk']",{'issue': 100}
"['order', 'class', 'index', 'source', 'changedremove', 'function', 'possibleattribute', 'header', 'class', 'propertytrace', 'stack', 'laterbranch', 'trunk']",{'stack': 100}
"['stack', 'function', 'inlineavoidbranch', 'trunk']",{'stack': 100}
"['exclusive', 'issue', 'probablygivenbranch', 'trunk']",{'issue': 100}
"['generation', 'cleanup', 'smallbranch', 'trunk']",{'generation': 100}
"['generation', 'layout', 'class', 'hopefullygeneration', 'presentationbranch', 'trunk']",{'generation': 100}
"['shutdown', 'precisionqueue', 'exception', 'thread', 'stillmessagebranch', 'trunk']",{'thread': 100}
"['issue', 'windowbranch', 'trunk']",{'issue': 100}
"['trace', 'stack', 'snippet', 'syntaxbranch', 'trunk']",{'stack': 100}
"['unicode', 'apigen', 'htmldocument', 'python', 'supportaccomplish', 'order', 'issue', 'hiddenindentation', 'issuebranch', 'trunk']",{'issue': 100}
"['check', 'stack', 'visual', 'modificationobjectbranch', 'trunk']",{'stack': 100}
"['issue', 'changedbranch', 'trunk']",{'issue': 100}
"['issue', 'instance', 'source', 'current', 'child', 'siblingnamespacebranch', 'trunk']",{'issue': 100}
"['branchrevisionfijalrsync', 'expose', 'execnetclass', 'collectoraddedlogic', 'mapcolitems', 'strange', 'getfscollector', 'branchbranch', 'trunk']",{'expose': 100}
