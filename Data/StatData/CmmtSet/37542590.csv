message,fuzzy
"['revocation', 'issue']",{'issue': 100}
"['mergerequest', 'security']",{'Security': 100}
"['bbccdcnetflix', 'request', 'mergedisclosure', 'update', 'documentation', 'security']",{'Security': 100}
"['disclosure', 'update', 'security', 'process']",{'Security': 100}
"['buffer', 'master']",{'buffer': 100}
"['usability', 'security', 'buffer', 'method']","{'Security': 100, 'buffer': 100}"
"['flask', 'bcrypt']",{'bcrypt': 100}
"['bafbb', 'mergejtschladen', 'request', 'notification', 'issuerfield', 'notification', 'issuer']",{'issue': 91}
"['field', 'notification', 'issuer', 'format']",{'issue': 91}
"['bleach', 'securitymozilla', 'security', 'update', 'bleachrelease', 'mozilla', 'bleachchange', 'mozilla', 'master', 'changelog', 'bleachbleach', 'commits', 'mozilla', 'comparedependabot', 'preview', 'support']",{'Security': 100}
"['expectation', 'summary', 'notification', 'incorrect', 'email', 'return']",{'incorrect': 100}
"['mergejtschladen', 'request', 'summary', 'email', 'expirationemail', 'summary', 'security', 'expiration']",{'Security': 100}
"['email', 'summary', 'security', 'expiration']",{'Security': 100}
"['security', 'jtschladen', 'request', 'email', 'notification', 'email', 'expiration']",{'Security': 100}
"['mergerequest', 'hosseinsh', 'retry', 'issuerretry', 'issuer']",{'issue': 91}
"['append', 'permission']",{'permission': 100}
"['mergerequest', 'charhate', 'mergecheck', 'length']",{'length': 100}
"['check', 'length']",{'length': 100}
"['ebfcemaster', 'request', 'peschmaeclient', 'entropy']",{'entropy': 100}
"['typeerror', 'float', 'integer', 'object']",{'integer': 100}
"['client', 'remark', 'entropy']",{'entropy': 100}
"['afbbbnetflix', 'request', 'mergeenvironment', 'travis', 'issue']",{'issue': 100}
"['validity', 'issuer']",{'issue': 91}
"['client', 'entropy']",{'entropy': 100}
"['mergerequest', 'charhate', 'validity', 'issuer']",{'issue': 91}
"['validity', 'issuer']",{'issue': 91}
"['invalid', 'contains', 'validationerrorchange', 'field', 'example', 'lemur', 'contains', 'error', 'empty', 'validationerror', 'reproduce', 'exception', 'crash', 'valueerror', 'supplysubjectcause', 'empty', 'valueerror']",{'crash': 100}
"['validation', 'character', 'length', 'account']",{'length': 100}
"['empty', 'errorempty', 'threwraise', 'exceptioncertificate', 'empty', 'length']",{'length': 100}
"['authority', 'issuer']",{'issue': 91}
"['string', 'integer']",{'integer': 100}
"['rajatsharma', 'bugfixvalidator', 'fatal', 'schema', 'error']",{'fatal': 100}
"['fatal', 'schema', 'error']",{'fatal': 100}
"['mergerequest', 'hosseinsh', 'issuer', 'possibility', 'default']",{'issue': 91}
"['plugin', 'certificate', 'permission']",{'permission': 100}
"['multi', 'support', 'profile', 'digicertauthority', 'issue', 'configsinterauthority', 'config', 'corresponding', 'digicerttable', 'intermediary', 'corresponding', 'certificate']",{'issue': 100}
"['option', 'lemur', 'issue', 'netflix', 'configuration']",{'issue': 100}
"['expose', 'field', 'hasprivatekey', 'certificatedisable', 'privateprivate']",{'expose': 100}
"['security', 'recipient', 'duplicate', 'owner', 'notification', 'email']",{'Security': 100}
"['sensitive', 'query', 'domain']",{'Sensitive': 100}
"['enhance', 'creation', 'sensitive', 'query', 'domain']",{'Sensitive': 100}
"['castrapelresponse', 'expose', 'error', 'exact', 'digicert']",{'expose': 100}
"['response', 'expose', 'error', 'exact', 'digicert']",{'expose': 100}
"['castrapelverisign', 'expose', 'exception']",{'expose': 100}
"['verisign', 'expose', 'exception']",{'expose': 100}
"['travis', 'sincenetflix', 'lemur', 'issue']",{'issue': 100}
"['mergespecial', 'request', 'issuer', 'value']",{'issue': 91}
"['issuer', 'valuedistinguish']",{'issue': 91}
"['request', 'intgr', 'expose', 'string', 'certificate']",{'expose': 100}
"['expose', 'string', 'certificateversion', 'cryptography', 'method']",{'expose': 100}
"['private', 'certificate', 'check', 'storedplacevalidation', 'certificate', 'import', 'validator', 'throwensure', 'lemur', 'certificate', 'model', 'constructor', 'integrityplugins', 'issuer']",{'issue': 91}
"['source', 'plugin', 'issuer']",{'issue': 91}
"['plugin', 'kubernetes', 'destinationmajor', 'plugin', 'kubernetes', 'issueserver', 'making', 'valid', 'string', 'certificate', 'validation', 'issue']",{'issue': 100}
"['textarea', 'validation', 'destinationcommit', 'destination', 'plugin', 'expression', 'validation', 'plugins', 'textarea', 'string', 'issue', 'corrects', 'support', 'address', 'kubernetes']",{'issue': 100}
"['castrapelurllib', 'issue', 'request']",{'issue': 100}
"['urllib', 'issue', 'request']",{'issue': 100}
"['castrapelimport', 'issue', 'certificate']",{'issue': 100}
"['import', 'issue', 'certificate']",{'issue': 100}
"['castrapelconfig', 'validate', 'issue']",{'issue': 100}
"['config', 'validate', 'issue']",{'issue': 100}
"['insensitive', 'permission']","{'Sensitive': 90, 'permission': 100}"
"['insensitive', 'permission']","{'Sensitive': 90, 'permission': 100}"
"['private', 'issue']",{'issue': 100}
"['boolean', 'properflask', 'restful', 'issue']",{'issue': 100}
"['boolean', 'properflask', 'restful', 'issue']",{'issue': 100}
"['concurrent', 'letsencrypt', 'support', 'issuance', 'route']",{'concurrent': 100}
"['concurrent', 'letsencrypt', 'support', 'issuance', 'route']",{'concurrent': 100}
"['certificate', 'issue']",{'issue': 100}
"['creates', 'tablerelationship', 'initialization', 'tableinformation', 'certificateinformation', 'backfill', 'issuedissuedchangeticketcreate', 'emptyissueplugins', 'request', 'empty', 'complete', 'immediatelyplace', 'sincereplace', 'issuedallow', 'empty', 'privatecreate', 'private', 'import', 'requireprivate', 'issuegenerate', 'transparent', 'workflow', 'lemurupstream', 'lemurchange', 'empty', 'createprivate', 'option', 'creation', 'certificatedictionary', 'source', 'check', 'syncsgiven', 'pending', 'pluginchange', 'fetch', 'plugins', 'issuer', 'functioncontrol', 'certificatecertificate', 'populate', 'gettingcertificateticketchangerevert', 'certificate', 'authorityinstead', 'authoritychange', 'iedfafbabefadaeticketfixture', 'basicchangeticketparameterpopulatecreator', 'current', 'owner', 'chaindepends', 'empty', 'plugin', 'implementationchange', 'filter', 'permalinksingle', 'permalink', 'certificate', 'button', 'pendingcertificate', 'argument', 'filter', 'pending', 'parsingusage', 'usefulinstead', 'usingchangeticketfield', 'certificate', 'update', 'pending', 'displayedfield', 'certificate', 'field', 'usefulnumber', 'attempt', 'fetchchange', 'possibility', 'return', 'certificatesince', 'duplicate', 'functionchange', 'privatecreator', 'owner', 'authorization', 'capability', 'certificatemodify', 'scopechange', 'passiveupdate', 'similar', 'notification', 'affectticketchange', 'ibbcbafebffcekwargs', 'official', 'commonchange', 'table', 'delete', 'certificatecancellation', 'issuer', 'successfulcancel', 'certificateviewable', 'lemur', 'fetchedchange', 'iaeeaacafefccaeticketbutton', 'pending', 'option', 'cancelmodal', 'window', 'requireddigicertcancel', 'schema', 'inputorder', 'plugin', 'digitcert', 'existantorder', 'sittingchange', 'icecddddcfedcbticketchange', 'pending', 'creates', 'injectscanceledchangeticketorder', 'existentorder', 'existentchangeticketmigrationforeign', 'certificate', 'pending', 'table', 'relationship', 'fieldexplicit', 'column', 'certificaterename', 'creation', 'certificateinstead', 'expungingweird', 'reference']",{'issue': 91}
"['netflix', 'lemur', 'issue']",{'issue': 100}
"['revoke', 'plugin', 'issuer', 'certificate', 'digicertchange']",{'issue': 91}
"['expose', 'camelcase', 'fieldfilter']",{'expose': 100}
"['backendbackendbasicsecond', 'length', 'custom', 'reallyexact', 'providedcreator', 'unrevokedchangecreatemodify', 'admin', 'permissionfrontend', 'lemur', 'backend', 'changereview', 'determineinconsistency', 'moduleauthor', 'inputtedfirstallow', 'revoke', 'schemanormalizes', 'useridfrontend', 'respondtokenclickingclickingbackend']",{'length': 100}
"['nodejs', 'legacy', 'quickstart', 'release', 'command', 'issue', 'solves', 'legacy', 'nodejsrelease', 'lemurdependency', 'installinginstallclean', 'dependency', 'project', 'moment', 'preventforeach', 'issue', 'update', 'issue', 'update', 'release', 'update', 'graceful', 'pleaseinstead', 'issue', 'update', 'regexp', 'minimatchglobal', 'preferpostinstall', 'optipng', 'lemurfoundpostinstall', 'install', 'optipngenoent', 'install', 'spawn', 'optipngpostinstall', 'jpegtran', 'lemurfoundpostinstall', 'install', 'jpegtranspawn', 'install', 'jpegtran', 'enoentpostinstall', 'gifsicle', 'lemurfoundpostinstall', 'install', 'gifsicleinstall', 'gifsicle', 'spawn', 'enoentpostinstall', 'lemurallow', 'false', 'install', 'bowerdirectorytarget', 'release', 'makefile', 'reciperelease', 'errorlemurlemursolve', 'package', 'installinglemur', 'legacy', 'vsnine', 'install', 'package', 'followingnodejs', 'legacyremove', 'newlyspace', 'additionalubuntu', 'update', 'legacy', 'nodejs', 'xenial', 'package', 'nodejs', 'unpack', 'nodejsnodejs', 'legacy', 'unpackingtrigger', 'processingnodejs', 'setting', 'legacyvsnine', 'lemurvsnine', 'lemur']",{'issue': 100}
"['lemur', 'issue']",{'issue': 100}
"['sensitive', 'logic', 'restriction', 'domainpotential', 'security', 'issueunexpectedinsteaddomain', 'discussion', 'restriction', 'domain', 'value', 'commonspace']","{'Sensitive': 100, 'Security': 100}"
"['private', 'sensitive', 'access', 'field', 'modelpotential', 'securitypassword', 'filter', 'content', 'functioncharacterarbitrary', 'method', 'functionsortdir', 'distinct', 'model', 'example', 'arbitrary', 'sortbyproduce']",{'Sensitive': 100}
"['autorotation', 'fixingchange', 'rotation', 'issue', 'certificate']",{'issue': 100}
"['basicbasic', 'password', 'recieve', 'incorrect', 'status']",{'incorrect': 100}
"['certificate', 'issue', 'domain']",{'issue': 100}
"['basic', 'certificate', 'issue', 'error']",{'issue': 100}
"['bugfix', 'issuekeyid', 'ensures', 'issue', 'serialfield', 'validation', 'issueensure', 'certificate', 'template', 'scenario', 'subaltnames', 'droppedensure', 'includeswithout', 'gettingapproach', 'cleanerobject']",{'issue': 100}
"['exclusive', 'radio', 'button', 'encipher', 'decipher', 'version', 'usage', 'adjustmentrelationship', 'friendly', 'encipher', 'decipher', 'checkable', 'option', 'exclusive', 'issue', 'encipher', 'decipher', 'radio', 'switchingagreement', 'field', 'encipher', 'decipher']",{'issue': 100}
"['default', 'issuer']",{'issue': 91}
"['variable', 'issuer', 'digicert']",{'issue': 91}
"['minor', 'fixing', 'issue']",{'issue': 100}
"['certificate', 'issue', 'plugins']",{'issue': 100}
"['source', 'issue']",{'issue': 100}
"['issue', 'certificate', 'clearer', 'notification', 'script', 'migration']",{'issue': 100}
"['protractor', 'dependencyquickstart', 'issue', 'followingerror', 'output', 'property', 'typeerror', 'registry', 'share', 'clientnodejs', 'gracefulreportisaac', 'issueemailgeneric', 'system', 'linuxnodejs', 'install', 'commandlemurbottom', 'output', 'protractor', 'missingselenium', 'webdriver', 'protractor', 'webdriver', 'protractor', 'support', 'source', 'protractor', 'missingwebdriver', 'protractor', 'manager', 'missingdepends', 'protractor', 'version', 'protractor', 'nodejs', 'section', 'compatibilitypackageconstrains', 'protractor', 'dependencydebug', 'commentcompare', 'protractor', 'mllrsohn']",{'issue': 100}
"['member', 'issuer']",{'issue': 91}
"['openssl', 'ensure', 'cryptography']",{'OpenSSL': 100}
"['module', 'issue', 'module', 'issue', 'module', 'lemurappears', 'processresult', 'display', 'method', 'issueissuemethod', 'fixture', 'usingmethod', 'modulemethod', 'fixture', 'initializesmethod', 'session', 'complete', 'issueexecute', 'commandlemurupdate', 'feedback', 'request', 'original', 'addedsession', 'fixture', 'revertedmethodsession']",{'issue': 100}
"['domain', 'support', 'lemur', 'mentionadministrator', 'issue', 'regular', 'expression', 'domain', 'matchingoption', 'certificate', 'domainconfiguration', 'option']",{'issue': 100}
"['valid', 'issue']",{'issue': 100}
"['valid', 'issue']",{'issue': 100}
"['certificate', 'issue']",{'issue': 100}
"['issue', 'updati', 'duplicate', 'notification']",{'issue': 100}
"['kevgliss', 'permission']",{'permission': 100}
"['certificate', 'issue']",{'issue': 100}
"['validtion', 'openssl']",{'OpenSSL': 100}
"['hotfix', 'kevglissclear', 'custom', 'issue']",{'issue': 100}
"['clear', 'custom', 'issue']",{'issue': 100}
"['hotfix', 'kevglissclear', 'custom', 'issue']",{'issue': 100}
"['clear', 'custom', 'issue']",{'issue': 100}
"['mergetruststore', 'request', 'kevgliss', 'permission', 'mergeexport', 'plugins']",{'permission': 100}
"['kevglisserror', 'certificate', 'issue']",{'issue': 100}
"['error', 'certificate', 'issue']",{'issue': 100}
"['sensitive', 'kevgliss', 'allowe', 'domain']",{'Sensitive': 100}
"['mergeerror', 'request', 'kevgliss', 'length', 'mergeclose']",{'length': 100}
"['encryption', 'multifernetencryption', 'rotation', 'facilitatesutils', 'sqlalchemy']",{'encryption': 100}
"['decryption', 'kevglissnewlines', 'accidental', 'ensure']",{'encryption': 90}
"['kevglissbuild', 'general', 'issue']",{'issue': 100}
"['lemur', 'entropy']",{'entropy': 100}
"['lemur', 'entropy']",{'entropy': 100}
"['issue', 'weird']",{'issue': 100}
"['localhost', 'creates', 'issue', 'package', 'instance', 'combination', 'javascript', 'addedissue', 'nginx', 'rightconflict']",{'issue': 100}
"['localhost', 'issue', 'package', 'combination', 'addedinstance', 'creates', 'agnostic', 'javascript']",{'issue': 100}
"['complexity', 'encryption']",{'encryption': 100}
"['initial', 'openssl']",{'OpenSSL': 100}
"['issuer', 'function']",{'issue': 91}
"['special', 'strip', 'lemur', 'certificate', 'issue', 'dislike', 'general', 'issuer']",{'issue': 91}
"['issuer', 'function']",{'issue': 91}
"['befdcrequest', 'kevgliss', 'hotfix', 'certnamespecial', 'issuer', 'issue']",{'issue': 100}
"['special', 'strip', 'lemur', 'certificate', 'issue', 'dislike', 'general', 'issuer']",{'issue': 91}
