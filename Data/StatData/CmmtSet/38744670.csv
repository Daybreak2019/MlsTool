message,fuzzy
"['retries', 'connection', 'patroni', 'version', 'kazoo', 'zookeeper', 'request', 'demote', 'patroni', 'connection', 'kazoo', 'zookeeper', 'insteadreturn', 'behavior', 'override', 'ensure', 'addition', 'order', 'methodpatroni', 'zalando', 'issue']",{'issue': 100}
"['version', 'clusterpatroni', 'zalando', 'issue']",{'issue': 100}
"['encryption', 'issue', 'trafficencryption', 'behavepysyncobj', 'parent', 'class', 'property', 'release', 'methodpatroni', 'zalando', 'issue']","{'encryption': 100, 'issue': 100}"
"['invalid', 'warning', 'parameter', 'falsebecame', 'postgresql', 'patroni', 'reason', 'recovery', 'parameterhappens', 'postgresql', 'validation', 'false', 'recovery', 'oversightpatroni', 'zalando', 'issue']",{'issue': 100}
"['custom', 'bootstrap', 'issue', 'littlepostgres', 'warning', 'restartpatroni', 'issue', 'config', 'zalando', 'invalid', 'address', 'issuecomment']",{'issue': 100}
"['logical', 'failoverchange', 'consistsglobal', 'primary', 'permanent', 'logical', 'current', 'update', 'valueobject', 'member', 'status', 'patroni', 'compatibility', 'interaction', 'leader', 'order', 'number', 'optime', 'backwardtrickyprimary', 'patroni', 'connection', 'rewind', 'superuser', 'replica', 'order', 'credential', 'replica', 'exists', 'logical', 'alreadyadditional', 'requirementprimary', 'tuples', 'patroni', 'replica', 'order', 'patroni', 'warning', 'logical', 'right', 'couldcreate', 'postgresql', 'patroni', 'refuse', 'function', 'postgres', 'version', 'logical', 'right', 'promotion', 'createspatroni', 'zalando', 'issue']",{'issue': 100}
"['attempt', 'prometheus', 'quickpatroni', 'zalando', 'issue']",{'issue': 100}
"['concurrent', 'error', 'current', 'valuepatroni', 'zalando', 'issue']","{'concurrent': 100, 'issue': 100}"
"['booleanpatroni', 'zalando', 'issue']",{'issue': 100}
"['special', 'document', 'pgdataattention', 'cornercase', 'information', 'issuewaldir', 'option', 'sampleincrease', 'configuration', 'sectiondiscussion', 'zalando', 'issue', 'patroni']",{'issue': 100}
"['empty', 'psutil', 'cmdline', 'handlepatroni', 'zalando', 'issue']",{'issue': 100}
"['suite', 'limitation', 'cipher', 'supportlimitation', 'environment', 'suite', 'ciphergerman', 'requirementshareddocs', 'publication', 'publicationfile', 'downloads', 'enforces', 'cipher']",{'cipher': 100}
"['patroni', 'server', 'patroni', 'authentication', 'explicitlypatroni', 'zalando', 'issue']",{'issue': 100}
"['python', 'compatibility', 'consultherefore', 'python', 'package', 'different', 'consulmodule', 'support', 'compatibleaccount', 'direct', 'requirement', 'python', 'choice', 'consulpatroni', 'zalando', 'issue']",{'issue': 100}
"['attributeerror', 'handlemodule', 'interpreter', 'method', 'alreadyexception', 'silencepatroni', 'zalando', 'issue']",{'issue': 100}
"['implementpatroni', 'zalando', 'issue']",{'issue': 100}
"['issue', 'ignoreexception', 'patroni', 'config', 'otherwiseissue', 'addition']",{'issue': 100}
"['matter', 'configpatroni', 'zalando', 'issue']",{'issue': 100}
"['coverage', 'codacy', 'submit', 'secret', 'availablecoverage', 'codacy', 'report', 'secret', 'security', 'external']",{'Security': 100}
"['zookeeper', 'issuehigher', 'incorrect', 'calculation', 'parent', 'sleep', 'method', 'return', 'returnedexhibitor']",{'incorrect': 100}
"['missingpatch', 'error', 'socketserver', 'runtime', 'handlingrequest', 'thread', 'handlesocket', 'connection', 'handshake', 'client', 'cpython', 'function', 'python', 'processing', 'baseserver', 'socketserverrequestrequest', 'patroni', 'default', 'returnrequest', 'patroni', 'tuple', 'style', 'handlerequest', 'patroni', 'tuple', 'style', 'handlerequest', 'support', 'tuple', 'style', 'missingpatch', 'request', 'patroni', 'support', 'tuple', 'style']",{'thread': 100}
"['crash', 'applydefault', 'crash', 'current', 'postgres', 'leader', 'chance', 'different', 'startcrash', 'matter', 'postgres', 'recovery', 'leader', 'workaround', 'order', 'current', 'startsituationspace', 'postgres', 'mastercrash', 'single', 'patroni', 'recovery', 'crash', 'patroni', 'recovery', 'leaderintervention', 'patroni', 'stuckmight', 'patroni', 'option', 'postgres', 'release', 'healthy', 'replica', 'available', 'leader', 'control', 'state', 'alreadyoption', 'crash']",{'crash': 100}
"['unittest', 'workaround', 'requirementunittest', 'issuedepends', 'dependency', 'urllib', 'ipaddress', 'kubernetespatroni', 'zalando', 'issue', 'closepatroni', 'zalando', 'issue']",{'issue': 100}
"['password', 'supportpatroni', 'zalando', 'issue']",{'issue': 100}
"['exception', 'preventedblock', 'additionpatroni', 'zalando', 'issue']",{'issue': 100}
"['directory', 'support', 'configurationpossible', 'point', 'directory', 'configuration', 'insteadpatroni', 'order', 'directory', 'sortedpatroni', 'zalando', 'issue']",{'issue': 100}
"['successfullypatroni', 'zalando', 'issue']",{'issue': 100}
"['littleempty', 'character', 'pgpass', 'actual', 'valueexample', 'exception', 'initialization', 'cluster', 'raisepatroni', 'zalando', 'issue']",{'issue': 100}
"['switchover', 'flush', 'patronictlswitchover', 'delete', 'implementingpatroni', 'zalando', 'issue']",{'issue': 100}
"['possible', 'conditionobjectcache', 'zookeeper', 'update', 'likely', 'version', 'chance', 'session', 'advantage', 'value', 'object', 'consul', 'error', 'sinceobject', 'resource', 'repeat', 'recheck', 'current', 'version', 'leader', 'retry', 'additionpatroni', 'zalando', 'issue']",{'issue': 100}
"['nodename', 'reference', 'subset', 'populate', 'label', 'issue', 'service', 'postgres', 'zalando', 'subset', 'operator']",{'issue': 100}
"['standby', 'check', 'cluster', 'health', 'handlepatroni', 'zalando', 'issue']",{'issue': 100}
"['handshake', 'block', 'thread', 'client', 'sslsocket', 'whole', 'immediatelydefer', 'request', 'handshake', 'issue', 'thread', 'ordersolution', 'threadpatroni', 'zalando', 'issue']","{'thread': 100, 'issue': 100}"
"['overwrite', 'postgresql', 'possible', 'custom', 'fallback', 'ignore', 'parameter', 'configuration', 'specify', 'valuepatroni', 'zalando', 'issue']",{'issue': 100}
"['divergence', 'timeline', 'check', 'improverewindswitchpoint', 'location', 'replica', 'formerprimary', 'switchpoint', 'record', 'checkpoint', 'formerparse', 'checkpoint', 'order', 'recordpatroni', 'zalando', 'issue']",{'issue': 100}
"['patroni', 'process', 'block', 'block', 'report', 'orderpatroni', 'zalando', 'issue']",{'issue': 100}
"['checkpoint', 'threadmember', 'replica', 'leader', 'checkpoint', 'normallylonger', 'thread', 'replica']",{'thread': 100}
"['handlepatroni', 'zalando', 'issue']",{'issue': 100}
"['return', 'controldataerror', 'keyerrorerror', 'crash', 'insteadoutput', 'errorexception', 'error', 'execution', 'failuretraceback', 'recentpython', 'patroni', 'packagewakeupfollow', 'postgresql', 'patroni', 'python', 'packagetimeoutpostgresql', 'patroni', 'python', 'package', 'startconfigurationpython', 'patroni', 'package', 'postgresqlcname']",{'crash': 100}
"['member', 'smart', 'environment', 'resultingovercome', 'patroni', 'periodic', 'rotation', 'order', 'cluster', 'possibility', 'rediscovery', 'record', 'patroni', 'attempt', 'cluster', 'discovery', 'different', 'external', 'addressmember', 'topology', 'exhaust', 'order', 'rediscoverytopology', 'issue', 'cache', 'property', 'besides', 'pretty', 'concurrency']","{'issue': 100, 'concurren': 90}"
"['issue', 'promotecomplaint', 'patroni', 'issue', 'minute', 'information', 'immediate', 'promotion', 'normal', 'asyncexecutor']",{'issue': 100}
"['history', 'timeline', 'configurablepatroni', 'zalando', 'issue']",{'issue': 100}
"['timeout', 'masterfeature', 'timeout', 'postgresswitchover', 'operation', 'period', 'failover', 'patroni', 'issue', 'reason', 'postmaster', 'checkpoint', 'startoperation', 'sends', 'patroni', 'postmaster', 'postgres', 'sigkill', 'number', 'effective', 'parameter', 'durability', 'value']",{'issue': 100}
"['additionpatroni', 'zalando', 'issue', 'closepatroni', 'zalando', 'issue']",{'issue': 100}
"['comparison', 'convertpatroni', 'zalando', 'issue']",{'issue': 100}
"['kazoo', 'compatibilitypatroni', 'zalando', 'issue']",{'issue': 100}
"['pyinstaller', 'compatibilitypatroni', 'zalando', 'issue']",{'issue': 100}
"['environment', 'postmaster', 'scrubexample', 'variable', 'database', 'postmaster', 'backends', 'expose', 'environment']",{'expose': 100}
"['small', 'issue', 'validator']",{'issue': 100}
"['reset', 'rewind', 'successful', 'postgres', 'statepatroni', 'zalando', 'issue']",{'issue': 100}
"['callback', 'changepatroni', 'zalando', 'introducedpatroni', 'zalando', 'issue']",{'issue': 100}
"['readme', 'updatepatroni', 'issue', 'ensure', 'enable', 'zalando']",{'issue': 100}
"['permanent', 'primary', 'physicalprimary', 'solution', 'issue', 'regular', 'replica', 'perfectguess', 'increasecontinuous', 'number', 'neverprimary', 'usage', 'clustersnippet', 'config', 'configuration', 'patronictlphysicalphysicalphysicalcreate', 'alwaysbehaveclose']",{'issue': 100}
"['openshift', 'block', 'device', 'permissionopenshift', 'stickybits', 'group', 'block', 'device', 'enforcesrestart', 'startpgdata', 'pgroot', 'postgres', 'permission', 'fatal', 'directory', 'invaliddetail', 'permissionopenshift', 'stable', 'solution', 'solves', 'postgres', 'initcontainer', 'chartchartopenshift', 'testedfilesystems', 'error']","{'permission': 100, 'fatal': 100}"
"['password', 'creation', 'avoidpatroni', 'zalando', 'issue']",{'issue': 100}
"['status', 'patroni', 'shutdown', 'updateinaccessible', 'exception', 'logger', 'thread', 'prevents', 'handlingpatroni', 'zalando', 'issue']","{'thread': 100, 'issue': 100}"
"['parameterpatroni', 'zalando', 'issue']",{'issue': 100}
"['catch', 'exceptionpurposebreak', 'unresolvable', 'shutdown', 'nastypatroni', 'zalando', 'issue']",{'issue': 100}
"['problem', 'standby', 'sensitivity', 'finallypatroni', 'zalando', 'issue']",{'issue': 100}
"['standby', 'timeline', 'update', 'clusterpatroni', 'zalando', 'issue']",{'issue': 100}
"['replication', 'password', 'handlepatroni', 'zalando', 'issue']",{'issue': 100}
"['existcreate', 'patroni', 'postgres', 'existpatroni', 'zalando', 'issue']",{'issue': 100}
"['securityrelease', 'updateversionpatroni', 'zalando', 'issue']",{'issue': 100}
"['calculationpatroni', 'zalando', 'issue']",{'issue': 100}
"['housekeepingimplement', 'propercoverage', 'behave', 'exclude', 'watchdogwindow', 'compatibility', 'properlymodule', 'import', 'behave', 'removemodule', 'issue']",{'issue': 100}
"['previouslypatroni', 'zalando', 'issue']",{'issue': 100}
"['issue', 'startpostgres', 'stage', 'startpostgres', 'patroni', 'postgres', 'startdefault', 'timeout', 'stage', 'totalpostgres', 'connection', 'whole', 'timeout', 'check', 'consideration', 'patroni', 'process', 'startpatroni', 'zalando', 'issue']",{'issue': 100}
"['early', 'retrypatroni', 'zalando', 'issue']",{'issue': 100}
"['function', 'recovery', 'neverpatroni', 'zalando', 'issue']",{'issue': 100}
"['necessary', 'process', 'callbackchild', 'process', 'callback', 'implementtherefore', 'child', 'bootstrap', 'process', 'problem', 'custom', 'couldpatroni', 'zalando', 'issue']",{'issue': 100}
"['python', 'compatibilitypatroni', 'zalando', 'issue']",{'issue': 100}
"['return', 'standbystandby', 'returnedpatroni', 'zalando', 'issue']",{'issue': 100}
"['empty', 'pgdata', 'workflow', 'patroni', 'deploy', 'initialize', 'cluster', 'directory', 'triedempty', 'postgres', 'complain', 'directory', 'invalidpatroni', 'zalando', 'issue']",{'issue': 100}
"['error', 'retry', 'internalpatroni', 'zalando', 'issue']",{'issue': 100}
"['reload', 'regardless', 'config', 'changeexpectation', 'sighup', 'postgresql', 'possible', 'reload', 'process', 'usual', 'config', 'postgres', 'sectionrequires', 'example', 'postgresql', 'patroni', 'patroni', 'issue', 'addition', 'config', 'valuepatroni', 'zalando', 'issue']",{'issue': 100}
"['passfile', 'password', 'minor', 'relatedpatroni', 'zalando', 'issue']",{'issue': 100}
"['switch', 'watcher', 'streamingrequires', 'request', 'connection', 'patroni', 'thread', 'config', 'model', 'leader', 'benefit']",{'thread': 100}
"['patroni', 'process', 'normal', 'thread', 'error', 'patronilogger', 'fatal', 'preventsloose', 'ability', 'issue', 'queuelogger', 'thread', 'mitigate', 'order', 'infrastructure', 'explicitlypatroni', 'zalando', 'continuation']","{'thread': 100, 'fatal': 100, 'issue': 100}"
"['python', 'memorypatroni', 'zalando', 'issue']",{'issue': 100}
"['shutdown', 'logger', 'shutdown', 'thread', 'logger', 'daemon', 'sincepatroni', 'zalando', 'issue']","{'thread': 100, 'issue': 100}"
"['supportpatroni', 'zalando', 'issue']",{'issue': 100}
"['resilient', 'stderr', 'patroni', 'memory', 'minute', 'separate', 'queue', 'condition', 'commitenough', 'default', 'patroni', 'issue', 'setting', 'cluster', 'message', 'configurable', 'queue', 'maximum', 'number', 'patroni', 'addition', 'number']",{'issue': 100}
"['exception', 'retry', 'caughtfinal', 'exception', 'issue', 'debug', 'attempt', 'communication', 'number', 'timeout']",{'issue': 100}
"['localhost', 'trust', 'bootstrapmistake', 'previouslypatroni', 'zalando', 'issue']",{'issue': 100}
"['small', 'issue', 'dockerfilesymlink', 'patronicomment', 'section', 'rewind']",{'issue': 100}
"['compatiblevariable', 'float', 'integer', 'variable', 'microsecond']",{'integer': 100}
"['healthy', 'leader', 'formerpatroni', 'zalando', 'issue']",{'issue': 100}
"['possiblecurrent', 'expose', 'version', 'checkpoint', 'insteadpatroni', 'credential', 'configurationpostgres', 'creategrant']",{'expose': 100}
"['callback', 'finish', 'thread', 'executor']",{'thread': 100}
"['requirement', 'psycopg', 'removeavailable', 'place', 'option', 'dependency', 'psycopg', 'installcheck', 'patroni', 'psycopg', 'startpatroni', 'zalando', 'issue']",{'issue': 100}
"['enforcepatroni', 'zalando', 'issue']",{'issue': 100}
"['standby', 'callback', 'cluster', 'behaviormember', 'patch', 'standby', 'wrong', 'postgres', 'wrong', 'standbyleader', 'return', 'standby', 'additionpatroni', 'zalando', 'issue']",{'issue': 100}
"['executestdout', 'patroni', 'process', 'stdin', 'postmaster', 'addition', 'insteadpatroni', 'zalando', 'issue']",{'issue': 100}
"['logical', 'otherwisepatroni', 'zalando', 'issuepatroni', 'zalando', 'issue']",{'issue': 100}
"['timeout', 'leadersmall', 'maximum', 'concurrent', 'documentation', 'response', 'random', 'secondpatroni', 'zalando', 'issue']","{'concurrent': 100, 'issue': 100}"
"['timeline', 'information', 'patronictldetect', 'information', 'stalemember', 'default', 'addition', 'valuepatroni', 'zalando', 'issue']",{'issue': 100}
"['possible', 'master', 'attempt', 'directory', 'commitpatroni', 'master', 'reinitialize', 'directory', 'formerpatroni', 'zalando', 'issue']",{'issue': 100}
"['document', 'sectionpatroni', 'zalando', 'issue']",{'issue': 100}
"['python', 'compatibilityminorpatroni', 'zalando', 'issue']",{'issue': 100}
"['timelineconsider', 'history', 'garbage', 'timeline', 'containspatroni', 'zalando', 'issue']",{'issue': 100}
"['credential', 'superuser', 'relax', 'requirementtrust', 'connection', 'username', 'authentication', 'libpq', 'method', 'specifyingsince', 'usingpatroni', 'zalando', 'issue']",{'issue': 100}
"['global', 'backoff', 'starthammer', 'sense', 'startingpatroni', 'zalando', 'issue']",{'issue': 100}
"['refactor', 'methodmessage', 'error', 'level', 'debugregexp', 'process', 'postgres', 'compatible', 'updatepatroni', 'zalando', 'issue']",{'issue': 100}
"['configure', 'ability', 'writtenapplication', 'variable', 'standard', 'patroni', 'option', 'enable', 'configure', 'environment', 'activatesvariable', 'dictate', 'rollingvariable', 'dictatestderr', 'default', 'patroni', 'behaviorpatroni', 'zalando', 'issue']",{'issue': 100}
"['session', 'refresh', 'leastpatroni', 'zalando', 'issue']",{'issue': 100}
"['exception', 'method', 'raisepatroni', 'zalando', 'issue']",{'issue': 100}
"['replication', 'permanentprimary', 'failover', 'patroni', 'permanent', 'right', 'configuredconfig', 'patronictlcould', 'configuration', 'initialphysicallogicaldatabasepgoutput', 'pluginmember', 'replication', 'clash', 'patroni', 'operator', 'responsibilitypatroni', 'zalando', 'issue']",{'issue': 100}
"['round', 'master', 'pausepatroni', 'regression', 'zalando', 'cfadafdbeccf', 'commitpatroni', 'zalando', 'issue']",{'issue': 100}
"['pgbackrest', 'supportpgbackrest', 'supportparam', 'pgbackrest', 'restore', 'backup', 'pgdata', 'speedy', 'cleanupparam', 'pgbackrest', 'extra', 'patroni', 'error', 'parameter', 'strictpatroni', 'zalando', 'issue']",{'issue': 100}
"['service', 'register', 'consulreplica', 'service', 'master', 'egisterexample', 'scope', 'pgsqlpgsqldomain', 'server', 'usingaddressaliaspgsql', 'recordpgsql', 'recorddomain', 'server', 'usingaddressaliasrecorddomain', 'server', 'usingaddressaliasrecordpatroni', 'zalando', 'issue']",{'issue': 100}
"['restapi', 'suport', 'insecure', 'patronictlpatroni', 'zalando', 'issue']","{'insecure': 100, 'issue': 100}"
"['member', 'nofailover', 'excludemember', 'switchover', 'failover', 'exclude', 'nofailover', 'patronictlpatroni', 'zalando', 'issue']",{'issue': 100}
"['refactor', 'check', 'patroni', 'issue']",{'issue': 100}
"['amoung', 'standby', 'candidate', 'async', 'search', 'potentialconnection', 'potentialstandby', 'potentialpatroni', 'zalando', 'issue']",{'issue': 100}
"['status', 'reset', 'demotemember', 'master', 'clusterissue', 'minorpatroni', 'zalando', 'issue']",{'issue': 100}
"['directive', 'environmentfileprefix', 'environmentfile', 'directive', 'environment', 'sensitive', 'replication', 'superuser', 'config']",{'Sensitive': 100}
"['params', 'query', 'internal', 'request', 'retries', 'params', 'patroni', 'python', 'determinte', 'insteadpatroni', 'zalando', 'issuepatroni', 'zalando', 'issue']",{'issue': 100}
"['functionality', 'reload', 'config', 'patronictlpatroni', 'zalando', 'issue']",{'issue': 100}
"['shutdown', 'exception', 'thread', 'raisecatch', 'report']",{'thread': 100}
"['describedescribepatroni', 'zalando', 'issue']",{'issue': 100}
"['crash', 'master', 'recovery', 'postgresreportproductionshuttingrecovery', 'crash']",{'crash': 100}
"['sporadic', 'workaroundpatroni', 'zalando', 'issue']",{'issue': 100}
"['replication', 'postmaster', 'process', 'noticedpatroni', 'zalando', 'issue']",{'issue': 100}
"['replication', 'sysid', 'pausepatroni', 'zalando', 'issuepatroni', 'zalando', 'issue']",{'issue': 100}
"['demote', 'master', 'pause', 'leader', 'updatepatroni', 'zalando', 'issue']",{'issue': 100}
"['abort', 'postgres', 'initiazliedcreate', 'attach', 'postgresql', 'patroni', 'instance', 'initialize', 'patroni', 'master', 'replica', 'cluster', 'imperativeabort', 'weird', 'patroni', 'postgres', 'initialize', 'startpatroni', 'zalando', 'issue']",{'issue': 100}
"['setting', 'postgres', 'parameter', 'insensitiveindeedthree', 'intervalstyle', 'exception', 'parameterpatroni', 'timezone', 'specifyfinal', 'example', 'patroni', 'cluster', 'patronictl', 'stage', 'valuepatroni', 'zalando', 'issue']",{'issue': 100}
"['implementationpatroni', 'zalando', 'issue']",{'issue': 100}
"['deletingpgbackrest', 'restore', 'command', 'pgbackrest', 'restore', 'command', 'parameter', 'providecustom', 'patroni', 'deletes', 'specifyingpgbackrests', 'information', 'certain', 'restorereference', 'clusterdefault', 'delete', 'behavior', 'parameterpatroni', 'zalando', 'issue']",{'issue': 100}
"['bootstrap', 'custompatroni', 'zalando', 'issue']",{'issue': 100}
"['rediscover', 'cluster', 'timedswitchpatroni', 'zalando', 'issue']",{'issue': 100}
"['exception', 'psutil', 'raisepatroni', 'zalando', 'issue']",{'issue': 100}
"['patroni', 'propersetup', 'particular', 'permissionmember', 'patroni', 'interact', 'necessary', 'permission', 'clustertogether', 'connects', 'thing', 'formerapplication', 'liggitt', 'audit', 'auditrbac']",{'permission': 100}
"['swallow', 'error', 'silentlyexception', 'status', 'trace', 'wrong', 'outputobject', 'couldstatus', 'stack', 'producepatroni', 'issue', 'debug', 'zalando']","{'stack': 100, 'issue': 100}"
"['bootstrap', 'avoidpatroni', 'zalando', 'issue']",{'issue': 100}
"['async', 'endpoint', 'implementasynchronous', 'synchronous', 'status', 'respondpatroni', 'zalando', 'issuepatroni', 'zalando', 'issue']",{'issue': 100}
"['current', 'expose', 'current', 'timeline', 'masterselect', 'substrresult', 'replication', 'connection', 'cache', 'postgres', 'order', 'timeline', 'method', 'valueobject', 'difference', 'introduces', 'history', 'format', 'usual', 'timeline', 'absolute', 'position', 'history', 'mtime']",{'expose': 100}
"['switchover', 'rename', 'failover', 'leaderswitchover', 'check', 'alias', 'failover', 'addition', 'endpoint', 'implementcandidate', 'failover', 'providedswitchover', 'state', 'pausepatroni', 'zalando', 'issuepatroni', 'zalando', 'issue']",{'issue': 100}
"['pause', 'expose', 'stateresume', 'pause', 'patronictlpatroni', 'zalando', 'issue']","{'expose': 100, 'issue': 100}"
"['amount', 'issuedthree', 'iteration', 'query', 'patroni', 'separate', 'master', 'absolute', 'select', 'statement', 'calcualteselect', 'issue', 'cache']",{'issue': 100}
"['multiple', 'specifydiscovery', 'cluster', 'initialinitial', 'patroni', 'reason', 'returncompatibility', 'function', 'addition', 'specialpatroni', 'zalando', 'issue']",{'issue': 100}
"['readthedocs', 'config', 'updatepatroni', 'versioncopyright', 'update', 'license', 'matchpatroni', 'zalando', 'issue']",{'issue': 100}
"['failover', 'patroni', 'issue', 'zalando', 'cluster', 'informationcheck', 'compatibility', 'function', 'postgres', 'versionpostgres', 'configuration', 'parametercontributor', 'release']",{'issue': 100}
"['postgresql', 'bootstrap', 'directory', 'shutdownpostgresql', 'process', 'bootstrap', 'preventpatroni', 'zalando', 'issue']",{'issue': 100}
"['crash', 'single', 'master', 'recovery', 'masterheikki', 'linnakangas', 'crash', 'procedure']",{'crash': 100}
"['consulpatroni', 'zalando', 'issue']",{'issue': 100}
"['runtime', 'removedpatroni', 'zalando', 'issue']",{'issue': 100}
"['session', 'consulserfhealth', 'check', 'favor', 'ability', 'people', 'sacrifice', 'detection', 'network', 'toleratepatroni', 'zalando', 'issue']",{'issue': 100}
"['false', 'buffer', 'ioctl', 'comparison', 'python', 'python', 'error', 'oserror', 'ioerrorresult', 'watchdog', 'warning', 'error', 'support', 'handledisplay', 'watchdog', 'python', 'device', 'driver', 'improveeliminate', 'condition', 'watchdogreset', 'check', 'stateexplicit', 'reset', 'check']",{'buffer': 100}
"['quotedaround', 'check', 'failover', 'additional', 'implementcomparison', 'insensitive']",{'Sensitive': 90}
"['bugfix', 'config', 'zookeeper', 'config', 'insteadsecond', 'valuepatch', 'patronictl', 'additionchange', 'acceptance', 'clusterpatroni', 'zalando', 'issue']",{'issue': 100}
"['bootstrap', 'callback', 'normal', 'issue', 'boostrapprocess', 'situation', 'usuallymight', 'custom', 'situation', 'worselater', 'replica', 'argumentpromote', 'performedsolution', 'problem', 'callback', 'leader', 'bootstrap']",{'issue': 100}
"['postgres', 'custom', 'bootstrap', 'configurationconfig', 'absolute', 'additionpatroni', 'zalando', 'issue']",{'issue': 100}
"['argument', 'command', 'postgreswithout', 'possible', 'changepatroni', 'zalando', 'issue']",{'issue': 100}
"['output', 'postgres', 'version', 'parameter', 'current', 'prefixedcommit', 'introducedpatroni', 'zalando', 'issue']",{'issue': 100}
"['replication', 'reload', 'superuser', 'support', 'credentialpatroni', 'zalando', 'issuepatroni', 'zalando', 'issue']",{'issue': 100}
"['config', 'editing', 'specific', 'config', 'opinion', 'configurationclustername', 'format', 'output', 'config', 'fetch', 'patronictlclustername', 'concurrent', 'applies', 'format', 'invokes', 'config', 'fetch', 'confirmation', 'editor', 'patronictlclustername', 'specific', 'config', 'patronictl', 'alreadyenough', 'library', 'diffs', 'output', 'weight', 'maybeclustername', 'config', 'shorthand', 'patronictlclustername', 'patronictlclustername', 'config']",{'concurrent': 100}
"['forkingpetere', 'default', 'postmaster', 'error', 'enable', 'homebrew', 'startupvariable', 'detect', 'issue', 'thread', 'setting', 'spawn', 'replaces', 'current', 'setlocale', 'prevents', 'libintl', 'propagateoriginal', 'postgres', 'message', 'additional', 'explanation']","{'issue': 100, 'thread': 100}"
"['failurestreak', 'exception', 'patch', 'connection', 'trace', 'stack', 'sleep', 'additional', 'refuse', 'omits']",{'stack': 100}
"['connection', 'condition', 'connection', 'thread']",{'thread': 100}
"['symlinksreduce', 'magicmock', 'amountprocess', 'restoreretries', 'allowattempt', 'sleepupdatebehavior', 'masterchallengeindicate', 'order', 'check', 'masterscript', 'absense', 'string', 'connection', 'whetherreason', 'fetch', 'position', 'current', 'failure', 'retryretries', 'separateeither', 'connection', 'decision', 'retryattempt', 'successfullproperymocks', 'wrong', 'usage', 'removeexception', 'output', 'redundant', 'messageflake', 'issue', 'address']",{'issue': 100}
"['postgres', 'supportrestart', 'alias', 'patroni', 'expose', 'startingintegration', 'version', 'travis', 'consul']",{'expose': 100}
"['docker', 'issue', 'patroni', 'docker', 'executeprocess', 'originalprocess', 'orphan', 'sigchld', 'handlesignal', 'sigterm', 'forwardpatroni']",{'issue': 100}
"['replication', 'retries', 'avoidreplication', 'retries', 'retry', 'queryroutine', 'executes', 'reinit', 'restart', 'operationclass', 'cpython', 'issue', 'different', 'fairnessexecutes', 'multiple', 'thread', 'acquireothers', 'chance', 'actionaction', 'queryalexander', 'aasma', 'investigation']","{'issue': 100, 'thread': 100}"
"['stylistic', 'issue', 'quantifiedcode', 'appease']",{'issue': 100}
"['month', 'versionsense', 'avoidpatroni', 'zalando', 'issue']",{'issue': 100}
"['issue', 'settingstylistic']",{'issue': 100}
"['python', 'travis', 'flake', 'pycqa', 'issue']",{'issue': 100}
"['patroni', 'restarts', 'implementadditional', 'restart', 'normal', 'advantage', 'immediate', 'endpoint', 'certain', 'value', 'restartpostgres', 'current', 'version', 'difference', 'schedule', 'client', 'parameter', 'order', 'server', 'timezone', 'evaluates', 'restartsmultiple', 'thread', 'block', 'rlock']",{'thread': 100}
"['mergerequest', 'bugfix', 'zalando', 'exception', 'systemexit', 'thread']",{'thread': 100}
"['passwd', 'zalando', 'exposereplication', 'expose', 'passwd']",{'expose': 100}
"['replication', 'expose', 'passwd']",{'expose': 100}
"['mergefollow', 'request', 'demote', 'bugfix', 'zalando', 'mergedemote', 'bugfix', 'thread']",{'thread': 100}
"['config', 'checkpatroni', 'zalando', 'masterheader', 'stack', 'magic', 'patroni', 'thing', 'paragraph', 'intro', 'advantage', 'benefit']",{'stack': 100}
"['demote', 'bugfix', 'thread', 'recoverclone', 'alreadycreate', 'functionality', 'thread', 'async', 'otherwisebecame']",{'thread': 100}
"['travis', 'codacy', 'address', 'issue']",{'issue': 100}
"['injection', 'removerecord', 'replication']",{'injection': 100}
"['injection', 'removerecord', 'replication']",{'injection': 100}
"['mergerequest', 'jankeirse', 'killmode', 'issue']",{'issue': 100}
"['issue', 'killmode', 'restart', 'avoidpatroni', 'zalando', 'issue']",{'issue': 100}
"['empty', 'expose']",{'expose': 100}
"['implementationclonefrom', 'patroni', 'issue', 'zalando', 'accordingsuitable', 'booleanreplica', 'creationclonefrom']",{'issue': 100}
"['buggy', 'releasewatch', 'exception', 'raisedautodiscovery', 'interesting', 'problempython', 'different', 'requirementdnspython', 'installpython', 'jplana', 'issue', 'orderpython', 'jplana', 'override']",{'issue': 100}
"['scheduledestablish', 'replication', 'master', 'sufficient', 'failover', 'secondsecond', 'failover', 'occasionallyinside', 'unlikely', 'issue']",{'issue': 100}
"['stylistic', 'issue']",{'issue': 100}
"['codacy', 'issue']",{'issue': 100}
"['codacy', 'issue']",{'issue': 100}
"['mergerequest', 'zalando', 'codequalitycodacy', 'issue', 'quality']",{'issue': 100}
"['codacy', 'issue', 'quality']",{'issue': 100}
"['codacy', 'issue', 'quality']",{'issue': 100}
"['reasonschedule', 'scheduler', 'issue', 'failover', 'authenticate', 'scheduler', 'authenticationplace', 'actualfailover', 'format', 'howeverrelevant', 'failover', 'format', 'aware', 'timestamp']",{'issue': 100}
"['replication', 'issue', 'anotherreplication', 'replica', 'createmember']",{'issue': 100}
"['problem', 'default', 'mutablepython', 'version', 'requirementpython', 'jplana', 'issue']",{'issue': 100}
"['python', 'issue']",{'issue': 100}
"['python', 'issue']",{'issue': 100}
"['crash', 'initidb', 'configuration']",{'crash': 100}
"['mergerestore', 'movebasebackup', 'request', 'pgexperts', 'zalando', 'mergemethod', 'replica', 'creation', 'configuredpatroni', 'parameter', 'configuration', 'valuepatroni', 'creation', 'acceptable', 'attempt', 'replica', 'methodreturn', 'configuration', 'sectionreplica', 'creation', 'section', 'option', 'command', 'appendedmethod', 'commandcreation', 'replica', 'patroni', 'creation', 'replica', 'methodscript', 'special', 'basebackup', 'methodparameterdecision', 'revers', 'repli', 'basebackupouside', 'methodimprovement', 'request', 'berkus', 'original', 'jberkusalexander', 'alexeyklyukin', 'kliukin', 'oleksii', 'kukushkin', 'cyberdemndiscussion', 'zalando', 'issue', 'patroni']",{'issue': 100}
"['mergerestore', 'movebasebackup', 'request', 'pgexperts', 'zalando', 'mergemethod', 'replica', 'creation', 'configuredpatroni', 'parameter', 'configuration', 'valuepatroni', 'creation', 'acceptable', 'attempt', 'replica', 'methodreturn', 'configuration', 'sectionreplica', 'creation', 'section', 'option', 'command', 'appendedmethod', 'commandcreation', 'replica', 'patroni', 'creation', 'replica', 'methodscript', 'special', 'basebackup', 'methodparameterdecision', 'revers', 'repli', 'basebackupouside', 'methodrequest', 'original', 'inprovementsalexander', 'kukushkin', 'oleksiidiscussion', 'zalando', 'issue', 'patroni']",{'issue': 100}
"['example', 'single', 'thread', 'order', 'multi', 'fetch']",{'thread': 100}
"['whitelist', 'option', 'blacklist', 'initdb']",{'blacklist': 100}
"['member', 'supportmember', 'individual', 'label', 'orderalter', 'exclude', 'defaultindicate', 'election', 'leader', 'support', 'commitmember', 'expose', 'configuration', 'subkeyreturn', 'support', 'scope']",{'expose': 100}
"['stalepostgresql', 'backend', 'crashconnects', 'patroni', 'environmentpostgres', 'crash']",{'crash': 100}
"['header', 'issue']",{'issue': 100}
"['patroni', 'issue', 'point', 'docker', 'image']",{'issue': 100}
"['increase', 'issue', 'debug', 'delete']",{'issue': 100}
"['fadfberequest', 'master', 'cyberdemnrequest', 'threadingmixin', 'process', 'thread']",{'thread': 100}
"['request', 'threadingmixin', 'process', 'thread']",{'thread': 100}
"['integer', 'servert']",{'integer': 100}
"['request', 'thread']",{'thread': 100}
