message,fuzzy
"['twitter', 'bugfix', 'crash', 'canceloauth', 'params', 'lookingcheck']",{'crash': 100}
"['spaceanother', 'issue', 'remote', 'updatingcommit']",{'issue': 100}
"['circleci', 'travis', 'fixingcommunity', 'carthage', 'parse', 'startparseui', 'issue', 'updatedlimit', 'local', 'depreciation', 'currenttarget', 'dependency', 'different', 'framework', 'fixedxcode', 'script', 'dynamic', 'conflict', 'unnecessary', 'default', 'destinationupdatedbuild', 'target']",{'issue': 100}
"['issue', 'polygon', 'objectissue', 'polygon']",{'issue': 100}
"['dimension', 'issue']",{'issue': 100}
"['expose', 'header']",{'expose': 100}
"['error', 'exception', 'insteadconsistency', 'error', 'initial', 'assertioninvalid', 'error', 'localerror', 'pointer', 'object', 'triederror', 'existentconsistency', 'error', 'checkswift', 'latestmethod', 'proper', 'localidstore', 'precondition', 'checkingswallow', 'consistency', 'errorreturn', 'unsafe', 'parameter', 'check', 'error', 'checkingrestore', 'behaviour', 'objectmodifier', 'nserror', 'propercollection', 'child', 'error', 'transform', 'assertioncycle', 'exception', 'pfprecondition', 'resolutiosn', 'localid', 'failurereport', 'error', 'localidargument', 'refactor', 'consistency', 'macro', 'renameerror', 'localids', 'propagation', 'betterresolution', 'localid', 'failureversionpodspecissuerichardjrossiii', 'discussion', 'resolution', 'nlutsenkothanks', 'czgarrettcloseprevent', 'deadlock', 'traversal', 'estimateddataaccessors', 'swift', 'pfaclflakyissue', 'assignment', 'context', 'objectid', 'offlinestoreinfer', 'return', 'doesnt', 'nserrortravis', 'releaseverbose', 'trunk', 'travis', 'stallreviewtrack', 'dimensionversioncrash']",{'deadlock': 100}
"['issue', 'method', 'parameter']",{'issue': 100}
"['issue', 'listener']",{'issue': 100}
"['issue', 'corruption', 'relatedissue', 'corruption', 'relateddealloc', 'dealloc', 'cycletermination', 'eventuallyqueue', 'betterissue', 'cocoapodsfixup', 'issue', 'cocoapods']",{'issue': 100}
"['crash', 'nsbundle']",{'crash': 100}
"['issue', 'method', 'parse', 'dictionary']",{'issue': 100}
"['method', 'incorrect', 'swift', 'pfobject', 'conversion']",{'incorrect': 100}
"['parseplatformupload', 'length', 'calculation']",{'length': 100}
"['upload', 'length', 'calculation']",{'length': 100}
"['crash', 'reference']",{'crash': 100}
"['crash', 'reference']",{'crash': 100}
"['parseplatformpotential', 'issue', 'method', 'wrong', 'result', 'unpin']",{'issue': 100}
"['parseplatformpotential', 'crash']",{'crash': 100}
"['potential', 'crash']",{'crash': 100}
"['parseplatformpffile', 'crash', 'local']",{'crash': 100}
"['pffile', 'crash', 'local']",{'crash': 100}
"['parseplatformstatement', 'thread', 'access']",{'thread': 100}
"['statement', 'thread', 'accesscrash', 'thinkviolation', 'sqlite']",{'thread': 100}
"['thread', 'safety']",{'thread': 100}
"['deadlock', 'potential']",{'deadlock': 100}
"['deadlockanother', 'thread']",{'thread': 100}
"['parseplatformerror', 'potential', 'crash', 'network']",{'crash': 100}
"['error', 'potential', 'crash', 'network']",{'crash': 100}
"['deadlock', 'fixedissue', 'progress', 'deadlock']",{'deadlock': 100}
"['eeffd', 'bbederequest', 'parseplatformcompletion', 'crash']",{'crash': 100}
"['completion', 'crash', 'relatedsuper']",{'crash': 100}
"['parseplatformsearch', 'issue', 'whole', 'subtree', 'object']",{'issue': 100}
"['empty', 'crash']",{'crash': 100}
"['empty', 'crash']",{'crash': 100}
"['parseplatformweakify', 'crash', 'pfquery']",{'crash': 100}
"['weakify', 'crash', 'pfquery', 'parse', 'scenario', 'yield', 'reference', 'query', 'strongify']",{'crash': 100}
"['mergerequest', 'issue', 'kashifability', 'revert']",{'issue': 100}
"['mergecrash', 'request', 'dominikkrejcik', 'sound', 'mergesound', 'notification', 'crash']",{'crash': 100}
"['sound', 'notification', 'crash']",{'crash': 100}
