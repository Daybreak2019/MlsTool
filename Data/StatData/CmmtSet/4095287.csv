message,fuzzy
"['incorrect', 'layout', 'hashalignmentissue', 'testdouble']",{'incorrect': 100}
"['incorrect', 'layout', 'linelengthincorrect', 'layout', 'heredoc', 'argument', 'methodconsolelinelength', 'layout', 'bundle', 'offensesyntax', 'input']",{'incorrect': 100}
"['argument', 'clarify', 'exceptiondefault', 'whilst', 'argument', 'implies', 'exception', 'violates', 'whereas']",{'violate': 93}
"['incorrect', 'layout', 'dotposition', 'incorrectusingconsolelayout', 'rubocop', 'place', 'layout', 'dotpositionmethod', 'offenseconslesyntax', 'input']",{'incorrect': 100}
"['incorrect', 'entry', 'changelog', 'location']",{'incorrect': 100}
"['style', 'block', 'numericanother', 'numblockparenthesis', 'methodblock', 'numericparsenumblockconstparseblockconstprocarggiven', 'block', 'queriednumblock', 'recognizedmaster', 'mixin', 'rubocopmaster', 'mixin', 'issue', 'implementation']",{'issue': 100}
"['mergecorrent', 'incorrect']",{'incorrect': 100}
"['kwsplat', 'layout', 'hashalignment', 'table', 'incorrect', 'correctionaccount', 'colon', 'possibility', 'previous', 'alignment', 'keyword', 'classstill', 'kwsplat', 'behaviour', 'style', 'keyalignment', 'tablealignment']",{'incorrect': 100}
"['error', 'buildpsych', 'followmatrix', 'buildconsolepsych', 'version', 'ryamlmaster', 'darwinrspec', 'bundle', 'rubocopfailurecurrent', 'print', 'rubocop', 'optionconfigurationfailure', 'erroryamlload', 'security', 'rubocoppsych', 'disallowedclassclass', 'config', 'example', 'group', 'printrubocopregexpblock', 'rubocop', 'levelrequiredlevel', 'block', 'supportrequiredrspec', 'block', 'rubocop', 'levelrequiredrspec', 'rubocop', 'chdirrspec', 'block', 'rubocop', 'levelrequiredrspec', 'block', 'rubocop', 'secondfailureexample', 'failedrspec', 'rubocopconfiguration', 'current', 'print', 'optionrubocop', 'abeaedabd', 'pipeline', 'github', 'workflow']",{'Security': 100}
"['mergeissue', 'dvandersluis', 'requeststyle', 'autocorrection', 'issue']",{'issue': 100}
"['style', 'autocorrection', 'incorrect', 'return']",{'incorrect': 100}
"['performance', 'jruby', 'workaroundprevent', 'errorconsolejruby', 'hotspotserver', 'darwinrspec', 'bundle', 'rubocop', 'stylefocus', 'example', 'focus', 'ignoringrandomizedfailurerubocop', 'style', 'behaves', 'allowedassignmentsource', 'failure', 'secondfailureexample', 'failedrspec', 'rubocop', 'stylerubocop', 'style', 'behaves', 'allowedassignmentrspec', 'rubocop', 'stylerubocop', 'style', 'behaves', 'allowedassignmentrspec', 'rubocop', 'stylerubocop', 'style', 'behaves', 'jruby', 'issue']",{'issue': 100}
"['incorrect', 'correctincorrect', 'argument', 'block', 'parenthesize', 'methodwhitespace', 'ripperparenthesis', 'method', 'stylemessage', 'redundant', 'errorconsoleblockblocksyntax']",{'incorrect': 100}
"['incorrect', 'andor', 'enforcedstyleenforcedstyle', 'conditionals', 'andor', 'styleconsolerubocop']",{'incorrect': 100}
"['incorrect', 'correctinvalid', 'correction', 'syntaxintegerparenthesis', 'invalid', 'syntax']",{'incorrect': 100}
"['incorrect', 'redundantreturn', 'styleissue', 'testdouble', 'false', 'style', 'positive', 'redundantreturnsplat', 'invalidconsoleredundantreturn', 'rubocop', 'stylemyclass', 'classsomethingsyntax', 'validconsoleredundantreturn', 'rubocop', 'stylemyclass', 'classsomethingsyntax']",{'incorrect': 100}
"['error', 'buildbuild', 'commitconsolerubocopbundlefailurefuture', 'rubocop', 'entry', 'changelog', 'projectchangelog', 'rubocopentry', 'issueexpect', 'error', 'failure', 'pattern', 'issue', 'rubocopmatchgithub', 'rubocop', 'issuegithub', 'rubocop', 'issuerubocopformat', 'changelog', 'example', 'group', 'calledblock', 'levelrequiredblock']",{'issue': 100}
"['error', 'buildbuild', 'commitconsolerubocopbundlefuture', 'rubocop', 'entry', 'changelog', 'projectchangelog', 'rubocopentry', 'issueexpect', 'error', 'failure', 'pattern', 'issue', 'rubocop', 'issuematchgithub', 'rubocop', 'issuegithub', 'rubocop', 'issuerubocop', 'issueformat', 'changelog', 'example', 'group', 'calledblock', 'levelrequiredblock']",{'issue': 100}
"['positive', 'false', 'stylepositive', 'operator', 'methodconditionalinstead', 'source', 'issue']",{'issue': 100}
"['multiline', 'metric', 'lengthcalculation', 'multiline', 'length', 'argumentwithout', 'brace']",{'length': 100}
"['internalaffairs', 'errorconsoleformat', 'constinternalaffairs', 'bundle', 'rubocopinspectingscanningrubocop', 'issueinternalaffairs', 'errorinspectingrubocop', 'issuevalue', 'method', 'undefinedpatternrubocop', 'sendnode', 'errorinspectingrubocop', 'issuerubocop', 'errorproblem', 'report', 'rubocop', 'issuerubocop', 'issue']",{'issue': 100}
"['regression', 'jruby', 'workaroundimage', 'jruby', 'error', 'avoidjrubyconsolepipefailbundleabortedloaderrorlocal', 'bundle', 'parserlocal', 'bundle', 'rubocoplocal', 'bundle', 'rubocopcircleci', 'projectcircleci', 'project', 'rakefile', 'blockcircleci', 'project', 'rakefilebundle', 'jrubytrace', 'runningstatus', 'exitedcircleci', 'receivedrubocop', 'pipeline', 'workflow', 'image', 'jruby', 'errorconsolerparser', 'jruby', 'circleci', 'docker', 'parserimage', 'jruby', 'circleci', 'unablecircleci', 'jruby', 'pullingdigestimage', 'jruby', 'status', 'circleci', 'parser', 'installedinstalledloaderrorjruby', 'requirerequirerubygems', 'stdlib', 'jrubystdlib', 'jrubyjruby', 'requirerequirerubygems', 'stdlib', 'jrubylocal', 'bundle', 'parserjruby', 'requirejruby', 'rubygems', 'stdlib', 'requireimage', 'jruby', 'circleci', 'changedjruby', 'issue']",{'issue': 100}
"['specify', 'instance', 'custom', 'instance', 'custom', 'addition', 'example', 'exceptionargument', 'rubocop', 'style', 'issue']",{'issue': 100}
"['incorrect', 'correctincorrect', 'correctargument']",{'incorrect': 100}
"['incorrect', 'correctincorrect', 'correctargument']",{'incorrect': 100}
"['incorrect', 'layout', 'correctregressionincorrect', 'layout', 'correctlayout', 'enforcedstyle', 'specifyingconsistent', 'enforcedstyle', 'standard', 'error', 'resolveconsolefailureclitest', 'standardrunner', 'standardexpectedactualtestdouble']",{'incorrect': 100}
"['mergeinsert', 'dduugg', 'requestexists', 'injection']",{'injection': 100}
"['exists', 'injection']",{'injection': 100}
"['jruby', 'workaround', 'commitconsoleebebafb', 'jruby', 'hotspotserver', 'darwinbundlefailureprint', 'right', 'departmentfailure', 'errorslice', 'departmentcurrentexpectargumenterrorinvalid', 'ascii', 'sequenceclassloader', 'block', 'kernel', 'jrubyclassloader', 'block', 'kernel', 'jrubyblock', 'rubocopblock', 'supportrubocop', 'supportrspec', 'block', 'rubocoprspec', 'rubocoprspec', 'block', 'rubocoprspec', 'rubocoprspec', 'block', 'rubocoprspec', 'rubocopsecond', 'minutefailureexample', 'failedrspec', 'right', 'print', 'departmentrubocop', 'pipeline', 'workflow', 'githubjruby', 'issue']",{'issue': 100}
"['incorrect', 'nilcomparison', 'stylecorrect', 'style', 'incorrect', 'nilcomparisonenforcedstyle', 'comparison']",{'incorrect': 100}
"['commitrubocop', 'point', 'entry', 'entry', 'minimal', 'commitconfig', 'project', 'rubocopdetail', 'commitintroduction', 'frameworksimple', 'useful', 'issue', 'scriptevery', 'submission', 'debugallows', 'focus', 'reviewertrivial', 'script', 'project', 'unwieldychange', 'project', 'differentbelieve', 'industry', 'standardlanguage', 'linters', 'writtenexample', 'project', 'installedlinter', 'writtenproject', 'commitwithout', 'gemfile', 'understanding', 'projectmulti', 'language', 'commitmanager', 'package', 'specify', 'commitmanages', 'installation', 'execution', 'commitevery', 'requiredeveloper', 'modifies', 'javascript', 'commiteslint', 'withoutclosebalaji', 'adithya', 'adithyabsk']",{'issue': 100}
"['option', 'style', 'ignoredmethods', 'supportoption', 'style', 'ignoredmethods', 'supportsolves', 'library', 'issue', 'specificconfigredirect', 'catalogue', 'tokendefault', 'redirect', 'ignoredmethods', 'rubocop', 'emptyrubocopconfig', 'rubocopstyleignoredmethodredirect']",{'issue': 100}
"['incorrect', 'correctincorrect', 'enforcedstyle', 'correctstyle']",{'incorrect': 100}
"['checkalternativealternative', 'valueversion', 'optionrandom', 'default', 'falsefalserandom', 'default', 'value', 'returnfalsedefault', 'false', 'commitrandom', 'default', 'deprecate', 'issue']",{'issue': 100}
"['incorrect', 'redundantreturn', 'styleincorrect', 'redundantreturn', 'stylereturn', 'value', 'multiple', 'parenthesizedanther', 'returnnode', 'argument', 'modifies', 'approachfuture', 'rubocop']",{'incorrect': 100}
"['incorrect', 'raiseargs', 'styleincorrect', 'raiseargs', 'styleenforcedstyle', 'instantiation', 'compact', 'exception']",{'incorrect': 100}
"['incorrect', 'correctincorrect', 'correctblank', 'inline']",{'incorrect': 100}
"['expecteddetectsmethod', 'offensedetectupdate', 'registerdecide', 'config', 'configurereview', 'current', 'regardless', 'mistakepredicate', 'method', 'treatedoffense', 'wrong', 'parameter', 'style', 'rathernormal', 'report', 'offense', 'wouldwholeconfig', 'output', 'enforcedstyle', 'value', 'reviewsingle', 'style', 'consistent', 'produceexclusion', 'review', 'turning', 'insteadenforcedstyle', 'corrects', 'error', 'incorrect', 'stylealways', 'insteadvalue', 'return', 'treatingdecide', 'predicate']",{'incorrect': 100}
"['expecteddetectsmethod', 'offensedetectupdate', 'registerdecide', 'config', 'configurereview', 'current', 'regardless', 'priorenforcedstyle', 'value', 'config', 'reviewsingle', 'style', 'consistent', 'config', 'ratherreview', 'produceexclusion', 'turning', 'insteadenforcedstyle', 'valuerelevant', 'style', 'whenever', 'incorrect']",{'incorrect': 100}
"['workaround', 'revert', 'specify', 'reporter', 'climatereverts', 'commitcodeclimate', 'reporter', 'issue']",{'issue': 100}
"['ensure', 'defineddefault', 'config', 'configuration', 'false', 'overridedefault', 'value', 'injection', 'rubocop', 'config', 'local', 'department', 'configuration', 'false', 'specific', 'overrideorder', 'configuration', 'inheritence', 'inherit', 'override']",{'injection': 100}
"['specify', 'reporter', 'climate', 'workaroundprevent', 'workaround', 'specifies', 'reporter', 'climateformat', 'binary', 'errorcodeclimate', 'reporter', 'issue']",{'issue': 100}
"['departmentprovides', 'rubocop', 'department', 'enabledisablerubocop', 'issue', 'config', 'configuration', 'departmentconsiders', 'firstchange']",{'issue': 100}
"['bundler', 'issue']",{'issue': 100}
"['errorclose', 'rubocop', 'issue']",{'issue': 100}
"['rubocop', 'template', 'issue', 'example', 'updateexample', 'update', 'rubocop', 'issue']",{'issue': 100}
"['incorrect', 'andor', 'styleincorrect', 'andor']",{'incorrect': 100}
"['offense', 'trigger', 'macro', 'style', 'documentationclose', 'rubocop', 'issue']",{'issue': 100}
"['stack', 'target', 'level', 'directory', 'error', 'koichistack', 'rubocop', 'leveltarget', 'directoryescape', 'directoryinspect']",{'stack': 100}
"['requirement', 'issuerequirement', 'rubocop', 'issue']",{'issue': 100}
"['enumsfollow', 'issuecomment', 'rubocop', 'issuedefault', 'method', 'constant', 'false', 'definedworthwhile', 'enums', 'custom', 'methoddefault', 'sorbet', 'issue', 'ratherwould', 'imagination']",{'issue': 100}
"['parens', 'emptyspace', 'parens', 'style', 'regardless', 'offence', 'empty', 'style', 'register', 'commitdefault', 'space', 'style', 'ensure', 'styleavoid', 'extract', 'method', 'length']",{'length': 100}
"['checkrepos', 'rubocop', 'issue', 'handlechangelog', 'beginningensure', 'reference', 'validensure']",{'issue': 100}
"['incorrect', 'layout', 'heredocconsoleclassconstantclassstructure', 'layout', 'bundle', 'rubocopclassconstant']",{'incorrect': 100}
"['security', 'versionchangedfollow', 'rubocop']",{'Security': 100}
"['security', 'awaresecurity', 'awaretweakkernel', 'securitykernelconsoledarwin', 'revisionconsoleropendarwin', 'revision']",{'Security': 100}
"['incorrect', 'autocorrect', 'styleincorrect', 'class', 'string']",{'incorrect': 100}
"['incorrect', 'autocorrect', 'styleincorrect', 'autocorrect', 'styleparenthesis', 'ternary', 'operator', 'bozhidar', 'batsov']",{'incorrect': 100}
"['incorrect', 'autocorrect', 'styleincorrect', 'autocorrect', 'styleoperator', 'interpolation', 'string']",{'incorrect': 100}
"['incorrect', 'autocorrectincorrect', 'autocorrectliteral', 'method', 'regexp']",{'incorrect': 100}
"['babdc', 'mergeghiculescu', 'crash', 'requestcrash', 'style']",{'crash': 100}
"['crash', 'style']",{'crash': 100}
"['length', 'block', 'class']",{'length': 100}
"['length', 'block', 'classclose']",{'length': 100}
"['infinite', 'crash']",{'crash': 100}
"['macro', 'style', 'simplify', 'mixinusage', 'dependrubocoprubocop', 'issue']",{'issue': 100}
"['range', 'ignore', 'style', 'integerrange', 'integer']",{'integer': 100}
"['exclude', 'method', 'rubocop', 'issue']",{'issue': 100}
"['ascii', 'characterclose', 'rubocop', 'issue']",{'issue': 100}
"['negative', 'false', 'request', 'literal', 'bracenegative', 'style', 'incorrect', 'false', 'precedes', 'empty']",{'incorrect': 100}
"['style', 'incorrect', 'false', 'precedes', 'empty']",{'incorrect': 100}
"['bundler', 'duplicatedgem', 'condition', 'positive', 'falseclose', 'rubocop', 'issue']",{'issue': 100}
"['allowedmethodsclose', 'rubocop', 'issue']",{'issue': 100}
"['layoutlayout', 'solveexample', 'followingrescuealignment', 'misalignedrubocopbeginstandarderror', 'rescuebegin', 'awakenedrubocopbeginstandarderror', 'rescueendalignment', 'layout', 'processing', 'planningdefault', 'layout', 'keyword', 'followingbeginfound', 'rubocop', 'length', 'stylewould', 'sincedefault', 'solution', 'impact', 'minimal', 'configurationbegin', 'align', 'configurablebeginbeginlayout', 'awareconfig', 'rescue', 'layout', 'align']",{'length': 100}
"['crash', 'truffleruby', 'workaround']",{'crash': 100}
"['error', 'mismatch', 'encodingencodingconsolecache', 'false', 'bundle', 'rubocopextract', 'buffer', 'source', 'uninitializedversion', 'parsersource', 'parserversion', 'parsersource', 'parserversion', 'parsersource', 'parser', 'initializerubocopinitializerubocoprubocoprubocoprubocopautocorrectrubocopinvestigaterubocopconsolecache', 'false', 'bundle']",{'buffer': 100}
"['regression', 'jruby', 'workaroundfollow', 'issuecomment', 'jruby', 'regressionjruby', 'issue']",{'issue': 100}
"['mergemerge', 'requestprevent', 'caseequality', 'style', 'incorrect', 'correction']",{'incorrect': 100}
"['caseequality', 'style', 'incorrect', 'correctionfollow', 'rubocopcaseequality', 'style', 'prevents', 'incorrect', 'regular', 'expressioncorrection', 'performance', 'correctionperformance', 'rubocop', 'issue']","{'incorrect': 100, 'issue': 100}"
"['comment', 'styleclassconsolecommentclassbundle', 'rubocop', 'styleinstance', 'block', 'japanese', 'rubocop', 'issuerubocop', 'issue']",{'issue': 100}
"['calculation', 'length', 'style']",{'length': 100}
"['mergemerge', 'requestdepartment', 'security']",{'Security': 100}
"['department', 'securityfollow', 'rubocopdepartment', 'security']",{'Security': 100}
"['jruby', 'workaroundreverts', 'jruby', 'issue']",{'issue': 100}
"['rspec', 'rubocoprspec', 'rubocop', 'issue']",{'issue': 100}
"['calculation', 'length', 'optimize']",{'length': 100}
"['default', 'length', 'stylefollowdefault', 'length', 'styleforgotten', 'changeedfbfbfcafd', 'rubocop']",{'length': 100}
"['detection', 'class', 'previous', 'class', 'characterfirst', 'element', 'issue', 'attemptbracket', 'posix', 'class', 'expression']",{'issue': 100}
"['requestlayout', 'syntax', 'shorthand', 'crash']",{'crash': 100}
"['layout', 'syntax', 'shorthand', 'crash']",{'crash': 100}
"['multiple', 'crash', 'offenseexample']",{'crash': 100}
"['limit', 'length']",{'length': 100}
"['positive', 'layout', 'falsepositive', 'incorrect', 'false', 'correctlayout', 'immediatelyaccess']",{'incorrect': 100}
"['caefbb', 'mergebdewater', 'request', 'openssl', 'constantcipher', 'openssl', 'correction']",{'OpenSSL': 100}
"['cipher', 'openssl', 'correction', 'lowercipher', 'system']","{'cipher': 100, 'OpenSSL': 100}"
"['length', 'level', 'detect', 'module', 'constant', 'classdetect', 'classlength', 'metricmodulelength', 'metric']",{'length': 100}
"['metric', 'length', 'countasone']",{'length': 100}
"['multiline', 'language', 'inclusiveexample', 'blacklist', 'ratherlayout', 'multiline']",{'blacklist': 100}
"['rubocopglobal', 'custom', 'issue']",{'issue': 100}
"['generation', 'rubocopusuallyversion']",{'generation': 100}
"['mergemerge', 'format', 'reproduce', 'request', 'mismatch', 'andrykonchin', 'issue', 'parameterargument']",{'issue': 100}
"['positive', 'falsepositive', 'falseargumentconsolecipher', 'opensslbundle', 'rubocopoffensecorrectedcipher', 'openssl', 'insteadcipher', 'offenseopensslvalue', 'rubocop', 'constant', 'featureprevent', 'value', 'correction', 'acceptschange', 'falsefalse', 'update', 'difficult', 'acceptcorrection']",{'OpenSSL': 100}
"['updatefollowfollowingconsolebundlemodule', 'undocumentedclass', 'constantattribute', 'undocumentedmethod', 'undocumenteddocumentedgeneratedmodule', 'rubocopgeneratedmodule', 'rubocopgeneratedmodule', 'rubocopgeneratedmodule', 'rubocopgeneratedmodule', 'rubocopgeneratedmodule', 'rubocopgeneratedmodule', 'rubocopgeneratedmodule', 'rubocopgeneratedmodule', 'rubocopquiet', 'manualambiguous', 'unknown', 'fatal', 'argument', 'revision', 'manualworkingseparatecommand', 'revisionmanualambiguous', 'unknown', 'fatal', 'argument', 'revision', 'manualworkingseparatecommand', 'blockversion', 'bundleversion', 'bundletrace', 'runningrubocop']",{'fatal': 100}
"['positive', 'falsepositive', 'double', 'string', 'quotedconsolecipher', 'opensslcipher', 'opensslbundle', 'rubocopoffensecorrectedcipher', 'openssl', 'insteadcipher', 'opensslcorrectedcipher', 'openssl', 'insteadcipher', 'opensslopensslopensslanother']",{'OpenSSL': 100}
"['incorrect', 'autocorrectincorrect']",{'incorrect': 100}
"['incorrect', 'autocorrect', 'hashsyntax', 'styleautocorrect', 'hashsyntax', 'style', 'incorrectvalue', 'return']",{'incorrect': 100}
"['incorrect', 'autocorrect', 'method', 'transformfollow', 'rubocopincorrect', 'autocorrect', 'stylebreak', 'styleduplicate', 'rubocopdependent', 'rubocop', 'resolution', 'making', 'centralizesdiogo']",{'incorrect': 100}
"['style', 'autocorrectingautocorrect', 'modifier', 'styleautocorrect', 'modifiersingleinfinite', 'potential', 'autocorrect', 'triedmaximum', 'conditional', 'overflow', 'check', 'conditionalstatement', 'followconditionautocorrect', 'hideous', 'result', 'simple', 'infinite', 'modifier', 'statementstill', 'style', 'linelength']",{'overflow': 100}
"['requestlayout', 'crash']",{'crash': 100}
"['incorrect', 'example']",{'incorrect': 100}
"['array', 'literal', 'styleclose', 'rubocop', 'issue']",{'issue': 100}
"['inversemethods', 'style', 'autofixclose', 'rubocop', 'issue']",{'issue': 100}
"['newline', 'styleclose', 'rubocop', 'issue']",{'issue': 100}
"['incorrect', 'orassignment', 'autocorrect', 'styleincorrect', 'orassignment', 'autocorrect', 'styleelsif', 'usingreproduction', 'followingelsifdefaultsyntax', 'errorconsoleorassignment', 'bundle', 'rubocop', 'styleelsifdefaultsyntax', 'elsif', 'unexpectedelsifassignment']",{'incorrect': 100}
"['default', 'migration', 'departmentname', 'enableenables', 'migration', 'departmentnameaddedpromote', 'migration', 'department', 'omittingdefault', 'facilitate', 'issueambiguous', 'rubocop', 'support', 'department', 'longerissuecomment', 'rubocop', 'issue']",{'issue': 100}
"['autocorrect', 'block', 'length']",{'length': 100}
"['reporter', 'simplecov', 'error', 'buildreporter', 'simplecovconsolepipefailreporter', 'buildcoverage', 'bundleformat', 'reporter', 'output', 'coveragequeue', 'master', 'startingworker', 'summarypendingsuitependingsuiterspec', 'report', 'coveragerspec', 'circleci', 'projectobject', 'field', 'unmarshal', 'struct', 'errorusageformat', 'reporter', 'coverageprefix', 'stringinput', 'source', 'stringxccovdefault', 'output', 'coverage', 'stringprefix', 'directory', 'stringdefault', 'circleci', 'coverage', 'project', 'analysisglobaldebugstatus', 'issue', 'patch', 'workaroundcodeclimate', 'reporter', 'issue']",{'issue': 100}
"['incorrect', 'autocorrect', 'styleincorrect', 'autocorrect', 'stylestatement', 'arrayreproduction', 'followingconsoleconditionvaluesyntaxsyntax', 'errorconsolebundle', 'rubocop', 'styleconditionvaluesyntax', 'unexpectedvaluesyntax', 'input']",{'incorrect': 100}
"['layout', 'metric', 'linelength', 'layout', 'department', 'metricnamespace', 'metric', 'createeecdaeaaabbcbcf', 'rubocop', 'commitlayout', 'departmentrubocopbelongs', 'logic', 'linelength', 'rathersolution', 'horizontal', 'length', 'linelength', 'vertical', 'lengthblocklength', 'classlength', 'classlength', 'methodlengthmetricinformationdefault', 'maximum', 'lengthvariable', 'clearrestriction']",{'length': 100}
"['expose', 'offense', 'status', 'formatters', 'correctableproject', 'rubocop', 'cookbookfield', 'report', 'informationexpose']",{'expose': 100}
"['incorrect', 'autocorrect', 'layoutincorrect', 'autocorrect', 'blockdelimiters', 'styleenforcedstyle', 'layoutmultiline']",{'incorrect': 100}
"['autocorrection', 'length', 'semicolon']",{'length': 100}
"['incorrect', 'autocorrect', 'styleincorrect', 'autocorrect', 'stylebranch', 'startreproduction', 'followingconsolesyntaxconsolerubocopinspectingoffensestylemultilinesyntax', 'indentation', 'difference', 'layout', 'indentation']",{'incorrect': 100}
"['incorrect', 'autocorrect', 'safenavigation', 'styleincorrect', 'autocorrect', 'safenavigation', 'styleobject', 'check', 'comment', 'method']",{'incorrect': 100}
"['requestextra', 'comment', 'style', 'issue', 'safenavigation']",{'issue': 100}
"['extra', 'comment', 'style', 'issue', 'safenavigation']",{'issue': 100}
"['autocorrect', 'multiline', 'incorrect', 'brace', 'emptyincorrect', 'autocorrect', 'layoutempty', 'multiline', 'style', 'errorconsolecorrect', 'rubocop', 'styledoenddoend', 'layout', 'correctssingle', 'brace', 'emptyconsolelayout', 'rubocopblockdelimiters', 'corrects', 'styleconsoleblockdelimiters', 'syntax', 'prevents', 'error', 'correctionmultiline', 'emptyconsolelayout', 'validconsolecorrect', 'rubocop', 'style']",{'incorrect': 100}
"['incorrect', 'autocorrect', 'nestedmodifier', 'styleincorrect', 'autocorrect', 'nestedmodifier', 'styleparenthesis']",{'incorrect': 100}
"['mergerevert', 'buehmann', 'requestrevert', 'parser', 'issue', 'tweak']",{'issue': 100}
"['revert', 'parser', 'issue', 'tweak', 'avoidreverts']",{'issue': 100}
"['errorclassmodulusmodulusconsolerubocopconfiguration', 'rubocop', 'issuerubocop', 'issueconfigurationversion', 'config', 'performance', 'rubocopconfigurationversion', 'config', 'performance', 'rubocopdefault', 'configurationversion', 'config', 'rubocopconfigurationversion', 'config', 'rubocopconfigurationversion', 'config', 'errorrubocop', 'issuesource', 'nilclass', 'method', 'undefinedversion', 'object', 'errorclassintegervalue', 'string', 'argumenterrormeaningvalue', 'integer', 'argumenterror', 'stringleave']",{'integer': 100}
"['requestrefactor', 'length', 'config', 'class']",{'length': 100}
"['default', 'configuration', 'position', 'comment', 'style', 'issue', 'copyright']",{'issue': 100}
"['warning', 'displayeddatabaseconfig', 'rubocopconfig', 'rubocopconfig', 'allcops', 'supportparameter', 'supportedincludeexcludedisplaycopnamesextradetailsusecachemaxfilesincachedatabase', 'warning', 'bulkchangetable', 'supportparameter', 'rubocop', 'issue', 'aroundrubocoprubocopindexrubocoprubocopmodule', 'rubocopconfigconfigurationconfigconfig', 'reproduces', 'issue', 'examplemaster', 'rubocopgemfilesourcegithubgithub', 'rubocopgithub', 'rubocopmodelactiverecord', 'classallcopsbunlde', 'installrequire', 'bundle', 'allcops', 'supportparameter', 'supportedincludeexcludedisplaycopnamesextradetailsusecachemaxfilesincacheinspectingoffensemodelsubclassactiverecord', 'warning', 'migration', 'period', 'rubocop']",{'issue': 100}
"['stalebot', 'issue']",{'issue': 100}
"['stale', 'probot', 'issue', 'cleanbacklog']",{'issue': 100}
"['percent', 'incorrect', 'contains']",{'incorrect': 100}
"['incorrect', 'validation', 'correctincorrect', 'validation', 'correctargument', 'method']",{'incorrect': 100}
"['mergemerge', 'request', 'template', 'issue', 'tweak', 'pockeheader']",{'issue': 100}
"['bugfix', 'issue']",{'issue': 100}
"['request', 'issue', 'conditionautocorrect']",{'issue': 100}
"['incorrect', 'entry', 'changelogsimilar', 'ensure', 'incorrect', 'entry']",{'incorrect': 100}
"['literal', 'stringrandom', 'security', 'input', 'stringusage', 'string']",{'Security': 100}
"['phase', 'config', 'length']",{'length': 100}
"['febaf', 'mergetimmcanty', 'newline', 'request', 'rescue', 'issue']",{'issue': 100}
"['assumeanother', 'stylestylesomethingtechnicallyleastgeneral', 'reallychangeprevious', 'parenthesizedrename', 'setting', 'maybeanother', 'sensitive', 'context', 'common', 'human', 'waste', 'rabbit', 'rubocopstill']",{'Sensitive': 100}
"['incorrect', 'raiseargs', 'styleincorrect', 'raiseargs', 'local', 'object', 'darwin', 'parser', 'runningklass', 'runtimeerrorraiseconsoleraiseargs', 'rubocop', 'styleklass', 'runtimeerrorraiseconsoleraiseargs', 'rubocop', 'styleklass', 'runtimeerrorraise']",{'incorrect': 100}
"['openstruct', 'performancereplace', 'openstruct', 'check', 'static', 'struct', 'issue', 'performance']",{'issue': 100}
"['incorrect', 'autocorrect', 'styleissue', 'rubocop', 'japaneseincorrect', 'autocorrect', 'darwin', 'parser', 'rubocop', 'execution', 'difference', 'resultelementindexelementremoveindexelementelement']",{'incorrect': 100}
"['changelog', 'updateupdatemaster', 'entry', 'changelog', 'sectionupdate', 'issue']",{'issue': 100}
"['rubocop', 'version', 'template', 'issue', 'updaterubocop', 'version', 'template', 'issue', 'updatefollowingconsoleminorversion', 'differenceindexoutput', 'bundle', 'parser', 'linux', 'parser', 'linux']",{'issue': 100}
"['negative', 'modifier', 'length', 'falsewould', 'value', 'metric', 'offense', 'register']",{'length': 100}
"['negative', 'false', 'redundantfreeze', 'stylefollow', 'issuecomment', 'rubocopnegative', 'false', 'redundantfreeze', 'objectmutable', 'range', 'objectconsoledarwin', 'revisionfalsedarwin', 'revisionfalsedarwin', 'revisionfalsedarwin', 'revisionfalserange', 'object', 'positive', 'false', 'causedmutable', 'object', 'rubocopparenthesis', 'range', 'mistakerange', 'object', 'integer']",{'integer': 100}
"['negative', 'falsefollowissuecomment', 'rubocop', 'issuenegative', 'usingmoduleactivesupport', 'concern', 'extendincludedemits', 'offenseclassincludeaactiverecord', 'subclassnegative', 'false', 'approach', 'issue', 'approachsubclass', 'activeresourceentry']",{'issue': 100}
"['inspection', 'definition', 'length', 'module', 'block', 'classmodule', 'class', 'definedsubject', 'inspection', 'blocklength', 'metricclasslength', 'definition', 'metric', 'classmodule', 'modulelength', 'definition', 'metric']",{'length': 100}
"['incorrect', 'autocorrect', 'layoutincorrect', 'layout', 'correctconditioncorrect', 'problem']",{'incorrect': 100}
"['negative', 'false', 'styleaccount', 'definition', 'methodsingle', 'length', 'clearlychange']",{'length': 100}
"['incorrect', 'autocorrect', 'styleremove', 'comment', 'correction']",{'incorrect': 100}
"['incorrect', 'autocorrect', 'styleincorrect', 'autocorrect', 'stylevalue', 'clause', 'expressionreturnexpression', 'valuecompatibility']",{'incorrect': 100}
"['sunny', 'request', 'exampleexample', 'security']",{'Security': 100}
"['example', 'security']",{'Security': 100}
"['multiple', 'setup', 'issue']",{'issue': 100}
"['incorrect', 'autocorrect', 'styleincorrect', 'autocorrect', 'styleprecedence', 'operator', 'methodprecedence', 'others', 'operator', 'methodfollowingcorrectsparenthesis']",{'incorrect': 100}
"['sentence', 'bulkchangetablerubocop', 'issue']",{'issue': 100}
"['confusedrubocop', 'issue']",{'issue': 100}
"['layout', 'errorseparate', 'multi', 'block', 'definesconsolelayout', 'rubocopinspectinglayout', 'errorproblem', 'report', 'rubocop', 'issuerubocop', 'report', 'information', 'darwin', 'parser', 'followingunless', 'issue', 'return', 'causedadfddcaaeaddadl', 'rubocopblock', 'addedconfig', 'rubocop']",{'issue': 100}
"['rubocop', 'suppress', 'usage', 'incorrect', 'backtrace', 'commandrelatedrubocop', 'usage', 'display', 'suppresses', 'omittingconsolecorrect', 'parallel', 'parallelversion', 'rubocopblockversion', 'rubocopversion', 'rubocopversion', 'rubocopversion', 'rubocopparseversion', 'rubocopversion', 'blockversionrealtimeversion', 'rubocoprequiredversion', 'rubocopversion', 'rubocopconsolecorrect', 'parallel']",{'incorrect': 100}
"['incorrect', 'autocorrect', 'stylesummaryfollow', 'issuecomment', 'rubocop', 'issuereportedincorrect', 'followingrubocop', 'order', 'suppress', 'productrefactoredconsolecyclomatic', 'complexity', 'metric', 'offenseoffense']",{'incorrect': 100}
"['restyle', 'example', 'layout', 'formattingfollow', 'issuecomment', 'rubocopchange', 'document', 'format', 'layout', 'commitdisable', 'rubocop', 'metric', 'length', 'exceedsdefault', 'example', 'enforcedstyledescription', 'enforcedstyle', 'quotedconfig', 'rubocop']",{'length': 100}
"['expression', 'crash', 'string', 'empty']",{'crash': 100}
"['stack', 'refactor', 'problemstack', 'underreports', 'amount']",{'stack': 100}
"['autocorrect', 'jsonloadsecurity', 'jsonload', 'autocorrect', 'featurechange', 'security', 'rubocop', 'coverage', 'increase']",{'Security': 100}
"['incorrect', 'autocorrectincorrect', 'correctcontains']",{'incorrect': 100}
"['incorrect', 'offense', 'stylebbatsov', 'issuecomment', 'rubocopincorrect', 'location', 'offense', 'styleguard', 'clause', 'heredocreproductionunless', 'raisemount', 'behaviorconsolerubocop', 'styleinspectingoffenseempty', 'offensereproduce', 'problem', 'actual', 'behaviorrubocop', 'styleinspectingoffenseempty', 'styleguardunless', 'darwin', 'parser', 'runningchange']",{'incorrect': 100}
"['correction', 'stylebbatsov', 'rubocop', 'issuecorrect', 'return', 'privatepublic', 'finalist', 'parent', 'joker', 'autocorrect', 'private', 'check', 'method', 'defines', 'finalstill', 'request', 'correction', 'close', 'problem', 'issue', 'sinceignore', 'option', 'discus']",{'issue': 100}
"['error', 'message', 'tracker', 'official', 'issue', 'thinkmessage', 'errorconsolerubocop', 'errorproblem', 'report', 'rubocop', 'report', 'information', 'darwin', 'parser', 'runningconsolerubocop', 'errorproblem', 'report', 'rubocop', 'issuebbatsov', 'rubocop', 'report', 'information', 'darwin', 'parser']",{'issue': 100}
"['binary', 'resultcacheconvertstill', 'valid', 'result', 'result', 'incorrect', 'endoflinetaken', 'binary', 'reading']",{'incorrect': 100}
"['instance', 'returnsymbolnode', 'strnode', 'insteadindexrrubocop', 'rparsersource', 'buffer', 'string', 'parserindexbuilder', 'rubocopbuilder', 'parserbufferindexstrnode', 'rubocopupdate', 'parserwhitequark', 'parserbuilder', 'whitequark', 'parserrubocop', 'parser', 'override', 'sinceclass', 'currentorder', 'creates', 'instance']",{'buffer': 100}
"['possible', 'inspectbbatsov', 'issuecomment', 'rubocop', 'issue']",{'issue': 100}
"['false', 'interpolationbbatsov', 'rubocop', 'issue']",{'issue': 100}
"['command', 'production', 'actual', 'deprecation', 'unsure', 'issue', 'rubocop', 'usage', 'vulnerabilityconsolesomethingconsolebundle', 'rubocopinspectingoffenseserious']",{'issue': 100}
"['candidate', 'display', 'incorrect', 'message', 'correction', 'errorexamplebundle']",{'incorrect': 100}
"['incorrect', 'presence', 'autocorrectionsyntax', 'blockrescue', 'postfixapplies', 'value', 'return', 'autocorrection']",{'incorrect': 100}
"['config', 'warning', 'checkconfiguration', 'variable', 'longerrubocop', 'check', 'config', 'crash', 'availablevariable', 'local', 'deprecation', 'nameerror', 'method', 'undefinedyield', 'check', 'deprecationvariable', 'instance', 'warning', 'replacescover']",{'crash': 100}
"['phase', 'beware', 'config', 'linelength', 'overriddenvalue', 'metric', 'linelength', 'configuration', 'differentphase', 'config', 'length', 'firstphase', 'assumesmetric', 'linelength']",{'length': 100}
"['empty', 'length', 'descriptive']",{'length': 100}
"['rubocop', 'rspec', 'documentation', 'generatedefault', 'internal', 'rubocop', 'investigation', 'parallel', 'generation', 'rspec', 'generateregistry']",{'generation': 100}
"['indentheredoc', 'layout', 'length', 'awareproblemoffense', 'heredoc', 'layout', 'indentheredoc', 'treatexamplemodulemoduleclassmessage', 'lengthindentation', 'violatesdefault', 'allowheredoc', 'metric', 'linelengthsolutionchange', 'offense', 'heredoc', 'layout', 'register', 'indentheredoc', 'allowheredoc']",{'length': 100}
"['necessary', 'thinkthink', 'passinginformationsnapshot', 'jruby', 'issuejruby', 'issue']",{'issue': 100}
"['stdin', 'permission', 'check', 'optionstdin', 'bundle', 'errorproblem', 'report', 'rubocop', 'report', 'information', 'parser', 'linux']",{'permission': 100}
"['length', 'source', 'parserbbatsov']",{'length': 100}
"['jruby', 'workaroundfollowtravis', 'snapshot', 'jrubyhigher', 'return', 'jrubycurrentjruby', 'lowerconsolertmpdir', 'jruby', 'jruby', 'vagrantopenjdk', 'server', 'jrubylinuxstdlib', 'jruby', 'warning', 'outervagranthigher', 'jrubyconsolertmpdir', 'jruby', 'jruby', 'vagrantopenjdk', 'server', 'jrubylinuxunnecessary', 'jruby', 'issue']",{'issue': 100}
"['checkexampleincorrect', 'proudction', 'environment', 'productionraise', 'environment', 'incorrect', 'false', 'return']",{'incorrect': 100}
"['hasheachmethod', 'performance', 'inspectmatcher', 'violates', 'detect', 'detects']",{'violate': 93}
"['positive', 'false', 'sprintf']",{'Sprintf': 100}
"['performance', 'caller', 'awarearray', 'location', 'caller', 'thread', 'difference', 'backtrace', 'return', 'stringdifference', 'problematic', 'awarebenchmarkbenchmark', 'requireyieldassertraiseassertassertassertsystem', 'total']",{'thread': 100}
"['style', 'blacklist', 'acceptchange', 'heredoc', 'regular', 'delimiter', 'blacklist', 'acceptexpression', 'additiondefault', 'blacklist']",{'blacklist': 100}
"['cache', 'permission']",{'permission': 100}
"['style', 'yodacondition', 'literalexampleyodacondition', 'crash', 'style']",{'crash': 100}
"['valid', 'stringbinary', 'wordarray', 'style', 'crash', 'stringexamplebinary', 'encodingwordarray', 'rubocopconfiguration', 'config', 'pocke', 'rubocoprubocop', 'configuration', 'config', 'pockerubocop', 'configuration', 'config', 'pockeinspectingscanningincompatible', 'ascii', 'regexp', 'string', 'matchpocke', 'rubocop', 'stylepocke', 'rubocop', 'styleblock', 'pocke', 'rubocop', 'stylepocke', 'rubocop', 'stylepocke', 'rubocop', 'stylepocke', 'rubocop', 'stylepocke', 'rubocop', 'styleblock', 'pocke', 'rubocop', 'levelpocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocop', 'investigatepocke', 'rubocop', 'investigatepocke', 'offense', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'block', 'pocke', 'pocke', 'rubocoppocke', 'rubocoppocke', 'secondcause', 'binary', 'ascii']",{'crash': 100}
"['rewrite', 'security']",{'Security': 100}
"['layout', 'department', 'security']",{'Security': 100}
"['style', 'configuration', 'update', 'matchguide', 'bracket', 'squarearray', 'symbol', 'style', 'bbatsov', 'issue', 'literalbrings', 'config']",{'issue': 100}
"['incorrect', 'symbolarray', 'correction', 'style', 'symbolarray', 'optionoptionexamplecorrectedchange']",{'incorrect': 100}
"['constmarshalload', 'yamlload', 'security', 'jsonloadmatchingimproves', 'pattern']",{'Security': 100}
"['incorrect', 'correction', 'style']",{'incorrect': 100}
"['incorrect', 'selfassignment', 'correction', 'style']",{'incorrect': 100}
"['offense', 'style', 'invalid', 'indentheredoc', 'emtpybbatsov', 'rubocop', 'issue']",{'issue': 100}
"['directive', 'linelengthexamplecopname', 'detect', 'directive', 'error', 'extraneous', 'return', 'charactercopname', 'length', 'regexpdetect']",{'length': 100}
"['security', 'format', 'argument', 'yamlloadyamlload', 'warning', 'security', 'variable', 'pocke', 'testeof', 'parser', 'warningpocke', 'rubocop', 'token', 'warninginspectingsecurity', 'pocke', 'rubocop', 'format', 'argument', 'warning', 'stringsecurity', 'pocke', 'rubocop', 'format', 'argument', 'warning', 'offenseargument', 'removeignores', 'variable', 'pocke', 'testeof', 'parser', 'warningparserpocke', 'rubocop', 'token', 'warningfalse']",{'Security': 100}
"['travis', 'bbatsovcauserainbow', 'issue', 'different', 'reason', 'buildtravis', 'bbatsov']",{'issue': 100}
"['whitelist', 'configurablebbatsov', 'rubocop', 'issue']",{'issue': 100}
"['length', 'comment']",{'length': 100}
"['header', 'security']",{'Security': 100}
"['positive', 'falsebbatsov', 'rubocop', 'issue']",{'issue': 100}
"['definition', 'module', 'regexpmatch', 'crash', 'performance', 'regexpmatch', 'crashmodulerubocop', 'cache', 'regexpmatch', 'false', 'performanceconfigurationdefault', 'rubocop', 'configuration', 'config', 'pockerubocop', 'configuration', 'config', 'pockerubocop', 'configuration', 'config', 'regexpmatch', 'error', 'performancenilclass', 'method', 'undefinedperformance', 'pocke', 'rubocopperformance', 'pocke', 'rubocopperformance', 'pocke', 'rubocopperformance', 'pocke', 'rubocopperformance', 'pocke', 'rubocopperformance', 'pocke', 'block', 'rubocopperformance', 'pocke', 'rubocopperformance', 'pocke', 'rubocopperformance', 'pocke', 'rubocopblock', 'pocke', 'rubocop', 'levelpocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocop', 'investigatepocke', 'rubocop', 'investigatepocke', 'offense', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'block', 'pocke', 'pocke', 'rubocoppocke', 'rubocoppocke', 'regexpmatch', 'error', 'performancerubocop', 'errorproblem', 'report', 'rubocop', 'report', 'information', 'parser', 'linux', 'secondcause', 'module', 'difference', 'classmodule', 'classchangechange', 'check', 'problem']",{'crash': 100}
"['method', 'customise', 'creatingoften', 'module', 'issue', 'current', 'setting', 'context', 'module', 'access', 'block', 'approach', 'method', 'option']",{'issue': 100}
"['crash', 'stylefalse', 'cache', 'rubocop', 'errorproblem', 'report', 'rubocop', 'report', 'information', 'parser', 'linux', 'runningconfiguration', 'config', 'pocke', 'rubocoprubocop', 'configuration', 'config', 'pockerubocop', 'configuration', 'config', 'pockeinspectingscanningmethod', 'rubocop', 'undefinedmixin', 'pocke', 'rubocopmixin', 'pocke', 'rubocoppocke', 'rubocop', 'stylepocke', 'rubocop', 'stylepocke', 'offense', 'rubocop', 'stylepocke', 'rubocop', 'stylepocke', 'rubocop', 'styleblock', 'pocke', 'rubocop', 'levelpocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblockpocke', 'rubocoppocke', 'rubocoppocke', 'rubocop', 'investigatepocke', 'rubocop', 'investigatepocke', 'offense', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'block', 'pocke', 'pocke', 'rubocoppocke', 'rubocoppocke']",{'crash': 100}
"['crashchain', 'crash', 'methodreproduce', 'problemdescribefalse', 'cache', 'rubocopconfiguration', 'config', 'pocke', 'rubocoprubocop', 'configuration', 'config', 'pockerubocop', 'configuration', 'config', 'pockeinspectingscanningnilclass', 'method', 'undefinedpocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocop', 'levelpocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocop', 'investigatepocke', 'rubocop', 'investigatepocke', 'offense', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'block', 'pocke', 'pocke', 'rubocoppocke', 'rubocoppocke']",{'crash': 100}
"['generation', 'system']",{'generation': 100}
"['incorrect', 'descriptionexample']",{'incorrect': 100}
"['rename', 'security']",{'Security': 100}
"['security', 'yamlload']",{'Security': 100}
"['marshal', 'security']",{'Security': 100}
"['process', 'table', 'generation', 'content']",{'generation': 100}
"['crash', 'method', 'assignassignment', 'crash', 'stylestyleenforcedstyleenabledfalse', 'cache', 'rubocop', 'styleconfiguration', 'config', 'rubocopdefault', 'rubocop', 'configuration', 'config', 'pockerubocop', 'configuration', 'config', 'pockerubocop', 'configuration', 'config', 'bbatsov', 'pocke', 'rubocopsymbol', 'method', 'undefinedpocke', 'rubocop', 'stylepocke', 'rubocop', 'stylepocke', 'rubocop', 'styleblock', 'pocke', 'rubocop', 'levelpocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblockpocke', 'rubocopblockpocke', 'rubocoppocke', 'rubocoppocke', 'rubocop', 'investigatepocke', 'rubocop', 'investigatepocke', 'offense', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'block', 'pocke', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocopsymbol', 'method', 'undefinedpocke', 'rubocop', 'stylepocke', 'rubocop', 'stylepocke', 'rubocop', 'styleblock', 'pocke', 'rubocop', 'levelpocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblockpocke', 'rubocopblockpocke', 'rubocoppocke', 'rubocoppocke', 'rubocop', 'investigatepocke', 'rubocop', 'investigatepocke', 'offense', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'block', 'pocke', 'pocke', 'rubocoppocke', 'rubocoppocke']",{'crash': 100}
"['hashsyntax', 'style', 'crash', 'emptyproblemenforcedstyle', 'hashsyntax', 'style', 'crash', 'emptyhashsyntax', 'styleenforcedstyleenableddebug', 'hashsyntax', 'rubocop', 'stylehashsyntax', 'errorproblem', 'report', 'rubocop', 'report', 'information', 'parser', 'linux', 'runningconfigurationdefault', 'rubocop', 'configuration', 'config', 'pockerubocop', 'configuration', 'config', 'pockerubocop', 'configuration', 'config', 'pockeinspectingscanningnilclass', 'method', 'undefinedpocke', 'rubocop', 'stylepocke', 'rubocop', 'styleblock', 'pocke', 'rubocop', 'levelpocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocop', 'investigatepocke', 'rubocop', 'investigatepocke', 'offense', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'block', 'pocke', 'pocke', 'rubocoppocke', 'rubocoppocke']",{'crash': 100}
"['crash', 'masgn', 'style']",{'crash': 100}
"['enumuniqueness', 'crashreceives', 'enumuniqueness', 'crash', 'model', 'errorrubocop', 'errorproblem', 'report', 'rubocop', 'report', 'information', 'parser', 'linux', 'runningconfiguration', 'config', 'pocke', 'rubocoprubocop', 'configuration', 'config', 'pockerubocop', 'configuration', 'config', 'modelnilclass', 'method', 'undefinedpocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocop', 'levelpocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblockpocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocop', 'investigatepocke', 'rubocop', 'investigatepocke', 'offense', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'block', 'pocke', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocopoffenseinside', 'space', 'model', 'statusinside', 'space', 'model', 'statusinside', 'space', 'model', 'statusinside', 'space', 'model']",{'crash': 100}
"['enumuniquenessintroduces', 'value', 'usage', 'definition', 'syntax', 'duplicate', 'identifiesmodel', 'active', 'statusarray', 'integer', 'specific', 'definedactiverecord', 'active', 'statuspossible', 'specify', 'duplicate']",{'integer': 100}
"['mergeautocorrect', 'pocke', 'crash', 'params']",{'crash': 100}
"['crash', 'params']",{'crash': 100}
"['generation', 'documentation', 'incorrectsolution', 'problemproblemdefault', 'value', 'metricconfiguration', 'configconfiguration', 'appliedmetric', 'abcsizeimportant', 'attributevalue', 'attributereference', 'abcmetricsolutionconfig', 'rubocopconfig', 'rubocopconfig', 'current', 'insteadproblemdefault', 'config', 'rejectedfixeddescription', 'content', 'documentation', 'updateforgotten']",{'generation': 100}
"['condition', 'empty', 'brace', 'errorproblemcondition', 'crash', 'rubocop', 'emptyexamplefalse', 'cache', 'rubocoprubocop', 'bbatsov', 'error', 'pockerubocop', 'bbatsov', 'error', 'negatedif', 'pockerubocop', 'bbatsov', 'error', 'pockeconfiguration', 'bbatsov', 'pocke', 'rubocoprubocop', 'bbatsov', 'configuration', 'pockedefault', 'rubocop', 'configuration', 'config', 'pockerubocop', 'configuration', 'config', 'pockerubocop', 'configuration', 'config', 'bbatsov', 'pocke', 'rubocopnilclass', 'method', 'undefinedmixin', 'pocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocop', 'checkpocke', 'rubocoppocke', 'rubocop', 'checkpocke', 'rubocopblock', 'pocke', 'rubocop', 'levelpocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocop', 'investigatepocke', 'rubocop', 'investigatepocke', 'offense', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'block', 'pocke', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocopnilclass', 'method', 'undefinedmixin', 'pocke', 'rubocoppocke', 'rubocop', 'styleblock', 'pocke', 'rubocop', 'levelpocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocop', 'investigatepocke', 'rubocop', 'investigatepocke', 'offense', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'block', 'pocke', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocopnilclass', 'method', 'undefinedternary', 'mixin', 'pocke', 'rubocoppocke', 'rubocop', 'stylepocke', 'rubocop', 'stylepocke', 'rubocop', 'styleblock', 'pocke', 'rubocop', 'bbatsov', 'error', 'pockerubocop', 'bbatsov', 'error', 'negatedif', 'pockerubocop', 'bbatsov', 'error', 'pockerubocop', 'errorproblem', 'report', 'rubocop', 'report', 'information', 'parser', 'linux', 'runningpocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocop', 'investigatepocke', 'rubocop', 'investigatepocke', 'offense', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocopblock', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'rubocoppocke', 'block', 'pocke', 'pocke', 'rubocoppocke', 'rubocoppocke', 'rubocopoffensestyle', 'frozen', 'literal', 'stringsingle', 'favor', 'modifier', 'alternative', 'usage', 'style', 'control']",{'crash': 100}
"['security', 'jsonload', 'autocorrectreason', 'single', 'stream', 'value']",{'Security': 100}
"['multiple', 'elsifs', 'elsif', 'expression', 'crash']",{'crash': 100}
"['casewhensplat', 'autocorrect', 'crash', 'multiple', 'followedpossible', 'reorderingcondition', 'fastercould']",{'crash': 100}
"['savebang', 'parent', 'issue', 'method']",{'issue': 100}
"['normal', 'regular', 'issue', 'expressionnormal', 'number', 'regular', 'defines', 'analog', 'multi', 'definition', 'issue', 'digit']",{'issue': 100}
"['fixnum', 'bignum', 'fixnum', 'integer', 'rubocopbignum']",{'integer': 100}
"['multiline', 'style', 'crash', 'brace', 'empty']",{'crash': 100}
"['crash', 'exceptionraise', 'location', 'offense', 'nomethoderror', 'calculation', 'rescue', 'location', 'keyword']",{'crash': 100}
"['bracket', 'rubocop', 'style', 'crash', 'empty']",{'crash': 100}
"['bbbdae', 'mergeenhancement', 'clause', 'drenmi', 'request', 'guardcheck', 'faulty', 'length', 'style']",{'length': 100}
"['stack', 'message', 'filename']",{'stack': 100}
"['check', 'faulty', 'length', 'style', 'large', 'falseformatgenerate', 'reason']",{'length': 100}
"['dfaebadeivid', 'rodriguez', 'requestmismatch', 'issue']",{'issue': 100}
"['mismatch', 'issue', 'encodingconfig', 'external', 'crash', 'encodingcontains']","{'issue': 100, 'crash': 100}"
"['number', 'message', 'issue', 'instruction', 'prefix']",{'issue': 100}
"['minor', 'issue']",{'issue': 100}
"['incorrect', 'description']",{'incorrect': 100}
"['symlinks', 'directory', 'configdefault', 'location', 'rubocop', 'cache', 'resultworld', 'system', 'majority', 'writable', 'maliciousredirect', 'rubocop', 'output', 'symlink', 'createcause', 'malicious', 'rubocopprevious', 'attack', 'symlink', 'protectionpresent', 'cache', 'symlinksoften', 'cache', 'symlink', 'ability', 'persistent', 'result', 'placedpredictable', 'location', 'machine', 'symlinkedconfiguration', 'commitpermit', 'symlinkscache', 'location', 'certainbbatsov', 'rubocop', 'issuebbatsov', 'rubocopbbatsov', 'rubocop', 'issue']",{'issue': 100}
"['expose', 'support', 'exposedrspec', 'rubocop']",{'expose': 100}
"['refactor', 'length', 'class']",{'length': 100}
"['string', 'multiline', 'stringliterals', 'crash']",{'crash': 100}
"['variable', 'ignore', 'length', 'stylecloseoffense']",{'length': 100}
"['number', 'issue']",{'issue': 100}
"['fatal', 'error', 'result', 'cachedincompatible', 'demonstrates', 'occurs', 'asciioffense', 'certain', 'result', 'contains', 'check', 'cache', 'encodingfatal', 'result', 'errorcache', 'modifies', 'location', 'matchbehaviour', 'rubocopoutput', 'crash', 'encodingcertain', 'rubocop', 'crash', 'charactersyntax', 'happenoffensecache', 'offense', 'attemptoutputchange', 'serialization', 'cache', 'generatessource']","{'fatal': 100, 'crash': 100}"
"['deafe', 'mergerrosenblum', 'dependant', 'issue']",{'issue': 100}
"['dependant', 'issue']",{'issue': 100}
"['catch', 'length', 'stylealternative', 'check', 'collection']",{'length': 100}
"['template', 'issue']",{'issue': 100}
"['useless', 'buffer']",{'buffer': 100}
"['value', 'limit', 'redundantmergeexplains', 'value', 'number', 'config', 'discussion', 'issue', 'situation', 'option']",{'issue': 100}
"['casewhensplat', 'reorder', 'clause', 'performanceinclude', 'release', 'parser', 'source', 'rewriterregard', 'update', 'clobberadjustment', 'insertionexact', 'impossibledifficult', 'mergewhetherperformance', 'violates', 'commitadjusts', 'autocorrect', 'instance', 'casewhensplat', 'attemptsingle', 'orderautocorrection', 'problem', 'instanceiteration', 'autocorrection', 'couple']",{'violate': 93}
"['source', 'parser', 'reuse', 'buffer']",{'buffer': 100}
"['predicate', 'length', 'request', 'featurestyle']",{'length': 100}
"['implicit', 'crash']",{'crash': 100}
"['perfomance', 'block', 'crash', 'method', 'empty']",{'crash': 100}
"['flush', 'performance', 'autocorrectionoffense', 'single', 'autocorrection', 'jonassingle', 'source', 'offense', 'rathercontainsindicate', 'contains', 'additionissue', 'problem', 'thread', 'autocorrectedflush', 'performance', 'autocorrectionoverstate', 'atrocious', 'horrendousstill', 'trouble', 'bettercrack', 'replacesremains']",{'thread': 100}
"['enforcedstyle', 'autocorrector', 'style', 'stringliterals', 'respectreplace', 'double', 'stringbbatsov', 'rubocop', 'issue']",{'issue': 100}
"['config', 'generate', 'acrossbroke', 'generation', 'styleanotherinspection']",{'generation': 100}
"['length', 'requestallowheredoc', 'metric', 'linelength', 'option']",{'length': 100}
"['andor', 'crash', 'style']",{'crash': 100}
"['stack', 'refactor', 'state', 'nodepattern', 'explicit', 'compiler', 'recursion', 'machine', 'compiler', 'fasterstack', 'evaluation', 'software', 'modify', 'ratherextend']",{'stack': 100}
"['aecef', 'babae', 'mergealexdowad', 'requeststart', 'integer', 'style', 'error', 'literal']",{'integer': 100}
"['integer', 'style', 'error', 'literal']",{'integer': 100}
"['requestliteral', 'security', 'string']",{'Security': 100}
"['requeststatic', 'length']",{'length': 100}
"['string', 'literal', 'calculate', 'length']",{'length': 100}
"['mergeoption', 'blacklist', 'requestoptionhash', 'option', 'style']",{'blacklist': 100}
"['ffceb', 'mergesliuu', 'circular', 'requestargument', 'reference', 'circular', 'issue']",{'issue': 100}
"['argument', 'reference', 'circular', 'issue']",{'issue': 100}
"['requestpattern', 'offense', 'length', 'register']",{'length': 100}
"['pattern', 'offense', 'length', 'register']",{'length': 100}
"['eeaae', 'mergeunmanbearpig', 'crash', 'offense']",{'crash': 100}
"['issue', 'style', 'couple']",{'issue': 100}
"['splat', 'crash']",{'crash': 100}
"['splat', 'crash']",{'crash': 100}
"['requestsample', 'randomness', 'shuffle', 'support', 'source']",{'randomness': 100}
"['sample', 'randomness', 'rewrite', 'source']",{'randomness': 100}
"['ebdeeshort', 'parenthesis', 'request', 'lambda', 'syntax', 'crashshort', 'parenthesis', 'lambda', 'syntax', 'crash']",{'crash': 100}
"['requestmaximum', 'class', 'length']",{'length': 100}
"['crash', 'block', 'commentspecial', 'block', 'commentfinal']",{'crash': 100}
"['style', 'issue']",{'issue': 100}
"['documentation', 'parser', 'style', 'update', 'commentensure', 'adapt', 'dependencydocumentationincrease', 'issue']",{'issue': 100}
"['requestmulti', 'autocorrect', 'whitespace', 'lambda', 'issue']",{'issue': 100}
"['multi', 'autocorrect', 'whitespace', 'lambda', 'issue']",{'issue': 100}
"['vulnerabilityarbitrary', 'enableunsafe', 'execution', 'vulnerability', 'remotepsych', 'issue', 'rubocopcould', 'server', 'hosteddownside', 'compatibility', 'backwards', 'maintainversion']",{'issue': 100}
"['mergemerge', 'check', 'pimterry', 'request', 'infinitestack', 'default', 'window', 'jruby', 'overflow']",{'overflow': 100}
"['generation', 'example']",{'generation': 100}
"['brace', 'blockoffense', 'block', 'issue', 'brace']",{'issue': 100}
"['dcecd', 'mergemerge', 'modifier', 'request', 'block', 'volkert', 'emptymodifier', 'keyword', 'block', 'issue']",{'issue': 100}
"['keyword', 'block', 'issue']",{'issue': 100}
"['procs', 'ignore', 'symbolprocbbatsov', 'specific', 'rubocop', 'issue']",{'issue': 100}
"['parenthesis', 'negatedwhile', 'condition', 'aroundparenthesis', 'incorrect']",{'incorrect': 100}
"['requestwhole', 'buffer']",{'buffer': 100}
"['whole', 'buffer', 'comparecheck', 'buffer', 'syntax', 'parsingequality', 'checkcheck']",{'buffer': 100}
"['location', 'information', 'number', 'offenseglance', 'number', 'obvious', 'length', 'column']",{'length': 100}
"['force', 'bundle', 'installproblem', 'standard', 'configuration', 'rubygemsrubygems', 'issue']",{'issue': 100}
"['mergemerge', 'length', 'request', 'smangelsdorf', 'schemeallowuri', 'valid', 'linelength']",{'length': 100}
"['refine', 'format', 'check', 'sprintf', 'kernel']",{'Sprintf': 100}
"['eaecc', 'mergepatch', 'length']",{'length': 100}
"['fffebd', 'mergepatch', 'length']",{'length': 100}
"['ffecatobynet', 'patch', 'requestfilename', 'vagrantfile', 'rakefile', 'blacklist']",{'blacklist': 100}
"['filename', 'vagrantfile', 'rakefile', 'blacklist']",{'blacklist': 100}
"['mergeyujinakayama', 'crash']",{'crash': 100}
"['mergemerge', 'request', 'invalid', 'crash', 'allowuri', 'linelength', 'crash', 'option']",{'crash': 100}
"['allowuri', 'linelength', 'crash', 'option']",{'crash': 100}
"['acbeaf', 'mergemerge', 'length', 'request', 'yujinakayamalinelength', 'option', 'allowuri']",{'length': 100}
"['rspec', 'message', 'expectation', 'aroundrspec', 'issue']",{'issue': 100}
"['buffer', 'parser', 'encodingascii', 'reading', 'firstbinary', 'logic']",{'buffer': 100}
"['incorrect', 'message', 'rubocop', 'error']",{'incorrect': 100}
"['patterncompatibility', 'backwards', 'deprecation', 'issue', 'problematic', 'pattern']",{'issue': 100}
"['gemfile', 'capfile', 'filename', 'blacklist']",{'blacklist': 100}
"['mergevalue', 'formatter', 'length', 'request', 'yujinakayamaformatter', 'value', 'offense', 'location', 'length']",{'length': 100}
"['formatter', 'value', 'offense', 'location', 'length']",{'length': 100}
"['maximum', 'parameter', 'length', 'maxlinelength']",{'length': 100}
"['empty', 'double', 'class', 'reportinginside', 'crash', 'method', 'empty']",{'crash': 100}
"['baadf', 'mergescottmatthewman', 'point', 'contributor', 'issue', 'guideline']",{'issue': 100}
"['point', 'issue']",{'issue': 100}
"['existence', 'check', 'instance', 'incorrect', 'method']",{'incorrect': 100}
"['requestternary', 'crash']",{'crash': 100}
"['ternary', 'crash']",{'crash': 100}
"['rubocop', 'simplify', 'generation', 'aroundconfiguration', 'contains']",{'generation': 100}
"['class', 'length']",{'length': 100}
"['generation', 'config', 'possible', 'signalexceptiondifficult', 'supportgeneration']",{'generation': 100}
"['parser', 'encodingobject', 'buffer', 'parser', 'source']",{'buffer': 100}
"['requestinclude', 'issue', 'exclude', 'config', 'warning']",{'issue': 100}
"['issue', 'exclude', 'config']",{'issue': 100}
"['numberwith', 'portion', 'underscore', 'digitinsteadnumber', 'integer', 'portion', 'underscore', 'digit']",{'integer': 100}
"['crash', 'empty']",{'crash': 100}
"['cbdcemerge', 'request', 'multilines', 'crash', 'yujinakayamaformatter', 'multiple', 'clang', 'source', 'highlight']",{'crash': 100}
"['different', 'length', 'alignment', 'hasheconflictrubocop', 'style']",{'length': 100}
"['length', 'highlight', 'offencerange', 'message', 'source', 'parserraise', 'instance', 'multiplewhitequark', 'parser', 'commitrange', 'actual', 'consistent', 'visual', 'source', 'ratherrange', 'terminal']",{'length': 100}
"['requestandor', 'crash']",{'crash': 100}
"['andor', 'crash', 'causingrefer', 'range', 'correction', 'whole', 'meaning']",{'crash': 100}
"['severity', 'support', 'syntax', 'warning', 'offencedisable', 'warning', 'fatal', 'syntax', 'invalid', 'error']",{'fatal': 100}
"['corner', 'crash', 'alignhashvalue', 'single', 'separator', 'table', 'configuration']",{'crash': 100}
"['nilcomparison', 'crash']",{'crash': 100}
"['requestinput', 'crash', 'empty']",{'crash': 100}
"['input', 'crash', 'empty']",{'crash': 100}
"['crash', 'class']",{'crash': 100}
"['buffer', 'source', 'parser']",{'buffer': 100}
"['rubinius', 'aroundquick', 'failingtravis', 'bbatsov', 'issuerubinius', 'issue']",{'issue': 100}
"['parser', 'setting', 'whitequark', 'parser', 'issue']",{'issue': 100}
"['incorrect', 'example']",{'incorrect': 100}
"['incorrect', 'number', 'changelog', 'issue']","{'incorrect': 100, 'issue': 100}"
"['requestdocumentation', 'crash', 'empty']",{'crash': 100}
"['documentation', 'crash', 'emptyempty', 'module', 'offence', 'register']",{'crash': 100}
"['migrate', 'rescuemodifier', 'parserexplicit', 'parser', 'source', 'kwbegin', 'generatesimplicit', 'differentiateissuecomment', 'whitequark', 'parser', 'issue']",{'issue': 100}
"['jruby', 'force', 'directory', 'temporaryjruby', 'candidate', 'current', 'ordinaryworld', 'directory', 'latteraffect', 'tempfile', 'behavior', 'temporaryreason', 'issuejruby', 'issue']",{'issue': 100}
"['bunch', 'issue', 'style']",{'issue': 100}
"['random', 'failure', 'thread', 'furthermore', 'testingbroken']",{'thread': 100}
"['buffer', 'duplication', 'source', 'parser', 'string']",{'buffer': 100}
"['request', 'crash', 'yujinakayamarescueexception', 'rescue', 'specification', 'crash', 'class']",{'crash': 100}
"['rescueexception', 'rescue', 'specification', 'crash', 'class']",{'crash': 100}
"['arrayliteral', 'hashliteral', 'crash']",{'crash': 100}
"['requestrescue', 'rescueexception', 'crash', 'clause']",{'crash': 100}
"['rescue', 'rescueexception', 'crash', 'clauseanother']",{'crash': 100}
"['crash', 'string']",{'crash': 100}
"['issue', 'configuration', 'contains', 'warning']",{'issue': 100}
"['random', 'failurerandom', 'failure', 'interruptiontravis', 'bbatsov', 'behavior', 'rubocop', 'runningseems', 'unstable', 'childcoverage', 'measuredrewrote', 'thread']",{'thread': 100}
"['issue', 'configuration', 'contains', 'warningparameter', 'check']",{'issue': 100}
"['issue', 'stringcolorize', 'interference']",{'issue': 100}
"['length', 'comment', 'ingore', 'method', 'option']",{'length': 100}
"['bundler', 'performance', 'issue']",{'issue': 100}
"['changelog', 'update', 'issue']",{'issue': 100}
"['interpolation', 'nastymessage', 'contains', 'sprintf', 'errorescape', 'special', 'message']",{'Sprintf': 100}
"['sprintf', 'style']",{'Sprintf': 100}
"['configurable', 'length']",{'length': 100}
"['cdcacjonas', 'bugfix', 'requestsolution', 'support', 'issue']",{'issue': 100}
"['solution', 'support', 'issue']",{'issue': 100}
