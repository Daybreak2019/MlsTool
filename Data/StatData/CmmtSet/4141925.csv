message,fuzzy
"['fatal', 'error', 'cleanupfatalf', 'errorf', 'prerequisite']",{'fatal': 100}
"['eadebrequest', 'denperov', 'mergepreallocation', 'content', 'buffer']",{'buffer': 100}
"['mergerequest', 'skrater', 'masterpublish', 'deadlock']",{'deadlock': 100}
"['publish', 'deadlock']",{'deadlock': 100}
"['preallocation', 'content', 'buffer']",{'buffer': 100}
"['mergerequest', 'streadway', 'proto', 'internalserialization', 'alternative', 'introduces', 'protocol', 'generation', 'possible', 'supportive', 'message', 'common', 'internalincludes', 'backwards', 'streadway', 'package', 'error', 'compatible', 'interface']",{'generation': 100}
"['protocol', 'package', 'internalintroduces', 'protocol', 'message', 'internalserialization', 'generation', 'supportive', 'possible', 'alternativeincludes', 'package', 'interface', 'aliasingstreadway', 'error', 'internalcompatible', 'backwards']",{'generation': 100}
"['revert', 'order', 'number', 'message', 'expose', 'channel', 'confirmsreverts', 'commitstreadway', 'issuecomment']",{'expose': 100}
"['expose', 'revert', 'confirmsreverts', 'commitstreadway', 'issuecomment']",{'expose': 100}
"['mergerequest', 'digitalcrab', 'channel', 'order', 'number', 'message', 'expose', 'sequential', 'confirms']",{'expose': 100}
"['channel', 'order', 'number', 'message', 'expose', 'sequential', 'confirms']",{'expose': 100}
"['mergerequest', 'streadway', 'mergegoroutines', 'buffer', 'consumer', 'channel']",{'buffer': 100}
"['immediateclose', 'rename', 'mirror', 'methoddrain', 'close', 'inflight', 'deliveryclose', 'consumer', 'immediatelydelivieries', 'inflight', 'goroutine', 'buffer']",{'buffer': 100}
"['removetrust', 'issue', 'feedback', 'community']",{'issue': 100}
"['mergerequest', 'streadway', 'validation', 'issue', 'mergewhitespace', 'error', 'contains']",{'issue': 100}
"['connection', 'concurrent', 'channel']",{'concurrent': 100}
"['error', 'channel', 'closeresult', 'deadlock', 'close', 'rabbimq', 'error']",{'deadlock': 100}
"['connection', 'expose', 'discussionlibrary', 'connection', 'closure', 'state']",{'expose': 100}
"['acceptoperation', 'connection', 'markedclose', 'connection', 'certain', 'concurrency']",{'concurren': 90}
"['connection', 'expose']",{'expose': 100}
"['deadlock', 'concurrent']","{'deadlock': 100, 'concurrent': 100}"
"['deadlock', 'avoidresult', 'deadlock', 'connection', 'shutdown', 'server']",{'deadlock': 100}
"['mergerequest', 'tristn', 'special', 'issue']",{'issue': 100}
"['issueconnection', 'framesizecrash', 'issue']",{'issue': 100}
"['synchronizes', 'state', 'confirmsconfirms', 'thread', 'public', 'method', 'exportmethod']",{'thread': 100}
"['allocator', 'integerconnection', 'bitset', 'order', 'expose', 'channeldatastructure', 'integer', 'track']","{'expose': 100, 'integer': 100}"
"['expose', 'address', 'local']",{'expose': 100}
"['timeout', 'deadlock', 'increase']",{'deadlock': 100}
"['publish', 'reconstruction', 'length']",{'length': 100}
"['removeheartbeat', 'concurrent', 'multiplex', 'access', 'insteadheartbeat', 'concerntimeout', 'interval']",{'concurrent': 100}
"['parse', 'array', 'length', 'integrates', 'field', 'table', 'serverargument', 'queue', 'exchange', 'letter']",{'length': 100}
"['wrong', 'issue', 'protocol', 'binarythought', 'original', 'implementation', 'describe', 'wouldarray', 'element', 'number', 'desribesassumption', 'reading', 'itterations', 'error']",{'issue': 100}
"['chans', 'delivery', 'buffer', 'consumerbuffer', 'infinitelyexample', 'chans', 'ensure', 'notifyconfirm', 'connection', 'notifyconfirm']",{'buffer': 100}
"['mergerequest', 'streadway', 'issue', 'mergeimplement']",{'issue': 100}
"['github', 'issue', 'regression']",{'issue': 100}
"['session', 'refactor', 'protocol', 'drivergrant', 'independence', 'integration', 'returnclient', 'deadlock', 'library']",{'deadlock': 100}
"['implementconsumer', 'channel', 'thread', 'extract']",{'thread': 100}
"['destruct', 'stack', 'minute']",{'stack': 100}
"['verbose', 'filling', 'buffer', 'output', 'travis']",{'buffer': 100}
"['stack', 'sigquit', 'specific', 'siginfo', 'force']",{'stack': 100}
"['fatal', 'error']",{'fatal': 100}
"['aggregation', 'memory', 'buffer', 'attempt', 'corruption', 'slice', 'reuse', 'message', 'understanding', 'content']",{'buffer': 100}
