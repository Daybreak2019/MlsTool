message,fuzzy
"['section', 'changesection', 'rationale', 'exception', 'issuecomment', 'issue']",{'issue': 100}
"['memory', 'changeprevious', 'memory', 'location', 'issue', 'indexposix', 'ensures', 'consistent']",{'issue': 100}
"['integer', 'overflow', 'objdump']","{'integer': 100, 'overflow': 100}"
"['table', 'limit', 'detectmemory', 'limit', 'tablesingle', 'limit', 'encodedmemory', 'table', 'limit', 'memory', 'thread', 'disallow', 'disabledcheck', 'additional', 'disallowmemory']",{'thread': 100}
"['issue', 'portability', 'specifier', 'formatbinji', 'smith']",{'issue': 100}
"['runtime', 'issue', 'multiple', 'environment', 'meantrecent']",{'issue': 100}
"['issue', 'wasmwatdeclare', 'element', 'keyword', 'expression', 'setting', 'element', 'table']",{'issue': 100}
"['requireexamplelabel', 'param', 'exception', 'issuecomment', 'issue']",{'issue': 100}
"['callback', 'thread', 'function', 'currentexperimental', 'implementation', 'hostfuncs', 'module', 'approach', 'passingthread', 'docallpurpose', 'callbackinstance', 'approach', 'alternativedifferent', 'hostcallmemory', 'instance']",{'thread': 100}
"['overflow', 'address', 'wasmcoffset', 'occurs', 'immediate', 'small', 'sizedusual', 'stack', 'offset', 'immediatearithmetic', 'conversion', 'addressalready', 'offsetleast']","{'overflow': 100, 'stack': 100}"
"['proposal', 'thread', 'thread', 'binaryatomicfenceexpr', 'field', 'patchwithout']",{'thread': 100}
"['interpreterruntime', 'object', 'closelyobject', 'subclass', 'refptrdescription', 'store', 'runtime', 'structs', 'module', 'namedfuncdesc', 'descriptor', 'instantiationruntime', 'instantiation', 'occurs', 'importmodule', 'instructionstill', 'stack', 'gotos', 'interpretprevious', 'compile', 'interpreter', 'instantiate', 'alwaysknown', 'function', 'whethermodule', 'functioncheap', 'module', 'functionslight', 'check', 'performance', 'alwaysmajor', 'difference', 'interpreter', 'structurepoint', 'equivalent', 'requiresstudio', 'function', 'visualstack', 'stream', 'instructionistream', 'duplication', 'reader', 'binaryinterphelperinterp', 'print', 'function', 'primarilyinterp']",{'stack': 100}
"['standard', 'clang', 'compilerapplicableeverywhere', 'exceptregard', 'effectallow', 'posixinclude', 'reader', 'binarydepends', 'recent', 'cmakehexfloat', 'thread', 'sysconf', 'insteadstandard', 'thread', 'sysconf', 'insteadguardplatform', 'guard', 'posix']",{'thread': 100}
"['initialexcept', 'thread']",{'thread': 100}
"['crash', 'reloc', 'unsupported', 'watwasmrelocation', 'typeindexleb']",{'crash': 100}
"['issue', 'stringwithout']",{'issue': 100}
"['reftype', 'support', 'referenceinternal', 'hostref', 'subtype', 'anyrefrefersince', 'anyref', 'abstractvalue', 'stack', 'containforeign', 'enumeration', 'reftype', 'implementation', 'changeuseful', 'parameter', 'result', 'usingcallfunction']",{'stack': 100}
"['reference', 'format', 'table', 'document', 'overview', 'incorrect', 'imaginewrongissue']",{'incorrect': 100}
"['decompile', 'stacky', 'reworkedexample', 'multiinstead', 'pseudo', 'readable', 'problempossible', 'generates', 'systemvariable', 'clearer']",{'stack': 91}
"['visit', 'catch', 'emptyvisit', 'catch', 'catch', 'emptyexnref', 'validation', 'stack', 'catchcurrentfailure', 'input', 'validationvalue', 'stack', 'exnref', 'catchoutput']",{'stack': 100}
"['watwasmescape', 'newlines', 'stringexponent', 'incorrect']",{'incorrect': 100}
"['crash', 'newlines', 'string', 'tokencrash', 'newlines', 'string', 'tokenissue']",{'crash': 100}
"['crash', 'objdump', 'section', 'invalid', 'reloc']",{'crash': 100}
"['integer', 'parsingparsehexdigit', 'character', 'allowedfails', 'overflow', 'check']","{'integer': 100, 'overflow': 100}"
"['travis', 'functionattempt', 'version', 'emscripten', 'function', 'emscripten', 'issue', 'workaroundallow', 'emscripten']",{'issue': 100}
"['executor', 'runfunction', 'reset', 'threadrunfunction', 'thread', 'reset', 'executorexecutor', 'subsequentrunfunction', 'executionhostmodule', 'callbackrunfunction', 'thread', 'reset', 'startexecutor', 'thread', 'state']",{'thread': 100}
"['local', 'integer', 'overflowlocal', 'maximum', 'function', 'number']",{'integer': 100}
"['integer', 'point']",{'integer': 100}
"['integer', 'point', 'conversion']",{'integer': 100}
"['default', 'install', 'clang', 'ubsan', 'travisdefault', 'install', 'clang', 'ubsan', 'travisclang', 'updateoverflow', 'warning', 'overflow', 'trigger']",{'overflow': 100}
"['mutable', 'globals', 'thread']",{'thread': 100}
"['interpreter', 'execution', 'refactorabstract', 'thread', 'function', 'executormulti', 'threadedimplement', 'execution', 'awkward', 'wouldobject', 'threadinterp', 'execresult', 'thing', 'resultperhapsfunctionality', 'level', 'expose', 'public', 'threadpossible', 'member', 'threadsince', 'assumption', 'invalidthreadindex', 'array', 'simplifyremove', 'callinginterpreter', 'forthremove']","{'thread': 100, 'expose': 100}"
"['interp', 'spectest', 'refactorseparate', 'commandrunner', 'jsonparser', 'specjsonparsernamespace', 'ambiguous', 'spectestcleaner', 'easiersubcommands', 'thread', 'contains']",{'thread': 100}
"['interp', 'spectest', 'sharetypedvalue', 'typedef', 'typedvalues', 'vectorinterpreter', 'length', 'large', 'number', 'displayingcharacter']",{'length': 100}
"['valuesufficient', 'stack']",{'stack': 100}
"['macro', 'templatestill', 'integer', 'valuetyperep', 'templaterepresentation', 'valuetyperep', 'template', 'operator', 'binary']",{'integer': 100}
"['binary', 'exception', 'reader', 'handleframework', 'binary', 'parsingexception', 'initial', 'reader', 'binaryoptionremove', 'unnecessarybinary', 'implementation', 'roundmerge', 'issue', 'causedexprlistmessage', 'exception', 'errorissue', 'raisedinitialize', 'label']",{'issue': 100}
"['exception', 'writersourceclean', 'issue', 'raisedclean']",{'issue': 100}
"['update', 'testsuite', 'issue', 'literal', 'parsingoverflow', 'error', 'return', 'floatsimplfy', 'significand', 'parsehex', 'floatparser', 'parser', 'significantlyparse', 'previousvalid', 'string', 'canonical']",{'issue': 100}
"['validator', 'validate', 'exception', 'handlingdeclaration', 'exceptionexception', 'validator', 'handleexception', 'writer', 'exceptionregenerateexceptioninitial', 'extensionissue', 'masterreconcile', 'issue', 'throwexception', 'implementation', 'validationcombine', 'catchall', 'catchtryblock', 'removeclean', 'visitorblock', 'rework', 'structureremove', 'commonissue', 'raisedgeneratedmemory']",{'issue': 100}
"['duplicate', 'section', 'resultsince', 'invalid', 'function', 'unique', 'numericsuffixmagic', 'strip', 'behavioursectio', 'wastwasm', 'producingcleaner', 'mightcause', 'confusion', 'issue']",{'issue': 100}
"['clean', 'interpreterinterpreter', 'thread', 'class', 'interp', 'function', 'interpreterinterpreter', 'function', 'environment', 'searchinginterpreter', 'reader', 'binaryremove', 'thread', 'member', 'function', 'environment']",{'thread': 100}
"['buffer', 'overwrites']",{'buffer': 100}
"['definition', 'structs', 'potential', 'common', 'potential', 'problemothers', 'datasegment', 'exportsince', 'issue']",{'issue': 100}
"['binary', 'crash', 'reader', 'reader', 'functionexample', 'contextactuallydefault', 'error', 'easiererror', 'return', 'whetheradditional', 'changesucceeds']",{'crash': 100}
"['bison', 'stack', 'robustcopyable', 'issue']","{'stack': 100, 'issue': 100}"
"['travis', 'linux', 'flakebuild', 'issue']",{'issue': 100}
"['output', 'reading', 'perror', 'message', 'errorinstead', 'sprintf', 'unsafe']",{'Sprintf': 100}
"['testsuite', 'updatememory', 'table', 'segment', 'checkvalue', 'stack', 'checkbound']",{'stack': 100}
"['length', 'encodeversion']",{'length': 100}
"['support', 'refactorcreatememory', 'tablespace', 'index', 'module', 'space', 'index', 'module', 'space', 'index', 'section', 'function', 'thread', 'moduleremove', 'argument', 'function', 'additional', 'signature', 'simplifyimportable', 'importedsince', 'module', 'environmentthroughout', 'retainedbindingbindingenvironment', 'initializingstream', 'spectest', 'function', 'genericstill', 'import', 'memory', 'global', 'spectest']",{'thread': 100}
"['linkingwasmvar', 'assigndefinition', 'natural', 'store', 'alignment', 'checkstack', 'check', 'alwaysblock', 'mutable', 'importinglabel', 'signature', 'branchinterpreter', 'reader', 'binaryanywhere', 'stack', 'label', 'checkstack', 'valuestack', 'functionreturninterpreter', 'stack', 'functionplace', 'action', 'rename', 'invoke']",{'stack': 100}
"['typecheckingblock', 'stack', 'signature', 'checkexample', 'signaturestackblock', 'signatureblock', 'signature', 'currentlysupportedprevious', 'signature', 'checkedbottom']",{'stack': 100}
"['stack', 'changeparse', 'roundtripincludes', 'changestack']",{'stack': 100}
"['yymaxdepth', 'bison', 'increase', 'small', 'errorsince', 'stack', 'grammar', 'parseryymaxdepth', 'default', 'increase']",{'stack': 100}
"['updatedisallow', 'modify', 'result', 'parser', 'order', 'paramlocalinteger', 'lookup', 'parsinginterpreter', 'logic', 'stack', 'unreachableexpression', 'stack', 'value', 'lexer', 'value']",{'stack': 100}
"['windowbuild', 'windowstderr', 'binary', 'stdout', 'changedslash', 'print', 'backwardprint', 'usage', 'program', 'explicitlydifferent', 'window', 'linux', 'format', 'check', 'baselinebinary', 'buffer', 'offset', 'unreliable', 'insteadreturn', 'offset', 'support', 'carriage', 'searchingsearch', 'binary', 'windowslash', 'account', 'backwardwindow', 'endline']",{'buffer': 100}
"['length', 'section']",{'length': 100}
"['lexer', 'prebuilt', 'generation']",{'generation': 100}
"['stuffwriter', 'binaryproperlysection', 'bunch', 'anotherclamp', 'length', 'error', 'caret']",{'length': 100}
"['generationvalue', 'stack', 'branchvalue', 'falsevalue', 'stackvalue']",{'stack': 100}
"['basic', 'stack', 'machine', 'disassemblerpretty']",{'stack': 100}
"['interpreter', 'stack', 'default', 'valuestack', 'performance', 'resultstack']",{'stack': 100}
"['bunch', 'allocatorallocator', 'stack', 'allowprevious', 'stack', 'reset', 'stack', 'allocation', 'tracingalloc', 'realloc', 'numberstack', 'allocator', 'thing', 'numberstack', 'alloc', 'number', 'realloc', 'chunk']",{'stack': 100}
"['stack', 'conditionstack', 'branchlocal', 'index']",{'stack': 100}
"['simplifyprevious', 'algorithm', 'manuallysimpler', 'algorithm', 'errorstack', 'location', 'whenever', 'value', 'shiftexpression', 'stack', 'reset', 'locationreturn', 'control', 'checkexpression']",{'stack': 100}
"['place', 'stack', 'allocator', 'sexpr']",{'stack': 100}
"['roundtripdifferent', 'roundtrip', 'location', 'thread', 'writefight', 'probablylater', 'optimizetravis', 'cleanup', 'refactorbison']",{'thread': 100}
"['stack', 'allocator']",{'stack': 100}
"['crash', 'allocator']",{'crash': 100}
"['stack', 'allocator', 'switchpropagatelittle', 'cleanup']",{'stack': 100}
"['sharingdifferent', 'stack', 'label', 'enoughcombine', 'complicate', 'thing', 'binary']",{'stack': 100}
"['literal', 'integer', 'validate', 'float']",{'integer': 100}
"['stack', 'wasmlabels', 'store', 'linkedprevious', 'pointer', 'invalidatedwhenever', 'label']",{'stack': 100}
"['access', 'expose', 'memory', 'parser', 'nativelogic']",{'expose': 100}
"['update', 'expose']",{'expose': 100}
"['strncmpcomparison', 'string', 'easierprevious', 'string', 'incorrect', 'comparison', 'string', 'shorter']",{'incorrect': 100}
"['exceptionerror', 'crash', 'exception']",{'crash': 100}
"['literal', 'integer']",{'integer': 100}
"['parser', 'generation']",{'generation': 100}
"['parse', 'preparse', 'thread', 'module']",{'thread': 100}
