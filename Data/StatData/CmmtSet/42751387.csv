message,fuzzy
"['interface', 'authenticator', 'issue', 'movedsystem', 'authenticator']",{'issue': 100}
"['deadlock', 'revert', 'potential', 'table']",{'deadlock': 100}
"['deadlock', 'table', 'potential']",{'deadlock': 100}
"['sensitive', 'fetch', 'systemconfig']",{'Sensitive': 100}
"['parameter', 'boolean', 'update', 'jsonnodeparameter', 'support', 'concurrent', 'limit']",{'concurrent': 100}
"['avoidtrace', 'stack']",{'stack': 100}
"['fdeafmerge', 'yoyama', 'close', 'request', 'engine', 'graaljsshutdown', 'issue', 'graaljs', 'engine']",{'issue': 100}
"['issue', 'graaljs', 'engineengine']",{'issue': 100}
"['mergemerge', 'yoyama', 'request', 'engine', 'issue', 'graaljs', 'shutdownshutdown', 'issue', 'graaljs', 'engine']",{'issue': 100}
"['shadow', 'plugin', 'upgrade', 'issue', 'shadowjar']",{'issue': 100}
"['notransaction', 'migrationsupport', 'addadfbbcfb', 'commitproblem', 'potential', 'database', 'transactionmigration', 'thread', 'whethermigration', 'thread', 'runningmigration']",{'thread': 100}
"['mergemerge', 'yoyama', 'request', 'agent', 'issue', 'digdag', 'metric']",{'issue': 100}
"['empty', 'digagametrics', 'defaultdigdagametrics', 'injection', 'removecatgeory']",{'injection': 100}
"['primitive', 'integer']",{'integer': 100}
"['injection', 'error']",{'injection': 100}
"['check', 'permission']",{'permission': 100}
"['issue', 'backfill', 'information']",{'issue': 100}
"['permission', 'thrown', 'violation']",{'permission': 100}
"['upgrade', 'jacksonaddress', 'security']",{'Security': 100}
"['mergemerge', 'request', 'example', 'generation', 'hiroyukisecret', 'generation', 'example']",{'generation': 100}
"['secret', 'generation', 'example']",{'generation': 100}
"['issue', 'hikaricp']",{'issue': 100}
"['release', 'issue']",{'issue': 100}
"['upstream', 'issue']",{'issue': 100}
"['permission', 'parameter']",{'permission': 100}
"['request', 'jacksonvulnerability', 'security', 'jackson']",{'Security': 100}
"['revert', 'proxy', 'issue', 'browsermob']",{'issue': 100}
"['revert', 'proxy', 'issue', 'browsermob']",{'issue': 100}
"['proxy', 'issue', 'browsermob']",{'issue': 100}
"['mergeosiire', 'issue']",{'issue': 100}
"['iteration', 'queue', 'multiple', 'randomizesiteids', 'biggersiteids', 'thread', 'number', 'smallerthough', 'default', 'unlimitedsiteids']",{'thread': 100}
"['security', 'jackson']",{'Security': 100}
"['thread', 'storage', 'reuse', 'cachetaskcallbackapi', 'operatormanagereveryrecreates', 'storage', 'cachesstorage', 'overhead', 'everysstorage', 'executorservice', 'creates']",{'thread': 100}
"['database', 'moduledeadlock', 'issue', 'connection', 'transaction', 'nestedshare', 'modulecontext', 'external', 'transaction', 'callerstart', 'transactioncaller', 'external', 'transactioncreatenotification']",{'issue': 100}
"['deadlock', 'avoidoftendeadlock', 'update', 'selectorderstatement', 'update', 'selectingselect', 'support', 'databasepossible', 'wrong', 'scheduling', 'updatepostgresql', 'control', 'default', 'transactionschedule', 'neversingle', 'column', 'selectstatementavailable', 'postgresql', 'digdag', 'lockedsince']",{'deadlock': 100}
"['issue', 'download', 'directreject', 'problem', 'request', 'sendsallow', 'origin', 'access', 'control', 'happensgenerates', 'server', 'download', 'requestallow', 'origin', 'access', 'control', 'header', 'generates']",{'issue': 100}
"['request', 'hiroyuki', 'permission', 'symlink', 'avoidpermission', 'extract']",{'permission': 100}
"['permission', 'extractcommand', 'digdag', 'download', 'sometimesregular', 'extract', 'symbolicpermission', 'avoidingtarget', 'symbolic']",{'permission': 100}
"['thread', 'digdag']",{'thread': 100}
"['bbeacftreasure', 'thread', 'requestthread', 'project']",{'thread': 100}
"['digdag', 'client', 'guavadepends', 'maven', 'gradlelatest', 'dependency', 'maven', 'graph', 'guavalatest', 'available', 'gradlemoment', 'version', 'guavadependency', 'digdag', 'client', 'issue', 'changedepends', 'guava']",{'issue': 100}
"['workflow', 'override', 'alwaysparameter', 'operator', 'projectarchive', 'project', 'respect', 'loaderworkflow', 'unexpected', 'behavior', 'causealreadyalready', 'issue']",{'issue': 100}
"['issue', 'redshiftit']",{'issue': 100}
"['redshiftpassword', 'reject', 'params', 'redshiftmessage', 'redshiftdisable', 'redshiftsupport', 'select', 'redshift', 'updateoperator', 'acceptance', 'redshiftenvironment', 'redshiftit', 'jdbcoperatorimplementingmethod', 'properremove', 'redshiftit', 'memberoperator', 'integrationdeletedependencyversion', 'unifiedstatement', 'placeholderrevert', 'useless', 'changeintegrationredshiftitfailureredshiftit', 'format', 'fixedwidthoperatorresourceoperator', 'usingprevious', 'formatredshiftit', 'formatredshiftitredshiftitdependency', 'issue', 'digdagdigdagoperator', 'dynamodb']",{'issue': 100}
"['msgpackvalue', 'number', 'reading', 'incorrect', 'issueresult', 'msgpack']",{'incorrect': 100}
"['issue', 'workflow', 'update']",{'issue': 100}
"['thread', 'server']",{'thread': 100}
"['migration', 'schema', 'migratorschema', 'migration', 'address', 'issue', 'changemultiple', 'schema', 'migratorexclusive', 'migrator', 'acquires', 'table', 'avoidmigration', 'olderrequest', 'migration', 'version', 'scriptcould', 'dependencyassumption', 'migration', 'script', 'requestmigration', 'definition', 'separatedconflict']",{'issue': 100}
"['condition', 'aroundfinishedarchive', 'archivingattemptarchive', 'thread', 'anotherattempt', 'attempt', 'check']",{'thread': 100}
"['permission', 'umask']",{'permission': 100}
"['thread', 'worker', 'graceful', 'server', 'shutdown']",{'thread': 100}
"['integer', 'treasure', 'request', 'partialallow', 'integer']",{'integer': 100}
"['eafea', 'mergemerge', 'treasure', 'request', 'information', 'content', 'security']",{'Security': 100}
"['information', 'content', 'securitylevel', 'debug', 'header', 'apache', 'content', 'httpclientinclude', 'content', 'security', 'difficult', 'level']",{'Security': 100}
"['mergemerge', 'concurrency', 'treasure', 'request', 'limitconcurrency', 'support', 'rearchitecture', 'queue']",{'concurren': 90}
"['mergemerge', 'master', 'concurrency', 'limit']",{'concurren': 90}
"['concurrency', 'support', 'rearchitecture', 'queue']",{'concurren': 90}
"['double', 'concurrency', 'travis']",{'concurren': 90}
"['silent', 'crash']",{'crash': 100}
"['limit', 'checkanyway', 'isolation', 'concurrent', 'prevents', 'postgres', 'others', 'seeingpostgresql', 'isolation', 'repeatable', 'levelallow', 'phantom', 'implementationtransaction', 'static']",{'concurrent': 100}
"['internal', 'informationhidden', 'internal', 'leastaware', 'expose', 'digdagremove', 'attempt', 'session', 'confusion']",{'expose': 100}
"['specification', 'directory', 'clutteringresolve', 'project', 'digdag', 'implementingstructure', 'treasure', 'digdag', 'issue', 'changebasedir']",{'issue': 100}
"['permission', 'archive', 'symlink']",{'permission': 100}
"['integer', 'timestamp', 'neverschedule', 'timestamp', 'returnrepository', 'workflowreturn', 'nextruntime', 'endpointfield']",{'integer': 100}
"['migration', 'permission', 'postgres']",{'permission': 100}
"['thread', 'message']",{'thread': 100}
"['background', 'thread']",{'thread': 100}
"['considers', 'concurrency']",{'concurren': 90}
"['thread', 'uncaught', 'local', 'exception', 'stopes', 'server']",{'thread': 100}
"['taskrunner', 'thread', 'logger']",{'thread': 100}
