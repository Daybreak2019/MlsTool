message,fuzzy
"['github', 'issue']",{'issue': 100}
"['bitfieldsecdev', 'scapy', 'issue']",{'issue': 100}
"['chore', 'quality', 'issue']",{'issue': 100}
"['openssl', 'config']",{'OpenSSL': 100}
"['field', 'lorawan', 'loraphy', 'issue', 'sebastien', 'dudek']",{'issue': 100}
"['layertypingscanner', 'layer', 'issue', 'addederror', 'error', 'check', 'qualityerror', 'error', 'codacyerror', 'coacy', 'removederror', 'coacy', 'removedcleanup', 'travisimplementation', 'startpositive', 'addederror', 'addedimplementation', 'negative', 'responsefield', 'addedmessage', 'extendlayerscanner', 'xcponcanargument', 'xcpscannerusage', 'failure', 'simplify', 'reduceimplementation', 'simplifysimplifyenable', 'linux', 'configurationimprove', 'xcpscanner', 'usage', 'outputpotential', 'issuecommentrange', 'rightcleanup', 'layerchangepaddingconfig']",{'issue': 100}
"['usage', 'python', 'ctypesregression', 'pythonfunctionimporttraceback', 'recentstdin', 'modulectypesctypesctypesthefiledirectory', 'errnoworkaroundolder', 'issue', 'pythonissuebernat']",{'issue': 100}
"['ignore', 'ether', 'issue', 'codespellcodespell', 'ether', 'ignorecodespell']",{'issue': 100}
"['automaton', 'thread']",{'thread': 100}
"['scapy', 'thread']",{'thread': 100}
"['cleanup', 'gmlanutils', 'typingcleanup', 'gmlanutils', 'typingtravis', 'debug', 'print', 'issue', 'statementinfluence', 'reorderingconfig', 'gabriel', 'gpotter']",{'issue': 100}
"['sphinx', 'template', 'generation']",{'generation': 100}
"['secdev', 'scapy', 'issue']",{'issue': 100}
"['micolousapple', 'google', 'service', 'notification', 'exposure']",{'Exposure': 100}
"['apple', 'google', 'service', 'notification', 'exposure']",{'Exposure': 100}
"['polybassacatch', 'issue']",{'issue': 100}
"['catch', 'issue']",{'issue': 100}
"['accordancesecdev', 'scapy', 'issue']",{'issue': 100}
"['changechangecleanup', 'length', 'gabriel', 'gpotter']",{'length': 100}
"['value', 'element', 'override', 'issue']",{'issue': 100}
"['pylint', 'issue']",{'issue': 100}
"['length', 'indication']",{'length': 100}
"['overflow', 'apple']",{'overflow': 100}
"['request', 'response', 'issue', 'minor', 'session']",{'issue': 100}
"['length', 'indication']",{'length': 100}
"['length', 'formula']",{'length': 100}
"['computation', 'header', 'length', 'netflow']",{'length': 100}
"['length', 'computation', 'netflowheaderv']",{'length': 100}
"['hotfix', 'removesecdev', 'scapy', 'issue']",{'issue': 100}
"['piggyback', 'guillaume', 'packet', 'issue']",{'issue': 100}
"['length', 'default', 'prefix']",{'length': 100}
"['libpcap', 'crash']",{'crash': 100}
"['length', 'default']",{'length': 100}
"['length', 'calculate', 'address']",{'length': 100}
"['isotpsoftsocket', 'thread', 'timer', 'removingisotpsoftsocket', 'thread', 'timer', 'removingisotpsoftsocket', 'timer', 'previouslysimilar', 'thread', 'pythonthread', 'timer', 'static', 'globalisotpsoftsocket', 'performantisotpsoftsocket', 'sometimestimeouts', 'debug', 'deadlock', 'appveyor']","{'thread': 100, 'deadlock': 100}"
"['float', 'edecimal', 'arithmeticfloat', 'edecimal', 'arithmeticarithmetic', 'introductionbbfcb', 'edecimalbreak', 'comment', 'length']",{'length': 100}
"['secdev', 'scapy', 'issue']",{'issue': 100}
"['gpotterminor', 'issue']",{'issue': 100}
"['appendnedbat', 'issue', 'coveragepy']",{'issue': 100}
"['mergemypycheck', 'request', 'gpotterimport', 'issue']",{'issue': 100}
"['import', 'issue']",{'issue': 100}
"['command', 'smart', 'operation', 'greenphy', 'layer', 'module', 'homeplug', 'chipsets', 'newestcommand', 'operation', 'module', 'chipsets', 'station', 'greenphy', 'homeplug', 'scapy', 'import', 'layer', 'field', 'format', 'consideration', 'vendremme', 'homeplug', 'suggestionerror', 'check', 'cleaninglayer', 'vendormme', 'generationfunction', 'printdefault', 'packetfield', 'generation', 'context', 'includinglayer', 'includingerror', 'cleaningformat']",{'generation': 100}
"['optionalformat', 'lldpdu', 'sectionlldpdu', 'shalllldpdus', 'normallldpdu', 'mandatorychassisequal', 'txttl', 'valueadditional', 'management', 'specific', 'lldpdu', 'length', 'local', 'restriction', 'allowedtable', 'network', 'managementlldpdulldpdu', 'optional']",{'length': 100}
"['frame', 'isotp', 'issue', 'functionality']",{'issue': 100}
"['dcdcf', 'mergerequest', 'patchminor', 'issue', 'example']",{'issue': 100}
"['minor', 'issue', 'example']",{'issue': 100}
"['output', 'option', 'method', 'tcpdump', 'version', 'supportissuesecdev', 'scapy', 'issue', 'issuecomment']",{'issue': 100}
"['obdscanscanner', 'addedcommand', 'scanner', 'verbose', 'includecrash', 'verbose', 'responder', 'daemon', 'thread', 'support']",{'thread': 100}
"['incomplete', 'crash']",{'crash': 100}
"['incomplete', 'crash']",{'crash': 100}
"['fccaedgpotter', 'tcpdump', 'workaround', 'request', 'mergetcpdump', 'integer', 'support', 'workaround']",{'integer': 100}
"['mergerequest', 'akorb', 'generation', 'random', 'scalingfield']",{'generation': 100}
"['mergerequest', 'randval', 'alexashsrandval', 'value', 'length', 'ensure']",{'length': 100}
"['generation', 'random', 'scalingfield']",{'generation': 100}
"['randval', 'value', 'length', 'ensure']",{'length': 100}
"['wireguard', 'layerwireguard', 'layerwireguard', 'replacerename', 'field', 'official', 'wireguard', 'matchfield', 'endian', 'integer', 'wireguard', 'littlewireguard', 'import', 'wireguard', 'import']","{'wireguard': 100, 'integer': 100}"
"['tcpdump', 'integer', 'support', 'workaround']",{'integer': 100}
"['overflow', 'memory']",{'overflow': 100}
"['crypto', 'method', 'output']",{'crypto': 100}
"['energy', 'bluetooth', 'numberlemacfield', 'issue', 'pythonphysical', 'bluetooth', 'documentation', 'basic', 'difference', 'recipediscoverybluetooth', 'reference', 'cross', 'numberbtuuidfield', 'fieldincompletelistprotocol', 'supportprotocol', 'stackingrenames', 'packet', 'dissect', 'multipleaddingcontainsdefault', 'class', 'bluetooth', 'socketwhitelist', 'commandgoogle', 'eddystone', 'beaconfunctionality', 'stackableregressionplausible']",{'issue': 100}
"['gpotterbetter', 'encryption']",{'encryption': 100}
"['openssl', 'cryptography', 'version']",{'OpenSSL': 100}
"['return', 'thread']",{'thread': 100}
"['buffer', 'increase']",{'buffer': 100}
"['parse', 'header', 'incorrect']",{'incorrect': 100}
"['available', 'crash']",{'crash': 100}
"['available', 'crash']",{'crash': 100}
"['missingsecdev', 'scapy', 'issue']",{'issue': 100}
"['mergeisotp', 'issue', 'request']",{'issue': 100}
"['command', 'download', 'correctedcommand', 'template', 'download', 'issue']",{'issue': 100}
"['ebaab', 'mergelekensteyn', 'request', 'payload', 'incorrect']",{'incorrect': 100}
"['length', 'delete', 'packet', 'defragment', 'fragment']",{'length': 100}
"['isotp', 'epozzobon', 'request', 'softsocket', 'isotpsoftsocket', 'issue']",{'issue': 100}
"['mergeisotp', 'issue', 'request']",{'issue': 100}
"['mergenetflow', 'request', 'layer', 'different', 'netflowv', 'packet', 'issue']",{'issue': 100}
"['different', 'netflowv', 'packet', 'issue']",{'issue': 100}
"['issue', 'class', 'keyerror']",{'issue': 100}
"['strlenfieldattribute', 'crash']",{'crash': 100}
"['attribute', 'crash', 'preventrandom', 'attribute', 'maximum', 'value']",{'crash': 100}
"['guedouindentation', 'incorrect']",{'incorrect': 100}
"['request', 'template', 'issue']",{'issue': 100}
"['packet', 'support', 'extendedmacsec', 'specification', 'normalcodingremove', 'incoherent', 'dissection', 'sanity', 'packet', 'reference', 'decapsulation', 'assertion', 'triggeraround', 'parameter', 'space', 'flake', 'issue', 'unexpected', 'keyword']",{'issue': 100}
"['guedounumber', 'whitespace', 'incorrect']",{'incorrect': 100}
"['guedounumber', 'blank', 'incorrect']",{'incorrect': 100}
"['mergerequest', 'karpierz', 'mergeregression', 'scapy', 'ready', 'issue']",{'issue': 100}
"['sndrcv', 'improvement', 'obvious', 'issue']",{'issue': 100}
"['guedouempty', 'crash', 'manufdb']",{'crash': 100}
"['empty', 'crash', 'manufdb']",{'crash': 100}
"['subtlvs', 'changingindentation', 'issue', 'spacingsubtlvs', 'comment']",{'issue': 100}
"['issue', 'python']",{'issue': 100}
"['layer', 'packetcurrent', 'ignores', 'header', 'packet', 'everymessage', 'parse', 'length']",{'length': 100}
"['integer', 'python']",{'integer': 100}
"['clean', 'generation', 'speed', 'address']",{'generation': 100}
"['crypto', 'python']",{'crypto': 100}
"['randasnobject', 'crash']",{'crash': 100}
"['randomness', 'coverage']",{'randomness': 100}
"['randomness', 'coverage']",{'randomness': 100}
"['gpotter', 'radiotapdissection', 'endian', 'issue']",{'issue': 100}
"['sniffvalid', 'linux', 'crash', 'sniff', 'filter']",{'crash': 100}
"['endian', 'issue']",{'issue': 100}
"['valid', 'linux', 'crash', 'sniff', 'filter']",{'crash': 100}
"['crashy', 'comment']",{'crash': 91}
"['field', 'authenticator', 'improves', 'readability', 'displayedmodule', 'radiusmethod', 'class', 'descriptioncryptography', 'computation', 'authenticator', 'response', 'guedoumessage', 'field', 'authenticator', 'length', 'specify']",{'length': 100}
"['mergerandom', 'gpotter', 'request', 'coverageavoid', 'randomness', 'coverage']",{'randomness': 100}
"['randomness', 'coverage']",{'randomness': 100}
"['ipsec', 'decryption', 'packet', 'reference', 'checkinternal', 'encryption', 'decryption', 'testedimplementation', 'ubuntu', 'packet', 'reference', 'iprouteiprouteunamegeneric', 'router', 'ubuntu', 'linuxiputilsfaivre', 'thomas']",{'encryption': 90}
"['issue', 'asigalasissue']",{'issue': 100}
"['length', 'computation', 'variable', 'fieldexampletraceback', 'recentmodule', 'consolescapyreturnscapyreprvalscapy', 'ireprreturnlayer', 'lambda', 'scapyxstrlenfield', 'lambdatypeerror', 'operand', 'nonetype']",{'length': 100}
"['enable', 'generation', 'ecdsa']",{'generation': 100}
"['mergemtury', 'request', 'mastercomplex', 'field', 'issue', 'randval']",{'issue': 100}
"['mergehdnivara', 'request', 'checkformat', 'error', 'address', 'incorrect']",{'incorrect': 100}
"['format', 'error', 'address', 'incorrect']",{'incorrect': 100}
"['length', 'errorlength', 'errormessage', 'wireshark', 'lengthupdatelength', 'update']",{'length': 100}
"['conversion', 'issue', 'address']",{'issue': 100}
"['crypto', 'introduce', 'keywordcrypto', 'cryptography', 'version', 'module']",{'crypto': 100}
"['disablecryptography', 'discussion', 'issueolder', 'cryptography', 'issue']",{'issue': 100}
"['preservefragmentation', 'issue']",{'issue': 100}
"['ddubson', 'masterinterface', 'issue', 'python', 'function', 'pcapy']",{'issue': 100}
"['gpotter', 'consoleautocompletion', 'crash', 'window']",{'crash': 100}
"['autocompletion', 'crash']",{'crash': 100}
"['packet', 'issue', 'python', 'function', 'pcapy']",{'issue': 100}
"['circular', 'import', 'usage', 'crash', 'param']",{'crash': 100}
"['master', 'alegacyvxlan', 'field', 'layout', 'specification', 'incorrect']",{'incorrect': 100}
"['problem', 'ipsec', 'packet', 'packet', 'field', 'generatingproblem', 'necessary', 'multiple', 'length', 'alignalgorithm', 'blockfield', 'packet', 'patch', 'forcedefault', 'valuerobin', 'jarry']",{'length': 100}
"['periodic', 'socket', 'crash', 'value', 'packet', 'event']",{'crash': 100}
"['select', 'eintr', 'restartbehavior', 'scapy', 'separateanother', 'threadtaken', 'patchproblem', 'scapy', 'secdev', 'eintr', 'issue', 'sendrecv']",{'issue': 100}
"['sniff', 'issue']",{'issue': 100}
"['crash', 'python', 'attribution']",{'crash': 100}
"['thread', 'relateddeshmukh', 'bitbucker', 'surajscapy', 'secdev', 'iface', 'issue', 'sniff', 'request', 'option']","{'thread': 100, 'issue': 100}"
"['abebd', 'mergerequest', 'dstaddr', 'crash', 'packet', 'ether']",{'crash': 100}
"['crash', 'packet', 'ether', 'withoutbuilt', 'packet', 'scapyfailsethertraceback', 'recentmodule', 'consolescapy', 'local', 'packagereturnscapy', 'local', 'packageprotoerror', 'destination', 'warning', 'address']",{'crash': 100}
"['multiple', 'inheritance', 'eigrp', 'issue', 'contrib']",{'issue': 100}
"['aadcdmessage', 'scapy', 'gvaladon', 'multi', 'issue', 'request', 'michael', 'icmpv', 'patch', 'michael']",{'issue': 100}
"['mergemessage', 'scapy', 'gvaladon', 'multi', 'issue', 'request', 'supportmichael', 'icmpv', 'support']",{'issue': 100}
"['afebdd', 'mergemessage', 'scapy', 'gvaladon', 'multi', 'issue', 'request', 'supportmessage', 'multi', 'support']",{'issue': 100}
"['mergescapy', 'gvaladon', 'issue', 'request', 'icmpvndoptdnssllength', 'error', 'icmpvndoptdnssl']",{'issue': 100}
"['length', 'error', 'icmpvndoptdnssl', 'computingicmpvndoptdnssl']",{'length': 100}
"['mergescapy', 'option', 'gvaladon', 'issue', 'search', 'request', 'supporticmpvndoptdnssl']",{'issue': 100}
"['mergescapy', 'gvaladon', 'patch', 'issue', 'requestrequest', 'netfow', 'support']",{'issue': 100}
"['mergescapy', 'gvaladon', 'issue', 'requestissue']",{'issue': 100}
"['mergescapy', 'gvaladon', 'patch', 'issue', 'requestrequest', 'patch', 'issue']",{'issue': 100}
"['pierre', 'comment', 'smallbranch', 'issue']",{'issue': 100}
"['mergescapy', 'request', 'protocol', 'checksum', 'issue', 'cisco']",{'issue': 100}
"['solution', 'protocol', 'initial', 'checksum', 'issue', 'cisco', 'routinebranch']",{'issue': 100}
"['mergescapy', 'gvaladon', 'issue', 'requestsupport']",{'issue': 100}
"['supportbranch', 'issue']",{'issue': 100}
"['closebranch', 'issue']",{'issue': 100}
"['xffff', 'checksumbranch', 'issue']",{'issue': 100}
"['valid', 'wrpcap', 'creates', 'empty', 'calledbranch', 'issue']",{'issue': 100}
"['possible', 'writeyoeld', 'thanks', 'reportingbranch', 'issue']",{'issue': 100}
"['mergescapy', 'gvaladon', 'issue', 'request', 'supportsupport', 'enhance']",{'issue': 100}
"['mergescapy', 'gvaladon', 'issue', 'requestpreliminary', 'support']",{'issue': 100}
"['comment', 'pierrebranch', 'issue']",{'issue': 100}
"['preliminary', 'supportbranch', 'issue']",{'issue': 100}
"['preliminary', 'supportbranch', 'issue']",{'issue': 100}
"['mergescapy', 'gvaladon', 'issue', 'request', 'support', 'radiusgreat', 'regression', 'possiblepatch', 'issue']",{'issue': 100}
"['mergescapy', 'gvaladon', 'issue', 'requestissue']",{'issue': 100}
"['float', 'tcpreplay', 'paremtersbranch', 'issue']",{'issue': 100}
"['mergescapy', 'gvaladon', 'kfreebsd', 'patch', 'debian', 'issue', 'requestfreebsd']",{'issue': 100}
"['issue', 'closebranch', 'issueextra']",{'issue': 100}
"['patch', 'applybranch', 'issue']",{'issue': 100}
"['reportbranch', 'issue']",{'issue': 100}
"['reportbranch', 'issue']",{'issue': 100}
"['comprehension', 'compatibility', 'pythonbranch', 'issue']",{'issue': 100}
"['dictionary', 'fieldamongbranch', 'issue']",{'issue': 100}
"['insanebranch', 'issue']",{'issue': 100}
"['packet', 'featurebranch', 'issue']",{'issue': 100}
"['introduce', 'field', 'value', 'track', 'mechanism', 'cache', 'mutablecontent', 'field', 'value', 'valueexamplebranch', 'issue']",{'issue': 100}
"['issue', 'workaround', 'uselessbranch', 'issue']",{'issue': 100}
"['dnsrrcountfield', 'attribute', 'removecounter', 'dnsrrcountfield', 'dnsrrfield', 'fieldbranch', 'issue']",{'issue': 100}
"['value', 'overwrittenbranch', 'issue']",{'issue': 100}
"['attribute', 'packet', 'iteratingattribute', 'packet', 'iteratingissue', 'representation', 'packet', 'commitbranch', 'issue']",{'issue': 100}
"['mergescapy', 'gvaladon', 'issue', 'request']",{'issue': 100}
"['dissectorfieldaccepts', 'length', 'boundbetter', 'enumfields', 'fieldlistfield', 'supportconditional', 'field', 'checksum', 'fletcher', 'functionmessage', 'exception', 'timestamp', 'tracechange', 'readable', 'address']",{'length': 100}
"['mergescapy', 'gvaladon', 'issue', 'requestissue']",{'issue': 100}
"['mergescapy', 'request', 'issuefield', 'default', 'value', 'issue']",{'issue': 100}
"['field', 'default', 'value', 'issue', 'ethernetbranch', 'issue']",{'issue': 100}
"['convertinginstead', 'buffer', 'return', 'instance', 'pcapy']",{'buffer': 100}
"['daabascapy', 'gvaladon', 'issue', 'requestissue']",{'issue': 100}
"['support', 'ipythonbranch', 'issue']",{'issue': 100}
"['mergescapy', 'gvaladon', 'issue', 'request', 'ipoption', 'class', 'rypeck']",{'issue': 100}
"['mergescapy', 'gvaladon', 'erratum', 'issue', 'requesticmpvmldone']",{'issue': 100}
"['mergescapy', 'gvaladon', 'issue', 'requestissue']",{'issue': 100}
"['icmpvmlquery', 'field', 'header', 'icmpvmlreport', 'twicebranch', 'issue']",{'issue': 100}
"['mergescapy', 'gvaladon', 'issue', 'requestrecursion', 'field', 'space', 'control', 'michaelharo']",{'issue': 100}
"['mergescapy', 'gvaladon', 'issue', 'requestissue']",{'issue': 100}
"['mergescapy', 'gvaladon', 'issue', 'requestissue']",{'issue': 100}
"['mergescapy', 'gvaladon', 'issue', 'requestissue']",{'issue': 100}
"['mergescapy', 'gvaladon', 'issue', 'requestvalid', 'variable', 'contains', 'ensure', 'address']",{'issue': 100}
"['issuebranch', 'issue']",{'issue': 100}
"['mergescapy', 'gvaladon', 'issue', 'requestissue']",{'issue': 100}
"['ipsec', 'length', 'multiple', 'beginningipsec']",{'length': 100}
"['referencebranch', 'issue']",{'issue': 100}
"['alias', 'carlos', 'rodrigues', 'equivalentbranch', 'issue']",{'issue': 100}
"['implementation', 'layer', 'ipsecimplementation', 'layer', 'patch', 'layer', 'module', 'scapyencryption', 'order', 'decryption', 'supportpycrypto', 'libraryalgorithmalmost', 'suite', 'complete', 'foundlaunchedscapy', 'layer', 'utscapyrobin', 'jarry', 'signedipsec']",{'encryption': 90}
"['cache', 'update', 'globalbranch', 'issue']",{'issue': 100}
"['supportbranch', 'issue']",{'issue': 100}
"['descriptor', 'packet', 'closebranch', 'issue']",{'issue': 100}
"['mergescapy', 'gvaladon', 'issue', 'requestmobile', 'wrong', 'definition', 'message']",{'issue': 100}
"['reservedbranch', 'issue']",{'issue': 100}
"['reply', 'packet', 'usingbranch', 'issue']",{'issue': 100}
"['support', 'partialbranch', 'issue']",{'issue': 100}
"['valid', 'variable', 'contains', 'ensure', 'addressbranch', 'issue']",{'issue': 100}
"['encapsulatedbranch', 'issue']",{'issue': 100}
"['fieldbranch', 'issue']",{'issue': 100}
"['pierre', 'commentbranch', 'issue']",{'issue': 100}
"['indentation', 'fixingbranch', 'issue']",{'issue': 100}
"['patch', 'issue', 'requestcookedlinux', 'registration', 'order', 'layer']",{'issue': 100}
"['cookedlinux', 'registration', 'order', 'layercookedlinux', 'linktypeissuebranch', 'issue']",{'issue': 100}
"['return', 'local', 'outout', 'addressbranch', 'issue']",{'issue': 100}
"['issuebranch', 'issue']",{'issue': 100}
"['ioerror', 'catch', 'exceptionbranch', 'issue']",{'issue': 100}
"['exact', 'attribute', 'packetcache', 'capturedexists', 'field', 'valuepacket', 'operationbranch', 'issue']",{'issue': 100}
"['mergescapy', 'request', 'mergeddocumentation', 'update', 'issue']",{'issue': 100}
"['documentation', 'comment', 'update', 'issue']",{'issue': 100}
"['dbfbde', 'mergescapy', 'gvaladon', 'issue', 'requestproduce', 'warning', 'packet', 'deprecation', 'issue']",{'issue': 100}
"['mergescapy', 'gvaladon', 'issue', 'requestcommand', 'sendpfast', 'issue', 'python']",{'issue': 100}
"['mergescapy', 'gvaladon', 'issue', 'requestsource', 'issue']",{'issue': 100}
"['befefa', 'mergescapy', 'gvaladon', 'issue', 'requestcheck', 'issue', 'lenght']",{'issue': 100}
"['import', 'missingbranch', 'issue']",{'issue': 100}
"['thant', 'warning', 'payloadbranch', 'issue']",{'issue': 100}
"['warning', 'packet', 'deprecation', 'issuebranch', 'issue']",{'issue': 100}
"['source', 'issuebranch', 'issue']",{'issue': 100}
"['mergescapy', 'request', 'gvaladon', 'mergederror', 'class', 'packet', 'issue']",{'issue': 100}
"['lenght', 'issue', 'hecksbranch', 'issue']",{'issue': 100}
"['error', 'class', 'packet', 'issue']",{'issue': 100}
"['issue', 'inconsistent']",{'issue': 100}
"['template', 'return', 'randip', 'present', 'invalid', 'issue', 'address']",{'issue': 100}
"['backtraces', 'entry', 'packet', 'issue', 'srcaddr', 'route']",{'issue': 100}
"['length', 'contrig', 'cache', 'calculation']",{'length': 100}
"['length', 'ticket', 'calculation']",{'length': 100}
"['import', 'thread']",{'thread': 100}
"['window', 'issue']",{'issue': 100}
"['crypto', 'scapy']",{'crypto': 100}
"['rmkml', 'import', 'thanks', 'issue']",{'issue': 100}
"['automaton', 'tracebacks', 'exception', 'thread']",{'thread': 100}
"['minor', 'issue']",{'issue': 100}
"['ticket', 'defragmentation', 'issue', 'defragment', 'defragdefragment', 'packet', 'missingdefragment', 'problem', 'defragplace', 'defragment', 'packet', 'defragmentedlatest', 'original', 'fragmentplace', 'fragment']",{'issue': 100}
"['scapy', 'injection']",{'injection': 100}
"['crash', 'ether', 'resolver']",{'crash': 100}
"['blksize', 'recognition', 'option', 'insensitive']",{'Sensitive': 90}
"['buffer', 'reception', 'socket', 'conditionfilter', 'buffer', 'reception', 'settingcondition']",{'buffer': 100}
"['takingfieldlistfieldparameter', 'length', 'providedshift']",{'length': 100}
"['actual', 'field', 'length', 'return', 'fixedknown']",{'length': 100}
"['warning', 'parameterlength', 'method', 'length', 'return']",{'length': 100}
"['packetlistfield', 'length', 'fiekd', 'whosepacketlistfield']",{'length': 100}
"['calculation', 'length', 'bowie']",{'length': 100}
"['macos', 'freebsd', 'manpage', 'arround', 'issue', 'workedactive', 'problem']",{'issue': 100}
"['biocimmediate', 'issue', 'behaviour', 'optionquicker', 'default']",{'issue': 100}
"['display', 'sprintf', 'small', 'simplification', 'thanksconditionnal', 'statement']",{'Sprintf': 100}
"['nbareil', 'bareil', 'warning', 'futurebareil', 'field', 'bitfield', 'length', 'nbareil', 'arbitraryprotocol', 'bareil', 'nbareil']",{'length': 100}
"['checkipsrc', 'error', 'stack', 'checkipid', 'optiondefault', 'muahahahah', 'sourcesummary', 'tweakeddefault', 'destination', 'sourcehexcap', 'paste', 'present', 'function', 'result']",{'stack': 100}
"['equivalent', 'becomeshastype', 'method', 'haslayer', 'packet', 'renamedmethod', 'packet', 'getlayer', 'addedfield', 'detection', 'length', 'layerpacket', 'fragment', 'addedoutput', 'report', 'latex', 'machine']",{'length': 100}
"['attribute', 'regression', 'field', 'sprintf', 'packet']",{'Sprintf': 100}
"['issue', 'imbricationdocumentationcommand']",{'issue': 100}
"['field', 'sprintf', 'classic', 'format', 'substitution', 'layer', 'numberlayer', 'special', 'upper', 'creation']",{'Sprintf': 100}
