message,fuzzy
"['variable', 'local', 'guidance', 'original', 'tablemaybe', 'close', 'unique', 'output', 'available', 'bytecode', 'localpacker', 'normal', 'localsplitter', 'local', 'information', 'version', 'program', 'point', 'issue', 'character', 'index']",{'issue': 100}
"['thread', 'option', 'issue']","{'thread': 100, 'issue': 100}"
"['mergehoffman', 'request', 'mergestale', 'bugfix', 'thread', 'cleanup']",{'thread': 100}
"['update', 'template', 'issue']",{'issue': 100}
"['attempt', 'improvement', 'issue']",{'issue': 100}
"['strong', 'delta', 'stack']",{'stack': 100}
"['duplicate', 'warning', 'local', 'issue']",{'issue': 100}
"['ccfbc', 'ecfad', 'mergemarcmil', 'request', 'mergereplace', 'concurrent']",{'concurrent': 100}
"['strong', 'bugfix', 'delta', 'stack', 'condition', 'enoughensure', 'offset', 'instruction', 'stack', 'condition']",{'stack': 100}
"['mergemarcmil', 'request', 'mergeimplementation', 'stack']",{'stack': 100}
"['implementation', 'stack']",{'stack': 100}
"['stale', 'thread']",{'thread': 100}
"['proper', 'issue', 'issue', 'sootclassthread', 'callingreftype', 'exists', 'possible', 'thread', 'followinggetoraddreftype', 'classnamesynchronizedsootclass', 'sootclass', 'instancecould', 'reftype', 'associatedpotentialsecond', 'addclasssilent', 'duplicate', 'resultsootclass', 'class', 'sootclassalready', 'monitor', 'reftype', 'sootclassinstead', 'return', 'instance', 'sootclasssootclassclass', 'duplicate', 'issuecreate', 'invokedynamic', 'class', 'firstmarcus', 'repro', 'linuxclass', 'publicstringstringreturnstatic', 'string', 'publicjavacmarcus', 'repro', 'linuxmarcus', 'repro', 'finger', 'executeinterleavingprocess', 'trunk', 'sootclasses', 'marcus', 'repro', 'linuxstartedthread', 'execution', 'worker', 'error', 'convertduplicate', 'class', 'convertduplicate', 'class', 'causedexception', 'thread', 'failedduplicate', 'class', 'wrong', 'sorryproblem', 'followcommand', 'rightcheck', 'click', 'doublejavadoc', 'optionwhether', 'issuegettingclick', 'reportafiles', 'title', 'asoot', 'duplicate', 'acommand', 'process', 'class', 'astack', 'trace', 'reproduce', 'btest', 'issue', 'version', 'memory', 'etrunk', 'precisethanks', 'information', 'reproducemarcus', 'repro', 'linuxthread', 'occurinterleave', 'followsthreadgetoraddreftype', 'classnamesynchronizedreftype', 'classnamesootclasssootclass', 'classnameclassname', 'sootclass', 'newclassnewclassreturnaddclasssilentsootclass', 'thread', 'addclasssilent', 'reftype', 'thread', 'associatedreturn', 'sceneclass', 'duplicatesufficient', 'monitor', 'addition', 'issuelevel', 'resolution', 'method', 'issueclass', 'finger', 'interleavingvalidate', 'process', 'trunk', 'sootclasses', 'marcus', 'repro', 'linuxstartedlevel', 'operation', 'thread', 'signature', 'execution', 'worker', 'error', 'extendingprogram', 'wholelevel', 'operation', 'signature', 'extendingprogram', 'wholerunbodypackslevel', 'operation', 'signature', 'extendingprogram', 'wholerunbodypackslevel', 'operation', 'thread', 'signature', 'wrong', 'sorryproblem', 'followcommand', 'rightcheck', 'click', 'doublejavadoc', 'optionwhether', 'trace', 'reproduce', 'acommand', 'etrunk', 'aotherwise', 'afiles', 'asoot', 'validate', 'signature', 'astack', 'runbodypacks', 'csignatures', 'issue', 'memory', 'operation', 'title', 'precisethanks', 'information', 'reproducemarcus', 'repro', 'linuxvalidate', 'trigger', 'option', 'method', 'indirectlyindirectlycalledthreadgetoraddreftype', 'classnamesynchronizedreftype', 'classnamesootclasssootclass', 'classnameaddclasssilentreturnclassname', 'sootclass', 'class', 'sootmethodref', 'thread', 'instancesootclassreftype', 'classname', 'equaladditionphantom', 'return', 'slight', 'chance', 'partyphantom']","{'issue': 100, 'thread': 100, 'stack': 91}"
"['incorrect', 'check']",{'incorrect': 100}
"['class', 'dummy', 'generation', 'frmework']",{'generation': 100}
"['concurrency', 'class', 'issue', 'statelessparallel', 'eedcbafbaaef', 'multiple', 'transformerthreadthread', 'resultexcerptrunbodypacksinstead', 'instance', 'state', 'storingparameter']","{'concurren': 90, 'issue': 100}"
"['bdffe', 'mergemarcmil', 'request', 'mergeintegertypes', 'integer', 'expression']",{'integer': 100}
"['integertypes', 'integer', 'expression']",{'integer': 100}
"['projectsingle', 'environment', 'request', 'issue']",{'issue': 100}
"['linenumbers', 'incorrect', 'header', 'statement']",{'incorrect': 100}
"['exception', 'pointer', 'issue']",{'issue': 100}
"['integer', 'localgenerator']",{'integer': 100}
"['variable', 'generation', 'local', 'deterministic']",{'generation': 100}
"['docker', 'jenkins', 'deadlock']",{'deadlock': 100}
"['available', 'paste', 'issue']",{'issue': 100}
"['credential', 'deployment', 'issue']",{'issue': 100}
"['issue', 'checkstyle']",{'issue': 100}
"['debvelop', 'issue']",{'issue': 100}
"['object', 'transformerassigner', 'issue']",{'issue': 100}
"['suite', 'updatedassert', 'issue']",{'issue': 100}
"['style', 'issue']",{'issue': 100}
"['nametoclass', 'scene', 'concurrent', 'access']",{'concurrent': 100}
"['ensure', 'concurrency']",{'concurren': 90}
"['version', 'incorrect', 'setting']",{'incorrect': 100}
"['phantom', 'primitiveexample', 'issue']",{'issue': 100}
"['vulnerable', 'dependency']",{'vulnerable': 100}
"['mergedevelop', 'marcmil', 'request', 'mergearray', 'length']",{'length': 100}
"['inheritance', 'methodrenamer', 'indirect', 'correctlysynchronize', 'generation', 'fieldrenamersource', 'classrenamer']",{'generation': 100}
"['fdbfe', 'mergemerge', 'marcmil', 'lambdafix', 'requestlambda', 'invokes', 'special', 'generation', 'issue']","{'generation': 100, 'issue': 100}"
"['lambda', 'invokes', 'special', 'generation', 'issue']","{'generation': 100, 'issue': 100}"
"['implementation', 'incorrect', 'addition', 'valid', 'interface', 'graph', 'metafactory', 'fasthierarchy', 'implementer', 'generation']","{'incorrect': 100, 'generation': 100}"
"['previous', 'issue']",{'issue': 100}
"['issue', 'stylecheck']",{'issue': 100}
"['issue', 'checkstyle']",{'issue': 100}
"['others', 'style', 'issue', 'header']",{'issue': 100}
"['resolver', 'recompute', 'implementation', 'catch', 'constraint', 'integer']",{'integer': 100}
"['mergedevelop', 'request', 'mergemethodrenamer', 'issue']",{'issue': 100}
"['mergeanddann', 'issue', 'request']",{'issue': 100}
"['fabae', 'mergedevelop', 'request', 'mergemethodrenamer', 'issue']",{'issue': 100}
"['methodrenamer', 'rename', 'exception', 'class', 'method', 'issue']",{'issue': 100}
"['android', 'static', 'clinit', 'issue', 'correctlypossible', 'android', 'static', 'initializers']",{'issue': 100}
"['validation', 'issue', 'incorrect', 'fixeddefault', 'error', 'validation']","{'issue': 100, 'incorrect': 100}"
"['field', 'thread', 'class', 'methodsjlocals', 'access', 'static']",{'thread': 100}
"['multidex', 'helper', 'method', 'performance', 'reading', 'writingexception', 'major', 'contains', 'container', 'larget', 'usage', 'memory', 'issue']",{'issue': 100}
"['concurrency', 'moduleresolver']",{'concurren': 90}
"['strange', 'issue', 'concurrency']","{'issue': 100, 'concurren': 90}"
"['refactorings', 'concurrency']",{'concurren': 90}
"['level', 'thread', 'class', 'volatile']",{'thread': 100}
"['exception', 'stack', 'underrun', 'synchronization']",{'stack': 100}
"['mergedevelop', 'request', 'mergevalue', 'equality', 'integer', 'operator']",{'integer': 100}
"['value', 'equality', 'integer', 'operatorsnapshot', 'solver', 'jimple', 'project']",{'integer': 100}
"['format', 'issue', 'subpartcommits', 'relatedfdcbbcabfffdcbbffddfaffafdcb']",{'issue': 100}
"['unary', 'typecast', 'issue']",{'issue': 100}
"['primitive', 'array', 'splitter', 'special', 'initialization', 'variable', 'local', 'issue']",{'issue': 100}
"['madness', 'century', 'issue']",{'issue': 100}
"['removedarray', 'overflow', 'dimension', 'stack']","{'overflow': 100, 'stack': 100}"
"['field', 'thread', 'iterator']",{'thread': 100}
"['issue', 'concurrency']","{'issue': 100, 'concurren': 90}"
"['stream', 'issue']",{'issue': 100}
"['thread', 'phantom', 'sootfieldrefs']",{'thread': 100}
"['minor', 'context', 'sensitive', 'geompointsto']",{'Sensitive': 100}
"['mergeshimple', 'concurrent', 'request', 'mergeshimple', 'building', 'concurrent']",{'concurrent': 100}
"['shimple', 'building', 'concurrent']",{'concurrent': 100}
"['elimination', 'value', 'exception', 'assignment', 'local', 'integer']",{'integer': 100}
"['alias', 'improvement', 'analysis', 'collection', 'definition', 'insensitive', 'performance', 'version']",{'Sensitive': 90}
"['updategithub', 'markdown', 'display', 'issue']",{'issue': 100}
"['class', 'option', 'issue', 'throwables', 'callgraphs']",{'issue': 100}
"['issue', 'concurrency']","{'issue': 100, 'concurren': 90}"
"['introduces', 'request', 'issue', 'compilation']",{'issue': 100}
"['thread', 'aggregator']",{'thread': 100}
"['access', 'collection', 'overhead', 'stack', 'insensitive', 'localdef', 'performance', 'arraylists']","{'stack': 100, 'Sensitive': 90}"
"['issue', 'catchall', 'exception', 'analysis', 'workaround', 'android', 'imprecise', 'bytecode', 'shame', 'whoever']",{'issue': 100}
"['getfieldunsafe', 'snapshot', 'iterator', 'modification', 'issue']",{'issue': 100}
"['cleanup', 'issue']",{'issue': 100}
"['thread', 'safety']",{'thread': 100}
"['variable', 'issue', 'integer']","{'issue': 100, 'integer': 100}"
"['nignagconflictjimple', 'toolkits', 'scalarjimple', 'toolkits', 'thread', 'synchronization']",{'thread': 100}
"['comment', 'character', 'issue']",{'issue': 100}
"['integer', 'result', 'boolean']",{'integer': 100}
"['interface', 'class', 'issue', 'superclass']",{'issue': 100}
"['invalid', 'statement', 'issue', 'workingflowsets']",{'issue': 100}
"['fasthierarchy', 'thread']",{'thread': 100}
"['compilation', 'fdbeeebbecdfb', 'issue', 'information']",{'issue': 100}
"['parser', 'viewer', 'command', 'issue']",{'issue': 100}
"['certain', 'whenever', 'catch', 'issue', 'monitor', 'fixedhowever', 'possible', 'statement', 'android', 'bytecode', 'verifier', 'exception', 'requirement', 'approximate']",{'issue': 100}
"['mergeissue', 'ensoftkevin', 'request', 'mergekeywords', 'annotation', 'issue']",{'issue': 100}
"['keywords', 'annotation', 'issue']",{'issue': 100}
"['exception', 'generation', 'artificial', 'issue']","{'generation': 100, 'issue': 100}"
"['label', 'duplicate', 'issue']",{'issue': 100}
"['fabfa', 'mergedevelop', 'marcmil', 'request', 'mergedebug', 'update', 'parameter', 'local', 'information', 'incorrect']",{'incorrect': 100}
"['debug', 'update', 'parameter', 'local', 'information', 'incorrect']",{'incorrect': 100}
"['eecec', 'mergeissue', 'ensoftkevin', 'request', 'mergeescape', 'support', 'character', 'issue']",{'issue': 100}
"['support', 'character', 'issue']",{'issue': 100}
"['class', 'convention', 'empty', 'anonymous', 'issue']",{'issue': 100}
"['circular', 'outer', 'class', 'dexpler', 'issue']",{'issue': 100}
"['dynamic', 'invoke', 'collector', 'response', 'constraint', 'integer']",{'integer': 100}
"['issue', 'report']",{'issue': 100}
"['incorrect', 'annotation', 'parameter']",{'incorrect': 100}
"['issue', 'coverity', 'fixedshorter', 'iteration', 'internal', 'exception', 'efficient', 'declaresfield']",{'issue': 100}
"['integer', 'bottomsingleton', 'modifyglobal', 'typenumberer', 'instance']",{'integer': 100}
"['invalid', 'issue', 'variable', 'label', 'placement', 'patch']",{'issue': 100}
"['issue', 'instanceof']",{'issue': 100}
"['unitcontainers', 'stack']",{'stack': 100}
"['system', 'calsses', 'phase', 'insensitive']",{'Sensitive': 90}
"['trapsplitter', 'markus', 'exception', 'schmidt', 'support', 'issue', 'version']",{'issue': 100}
"['offset', 'issue', 'middle']",{'issue': 100}
"['thread', 'phantom', 'manner']",{'thread': 100}
"['thread', 'executor', 'android', 'support', 'asynctask', 'callgraph']",{'thread': 100}
"['semantic', 'member', 'duplicate', 'compilation', 'errorissuecomment', 'issue']",{'issue': 100}
"['recursive', 'iterative', 'overflow', 'stack', 'issue']","{'overflow': 100, 'stack': 100, 'issue': 100}"
"['bugfix', 'insensitive', 'check', 'classpath']",{'Sensitive': 90}
"['annotation', 'conversion', 'issue']",{'issue': 100}
"['splitter', 'class', 'handler', 'exception', 'contains', 'block', 'different', 'middle', 'assumesable', 'issue']",{'issue': 100}
"['driver', 'issue']",{'issue': 100}
"['backslashes', 'class', 'window', 'issue']",{'issue': 100}
"['force', 'localpacker', 'assignment', 'artificial', 'local', 'issue']",{'issue': 100}
"['abffc', 'mergedevelop', 'bergerbd', 'request', 'mergebroken', 'generation', 'singleton']",{'generation': 100}
"['issue', 'assertion']",{'issue': 100}
"['haichen', 'issuebugfix', 'analysis', 'android', 'student', 'static', 'recent', 'university', 'recentlydeletes', 'jimple', 'problem', 'writeoutput', 'transform', 'releasebodies', 'issue', 'anotherhaichen']",{'issue': 100}
"['updateignore', 'filter', 'crash', 'pointer']",{'crash': 100}
"['modificationocteau', 'damien', 'writesplace', 'issue', 'couplecanstoretype', 'method', 'achild', 'arraytype', 'child', 'return', 'arraytype', 'jimple', 'method', 'integer', 'toolkits', 'typingfound', 'condition', 'arraytype', 'baset', 'instanceof', 'caseassignstmt', 'solves', 'jimple', 'problem', 'method', 'arraytype', 'condition', 'integer', 'toolkits', 'instanceof']","{'issue': 100, 'integer': 100}"
"['bugfix', 'cache', 'recursive', 'dexlibwrapper', 'stack', 'overflow']","{'stack': 100, 'overflow': 100}"
"['interface', 'thread']",{'thread': 100}
"['readabilty', 'handler', 'exception', 'generation', 'method']",{'generation': 100}
"['builder', 'issue']",{'issue': 100}
"['equal', 'contract', 'issue', 'abstractflowsetissue', 'sablerequires', 'runtime', 'object', 'equalelement', 'ignores', 'hashcode', 'order']",{'issue': 100}
"['statement', 'separation', 'jimple', 'generation', 'constraint']",{'generation': 100}
"['addfd', 'mergemaster', 'request', 'mergestatic', 'generation', 'wrong', 'method']",{'generation': 100}
"['modification', 'bugfix', 'exception', 'concurrent']",{'concurrent': 100}
"['pseudo', 'address', 'issue']",{'issue': 100}
"['buffer', 'store']",{'buffer': 100}
"['number', 'local', 'issue']",{'issue': 100}
"['level', 'operation', 'thread', 'hierarchy', 'message', 'reference']",{'thread': 100}
"['mandelbaum', 'patch', 'yitzhakunless', 'class', 'collection', 'clutter', 'featureelement', 'attribute', 'empty', 'generation', 'particular', 'class', 'analysis', 'large', 'collection', 'search', 'analyze', 'output', 'generate']",{'generation': 100}
"['context', 'analysis', 'geometric', 'sensitive', 'point', 'issta', 'largeminor', 'analysis', 'modification']",{'Sensitive': 100}
"['bugfix', 'option', 'phase', 'incorrect']",{'incorrect': 100}
"['trace', 'error', 'stack']",{'stack': 100}
"['class', 'analysis', 'problem', 'hierarchycomment', 'ondrejstart', 'thread', 'implicitlyimplicit', 'model', 'necessarystart', 'whereas', 'implicitstart', 'special', 'virtualresolve', 'specialalways', 'thread', 'handlestart', 'addtype', 'statementinstanceofchangedinstanceof']",{'thread': 100}
"['possible', 'thread', 'arraylists', 'singleton']",{'thread': 100}
"['deadlock', 'accessorcritical', 'accessor', 'section']",{'deadlock': 100}
"['package', 'class', 'import', 'incorrect']",{'incorrect': 100}
"['allocation', 'detection', 'simple', 'deadlock']",{'deadlock': 100}
"['diana', 'patchhowever', 'statement', 'return', 'block', 'catch', 'incorrect', 'complicate', 'monitorexit', 'exception', 'jimple']",{'incorrect': 100}
"['jastadd', 'source', 'issue']",{'issue': 100}
"['richard', 'tloanalysis', 'consultingcorrect', 'thread', 'primitive']",{'thread': 100}
"['ability', 'detection', 'avoidance', 'deadlockcomponent', 'deadlock', 'lockset', 'static']",{'deadlock': 100}
"['allocationthread', 'object', 'force', 'command', 'option', 'local', 'method', 'addedthread', 'printout', 'object', 'performance', 'verbosegiven', 'object', 'region', 'locksetlockset', 'verbose', 'various', 'addeddetection', 'deadlock', 'reachable', 'printout', 'transaction']",{'deadlock': 100}
"['workaround', 'issue']",{'issue': 100}
"['default', 'issue']",{'issue': 100}
"['allocation', 'avoidance', 'deadlock']",{'deadlock': 100}
"['primitive', 'analysis', 'insensitive', 'local']",{'Sensitive': 90}
"['analysis', 'class', 'insensitive', 'scene', 'completedfield', 'local']",{'Sensitive': 90}
"['error', 'stack']",{'stack': 100}
"['longertransaction', 'option', 'transform', 'enableddebug', 'option', 'processing', 'print', 'incorrect', 'removeddependence', 'startjoinfindergiven', 'statement', 'alwaysdominator', 'analysis', 'addedargument', 'class', 'static', 'informationgetters', 'phase', 'setter']",{'incorrect': 100}
"['import', 'incorrect']",{'incorrect': 100}
"['analysis', 'computation', 'timer', 'length']",{'length': 100}
"['graylists', 'transactional', 'blacklist']",{'blacklist': 100}
"['paddle', 'thread', 'sensitivity', 'applies', 'relevant']",{'thread': 100}
"['sensitive', 'option']",{'Sensitive': 100}
"['thread', 'paddle', 'sensitive', 'option', 'point', 'entry']","{'thread': 100, 'Sensitive': 100}"
"['heintze', 'overflow']",{'overflow': 100}
"['localdecl', 'bugfix', 'localassign', 'issue']",{'issue': 100}
"['point', 'sharedminor', 'improvement', 'speed', 'heintze', 'overflow', 'changedmatch']",{'overflow': 100}
"['option', 'point', 'entry', 'ignore', 'implicitlypaddle', 'option', 'unimplementedpaddle', 'option', 'addedgraph', 'object', 'sensitive', 'option', 'uniqueassocates', 'numberer']",{'Sensitive': 100}
"['archie', 'improvement', 'command', 'cobbs', 'generation', 'option']",{'generation': 100}
"['paddle', 'context', 'sensitive', 'option']",{'Sensitive': 100}
"['graph', 'eclipse', 'decoration', 'growable', 'fixedgraph', 'growable', 'overflow', 'stack', 'problem', 'fixedfield', 'final', 'jasmin', 'value', 'static']","{'overflow': 100, 'stack': 100}"
"['unreachablestart', 'point', 'discoverchange', 'stack', 'height', 'initialhandler']",{'stack': 100}
"['trace', 'stack']",{'stack': 100}
"['method', 'reference', 'incorrect', 'addedreadingcontradicts', 'sayingreference', 'class', 'method']",{'incorrect': 100}
"['context', 'query', 'sensitive', 'method']",{'Sensitive': 100}
"['update', 'context', 'class', 'sensitive', 'callgraphs']",{'Sensitive': 100}
"['allocnode', 'context', 'localallocnode', 'sensitive', 'globalallocnode']",{'Sensitive': 100}
"['stmts', 'return', 'synch', 'block']",{'synch': 100}
"['class', 'jimple', 'generation', 'inner', 'reimplement']",{'generation': 100}
"['buffer', 'jimple', 'concat', 'appends', 'string', 'multiple', 'generateposition', 'stmts', 'string']",{'buffer': 100}
"['system', 'input', 'crash', 'stephen', 'andrew', 'instanceof']",{'crash': 100}
"['object', 'analysis', 'cleanup', 'sensitive', 'point']",{'Sensitive': 100}
"['object', 'analysis', 'implementation', 'sensitive', 'point']",{'Sensitive': 100}
"['sensitive', 'graph', 'context']",{'Sensitive': 100}
"['output', 'fixedrohanoperate', 'instruction', 'bytecode', 'addedoperand', 'stack']",{'stack': 100}
"['incorrect', 'regeneration', 'polyvios', 'pratikakis', 'reportedjimple', 'parser']","{'incorrect': 100, 'generation': 91}"
"['graph', 'thread', 'pointstart']",{'thread': 100}
"['corresponding', 'plugin', 'class', 'message', 'error', 'eclise', 'incorrect', 'eitherposition']",{'incorrect': 100}
"['accuratereference', 'stack']",{'stack': 100}
"['default', 'option', 'local', 'stack', 'phase']",{'stack': 100}
"['bifcmp', 'height', 'stack', 'incorrect', 'instructionusage', 'comparingbranch']","{'stack': 100, 'incorrect': 100}"
"['generation', 'option', 'phase']",{'generation': 100}
"['crash', 'inline', 'method', 'staticinliner', 'library']",{'crash': 100}
"['integer', 'algorithm', 'inference']",{'integer': 100}
"['phantom', 'stuff', 'experimental', 'version', 'crash']",{'crash': 100}
"['infrastructure', 'major', 'patrice', 'overhaul', 'concurrent']",{'concurrent': 100}
