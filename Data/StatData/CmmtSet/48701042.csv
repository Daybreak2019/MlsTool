message,fuzzy
"['installbfacdaadefeeab', 'issue', 'shareadamstacgerhard']",{'issue': 100}
"['integration', 'agent', 'promex', 'grafanaagent', 'issue', 'grafanadisablingakoutmos', 'anothergerhard']",{'issue': 100}
"['placeholder', 'hostname', 'stack', 'capturegerhard']",{'stack': 100}
"['integration', 'agent', 'neveragent', 'issue', 'solves', 'grafanathanks', 'rgrattogerhard']",{'issue': 100}
"['agent', 'grafana', 'installintegration', 'enabledmetric', 'integration', 'availablegrafana', 'issue', 'cloud', 'forwardedwrong', 'figuregerhard']",{'issue': 100}
"['version', 'manager', 'dnsimpleversion', 'restart', 'crash', 'bettergerhard']",{'crash': 100}
"['improvecache', 'browsercachecontent', 'stale', 'response', 'cachedbackends', 'content', 'respondevent', 'error', 'backends', 'content', 'stale', 'unavailableinfrastructure', 'crash', 'stale', 'restorewould', 'pretend', 'uptimeclaim', 'nermind', 'outrageousguide', 'different', 'browser', 'content', 'stalegerhard']",{'crash': 100}
"['postgres', 'helpful', 'issue', 'operatorgerhard']",{'issue': 100}
"['stack', 'changelog', 'servicemonitor', 'prometheus', 'configuretoken', 'enablelatest', 'stack', 'prometheusgerhard']",{'stack': 100}
"['stack', 'prometheusgerhard']",{'stack': 100}
"['zalando', 'migrate', 'crunchy', 'postgresqlinitial', 'degradedinitial', 'setup', 'default', 'backup', 'unavailableconfigure', 'gitops', 'approach', 'backup', 'customlabel', 'runningreject', 'grafana', 'breach', 'cloud', 'labelmetric', 'prometheus', 'grafanaprometheus', 'stack', 'dashboard', 'nginx', 'accordingswitchinggerhard']","{'breach': 100, 'stack': 100}"
"['stack', 'prometheus', 'annotation', 'enablegerhard']",{'stack': 100}
"['stack', 'prometheus', 'configuregrafana', 'setup', 'dashboard', 'promex', 'local', 'configuregrafana', 'remote', 'writingmetric', 'adamstac', 'waitingenablecloud', 'grafan', 'configure', 'shortmetric', 'prometheus', 'delete', 'prometheus']",{'stack': 100}
"['prioritize', 'issue']",{'issue': 100}
"['terraformservice', 'runningexternal', 'record', 'terraformexplicit', 'record', 'supportlocal', 'stack', 'replacedcontribute', 'editor', 'requiredwould', 'issue', 'objective', 'docker', 'worthyfinishfinishcarmina']","{'stack': 100, 'issue': 100}"
"['tweak', 'buffer', 'content', 'episode', 'format']",{'buffer': 100}
"['renameseparate', 'grafana', 'mount', 'storage', 'chownsense', 'volume', 'grafanaincorrect', 'deploy', 'permission', 'grafana', 'startversion', 'operator', 'prometheuscarmina']",{'permission': 100}
"['operator', 'crunchy', 'postgresqlcluster', 'blockstorage', 'linode', 'volume', 'creatingwrite', 'backrest', 'supportinghostpathstorage', 'class', 'volume', 'issue', 'crunchy', 'maybeprogress', 'backgroundcrunchydata', 'operator', 'postgres', 'checkzalando', 'operator', 'postgrescarmina']",{'issue': 100}
"['ingres', 'nginx', 'forwardedfirst', 'issuecontroller', 'manager', 'issue', 'linode', 'cloudreviewintroduces', 'analysis', 'quick', 'tcpdump', 'ksniffcarmina', 'signeddelivers']",{'issue': 100}
"['token', 'buffer', 'referencetoken', 'buffer', 'rotation', 'previousvalidcarmina']",{'buffer': 100}
"['image', 'issue']",{'issue': 100}
"['stack', 'changelog', 'weave', 'scopecarmina']",{'stack': 100}
"['buffer', 'profile', 'module', 'determines']",{'buffer': 100}
"['mergeheader', 'request', 'podcast', 'thechangelogheader', 'safari', 'minimal', 'issue']",{'issue': 100}
"['header', 'safari', 'minimal', 'issue']",{'issue': 100}
"['stack', 'timing', 'healthcheck', 'update', 'localgerhard']",{'stack': 100}
"['changelog', 'image', 'buildmonolith', 'requestserver', 'nginx', 'softwareserver', 'hostnameserverdocumentlength', 'documentconcurrency', 'levelsecond', 'takencomplete', 'requesttotal', 'transferredtransferredsecond', 'requestrequestacross', 'concurrent', 'certain', 'request', 'percentage', 'withinlongest', 'requestserver', 'software', 'cowboyserver', 'hostnameserverprotocolserverdocumentlength', 'documentconcurrency', 'levelsecond', 'takencomplete', 'requesttotal', 'transferredtransferredsecond', 'requestrequestacross', 'concurrent', 'certain', 'request', 'percentage', 'withinlongest', 'requestfinishgerhard']",{'concurrent': 100}
"['target', 'cluster', 'createssimple', 'cluster', 'errorcluster', 'default', 'linode', 'local', 'createlabelregion', 'centralversiongerharddedicatedregion', 'version', 'usage', 'linode', 'linode', 'error', 'argumentgmake', 'errorsomewhat', 'linode', 'linode', 'installedlinodelinodeversion', 'builtpythondefault', 'issue', 'linode', 'thanks', 'stillrecent', 'tracebackpython', 'version', 'cellar', 'framework', 'localvalue', 'optionpython', 'version', 'collection', 'cellar', 'framework', 'localsubclass', 'support', 'return', 'definepython', 'version', 'collection', 'cellar', 'framework', 'localkeyerror', 'raisekeyerror', 'defaultanother', 'exception', 'handlingrecent', 'tracebacklocal', 'linode', 'modulelocal', 'package', 'linodeclilocal', 'package', 'linodecliresultlocal', 'package', 'linodeclilocal', 'package', 'linodecli', 'updateusernamelocal', 'package', 'linodeclireturn', 'defaultpython', 'version', 'cellar', 'framework', 'localnooptionerror', 'section', 'raiseoption', 'default', 'sectiongmake', 'errorgerhard']",{'issue': 100}
"['buffer', 'profile', 'topic', 'podcast']",{'buffer': 100}
"['gallery', 'issue', 'inception']",{'issue': 100}
"['infrastructure', 'stack']",{'stack': 100}
"['target', 'capturefamiliar', 'capturegithub', 'issue', 'public', 'storycomfortable', 'pivotal', 'tracker']",{'issue': 100}
"['specific', 'stack', 'stack', 'version', 'bootstrap', 'meantsimplest']",{'stack': 100}
"['stack', 'nodebalancer', 'temporary', 'revert', 'config']",{'stack': 100}
"['stack', 'force', 'target', 'resolution', 'domainconnectedconnectedstack']",{'stack': 100}
"['version', 'stack', 'service', 'runningstack', 'backuplatest', 'backup', 'restore']",{'stack': 100}
"['capability', 'restore', 'backupusingrestore', 'interactiveinside', 'containercreatedb', 'dropdb', 'changelog', 'connectiondocker', 'bootstrap', 'service', 'interactivecommandrestorechangelog', 'select', 'backup', 'restorebackup', 'changelogbackup', 'changelogbackup', 'changelogbackup', 'changelogbackup', 'changelogbackup', 'changelogbackup', 'changelogbackup', 'changelogbackup', 'changelogbackup', 'changelogchangelog', 'backup', 'restorebackup', 'success', 'backup', 'changelogspecific', 'stack', 'image', 'image', 'partial', 'target', 'extract']",{'stack': 100}
"['specific', 'bootstrap', 'stack', 'imagespecific', 'bootstrap', 'stackfuture', 'image']",{'stack': 100}
"['specific', 'stack', 'deploys', 'makefileacross', 'makefile', 'defaultstack', 'report']",{'stack': 100}
"['docker', 'stack', 'deploy', 'report']",{'stack': 100}
"['layout', 'issue']",{'issue': 100}
"['buffer', 'science', 'brain', 'profile']",{'buffer': 100}
"['template', 'layout', 'issue']",{'issue': 100}
"['issue', 'podcasts']",{'issue': 100}
"['separate', 'introduce', 'template', 'issue']",{'issue': 100}
"['buffer', 'profile']",{'buffer': 100}
"['token', 'buffer']",{'buffer': 100}
"['token', 'buffer']",{'buffer': 100}
"['buffer', 'profile']",{'buffer': 100}
"['netdatacouple', 'netdata', 'nginx', 'unhealthydepends', 'nginx', 'capturingreason', 'netdata', 'netdata', 'crash']",{'crash': 100}
"['allowdocker', 'differ', 'stack', 'networksubnet', 'increase', 'access', 'sincefirst', 'worryseems']",{'stack': 100}
"['metric', 'expose', 'nginxmetric']",{'expose': 100}
"['image', 'toggle', 'issue', 'admin']",{'issue': 100}
"['image', 'issue', 'setting']",{'issue': 100}
"['boolean', 'image', 'issue']",{'issue': 100}
"['admin', 'issue', 'editor', 'display']",{'issue': 100}
"['target', 'stack', 'watchproduction']",{'stack': 100}
"['local', 'stack', 'target', 'watchhelpful']",{'stack': 100}
"['reference', 'expose', 'compose', 'docket']",{'expose': 100}
"['redundant', 'stack', 'production']",{'stack': 100}
"['expose', 'pgpassword', 'backup']",{'expose': 100}
"['docker', 'stack']",{'stack': 100}
"['expose', 'backup']",{'expose': 100}
"['local', 'target', 'remsherlang', 'shell', 'withinlocal', 'stack', 'dockerlocal', 'gmake', 'remshthread', 'false', 'kernel', 'async', 'source', 'erlangenter', 'press', 'interactive', 'elixirfffccb', 'changeloglocal', 'bindir', 'erlangchangelog', 'postgresnoninteractivefffccb', 'hostnamefockerlocal', 'erlangprognamelocallocal', 'rootdir', 'erlangxtermjerodsanto']",{'stack': 100}
"['local', 'stack', 'production', 'secretpopulate', 'secret', 'gmake', 'localhost', 'localdocker', 'production', 'definitelylocal', 'production', 'secretgoodness']",{'stack': 100}
"['proxy', 'development', 'runninglocal', 'stack', 'deploy', 'needingobvious', 'stack', 'place', 'logic', 'compose', 'docker']",{'stack': 100}
"['versionversion', 'check', 'gmake', 'deployedthechangelog', 'stack', 'locallyversion', 'gmake', 'check', 'local', 'deployedgmakeeither', 'commandgmake', 'sleep']",{'stack': 100}
"['print', 'issue']",{'issue': 100}
"['issue', 'redirect']",{'issue': 100}
"['makefile', 'proxy', 'singlelocal', 'proxy', 'stack', 'dockerlocal', 'proxy', 'configuredvhost', 'defaultlegacy', 'legacy', 'asset', 'netdata', 'configuredskippedproductionproxy', 'resolvingvhost', 'defaultlegacy', 'assetlegacy', 'assetredirectsforbiddennetdatanetdatafailurelater', 'initial', 'catch', 'structure', 'netdata']",{'stack': 100}
"['tweak', 'buffer', 'content']",{'buffer': 100}
"['parameter', 'diffie', 'hellman', 'exchangeimproves', 'scoressltestwould', 'strong', 'balancer', 'linode', 'maybecipher', 'currentlyguide', 'reference', 'balancer', 'officialguide', 'cipher', 'reference', 'platform', 'nodebalancer', 'suitedisplague', 'linode', 'discussionbettercipher', 'suite', 'configuration', 'extracurrent', 'ratinginfrastructure', 'nginx', 'thechangelogfinish']",{'cipher': 100}
"['separate', 'service', 'stack', 'image', 'update', 'docker', 'bootstrapstack', 'issue', 'docker', 'creatingservice', 'aprehensive', 'natureobvious', 'bootstrap', 'runningeffect', 'refactoringinterfere', 'updaterupdate', 'stack', 'servicestack', 'servicedocker', 'update', 'service', 'stacksequence', 'errorservice', 'sequence', 'daemon', 'response', 'update', 'error']","{'stack': 100, 'issue': 100}"
"['local', 'stack', 'docker', 'uploadsenables', 'productionsmall', 'target', 'rsync']",{'stack': 100}
"['tweak', 'buffer', 'contentsyntax', 'topic', 'verbosesyntax', 'terseoption', 'emoji']",{'buffer': 100}
"['stack', 'deploy', 'message']",{'stack': 100}
"['stack', 'deploy', 'update', 'docker', 'containereither', 'deploys', 'production']",{'stack': 100}
"['docker', 'stack', 'default']",{'stack': 100}
"['generation', 'default']",{'generation': 100}
"['helpful', 'stack', 'docker', 'configuration']",{'stack': 100}
"['stack', 'docker', 'deploy', 'target', 'localpoint']",{'stack': 100}
"['docker', 'stack', 'locallyhelpful', 'worth', 'docker', 'keepingpaste', 'stack', 'productionwould', 'useful', 'easiest', 'continuesenough']",{'stack': 100}
"['docker', 'account', 'stack', 'cleaningmightdocker', 'artefact', 'volume']",{'stack': 100}
"['target', 'stack', 'docker', 'deploy']",{'stack': 100}
"['stack', 'database', 'postgresqldocker', 'support', 'image', 'postgresqlrecent', 'eithercreatedsubsequent', 'command']",{'stack': 100}
"['stack', 'image', 'productionlocal', 'development', 'image']",{'stack': 100}
"['docker', 'stack', 'definitionessential', 'encapsulates', 'serviceaddition', 'configuration', 'logspout', 'docker', 'centralizedvolume', 'uploads']",{'stack': 100}
"['docker', 'expose', 'credential', 'secretdocker', 'secret', 'ignore', 'certificate']",{'expose': 100}
"['dropdowns', 'result', 'admin', 'length', 'search']",{'length': 100}
"['issue', 'preview']",{'issue': 100}
"['discussion', 'issue']",{'issue': 100}
"['clean', 'section', 'commentaddress', 'issue', 'comment', 'section']",{'issue': 100}
"['typography', 'babel', 'issue']",{'issue': 100}
"['tweak', 'buffer', 'contenttopic', 'verbose', 'terse', 'syntax', 'dependingterse', 'author', 'emoji', 'syntax', 'random']",{'buffer': 100}
"['mobile', 'issue']",{'issue': 100}
"['integer', 'hashids', 'wrapper', 'range']",{'integer': 100}
"['babel', 'issue']",{'issue': 100}
"['contact', 'issue']",{'issue': 100}
"['image', 'issue']",{'issue': 100}
"['temporary', 'issue']",{'issue': 100}
"['babel', 'issue']",{'issue': 100}
"['buffer', 'founder']",{'buffer': 100}
"['update', 'security', 'appease', 'github']",{'Security': 100}
"['input', 'issue']",{'issue': 100}
"['refactor', 'generation', 'topicuseful', 'complicatedabstraction', 'simpler', 'introducetoolbar', 'topiccreate', 'template', 'simple', 'topic']",{'generation': 100}
"['party', 'buffer']",{'buffer': 100}
"['class', 'emoji', 'image', 'issue']",{'issue': 100}
"['improvement', 'loggedsubmitter', 'issue', 'attributeeverywhere', 'strongintroduce', 'function']",{'issue': 100}
"['buffer', 'error', 'place']",{'buffer': 100}
"['refactor', 'buffer', 'emoji', 'video']",{'buffer': 100}
"['buffer', 'message']",{'buffer': 100}
"['buffer', 'tweak', 'minor', 'content']",{'buffer': 100}
"['admin', 'issue']",{'issue': 100}
"['client', 'buffer', 'profile']",{'buffer': 100}
"['buffer', 'process']",{'buffer': 100}
"['podcast', 'issue']",{'issue': 100}
"['footer', 'issue']",{'issue': 100}
"['style', 'hacker', 'header', 'issue']",{'issue': 100}
"['sponsor', 'avatar', 'issue']",{'issue': 100}
"['select', 'active', 'issue']",{'issue': 100}
"['browser', 'overflow', 'scrollbars', 'visible', 'toolbar']",{'overflow': 100}
"['placement', 'issue']",{'issue': 100}
"['avatar', 'stack']",{'stack': 100}
"['simple', 'stack']",{'stack': 100}
"['sticky', 'footer', 'layout', 'issue', 'overlap']",{'issue': 100}
"['styling', 'image', 'issue']",{'issue': 100}
"['usage', 'generation']",{'generation': 100}
"['issue', 'publish']",{'issue': 100}
"['associate', 'issue', 'ability']",{'issue': 100}
"['default', 'issue']",{'issue': 100}
"['teaser', 'issue', 'field']",{'issue': 100}
"['image', 'issue']",{'issue': 100}
"['version', 'issue']",{'issue': 100}
"['admin', 'issue']",{'issue': 100}
"['mergelenpayne', 'oauth', 'request', 'updateoauth', 'permission', 'github']",{'permission': 100}
"['oauth', 'permission', 'github', 'reduceaddress', 'permission', 'request']",{'permission': 100}
"['github', 'scope', 'permissiongithub', 'scope', 'permission']",{'permission': 100}
"['upgrade', 'security', 'force']",{'Security': 100}
"['index', 'issue']",{'issue': 100}
"['overflow', 'smartphone', 'viewports', 'toolbar']",{'overflow': 100}
"['mosaic', 'issue']",{'issue': 100}
