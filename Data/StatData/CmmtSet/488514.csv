message,fuzzy
"['ebabbdmergeeverywhere', 'rodriguez', 'deivid', 'versioncontribution', 'buildformat', 'squash', 'result', 'reviewingdeveloper', 'problemdescription', 'complete', 'clear', 'problemproblem', 'warning', 'print', 'bunchimplementeddiagnosis', 'explaincause', 'issue']",{'issue': 100}
"['bcfdamergedeivid', 'rodriguez', 'snapshot', 'resolvingcontribution', 'buildformat', 'squash', 'result', 'reviewingdeveloper', 'problemcrash', 'problem', 'formedcheck', 'example', 'rubygemsdescription', 'complete', 'clear', 'problemimplementeddiagnosis', 'explaincause', 'issue', 'equal', 'respect', 'reusingdavid']",{'issue': 100}
"['eadbb', 'mergemergedeivid', 'rodriguez', 'unfreeze', 'dependencycontribution', 'buildformat', 'squash', 'result', 'reviewingdeveloper', 'problemdescription', 'complete', 'clear', 'problemcrash', 'jrubyabortedmodify', 'frozen', 'frozenerrorbundler', 'supportbundler', 'rakefile', 'blockbundler', 'rakefile', 'block', 'invokebundler', 'rakefile', 'invokebundler', 'supportbundler', 'explaincause', 'issue', 'explainsince', 'unfreeze', 'modifyingdavid']",{'issue': 100}
"['aeadcfmergewarbler', 'rodriguez', 'jruby', 'deividcontribution', 'buildformat', 'squash', 'result', 'reviewingdeveloper', 'problemdescription', 'complete', 'clear', 'problemproblem', 'jruby', 'brokenimplementedwarbler', 'workaround', 'jruby', 'dependencydiagnosis', 'explaincause', 'issue']",{'issue': 100}
"['mergemergedeivid', 'location', 'rodriguez', 'configcontribution', 'buildformat', 'squash', 'result', 'reviewingdeveloper', 'problemdescription', 'complete', 'clear', 'problemgemfile', 'directory', 'absolute', 'default', 'location', 'problem', 'bundler', 'resolution', 'information', 'explaincause', 'issue']",{'issue': 100}
"['eecbab', 'mergemergeimprovement', 'rodriguez', 'paralelization', 'deividcontribution', 'buildformat', 'squash', 'result', 'folder', 'effect', 'developer', 'problem', 'globallyimplementedalleviate', 'folder', 'globallydiagnosis', 'explaincause', 'issue']",{'issue': 100}
"['accddbmergedeivid', 'jruby', 'issue', 'rodriguez', 'workaroundcontribution', 'buildformat', 'squash', 'result', 'reviewingdeveloper', 'problemgemfile', 'relative', 'environment', 'bundler', 'warbler', 'contains', 'problemimplementeddiagnosis', 'explaincause', 'issue', 'explainreturn', 'jruby', 'classloader', 'argument', 'pathname', 'inconsistency', 'double', 'bundler', 'rubygems', 'version', 'single', 'issue', 'weird', 'sinceclassloaderclassloader', 'pathnameclassloaderclassloader', 'pathnameclassloaderclassloader', 'pathnameclassloaderclassloader', 'pathnamejruby', 'thing', 'fixedreturn', 'consistent', 'classpath', 'version', 'pathnamesupport', 'absolute', 'different', 'classpath', 'appropriate', 'bundler', 'issue', 'extra', 'consistent', 'suite', 'realworld']",{'issue': 100}
"['workaround', 'issue', 'jruby']",{'issue': 100}
"['mergemergedeivid', 'february', 'rodriguezcontribution', 'buildformat', 'squash', 'result', 'reviewingdeveloper', 'problemcurrent', 'check', 'actual', 'keepingimplementedbuilddiagnosis', 'explaincause', 'issue']",{'issue': 100}
"['rodriguez', 'openssl', 'report', 'exception', 'mongo', 'originalproblemproblem', 'diagnosisbundler', 'message', 'class', 'discard', 'message', 'class', 'report', 'exception', 'loaderror', 'originalpudeyev', 'authoreddavid', 'authoredgiurleo']",{'OpenSSL': 100}
"['fcccf', 'mergemergefailure', 'rodriguez', 'flaky', 'deividcontribution', 'buildformat', 'squash', 'result', 'reviewingdeveloper', 'problembundler', 'problem', 'flaky', 'rubygemsimplementedfirst', 'bundle', 'configuration', 'error', 'rubygems', 'diagnosis', 'subprocess', 'print', 'value', 'infers', 'install', 'modifiedindependent', 'specific', 'configuration', 'rubygemsdiagnosis', 'explaincause', 'issue']",{'issue': 100}
"['ddccbe', 'mergemergedeivid', 'client', 'rodriguez', 'compact', 'isolation', 'buildformat', 'squash', 'result', 'errorbundler', 'rspecrandomizeddeivid', 'mktmpdir', 'warning', 'method', 'previous', 'definition', 'mktmpdir', 'warning', 'rspec', 'versionexample', 'retriedfailureerrno', 'permission', 'bundler', 'eacces', 'updaterfailure', 'errorexpectbundler', 'permissionerrordouble', 'unexpected', 'bundler', 'backtrace', 'fetcher', 'rspecbundler', 'level', 'blockbundler', 'level', 'blocksupportsupportsupportbundler', 'level', 'secondfailureexample', 'failederrno', 'permission', 'bundler', 'eacces', 'rspec', 'updateralready', 'instantiate']",{'permission': 100}
"['isolation', 'updaterbundler', 'rspecrandomizeddeivid', 'mktmpdir', 'warning', 'method', 'previous', 'definition', 'mktmpdir', 'warning', 'rspec', 'versionexample', 'retriedfailureerrno', 'permission', 'bundler', 'eacces', 'updaterfailure', 'errorexpectbundler', 'permissionerrordouble', 'unexpected', 'bundler', 'backtrace', 'fetcher', 'rspecbundler', 'level', 'blockbundler', 'level', 'blocksupportsupportsupportbundler', 'level', 'secondfailureexample', 'failederrno', 'permission', 'bundler', 'eacces', 'rspec', 'initialize', 'method', 'tmpdir', 'longersupposedinstantiate', 'earlyalready', 'tmpdir']",{'permission': 100}
"['afbcamergedeivid', 'rodriguez', 'junichiito', 'bundler', 'bundle', 'issue', 'reader']",{'issue': 100}
"['upfrontparallel', 'issue', 'potential', 'autoloadingcould', 'causebundler', 'rubygems']",{'issue': 100}
"['stable', 'parallel', 'rodriguezproblemthough', 'parallel', 'problemproblem', 'diagnosisdiagnosis', 'thread', 'folder', 'forthimplementedfolder', 'possible', 'optionstability']",{'thread': 100}
"['permission', 'window']",{'permission': 100}
"['bdbeddfcmergedeivid', 'marciotoshio', 'optional', 'pipeline', 'vendoredproblembundler', 'issueproblem', 'diagnosisdiagnosis', 'bundler', 'pipeline', 'vendor', 'installedimplementedremove', 'optional', 'requirechoose', 'possible', 'optiondeivid', 'recommendation', 'issue', 'rodriguez', 'chosedavid', 'authoredtoshio', 'marcio']",{'issue': 100}
"['aacfd', 'mergemergedeivid', 'permission', 'ignore', 'window', 'rodriguezproblemproblem', 'permission', 'bundler', 'issue', 'sense', 'choseclosedavid']","{'permission': 100, 'issue': 100}"
"['independent', 'rodriguez', 'platformproblemgemspec', 'problem', 'failingproblem', 'diagnosisdiagnosis', 'platform', 'local', 'assertsimplementedproperchoose', 'bundler', 'issue', 'janpio', 'choseclosedavid']",{'issue': 100}
"['bdeea', 'mergemergedeivid', 'adapt', 'bundler', 'window', 'rodriguezproblemproblem', 'failingproblem', 'diagnosisspecific', 'diagnosis', 'windowimplementedseparatechoose', 'bundler', 'issue', 'betterclose', 'issue', 'bundlerdavid']",{'issue': 100}
"['ignore', 'permission']",{'permission': 100}
"['mergemergedeivid', 'shell', 'release', 'rodriguez', 'spawnproblemalmost', 'bundler', 'release', 'problem', 'hangingproblem', 'diagnosisdebug', 'thanksrelease', 'debugdeivid', 'bundler', 'buildbundler', 'builtindex', 'crakeinterruptdeivid', 'bundlerdeivid', 'popen', 'bundlerdeivid', 'block', 'bundlerdeivid', 'chdir', 'bundlerdeivid', 'block', 'chdir', 'bundlerdeivid', 'chdir', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'level', 'block', 'bundler', 'installdeivid', 'bundlerdeivid', 'install', 'block', 'bundlerdeivid', 'rakefile', 'block', 'bundler', 'invokedeivid', 'rakefile', 'bundler', 'invokedeivid', 'support', 'bundlerdeivid', 'support', 'bundlerdeivid', 'support', 'string', 'method', 'command', 'popen', 'figure', 'github', 'issue', 'release', 'people', 'thinkthink', 'practicechoose', 'possible', 'optionworth']",{'issue': 100}
"['unnecessary', 'rodriguez', 'problemproblem', 'diagnosisdiagnosis', 'operation', 'graphviz', 'modifyingbundler', 'issue']",{'issue': 100}
"['bundler', 'issue']",{'issue': 100}
"['mergemergedeivid', 'issue', 'rodriguez', 'rubygems', 'silentproblemscript', 'bundler', 'issue', 'contextproblem', 'diagnosisprevious', 'script', 'diagnosis', 'setup', 'bundle', 'rbundler', 'silence', 'approach', 'rubygems', 'reset', 'rubyoptimplementedsetup', 'bundler', 'rubygems', 'resetchoose', 'problem', 'version', 'insidedavid']",{'issue': 100}
"['issue', 'rubygems', 'silentbundle', 'rubygemsshell', 'binstubprevious', 'tricksetup', 'bundler', 'rubygems', 'resetshell', 'default', 'shellingsilentwould', 'place', 'insideprevious', 'workaroundsbundler', 'rubygems']",{'issue': 100}
"['rodriguez', 'deividproblembundler', 'travis', 'buildproblem', 'diagnosisgemfile', 'activation', 'setup', 'bundler', 'arbritary', 'default', 'error', 'regardless', 'versionwould', 'making', 'gemfile', 'specific', 'default', 'problem', 'version', 'matchdepends', 'activation', 'default', 'trouble', 'dependendcy', 'difficult', 'issue']",{'issue': 100}
"['ceaeea', 'mergemergedeivid', 'activation', 'default', 'rodriguezproblemlater', 'different', 'conflict', 'version', 'library', 'activation', 'setup', 'original', 'issue', 'default', 'insideactivate', 'default', 'message', 'error', 'reallyproblem', 'diagnosiscould', 'diagnosis', 'betterimplementedseveral', 'concise', 'activatedactivation', 'setup', 'bundler', 'default', 'location', 'exact', 'activatedolder', 'runtime', 'current', 'activates', 'rubygems', 'rspec', 'versiondetailpatch', 'summary', 'message', 'error', 'followingrandomizedexample', 'retriedfailurestandard', 'library', 'activation', 'activates', 'versionfailure', 'errorstringio', 'singleton', 'ipaddr', 'matrix', 'bundle', 'strscan', 'observer', 'emmap', 'reline', 'getoptlong', 'prime', 'fcntl', 'forwardable', 'fileutils', 'ostruct', 'openssl', 'logger', 'psych', 'pstore', 'readline', 'benchmark', 'webrick', 'console', 'timeout', 'tracer', 'fiddle', 'rexml', 'bigdecimalbenchmark', 'installedbenchmark', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerbigdecimal', 'installedbigdecimal', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdelegate', 'installeddelegate', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'emmapdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerfcntl', 'installedfcntl', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerfiddle', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerfileutils', 'installedfileutils', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'forwardable', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlergetoptlong', 'installedgetoptlong', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerconsole', 'installedioconsole', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundleripaddr', 'ipaddr', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerlogger', 'installedlogger', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlermatrix', 'matrix', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'netsmtpdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerobserver', 'installedobserver', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundleropenssl', 'openssl', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'ostructdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerprime', 'prime', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerpstore', 'installedpstore', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerpsych', 'installedpsych', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'readlinedeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'readlinereadline', 'readlineext', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerreline', 'installedreline', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerrexml', 'rexml', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlersingleton', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerstringio', 'installedstringio', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerstrscan', 'installedstrscan', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlertimeout', 'installedtimeout', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlertracer', 'installedtracer', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerwebrick', 'installedwebrick', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'invokingdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlercommanddeivid', 'master', 'bundler', 'versionenumerablebenchmarkbigdecimalbundlerdelegateemmapfcntlfiddlefileutilsforwardablegetoptlongconsoleipaddrloggermatrixobserveropensslostructprimepstorepsychreadlinereadlinerelinerexmlsingletonstringiostrscantimeouttracerwebrickdeivid', 'bundler', 'master', 'rubygems', 'versionbacktracegemspecs', 'quick', 'index', 'marshal', 'generatingcompletegemspecs', 'index', 'marshalindex', 'index', 'prereleaseindex', 'indexdeivid', 'master', 'versiondeivid', 'rsupport', 'bundlerdeivid', 'retry', 'bundler', 'bundle', 'artifice', 'install', 'rsupportdeivid', 'remote', 'bundler', 'index', 'sourceresolvingbenchmark', 'bigdecimalbundler', 'usingfetchinginstallingfetchinginstallingfetchinginstallingdelegate', 'webrickfetchinginstallingfetchinginstallingcomplete', 'gemfile', 'bundlebundle', 'gemnamedeivid', 'master', 'bundler', 'versiondeivid', 'bundlerbenchmark', 'requiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerbigdecimal', 'requiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerdelegate', 'requiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequire', 'emmapdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequire', 'fcntldeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerfiddle', 'requiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequire', 'fileutilsdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequire', 'forwardabledeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlergetoptlong', 'requiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerioconsole', 'requiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequire', 'ipaddrdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequire', 'loggerdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequire', 'matrixdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequire', 'netpopdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequire', 'netsmtpdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerobserver', 'requiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequire', 'openssldeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequire', 'ostructdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequire', 'primedeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequire', 'pstoredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerpsych', 'requiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequire', 'readlinedeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'readlinedeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerreline', 'requiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequire', 'rexmldeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlersingleton', 'requiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerstringio', 'requiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerstrscan', 'requiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlertimeout', 'requiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlertracer', 'requiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequire', 'webrickdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequiredeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerlevel', 'block', 'runtimelevel', 'secondfailureexample', 'failedstandard', 'library', 'activation', 'default', 'runtime', 'activates', 'rspec', 'versionrandomizeddetaildetailduplicate', 'patch', 'output', 'summary', 'default', 'location', 'problem', 'conciserandomizedexample', 'retriedfailurestandard', 'library', 'activation', 'activates', 'versionfailure', 'rubyopt', 'errorbundle', 'invokingactivatingdeivid', 'block', 'bundler', 'rubygemsdeivid', 'synchronize', 'bundler', 'rubygemsdeivid', 'bundler', 'rubygemsdeivid', 'bundler', 'rubygemsdeivid', 'bundler', 'rubygemsdeivid', 'bundler', 'rubygemsdeivid', 'setting', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'configure', 'bundlerdeivid', 'definition', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlercommanddeivid', 'bundler', 'master', 'rubygems', 'versionbacktracegemspecs', 'quick', 'index', 'marshal', 'generatingcompletegemspecs', 'index', 'marshalindex', 'index', 'prereleaseindex', 'indexdeivid', 'master', 'versiondeivid', 'rsupport', 'bundlerdeivid', 'retry', 'bundler', 'bundle', 'artifice', 'install', 'rsupportdeivid', 'remote', 'bundler', 'index', 'sourceresolvingbundler', 'usingfetchinginstallingcomplete', 'gemfile', 'bundlebundle', 'gemnamedeivid', 'master', 'bundler', 'versiondeivid', 'bundlerrequireactivatingdeivid', 'block', 'bundler', 'rubygemsdeivid', 'synchronize', 'bundler', 'rubygemsdeivid', 'bundler', 'rubygemsdeivid', 'bundler', 'rubygemsdeivid', 'bundler', 'rubygemsdeivid', 'bundler', 'rubygemsdeivid', 'setting', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'configure', 'bundlerdeivid', 'definition', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerdeivid', 'gemfile', 'version', 'bundler', 'support', 'default', 'dependency', 'activateddeivid', 'block', 'setup', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'setup', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'bundlerlevel', 'block', 'runtimelevel', 'blocksupportsupportsupportstandard', 'library', 'activates', 'versionfailure', 'rubyopt', 'errordelegate', 'bundle', 'expecteddelegate', 'installeddelegate', 'invokingactivatingdeivid', 'block', 'bundler', 'rubygemsdeivid', 'synchronize', 'bundler', 'rubygemsdeivid', 'bundler', 'rubygemsdeivid', 'bundler', 'rubygemsdeivid', 'bundler', 'rubygemsdeivid', 'bundler', 'rubygemsdeivid', 'setting', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'configure', 'bundlerdeivid', 'definition', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'nameerror', 'constantcommanddeivid', 'bundler', 'master', 'rubygems', 'versionbacktracegemspecs', 'quick', 'index', 'marshal', 'generatingcompletegemspecs', 'index', 'marshalindex', 'index', 'prereleaseindex', 'indexdeivid', 'master', 'versiondeivid', 'rsupport', 'bundlerdeivid', 'retry', 'bundler', 'bundle', 'artifice', 'install', 'rsupportdeivid', 'remote', 'bundler', 'index', 'sourceresolvingbundler', 'usingdelegate', 'delegatecomplete', 'gemfile', 'bundlebundle', 'gemnamedeivid', 'master', 'bundler', 'versiondeivid', 'bundlerdelegate', 'requireactivatingdeivid', 'block', 'bundler', 'rubygemsdeivid', 'synchronize', 'bundler', 'rubygemsdeivid', 'bundler', 'rubygemsdeivid', 'bundler', 'rubygemsdeivid', 'bundler', 'rubygemsdeivid', 'bundler', 'rubygemsdeivid', 'setting', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'configure', 'bundlerdeivid', 'definition', 'bundlerdeivid', 'setup', 'bundlerblockdeivid', 'bundlerdeivid', 'silence', 'nameerror', 'constantlevel', 'block', 'runtimelevel', 'secondfailureexample', 'failedstandard', 'library', 'activation', 'default', 'runtime', 'activates', 'rspec', 'versionstandard', 'library', 'default', 'runtime', 'activates', 'rspec', 'versionrandomizeddetailchoose', 'possible', 'optionactivation', 'breakage', 'default', 'future', 'unintentionaldavid']","{'issue': 100, 'OpenSSL': 100}"
"['style', 'issue', 'fixup']",{'issue': 100}
"['mergemergedeivid', 'master', 'rodriguezproblemcherry', 'bundler', 'issue', 'default', 'versionproblem', 'diagnosisdiagnosisimplementedmerge', 'thing', 'bundler', 'ready', 'right', 'molinillo', 'version', 'supportrelease', 'blockdavid']",{'issue': 100}
"['rodriguez', 'requiresproblemlatest', 'wrong', 'bundler', 'issue', 'rubygems', 'problem', 'version', 'insideproblem', 'diagnosisdelay', 'similar', 'diagnosis', 'default', 'technique', 'possible', 'internal', 'followimplementedremove', 'bunch', 'necessarydavid']",{'issue': 100}
"['aecdbffcemergedeivid', 'release', 'rodriguezproblemrelease', 'problem', 'issue', 'littleimplementedimprove', 'fallback', 'error', 'informational', 'betterdavid']",{'issue': 100}
"['cfebb', 'mergemergedeivid', 'fatkodima', 'directory', 'insecure', 'rodriguez', 'temporaryclosefatkodima']",{'insecure': 100}
"['readline', 'window', 'crash', 'rodriguez', 'properlyproblemunless', 'pipeline', 'azure', 'window', 'workaround', 'problem', 'currentlyproblem', 'point', 'suite', 'tmpdir', 'folderwindowfbafbccccda', 'readline', 'rspec', 'fixedrspecrandomizedstuffdeivid', 'bundlerbundler', 'directory', 'deividexample', 'variable', 'environmentchoose', 'general', 'workarounddavid']",{'crash': 100}
"['readline', 'window', 'crash', 'warning', 'avoidsplatformdeivid', 'bundlerbundler', 'directory']",{'crash': 100}
"['insecure', 'directory']",{'insecure': 100}
"['bcdecebmergedeivid', 'output', 'default', 'rodriguez', 'indirect', 'silencingproblembundler', 'problem', 'default', 'silentbundler', 'ecbeabddeeebundler', 'bundle', 'issue', 'force', 'overridewould', 'solution', 'bundler', 'issue', 'default', 'unset', 'place', 'everytime', 'issuecomment', 'figure', 'series', 'silentwould', 'output', 'bundler', 'trouble', 'seriessetup', 'environment', 'bundler', 'issue', 'variableproblem', 'diagnosissilence', 'diagnosisimplementedshell', 'output', 'default', 'confident', 'error', 'silence', 'review', 'output', 'issue', 'bunch', 'error', 'print', 'success', 'strong', 'actualdavid']",{'issue': 100}
"['caafamergedeivid', 'bundle', 'rodriguez', 'print', 'orien', 'metadataproblemgemspec', 'bundle', 'specification', 'great', 'response', 'rubygems', 'reference', 'information', 'version', 'metadata', 'displayimplementedextra', 'check', 'metadata', 'example', 'information', 'addedbundle', 'rspecrspecrspec', 'summaryrspec', 'homepagedocumentationrspec', 'sourcerspec', 'changelogtracker', 'issue', 'rspecforum', 'rspec', 'mailingrspec', 'installswould', 'align', 'script', 'summary', 'homepage', 'property', 'default', 'betterorien', 'madgwick']",{'issue': 100}
"['mergemergealias', 'command', 'rodriguez', 'deividproblemoutput', 'bundle', 'issue', 'inconstent', 'command', 'install', 'problemproblem', 'diagnosis', 'bundle', 'command', 'redirectsimplementedaware', 'command', 'logicdavid']",{'issue': 100}
"['bundle', 'print', 'metadataprovides', 'example', 'informationbundle', 'rspecrspecrspec', 'summaryrspec', 'homepagedocumentationrspec', 'sourcerspec', 'changelogtracker', 'issue', 'rspecforum', 'rspec', 'mailingrspec', 'installs']",{'issue': 100}
"['bccfdf', 'mergemergedeivid', 'release', 'bundler', 'issue', 'github', 'versionproblem', 'diagnosisgemspec', 'diagnosis', 'default', 'release', 'github', 'versionimplementedchoose']",{'issue': 100}
"['dcbbc', 'mergemergedeivid', 'clean', 'bundle', 'issue', 'clean', 'bundleproblem', 'diagnosisincludes', 'assumes', 'diagnosis', 'possible', 'optionchosedavid']",{'issue': 100}
"['mergemergeimprovement', 'release', 'rodriguez', 'deividproblembundler', 'issue', 'problemstill', 'prerequisite', 'pushedcould', 'message', 'errorrelease', 'github', 'postrequisite', 'prerequisiteproblem', 'diagnosisdiagnosis', 'thing', 'prerequisite', 'rubygems', 'reallyimplementedimprovement', 'release', 'implementdavid']",{'issue': 100}
"['daefc', 'mergemergejeremyevans', 'bundler', 'issue', 'keyword', 'couple', 'separation', 'argumentproblemrecent', 'bundler', 'issue', 'repository', 'keyword', 'positional', 'separate', 'argumentproblem', 'diagnosisbundler', 'warning', 'check', 'causeimplementedignore', 'keyword', 'positional', 'separation', 'request', 'failure', 'possible', 'optionleast', 'amountevans', 'jeremy']",{'issue': 100}
"['bundler', 'issue', 'keyword', 'couple', 'separation', 'argumentissue']",{'issue': 100}
"['bundler', 'issue', 'diagnosis', 'actuallyimplementedensuresamuel', 'segiddins', 'giddins']",{'issue': 100}
"['mergemergedeivid', 'multiplatform', 'rodriguezproblemgemfile', 'bundler', 'resolution', 'gemfiles', 'issue', 'problem', 'multiplatformproblem', 'diagnosisdiagnosis', 'platform', 'start', 'multiplatform', 'support', 'resolvingimplementedrevert', 'relevant', 'commits', 'revisitchoose', 'possible', 'optionchose', 'thingclosedavid']",{'issue': 100}
"['efede', 'mergemergebundler', 'rodriguez', 'default', 'monkeypatch', 'bundler', 'default', 'possible', 'problem', 'removedthingbundler', 'ecfbdeffd', 'supportproblem', 'diagnosisrelative', 'diagnosisimplementedintroduce', 'migrate', 'incorrect']",{'incorrect': 100}
"['mergemergedeivid', 'bundle', 'command', 'rodriguez', 'doctorproblemsimple', 'bundle', 'crash', 'problem', 'doctorbundle', 'doctorgemfile', 'dependencytemplate', 'report', 'errorreport', 'errorquestionfigure', 'thingdeivid', 'bundle', 'command', 'doctor', 'versionhappen', 'expectbundler', 'insteadhappenedsimilar', 'solution', 'issue', 'google', 'stack', 'postedbundler', 'master', 'issue', 'contributingbacktracedeivid', 'enoent', 'errno', 'directory', 'bundler', 'chcek', 'playgrounddeivid', 'block', 'versiondeivid', 'version', 'collectdeivid', 'versiondeivid', 'bundler', 'versiondeivid', 'bundler', 'versiondeivid', 'bundler', 'versiondeivid', 'bundler', 'doctor', 'versiondeivid', 'bundler', 'vendor', 'versiondeivid', 'bundler', 'vendor', 'versiondeivid', 'bundler', 'dispatch', 'vendor', 'versiondeivid', 'bundler', 'dispatch', 'versiondeivid', 'bundler', 'vendor', 'versiondeivid', 'bundler', 'versiondeivid', 'block', 'bundler', 'bundle', 'versiondeivid', 'bundler', 'versiondeivid', 'bundler', 'bundle', 'versiondeivid', 'bundle', 'versiondeivid', 'bundle', 'versionenvironmentbundlerlinux', 'platformrevision', 'linuxdeivid', 'versiondeivid', 'version', 'configrubygemsdeivid', 'chcek', 'bundler', 'playgrounddeivid', 'chcek', 'bundler', 'playgrounddeividdeividdeivid', 'chcek', 'bundler', 'playgroundinstalledrbenvchruby', 'installedbundler', 'metadata', 'buildbuiltfalse', 'version', 'releasedbundler', 'settingdeivid', 'rspec', 'current', 'configdeivid', 'current', 'configdeivid', 'current', 'configdeivid', 'install', 'current', 'configdeivid', 'current', 'configdeivid', 'bundler', 'local', 'chcek', 'playground', 'configgemfilegemfilesourcebyebugremotebyebugplatformdependencybyebugbundledtemplateerror', 'bundler', 'issue', 'report', 'errordirectory', 'bundler', 'issue', 'fbundler', 'fplayground', 'fruby', 'fhome', 'fchcek', 'fcode', 'search', 'fdeividpaste', 'private', 'issue', 'anonymize', 'report', 'template', 'pleasebundler', 'issueproblem', 'diagnosisreality', 'whole', 'diagnosis', 'bundler']","{'crash': 100, 'issue': 100, 'stack': 100}"
"['mergemergedeivid', 'bundle', 'default', 'error', 'rodriguez', 'clearproblemverbose', 'bundle', 'default', 'opening', 'error', 'crash', 'unclear', 'problem', 'supportproblem', 'diagnosisclear', 'diagnosis', 'detects', 'versionchoose', 'default', 'simpler', 'opening', 'support', 'writableclosedavid', 'authoredzehan', 'cnallenzhao']",{'crash': 100}
"['bdafac', 'mergemergedeivid', 'gemfile', 'incorrect', 'rodriguezproblemgemfile', 'section', 'syntax', 'incorrect', 'example', 'problemproblem', 'diagnosissection', 'diagnosis', 'syntax', 'incorrect', 'error', 'building', 'example', 'seemsdeivid', 'versioninline', 'unrecognizedinline', 'unrecognizedinline', 'unrecognizedimplementedcomparison', 'renderedgemfile', 'bundlemaster', 'default', 'specifyexamplesubmodulessubmodule', 'subfolder', 'submodules', 'repository', 'anothersubmodules', 'bundler', 'specify', 'repository', 'expandgemfile', 'bundledefault', 'specify', 'master', 'examplestable', 'branchsubmodulessubmodule', 'subfolder', 'submodules', 'repository', 'anothersubmodules', 'bundler', 'specify', 'repository']",{'incorrect': 100}
"['gemfile', 'incorrect']",{'incorrect': 100}
"['usage', 'incorrect']",{'incorrect': 100}
"['mergemergeresolve', 'platform', 'indirect', 'package', 'segiddinsproblemignore', 'bundle', 'install', 'platform', 'problemclose', 'issue', 'bundlerproblem', 'platform', 'installer', 'package', 'chosesamuel', 'segiddins', 'giddins', 'authoreddavid']",{'issue': 100}
"['aefdf', 'mergemergedeivid', 'bundler', 'robuye', 'rodriguez', 'install', 'inlineproblemvariable', 'bundler', 'issue', 'default', 'respect', 'installs', 'address', 'inline', 'problem', 'describedproblem', 'point', 'bundler', 'inlineimplementedchoose', 'possible', 'optionbundler', 'bundle', 'method', 'bundler', 'issue', 'usingrobuye', 'rulejczyk']",{'issue': 100}
"['compact', 'threadcause', 'thread', 'check']",{'thread': 100}
"['mergemergedeivid', 'shell', 'color', 'option', 'rodriguez', 'bundler', 'issue', 'travis', 'order', 'disablingproblem', 'diagnosisshell', 'diagnosis', 'color', 'bundler', 'instantiates', 'instantiation', 'respect', 'memoizedimplementedshell', 'color', 'instantiate', 'reset', 'properchoose', 'issue', 'state']",{'issue': 100}
"['mergedeivid', 'input', 'swandale', 'colby', 'release', 'rodriguezsupersedesproblemauthentication', 'release', 'rubygems', 'problem', 'lettingproblem', 'diagnosisshell', 'introduce', 'diagnosis', 'output', 'helper', 'release', 'allowimplementedwould', 'bundler', 'issue', 'system', 'kernel', 'comment', 'issuecomment', 'possible', 'optionproblem', 'shell', 'verbose', 'output', 'bundler', 'current', 'update', 'helper', 'release', 'print', 'screen', 'unnecessarywould', 'release', 'print', 'usingbundler', 'release', 'bundle', 'rubyoptrubygem', 'builtversionbuiltalreadypushingmulti', 'factor', 'pleaseplease', 'checkabortedpushingmulti', 'factor', 'pleaseplease', 'checkdeivid', 'bundlerdeivid', 'bundlerdeivid', 'install', 'block', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'vendor', 'bundlerdeivid', 'vendor', 'bundlerdeivid', 'dispatch', 'vendor', 'bundlerdeivid', 'dispatch', 'bundlerdeivid', 'vendor', 'bundlerdeivid', 'bundlerbundler', 'bundle', 'blockdeivid', 'bundlerbundler', 'traceusingbundler', 'release', 'bundle', 'rubyoptbuiltalreadypushingmulti', 'factor', 'pleaseasdfasdfplease', 'checkprevious', 'approach', 'greatdavid', 'authoredcommit', 'cherry']",{'issue': 100}
"['mergemergedeivid', 'input', 'swandale', 'colby', 'release', 'rodriguezsupersedesproblemauthentication', 'release', 'rubygems', 'problem', 'lettingproblem', 'diagnosisshell', 'introduce', 'diagnosis', 'output', 'helper', 'release', 'allowimplementedwould', 'bundler', 'issue', 'system', 'kernel', 'comment', 'issuecomment', 'possible', 'optionproblem', 'shell', 'verbose', 'output', 'bundler', 'current', 'update', 'helper', 'release', 'print', 'screen', 'unnecessarywould', 'release', 'print', 'usingbundler', 'release', 'bundle', 'rubyoptrubygem', 'builtversionbuiltalreadypushingmulti', 'factor', 'pleaseplease', 'checkabortedpushingmulti', 'factor', 'pleaseplease', 'checkdeivid', 'bundlerdeivid', 'bundlerdeivid', 'install', 'block', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'bundlerdeivid', 'vendor', 'bundlerdeivid', 'vendor', 'bundlerdeivid', 'dispatch', 'vendor', 'bundlerdeivid', 'dispatch', 'bundlerdeivid', 'vendor', 'bundlerdeivid', 'bundlerbundler', 'bundle', 'blockdeivid', 'bundlerbundler', 'traceusingbundler', 'release', 'bundle', 'rubyoptbuiltalreadypushingmulti', 'factor', 'pleaseasdfasdfplease', 'checkprevious', 'approach']",{'issue': 100}
"['mergemergedeivid', 'clobber', 'incorrect', 'rodriguez', 'clobber', 'existent', 'problem', 'listedproblem', 'diagnosisclean', 'diagnosis', 'actuallyimplementedclean', 'description', 'clobber']",{'incorrect': 100}
"['issue', 'azureothers', 'azure', 'instancecapture', 'requirement', 'relaxpatch', 'appropriate', 'readline']",{'issue': 100}
"['mergemergedeivid', 'rodriguez', 'issue', 'azureproblemproblem', 'azureproblem', 'diagnosisdiagnosis', 'configuration', 'explicit', 'version', 'updatechoose', 'prevents', 'chosedavid']",{'issue': 100}
"['flakies', 'firstinitial', 'helper', 'behaves', 'rubylibcause', 'changebundler', 'rspecsuccessful', 'environment', 'bundler', 'gemhelper', 'release', 'success', 'report', 'managementconfirm', 'message', 'error', 'failure', 'receiveshell', 'level', 'color', 'bundler', 'false', 'xbcee', 'expectedpushedbundlerbundler', 'level', 'blockrspecissue', 'rspecouter', 'inner', 'aroundouter', 'inner', 'aroundfuture', 'unintuitive', 'changearound', 'failure', 'particular', 'rspecwould', 'value', 'global', 'resetworkaround', 'issue']",{'issue': 100}
"['specific', 'rodriguez', 'betterproblemquite', 'problem', 'specific', 'removedproblem', 'diagnosisclone', 'gemfile', 'directory', 'bundler', 'issue', 'outsideimplementedprevious', 'directory', 'environment', 'variable', 'revert', 'possible', 'optiongemfile', 'bundler', 'issue', 'helper', 'approach', 'withoutdavid']",{'issue': 100}
"['beaabdmergeimprovement', 'rodriguez', 'deivid', 'minorproblemlockfiles', 'incorrect', 'indirect', 'problem', 'clearlyproblem', 'diagnosisunnecessary', 'problem', 'comment', 'consequence']",{'incorrect': 100}
"['incorrect', 'lockfiles', 'sourceincorrect', 'relevant']",{'incorrect': 100}
"['dceeb', 'mergemergedeivid', 'bundle', 'update', 'crash', 'rodriguezproblemwould', 'bundler', 'regression', 'bundle', 'current', 'update', 'platform', 'crash', 'error', 'undefined', 'source', 'nilclass', 'nomethoderrordeivid', 'bundler', 'block', 'versiondeivid', 'bundler', 'versiondeivid', 'bundler', 'versiondeivid', 'block', 'bundler', 'update', 'versiondeivid', 'bundler', 'temporary', 'versiondeivid', 'bundler', 'version', 'updatedeivid', 'bundler', 'vendor', 'versiondeivid', 'bundler', 'vendor', 'versiondeivid', 'bundler', 'dispatch', 'vendor', 'versiondeivid', 'bundler', 'dispatch', 'versiondeivid', 'bundler', 'vendor', 'versiondeivid', 'bundler', 'versiondeivid', 'block', 'bundler', 'bundle', 'versiondeivid', 'bundler', 'versiondeivid', 'bundler', 'bundle', 'versiondeivid', 'bundle', 'versiondeivid', 'bundle', 'versionproblem', 'current', 'platform', 'alwaysimplementedproper', 'handlechoose', 'possible', 'optionchosedavid']",{'crash': 100}
"['updatebundler', 'issue']",{'issue': 100}
"['deivid', 'coverage', 'rodriguez', 'indirect', 'removecontribution', 'reviewingproblemcoverage', 'bundler', 'incorrect', 'subprocesses', 'number', 'codeclimate', 'report', 'problem', 'rubygems', 'removecoverage', 'revisit', 'unitary', 'suite', 'indirect', 'explaineddavid']",{'incorrect': 100}
"['aacead', 'dffaa', 'mergemergedeivid', 'internal', 'rodriguez', 'requiresproblemgemfile', 'feeling', 'error', 'reproduce', 'example', 'report', 'problem', 'default', 'happenproblem', 'diagnosisdiagnosis', 'bundler', 'manipulation', 'endup', 'complicatedimplementedswandale', 'culprit', 'rubygems', 'search', 'practice', 'monkeypatches', 'colby', 'issue', 'possible', 'optionthink', 'chosedavid']",{'issue': 100}
"['mergemergedeivid', 'incorrect', 'helper', 'rodriguez', 'callingcontribution', 'reviewingproblemproblem', 'subprocess', 'makingproblem', 'diagnosisdiagnosis', 'detect', 'failure', 'specific', 'check', 'strategy', 'restore', 'statusdavid']",{'incorrect': 100}
"['mergedeivid', 'normalize', 'rodriguez', 'lockfilesproblembundler', 'problem', 'lockfile', 'versionproblem', 'diagnosiscombination', 'diagnosis', 'different', 'stuff', 'rewrite', 'bundler', 'incorrect', 'rubygems', 'version', 'reproduce', 'localhost', 'install', 'lockfilechoose', 'possible', 'optionreduces', 'chosedavid', 'authoredcommit', 'cherry']",{'incorrect': 100}
"['modern', 'thread']",{'thread': 100}
"['beade', 'mergemergedeivid', 'rodriguez', 'shellsplit', 'configproblemmultiple', 'parameter', 'problemproblem', 'diagnosisdiagnosis', 'bundler', 'issue', 'jeremy', 'possible', 'optionfollowup', 'rubygems', 'properdavid']",{'issue': 100}
"['mergemergedeivid', 'removal', 'setting', 'command', 'rodriguez', 'supportproblem', 'diagnosisdiagnosis', 'thing', 'setting', 'different', 'usingdifferent', 'developer', 'certainsecond', 'cycle', 'setting', 'deprecate', 'value', 'deprecate', 'making', 'workaround', 'expose', 'benefit', 'anyways', 'early', 'extra', 'check', 'particularimplementedremove', 'setting', 'checkchoose', 'simple', 'command', 'clear', 'keepingdavid']",{'expose': 100}
"['symlinkbundler', 'default', 'originalbundler', 'default', 'manifestdifferent', 'incorrect', 'default', 'loadingbundler', 'check']",{'incorrect': 100}
"['incorrect', 'specification']",{'incorrect': 100}
"['mergedeivid', 'rodriguez', 'travisci', 'rubygemsfailure', 'diagnosis', 'environment', 'issue', 'rubygemslatest', 'double', 'environment', 'check', 'rubygems', 'problemlatest', 'practice', 'versiondavid', 'authoredcommit', 'cherry']",{'issue': 100}
"['mergedeivid', 'rodriguez', 'travisci', 'rubygemsfailure', 'diagnosis', 'environment', 'issue', 'rubygemslatest', 'double', 'environment', 'check', 'rubygems', 'problemlatest', 'practice', 'versiondavid', 'authoredcommit', 'cherry']",{'issue': 100}
"['dfccb', 'mergemergedeivid', 'normalize', 'rodriguez', 'lockfilesproblembundler', 'problem', 'lockfile', 'versionproblem', 'diagnosiscombination', 'diagnosis', 'different', 'stuff', 'rewrite', 'bundler', 'incorrect', 'rubygems', 'version', 'reproduce', 'localhost', 'install', 'lockfilechoose', 'possible', 'optionreduces', 'chosedavid']",{'incorrect': 100}
"['cbdff', 'mergemergedeivid', 'setting', 'incompatibility', 'rodriguez', 'question', 'patch', 'createdproblemprevious', 'section', 'generate', 'lockfiles', 'bundler', 'setting', 'reorder', 'churn', 'problem', 'incompatible', 'worldproblem', 'diagnosisgemfile', 'setting', 'deterministic', 'separate', 'section', 'issue', 'source', 'false', 'sourcechoose']",{'issue': 100}
"['dedea', 'mergemergedeivid', 'bundle', 'bundler', 'bundle', 'incorrect', 'parity', 'problem', 'recommendedproblem', 'bundle', 'diagnosisimplementedbundle', 'missingchoose', 'possible', 'optioncurrent']",{'incorrect': 100}
"['cbdbab', 'mergemergedeivid', 'deprecation', 'review', 'swandale', 'bundle', 'colby', 'rodriguez', 'interface', 'configproblembundle', 'interface', 'problem', 'configproblem', 'diagnosisdiagnosisdeprecation', 'bundler', 'bundle', 'incorrect', 'bundle', 'documentation', 'global', 'local', 'unset', 'configactionable', 'deprecation', 'bundle', 'configimplementeddeprecation', 'bundler', 'message', 'deprecate', 'actionable', 'interface', 'versionchoose', 'possible', 'optionbundle']",{'incorrect': 100}
"['incorrect', 'raisemessage', 'class', 'usingcould', 'bundler']",{'incorrect': 100}
"['deprecation', 'horizonbundler', 'incorrect', 'custom', 'source']",{'incorrect': 100}
"['mergemergedeivid', 'gemspec', 'rodriguez', 'subshellingprobleminitial', 'gemspec', 'bundler', 'default', 'issue', 'environment', 'bundler', 'trunk', 'integrationimplementedgemspec', 'current', 'newbie', 'control', 'subshellingchoose', 'possible', 'optioncorrectness', 'gemspec']",{'issue': 100}
"['mergemergedeivid', 'swandale', 'colby', 'rodriguez', 'rubygemsproblemlatest', 'problem', 'greatestproblem', 'diagnosislatest', 'diagnosis', 'security', 'rubygems', 'possible', 'optionchosedavid']",{'Security': 100}
"['dcddfc', 'bffca', 'mergemergedeivid', 'fallback', 'rodriguez', 'indirectproblemresolve', 'unable', 'respect', 'people', 'rspec', 'regardless', 'version', 'discussion', 'example', 'certain', 'problem', 'issue', 'installgemfile', 'minute', 'problem', 'reproducible', 'consistentlysourceberkshelfinstall', 'volume', 'docker', 'libyajl', 'native', 'bundler', 'errorinstall', 'dependsdepends', 'condition', 'reproduce', 'funny', 'guess', 'server', 'specific', 'longerproblem', 'diagnosisreturn', 'diagnosis', 'bundler', 'resolution', 'default', 'possible', 'optioncould', 'matter']",{'issue': 100}
"['issue', 'rubocop']",{'issue': 100}
"['issue', 'rubocop', 'style']",{'issue': 100}
"['abdbafe', 'mergemergeparam', 'deivid', 'janpio', 'rodriguez', 'prependproblemseveral', 'problem', 'windowproblem', 'diagnosisvalue', 'variable', 'environment', 'command', 'macos', 'front', 'linux', 'prependconstruct', 'command', 'deivid', 'parameter', 'environment', 'bundler', 'issue', 'method', 'command', 'rodriguez', 'issuecomment', 'optionalchoose', 'parameter', 'matchfailingclosepiotrowski']",{'issue': 100}
"['colby', 'swandale', 'rodriguez', 'folder', 'pipeline', 'bundler', 'environment', 'azure', 'issue', 'purpose', 'folder', 'pipeline', 'relate', 'supportimplementedfolder', 'pipeline', 'azureswandale', 'colby']",{'issue': 100}
"['enable', 'dependentleave', 'style', 'issue']",{'issue': 100}
"['mergemergedeivid', 'deprecation', 'rodriguezproblemdeprecation', 'problem', 'currentproblem', 'diagnosisdeprecation', 'making', 'diagnosis', 'properlyimplementedtarget', 'deprecation', 'bundler', 'versionprevious', 'deprecation', 'bundler', 'potato', 'banana', 'version', 'expectation', 'single', 'possible', 'optiontarget', 'deprecation', 'green', 'bundler', 'strategy', 'followingalready', 'deprecation', 'bundlerdeprecation', 'bundler', 'beceff', 'incorrect', 'bundle', 'update', 'consoledeprecation', 'bundler', 'incorrect', 'separate', 'requiresdeprecation']",{'incorrect': 100}
"['mergelatest', 'commits', 'bundler', 'issue', 'example', 'rspec', 'fixedproblem', 'diagnosisgemspec', 'bundler', 'issue', 'location', 'cbeddcfeaeccacf', 'fixedinvocation', 'current', 'rspec', 'repository', 'different', 'example', 'possible', 'optionanother', 'option', 'welcomeshibata', 'hiroshi', 'authoredcommit', 'cherry']",{'issue': 100}
"['mergemergelatest', 'commits', 'bundler', 'issue', 'example', 'rspec', 'fixedproblem', 'diagnosisgemspec', 'bundler', 'issue', 'location', 'cbeddcfeaeccacf', 'fixedinvocation', 'current', 'rspec', 'repository', 'different', 'example', 'possible', 'optionanother', 'option', 'welcomeshibata', 'hiroshi']",{'issue': 100}
"['aceacd', 'mergemergeswandale', 'colby', 'window', 'janpio', 'pipeline', 'bundler', 'suite', 'issue', 'failure', 'track', 'improvement', 'window', 'opening', 'clear', 'reallyimplementedbehind', 'applies', 'patch', 'block', 'readline', 'window', 'crash', 'strange', 'implementation', 'rubyinstaller', 'dependencyjunit', 'configuration', 'suite', 'compatible', 'report', 'pipeline', 'azure', 'displaychoose', 'undone', 'choice', 'window', 'problem', 'valid', 'disablingbugfix', 'thing', 'window', 'azure', 'window', 'platform', 'macos', 'linux', 'pipeline', 'greatscript', 'adapt', 'suite', 'complex', 'azurepiotrowski', 'authoredpiotrowski', 'github']","{'issue': 100, 'crash': 100}"
"['cdfcemergesection', 'triage', 'swandale', 'colby', 'issue', 'esasse', 'processswandale', 'colbyerick', 'esasse', 'sasse']",{'issue': 100}
"['mergemergedeivid', 'rodriguez', 'travisci', 'rubygemsproblemfailure', 'diagnosis', 'environment', 'issue', 'rubygemsimplementedlatest', 'double', 'environment', 'check', 'rubygems', 'problemchoose', 'possible', 'optionlatest', 'practice']",{'issue': 100}
"['bundler', 'softer', 'major', 'indirect', 'segiddinsdeprecation', 'error', 'major', 'sharedhelpers', 'indirect', 'actuallypoint', 'bundler', 'issue', 'bullet', 'addressproblem', 'diagnosisdeprecation', 'diagnosis', 'error', 'major', 'versioncommit', 'cherry', 'ddfffedade']",{'issue': 100}
"['section', 'stale', 'issue']",{'issue': 100}
"['crash', 'workaround']",{'crash': 100}
"['mergecommit', 'revert', 'colby', 'swandaleproblemobscure', 'bundler', 'deploys', 'herokurubygems', 'environmentbundler', 'issue', 'causingproblem', 'diagnosisedceecffdcdccc', 'schneemsimplementedbundler', 'revert', 'originalconfirm', 'objectcompression', 'delta', 'objectdelta', 'total', 'version', 'remoteremote', 'bundler', 'dependency', 'remote', 'bundle', 'binstubs', 'deployment', 'metadata', 'remoteremote', 'enable', 'upgrade', 'parallel', 'erubis', 'remotejourney', 'tzinfo', 'remoteactiverecord', 'activeresource', 'remotebundler', 'remote', 'source', 'coffeescript', 'script', 'coffee', 'script', 'coffee', 'uglifier', 'remotecomplete', 'gemfile', 'bundle', 'remotedevelopment', 'group', 'remote', 'bundle', 'vendor', 'installedinstall', 'message', 'remoteinstall', 'remoteinstall', 'remoteinstall', 'pipeline', 'asset', 'precompile', 'asset', 'remoteconfig', 'deprecation', 'rakefile', 'myplugin', 'remote', 'initializers', 'bundle', 'warning', 'style', 'release', 'plugins', 'vendor', 'support', 'removedconfig', 'deprecation', 'rakefile', 'myplugin', 'remote', 'initializers', 'bundle', 'warning', 'style', 'release', 'plugins', 'vendor', 'support', 'removedconfig', 'deprecation', 'rakefile', 'myplugin', 'remote', 'initializers', 'bundle', 'warning', 'style', 'release', 'plugins', 'vendor', 'support', 'removedconfig', 'deprecation', 'rakefile', 'myplugin', 'remote', 'initializers', 'bundle', 'warning', 'style', 'release', 'plugins', 'vendor', 'support', 'removedprecompilation', 'asset', 'remoteremotegemfile', 'injection', 'plugin', 'remoteremoteprocfile', 'default', 'remote', 'process', 'recommenddefault', 'server', 'article', 'remoteremoteremoteprocess', 'remotedefault', 'buildpack', 'remote', 'glacial', 'remote', 'upgrade', 'stack', 'instructionlatest', 'article', 'remoteglacial', 'ravinemaster', 'branchswandale', 'colby', 'authoredcommit', 'cherry', 'cbabacbfbbfaad']","{'issue': 100, 'injection': 100, 'stack': 100}"
"['mergecommit', 'revert', 'colby', 'swandaleproblemobscure', 'bundler', 'deploys', 'herokurubygems', 'environmentbundler', 'issue', 'causingproblem', 'diagnosisedceecffdcdccc', 'schneemsimplementedbundler', 'revert', 'originalconfirm', 'objectcompression', 'delta', 'objectdelta', 'total', 'version', 'remoteremote', 'bundler', 'dependency', 'remote', 'bundle', 'binstubs', 'deployment', 'metadata', 'remoteremote', 'enable', 'upgrade', 'parallel', 'erubis', 'remotejourney', 'tzinfo', 'remoteactiverecord', 'activeresource', 'remotebundler', 'remote', 'source', 'coffeescript', 'script', 'coffee', 'script', 'coffee', 'uglifier', 'remotecomplete', 'gemfile', 'bundle', 'remotedevelopment', 'group', 'remote', 'bundle', 'vendor', 'installedinstall', 'message', 'remoteinstall', 'remoteinstall', 'remoteinstall', 'pipeline', 'asset', 'precompile', 'asset', 'remoteconfig', 'deprecation', 'rakefile', 'myplugin', 'remote', 'initializers', 'bundle', 'warning', 'style', 'release', 'plugins', 'vendor', 'support', 'removedconfig', 'deprecation', 'rakefile', 'myplugin', 'remote', 'initializers', 'bundle', 'warning', 'style', 'release', 'plugins', 'vendor', 'support', 'removedconfig', 'deprecation', 'rakefile', 'myplugin', 'remote', 'initializers', 'bundle', 'warning', 'style', 'release', 'plugins', 'vendor', 'support', 'removedconfig', 'deprecation', 'rakefile', 'myplugin', 'remote', 'initializers', 'bundle', 'warning', 'style', 'release', 'plugins', 'vendor', 'support', 'removedprecompilation', 'asset', 'remoteremotegemfile', 'injection', 'plugin', 'remoteremoteprocfile', 'default', 'remote', 'process', 'recommenddefault', 'server', 'article', 'remoteremoteremoteprocess', 'remotedefault', 'buildpack', 'remote', 'glacial', 'remote', 'upgrade', 'stack', 'instructionlatest', 'article', 'remoteglacial', 'ravinemaster', 'branchswandale', 'colby', 'authoredcommit', 'cherry', 'cbabacbfbbfaad']","{'issue': 100, 'injection': 100, 'stack': 100}"
"['cdecd', 'mergemergecommit', 'revert', 'colby', 'swandaleproblemobscure', 'bundler', 'deploys', 'herokurubygems', 'environmentbundler', 'issue', 'causingproblem', 'diagnosisedceecffdcdccc', 'schneemsimplementedbundler', 'revert', 'originalconfirm', 'objectcompression', 'delta', 'objectdelta', 'total', 'version', 'remoteremote', 'bundler', 'dependency', 'remote', 'bundle', 'binstubs', 'deployment', 'metadata', 'remoteremote', 'enable', 'upgrade', 'parallel', 'erubis', 'remotejourney', 'tzinfo', 'remoteactiverecord', 'activeresource', 'remotebundler', 'remote', 'source', 'coffeescript', 'script', 'coffee', 'script', 'coffee', 'uglifier', 'remotecomplete', 'gemfile', 'bundle', 'remotedevelopment', 'group', 'remote', 'bundle', 'vendor', 'installedinstall', 'message', 'remoteinstall', 'remoteinstall', 'remoteinstall', 'pipeline', 'asset', 'precompile', 'asset', 'remoteconfig', 'deprecation', 'rakefile', 'myplugin', 'remote', 'initializers', 'bundle', 'warning', 'style', 'release', 'plugins', 'vendor', 'support', 'removedconfig', 'deprecation', 'rakefile', 'myplugin', 'remote', 'initializers', 'bundle', 'warning', 'style', 'release', 'plugins', 'vendor', 'support', 'removedconfig', 'deprecation', 'rakefile', 'myplugin', 'remote', 'initializers', 'bundle', 'warning', 'style', 'release', 'plugins', 'vendor', 'support', 'removedconfig', 'deprecation', 'rakefile', 'myplugin', 'remote', 'initializers', 'bundle', 'warning', 'style', 'release', 'plugins', 'vendor', 'support', 'removedprecompilation', 'asset', 'remoteremotegemfile', 'injection', 'plugin', 'remoteremoteprocfile', 'default', 'remote', 'process', 'recommenddefault', 'server', 'article', 'remoteremoteremoteprocess', 'remotedefault', 'buildpack', 'remote', 'glacial', 'remote', 'upgrade', 'stack', 'instructionlatest', 'article', 'remoteglacial', 'ravinemaster', 'branchswandale', 'colby']","{'issue': 100, 'injection': 100, 'stack': 100}"
"['unreachablebundler', 'issue']",{'issue': 100}
"['mergemergedeivid', 'refactorings', 'state', 'rodriguez', 'resetproblemdependent', 'order', 'problem', 'takingproblem', 'variable', 'sometimesdebug', 'insidemultiple', 'bundle', 'gemfiles', 'install', 'unnecessaryimplementedavoid', 'bundler', 'helper', 'state', 'reorder', 'bababadefca', 'refactor', 'reset', 'unnecessarychoose', 'possible', 'optionalleviate', 'issue']",{'issue': 100}
"['mergemergeraketask', 'agnostic', 'leoarnold', 'segiddinswindow', 'contribution', 'support', 'segiddinsbundler', 'issue', 'issuecommentcommit', 'introduces', 'firstdirectory', 'agnostic', 'settingproblemproblem', 'diagnosisstyle', 'concatenation', 'systemimplementedsince', 'devicearnold', 'github']",{'issue': 100}
"['raketask', 'agnosticwindow', 'contribution', 'support', 'segiddinsbundler', 'issue', 'issuecommentcommit', 'setting', 'piece']",{'issue': 100}
"['mergedeivid', 'deprecation', 'bundle', 'rodriguezproblemdeprecation', 'incorrect', 'bundle', 'message', 'bundle', 'insteadresolvingdeivid', 'bundle', 'argument', 'errorusage', 'bundleproblem', 'diagnosisdeprecation', 'diagnosis', 'replacement', 'bundle', 'messageimplementedappropriate', 'command', 'alternative', 'originalchoose', 'possible', 'optioncommand', 'print', 'friendlydavid', 'authoredcommit', 'cherry', 'baaeadaecfda']",{'incorrect': 100}
"['mergedeivid', 'rodriguez', 'assertion', 'couple', 'placepresent', 'bundler', 'addedwould', 'travisci', 'issue', 'assertion', 'environmental', 'seemsexclusion', 'diagnosisassertion', 'restore', 'environmentfuture', 'seemsdavid', 'authoredcommit', 'cherry']",{'issue': 100}
"['segiddinscorrect', 'check', 'writableproblemdespite', 'permission', 'bundler', 'createrecent', 'issue', 'problem', 'versionproblem', 'diagnosisdirectory', 'parent', 'existent', 'check', 'positive', 'parent', 'check', 'false', 'nearestimplementedwritability', 'possible', 'optionreturn', 'succinct', 'implementcommit', 'cherry', 'caafacfc']","{'permission': 100, 'issue': 100}"
"['fdadffcmergedeivid', 'deprecation', 'bundle', 'rodriguezproblemdeprecation', 'incorrect', 'bundle', 'message', 'bundle', 'insteadresolvingdeivid', 'bundle', 'argument', 'errorusage', 'bundleproblem', 'diagnosisdeprecation', 'diagnosis', 'replacement', 'bundle', 'messageimplementedappropriate', 'command', 'alternative', 'originalchoose', 'possible', 'optioncommand', 'print']",{'incorrect': 100}
"['indirectmajor', 'resolver', 'updatecontribution', 'problemstart', 'diagnosisclose', 'issue', 'bundlerfeaturecommit', 'cherry']",{'issue': 100}
"['bundler', 'swandale', 'colby', 'global', 'append', 'local', 'problem', 'configclose', 'issue', 'issuecomment', 'bundlerproblem', 'diagnosislevel', 'diagnosis', 'setting', 'configuration', 'regardlessimplementedbundler', 'appends', 'scopechoose', 'possible', 'optioninstall', 'chosecommit', 'cherry']",{'issue': 100}
"['agrim', 'swandale', 'colby', 'versionflexibility', 'bundle', 'prefix', 'versionproblembundler', 'bundle', 'issue', 'pessimistic', 'comment', 'accordingproblem', 'flexibility', 'strict', 'declarationimplementedaddingchoose', 'suggestion', 'bundle', 'pessimistic', 'experiment', 'lockfile', 'version', 'lockedaddresscommit', 'cherry']",{'issue': 100}
"['swandale', 'colby', 'joelvhgemfile', 'bundle', 'update', 'option', 'addedcontribution', 'reviewingproblemgemfile', 'bundle', 'alternate', 'issue', 'update', 'specify', 'specifies', 'install', 'problem', 'configproblem', 'diagnosissimplest', 'solution', 'diagnosis', 'override', 'environment', 'bundler', 'setting', 'bundle', 'parity', 'update', 'diagnose', 'configimplementedgemfile', 'bundle', 'parity', 'update', 'option', 'installchoose', 'possible', 'optiondirect', 'environment', 'gemfiles', 'issue', 'alternative', 'updatingconfig', 'environment', 'setting', 'bundler', 'issue', 'variable', 'overridecommit', 'cherry', 'aeddbfdfbbfdb']",{'issue': 100}
"['ajwann', 'swandale', 'colby', 'check', 'doctordoctor', 'command', 'permission', 'checkcontribution', 'reviewingproblemproblempermission', 'bundler', 'bundle', 'check', 'folder', 'doctorwritten', 'readable', 'warning', 'writable', 'folderimplementedprivate', 'error', 'print', 'folderbundler', 'chosecommit', 'cherry', 'fedadbfeccfedbd']",{'permission': 100}
"['mergevoxik', 'output', 'openssl', 'information', 'segiddinssingle', 'output', 'availability', 'check', 'openssl', 'error', 'scanner', 'pleaseerrorbundler', 'share', 'implies', 'openssl', 'rubygem', 'callingvalue', 'bundler', 'property', 'share', 'opensslondruch', 'vondruch', 'authoredcommit', 'cherry', 'debdffddddeffce']",{'OpenSSL': 100}
"['extra', 'platform', 'segiddinsfilter', 'definition', 'platform', 'resolvingproblemwould', 'specific', 'platform', 'problem', 'lockfileclose', 'issue', 'bundlerproblem', 'diagnosisdiagnosis', 'platform', 'activates', 'resolver', 'sinceimplementedfilter', 'specsetchoose', 'possible', 'optionwheel', 'inventingcommit', 'cherry', 'bfeacbaabee']",{'issue': 100}
"['indirect', 'arbonapguidance', 'reflect', 'check', 'update', 'revisedcontribution', 'reflect', 'bundler', 'changeproblem', 'diagnosisdiagnosisbunder', 'documentation', 'gitignore', 'explainingimplementedgemfile', 'section', 'bundle', 'update', 'installchoose', 'possible', 'optionchosebundler', 'issue', 'addresscommit', 'cherry']",{'issue': 100}
"['mergemergedeivid', 'rodriguez', 'assertion', 'couple', 'placepresent', 'bundler', 'addedwould', 'travisci', 'issue', 'assertion', 'environmental', 'seemsproblem', 'diagnosisexclusion', 'diagnosisimplementedassertion', 'restore', 'environmentchoose', 'possible', 'optionfuture']",{'issue': 100}
"['mergemergevoxik', 'output', 'openssl', 'information', 'segiddinssingle', 'output', 'availability', 'check', 'openssl', 'error', 'scanner', 'pleaseerrorbundler', 'share', 'implies', 'openssl', 'rubygem', 'callingvalue', 'bundler', 'property', 'share', 'opensslondruch', 'vondruch']",{'OpenSSL': 100}
"['mergemergeswandale', 'switch', 'colby', 'mergebots', 'japaric', 'permission', 'barosl', 'mergebot', 'servo', 'bundler', 'inconvenient', 'problem', 'updateproblem', 'diagnosispermission', 'mergebot', 'diagnosis', 'migrate', 'deploy', 'website', 'state', 'webapp', 'githubimplementedmodify', 'bundler', 'configuration', 'maybeprevious', 'mergebot', 'issue', 'bundlerbot', 'comment', 'exact', 'interfacechoose', 'permission', 'mergebot', 'burden', 'deploy', 'maintenance', 'interface', 'updatingandre']","{'permission': 100, 'issue': 100}"
"['initial', 'issue', 'implementation']",{'issue': 100}
"['incorrect', 'changelog']",{'incorrect': 100}
"['bundler', 'swandale', 'colby', 'loaderror', 'bundleproblemgemfile', 'application', 'bundler', 'recent', 'default', 'installs', 'rubygems', 'version', 'loaderror', 'bundler', 'bundle', 'suite', 'error', 'executingbundler', 'travis', 'loaderror', 'bundlesetup', 'environment', 'bundler', 'bundle', 'current', 'problem', 'versionrubyopt', 'rbundler', 'setupbundler', 'local', 'bundle', 'rubylibgemspec', 'directory', 'bundler', 'default', 'rubygems', 'versiongemspec', 'figure', 'bundler', 'bundle', 'default', 'activate', 'rubygems', 'install', 'rubylib', 'overrulesweird', 'ultimatelyblownproblem', 'diagnosisimplementedbundle', 'executable', 'check', 'insidechoose', 'patch', 'solution', 'issue', 'refactor', 'loaderror', 'seemscommit', 'cherry']",{'issue': 100}
"['swandale', 'eregon', 'colby', 'mergetruffleruby', 'supporttruffleruby', 'supportjruby', 'insensitive', 'place', 'codebaseincludes', 'truffleruby', 'bundler', 'issue', 'release', 'oracle', 'separatecommit', 'cherry', 'dadbdfdfafd']","{'Sensitive': 90, 'issue': 100}"
"['autoload', 'eregon', 'simplify', 'segiddinsautoload', 'constant', 'bundler', 'check', 'deprecatedefinedbundler', 'issue', 'check', 'deprecate', 'definedwould', 'autoload', 'return', 'undefined', 'complex', 'autoload', 'implementationbundler', 'issue', 'rubiniusproblembundler', 'truffleruby', 'withoutexpect', 'simpler', 'implementation', 'corner', 'leastproblem', 'diagnosischoose', 'possible', 'optionsimple', 'bundler', 'addedcommit', 'cherry']",{'issue': 100}
"['swandale', 'colby', 'checkcheck', 'searchmaybe', 'scanner', 'issue', 'coverityerrorvalue', 'bundler', 'share', 'search', 'rubygemvalue', 'bundler', 'property', 'share', 'search', 'rubygemsearchdependencysearchcommit', 'cherry']",{'issue': 100}
"['cbfbc', 'mergebundler', 'swandale', 'colby', 'loaderror', 'bundleproblemgemfile', 'application', 'bundler', 'recent', 'default', 'installs', 'rubygems', 'version', 'loaderror', 'bundler', 'bundle', 'suite', 'error', 'executingbundler', 'travis', 'loaderror', 'bundlesetup', 'environment', 'bundler', 'bundle', 'current', 'problem', 'versionrubyopt', 'rbundler', 'setupbundler', 'local', 'bundle', 'rubylibgemspec', 'directory', 'bundler', 'default', 'rubygems', 'versiongemspec', 'figure', 'bundler', 'bundle', 'default', 'activate', 'rubygems', 'install', 'rubylib', 'overrulesweird', 'ultimatelyblownproblem', 'diagnosisimplementedbundle', 'executable', 'check', 'insidechoose', 'patch', 'solution', 'issue', 'refactor']",{'issue': 100}
"['issue', 'loaderror']",{'issue': 100}
"['afcdefswandale', 'eregon', 'colby', 'mergetruffleruby', 'supporttruffleruby', 'supportjruby', 'insensitive', 'place', 'codebaseincludes', 'truffleruby', 'bundler', 'issue', 'release', 'oracle']","{'Sensitive': 90, 'issue': 100}"
"['aaeac', 'mergeautoload', 'eregon', 'simplify', 'segiddinsautoload', 'constant', 'bundler', 'check', 'deprecatedefinedbundler', 'issue', 'check', 'deprecate', 'definedwould', 'autoload', 'return', 'undefined', 'complex', 'autoload', 'implementationbundler', 'issue', 'rubiniusproblembundler', 'truffleruby', 'withoutexpect', 'simpler', 'implementation', 'corner', 'leastproblem', 'diagnosischoose', 'possible', 'optionsimple', 'bundler']",{'issue': 100}
"['constant', 'bundler', 'check', 'deprecatedefinedbundler', 'issue', 'check', 'deprecate', 'definedwould', 'autoload', 'return', 'undefined', 'complex', 'autoload', 'implementationbundler', 'issueissue', 'rubinius']",{'issue': 100}
"['swandale', 'colby', 'checkcheck', 'searchmaybe', 'scanner', 'issue', 'coverityerrorvalue', 'bundler', 'share', 'search', 'rubygemvalue', 'bundler', 'property', 'share', 'search', 'rubygemsearchdependencysearch']",{'issue': 100}
"['information', 'openssl', 'output']",{'OpenSSL': 100}
"['mergemerge', 'bundler', 'message', 'conflict', 'indirect', 'segiddinsconflict', 'message', 'version', 'cocoapodsproblembundler', 'message', 'problem', 'versionclose', 'issue', 'bundlerclose', 'issue', 'bundlerproblem', 'diagnosiswhole', 'diagnosis', 'requirement', 'contribute', 'bunch', 'super', 'weird', 'bundler', 'message', 'irrelevant', 'conflict', 'minimal', 'improves', 'redundant', 'versionchoose', 'possible', 'optionchose']",{'issue': 100}
"['stack', 'gemhelper', 'status', 'process']",{'stack': 100}
"['mergemerge', 'bundler', 'swandale', 'colby', 'global', 'append', 'local', 'problem', 'configclose', 'issue', 'issuecomment', 'bundlerproblem', 'diagnosislevel', 'diagnosis', 'setting', 'configuration', 'regardlessimplementedbundler', 'appends', 'scopechoose', 'possible', 'optioninstall']",{'issue': 100}
"['eeeaecmerge', 'bundler', 'extra', 'platform', 'segiddinsfilter', 'definition', 'platform', 'resolvingproblemwould', 'specific', 'platform', 'problem', 'lockfileclose', 'issue', 'bundlerproblem', 'diagnosisdiagnosis', 'platform', 'activates', 'resolver', 'sinceimplementedfilter', 'specsetchoose', 'possible', 'optionwheel']",{'issue': 100}
"['gemfile', 'forestgagnon', 'refine', 'source', 'segiddinsgotcha', 'explicit', 'warning', 'sourcebundler', 'issuegemfile', 'basis', 'documentation', 'whenever', 'block', 'recommendation', 'warning', 'introduce', 'block', 'merit', 'warning', 'behavior', 'security', 'issue', 'potential', 'source', 'gotcha', 'present', 'documentation', 'global', 'issue', 'behavior', 'source', 'unclear', 'describedproblem', 'diagnosiswould', 'helpfulimplementeddocumentationchoose', 'bundler', 'documentation', 'issue', 'preferredmultiple', 'warning', 'foundinstalledfoundrequirement', 'install', 'uninstall', 'deleteblock', 'dockerfile', 'issue', 'reproduces', 'sourcedockerfilealpineworkdirsourcesourcefattrgemfileinstall', 'bundle', 'verboseinitial', 'warning', 'ambiguity', 'reason', 'source', 'installlocal', 'bundleinstall', 'bundlegemfilefunction', 'individual', 'dockerfile', 'issue', 'reproduces', 'source', 'directivedockerfilealpineworkdirsourcefattr', 'sourcegemfileinstall', 'bundle', 'verboseinitial', 'warning', 'ambiguity', 'reason', 'source', 'installlocal', 'bundleinstall', 'bundlegemfilecommit', 'cherry']","{'Security': 100, 'issue': 100}"
"['bundler', 'swandale', 'colby', 'mkdirbundler', 'force', 'bundler', 'folder', 'install', 'current', 'master', 'temporary', 'functionality', 'addedproblem', 'diagnosisbundler', 'folder', 'permission', 'creatingbundler', 'vagrant', 'localhost', 'yioraketotalvagrantdrwxrimplementedthough', 'bundler', 'option', 'usingcommit', 'cherry', 'fdcabcacce']",{'permission': 100}
"['segiddinsgemfile', 'readingproblemwould', 'gemfile', 'permission', 'issue', 'template', 'problembundler', 'issueimplementedgemfile', 'readingcommit', 'cherry', 'fadbbfebcada']","{'permission': 100, 'issue': 100}"
"['eefaaegemfile', 'forestgagnon', 'refine', 'source', 'segiddinsgotcha', 'explicit', 'warning', 'sourcebundler', 'issuegemfile', 'basis', 'documentation', 'whenever', 'block', 'recommendation', 'warning', 'introduce', 'block', 'merit', 'warning', 'behavior', 'security', 'issue', 'potential', 'source', 'gotcha', 'present', 'documentation', 'global', 'issue', 'behavior', 'source', 'unclear', 'describedproblem', 'diagnosiswould', 'helpfulimplementeddocumentationchoose', 'bundler', 'documentation', 'issue', 'preferredmultiple', 'warning', 'foundinstalledfoundrequirement', 'install', 'uninstall', 'deleteblock', 'dockerfile', 'issue', 'reproduces', 'sourcedockerfilealpineworkdirsourcesourcefattrgemfileinstall', 'bundle', 'verboseinitial', 'warning', 'ambiguity', 'reason', 'source', 'installlocal', 'bundleinstall', 'bundlegemfilefunction', 'individual', 'dockerfile', 'issue', 'reproduces', 'source', 'directivedockerfilealpineworkdirsourcefattr', 'sourcegemfileinstall', 'bundle', 'verboseinitial', 'warning', 'ambiguity', 'reason', 'source', 'installlocal', 'bundleinstall', 'bundlegemfile']","{'Security': 100, 'issue': 100}"
"['daeadbundle', 'readme', 'bundle', 'rspec', 'install', 'guideproblemcommand', 'bundle', 'diagnosisavailable', 'gemfile', 'simple', 'bundle', 'append', 'commandimplementedreadme', 'possible', 'optionprovides', 'command', 'simple', 'exposure']",{'Exposure': 100}
"['bbccc', 'mergemerge', 'bundler', 'softer', 'major', 'indirect', 'segiddinsdeprecation', 'error', 'major', 'sharedhelpers', 'indirect', 'actuallypoint', 'bundler', 'issue', 'bullet', 'addressproblem', 'diagnosisdeprecation', 'diagnosis', 'error', 'major', 'version']",{'issue': 100}
"['segiddins', 'conservativegroup', 'conservative', 'respect', 'conservative', 'specific', 'method', 'unlock', 'dependency', 'definition', 'ensure', 'update', 'dependency', 'group', 'ensuresbundler', 'issue']",{'issue': 100}
"['mergemerge', 'bundler', 'swandale', 'colby', 'mkdirbundler', 'force', 'bundler', 'folder', 'install', 'current', 'master', 'temporary', 'functionality', 'addedproblem', 'diagnosisbundler', 'folder', 'permission', 'creatingbundler', 'vagrant', 'localhost', 'yioraketotalvagrantdrwxrimplementedthough', 'bundler', 'option']",{'permission': 100}
"['ceefdeamerge', 'agrim', 'swandale', 'colby', 'versionflexibility', 'bundle', 'prefix', 'versionproblembundler', 'bundle', 'issue', 'pessimistic', 'comment', 'accordingproblem', 'flexibility', 'strict', 'declarationimplementedaddingchoose', 'suggestion', 'bundle', 'pessimistic', 'experiment', 'lockfile', 'version', 'lockedaddress']",{'issue': 100}
"['issue', 'order', 'reset', 'event']",{'issue': 100}
"['segiddinsgemfile', 'readingproblemwould', 'gemfile', 'permission', 'issue', 'template', 'problembundler', 'issueimplementedgemfile', 'reading']","{'permission': 100, 'issue': 100}"
"['segiddinscorrect', 'check', 'writableproblemdespite', 'permission', 'bundler', 'createrecent', 'issue', 'problem', 'versionproblem', 'diagnosisdirectory', 'parent', 'existent', 'check', 'positive', 'parent', 'check', 'false', 'nearestimplementedwritability', 'possible', 'optionreturn']","{'permission': 100, 'issue': 100}"
"['check', 'writablecheck', 'directory', 'methodbundler', 'withinparent', 'existent', 'howeverwould', 'directory', 'bundler', 'parent', 'check', 'parent', 'withinpositive', 'falsewritability', 'issue']",{'issue': 100}
"['syntax', 'incorrect', 'heredoc']",{'incorrect': 100}
"['bundler', 'colby', 'bundler', 'issue', 'stable', 'travis', 'stubbedimplementedfirst', 'bundler', 'rspec', 'usingcommit', 'cherry', 'bcbfcbeebfdaeb']",{'issue': 100}
"['bundler', 'tduffield', 'check', 'segiddinscharacter', 'length', 'checkcontribution', 'systemlonger', 'making', 'example', 'interpreterhabitat', 'resultcharacter', 'regex', 'limit', 'preventsotherwise', 'binary', 'validimplementedcharacter', 'double', 'check', 'possible', 'optioncommit', 'cherry', 'fbeaddaebbfee']",{'length': 100}
"['bundler', 'swandale', 'colby', 'rubymorillobundler', 'document', 'order', 'settingpriority', 'graph', 'order', 'information', 'configcontribution', 'reviewingproblemproblembundler', 'setting', 'issue', 'order', 'confusionbundler', 'configuration', 'command', 'interactapplication', 'bundler', 'configuration', 'retrieves', 'local', 'configconfig', 'directory', 'environmentorderproblem', 'diagnosisdiagnosisdocument', 'setting', 'bundle', 'separate', 'config', 'complete', 'information', 'reflect', 'colby', 'issue', 'apparent', 'graph', 'neededimplementedpriority', 'setting', 'order', 'verifybundler', 'configuration', 'command', 'interactbundler', 'setting', 'order', 'configurationlocal', 'configvariable', 'environmentalglobal', 'configbundler', 'default', 'configchoose', 'possible', 'optionchoseclear', 'document', 'easiercommit', 'cherry', 'bbecccaedfdbcad']",{'issue': 100}
"['segiddins', 'explainguide', 'output', 'explainresolvecomment', 'method', 'helpfulbundle', 'reading', 'newlycommentguide', 'generation', 'messageexamplebundler', 'bundlecreatingcreate', 'gemfilecreatecreatecreatecreate', 'rakefilecreateconsole', 'createcreate', 'setupcreatenesaulov', 'information', 'visit', 'guidecommit', 'cherry']",{'generation': 100}
"['swandale', 'nesaulov', 'colby', 'mergefailure', 'exception', 'backtraceresolveproblemdetail', 'readable', 'issue', 'report', 'templateproblem', 'diagnosisdiagnosis', 'safetyimplementedwhether', 'backtrace', 'check', 'sendingchoose', 'possible', 'optionchosecommit', 'cherry', 'fcabbefceedcdac']",{'issue': 100}
"['bundler', 'swandale', 'colby', 'segiddins', 'filesystem', 'temporary', 'template', 'problemclose', 'issue', 'bundlerproblem', 'diagnosisdiagnosis', 'writingimplementedusagecommit', 'cherry']",{'issue': 100}
"['indirectdocument', 'bundle', 'gemfilecontribution', 'reviewingproblemenhancement', 'bundle', 'issue', 'requestproblem', 'gemfile', 'section', 'description', 'webpage', 'bundle', 'string', 'brief', 'frozenchoose', 'possible', 'optionprevious', 'discussion', 'reflect', 'regardingcommit', 'cherry']",{'issue': 100}
"['swandale', 'colby', 'bundle', 'nholden', 'doctorbundle', 'doctorproblembundler', 'bundle', 'issue', 'command', 'doctorproblem', 'diagnosisformat', 'description', 'bundler', 'bundle', 'documentation', 'doctor', 'showedimplementedbundle', 'doctor', 'addedchoose', 'bundler', 'documentation', 'master', 'choseeverycommit', 'cherry']",{'issue': 100}
"['swandale', 'colby', 'check', 'nilsdingwriteable', 'directory', 'current', 'checkproblemdirectory', 'bundler', 'bundle', 'error', 'address', 'print', 'eacces', 'segiddins', 'problem', 'insideproblem', 'diagnosisbundler', 'issue', 'comment', 'issuecommentimplementedgemfile', 'directory', 'current', 'check', 'error', 'writeable', 'print', 'createchoose', 'simple', 'chosecommit', 'cherry', 'cbcdafcabeedd']",{'issue': 100}
"['bundler', 'client', 'colby', 'index', 'indirectclient', 'error', 'index', 'corruption', 'compactbundler', 'client', 'crash', 'index', 'compact', 'exception', 'raisebundler', 'exceptioncommit', 'cherry']",{'crash': 100}
"['bundler', 'error', 'friendly', 'segiddinsfallback', 'message', 'error', 'friendlyerrors', 'friendly', 'originalproblemwould', 'bundler', 'issue', 'diagnosingproblem', 'diagnosisfallback', 'diagnosis', 'errorimplementederror', 'raising', 'originalcommit', 'cherry']",{'issue': 100}
"['bundler', 'swandale', 'colby', 'auditmanpages', 'auditproblemclose', 'issue', 'bundlersection', 'diagnosis', 'updatecommit', 'cherry']",{'issue': 100}
"['warning', 'rubygemscontribution', 'warning', 'trunkreturn', 'warning', 'location', 'issue', 'warning', 'update', 'trunk', 'securityimplementedchoose', 'possible', 'optionunawarecommit', 'cherry', 'faecdcdecfaafd']",{'issue': 100}
"['ceeeab', 'mergebundler', 'colby', 'bundler', 'issue', 'stable', 'travis', 'stubbedimplementedfirst', 'bundler']",{'issue': 100}
"['bbebamerge', 'bundler', 'tduffield', 'check', 'segiddinscharacter', 'length', 'checkcontribution', 'systemlonger', 'making', 'example', 'interpreterhabitat', 'resultcharacter', 'regex', 'limit', 'preventsotherwise', 'binary', 'validimplementedcharacter', 'double', 'check', 'possible', 'option']",{'length': 100}
"['character', 'length', 'systemlonger', 'making', 'example', 'interpreterhabitat', 'resultcharacter', 'regex', 'limit', 'preventsotherwise', 'binary', 'validcharacter', 'double', 'check']",{'length': 100}
"['cadfb', 'fbbeb', 'mergepatch', 'bundler', 'swandale', 'colby', 'rubymorillobundler', 'document', 'order', 'settingpriority', 'graph', 'order', 'information', 'configcontribution', 'reviewingproblemproblembundler', 'setting', 'issue', 'order', 'confusionbundler', 'configuration', 'command', 'interactapplication', 'bundler', 'configuration', 'retrieves', 'local', 'configconfig', 'directory', 'environmentorderproblem', 'diagnosisdiagnosisdocument', 'setting', 'bundle', 'separate', 'config', 'complete', 'information', 'reflect', 'colby', 'issue', 'apparent', 'graph', 'neededimplementedpriority', 'setting', 'order', 'verifybundler', 'configuration', 'command', 'interactbundler', 'setting', 'order', 'configurationlocal', 'configvariable', 'environmentalglobal', 'configbundler', 'default', 'configchoose', 'possible', 'optionchoseclear', 'document']",{'issue': 100}
"['issue', 'rubocop', 'plugin', 'installer', 'workaround']",{'issue': 100}
"['segiddins', 'explainguide', 'output', 'explainresolveproblemcomment', 'method', 'helpfulbundle', 'reading', 'newlyimplementedcommentguide', 'generation', 'messageexamplebundler', 'bundlecreatingcreate', 'gemfilecreatecreatecreatecreate', 'rakefilecreateconsole', 'createcreate', 'setupcreatenesaulov', 'information', 'visit']",{'generation': 100}
"['eebecswandale', 'nesaulov', 'colby', 'mergefailure', 'exception', 'backtraceresolveproblemdetail', 'readable', 'issue', 'report', 'templateproblem', 'diagnosisdiagnosis', 'safetyimplementedwhether', 'backtrace', 'check', 'sendingchoose', 'possible', 'optionchose']",{'issue': 100}
"['aafce', 'mergemerge', 'bundler', 'swandale', 'colby', 'segiddins', 'filesystem', 'temporary', 'template', 'problemclose', 'issue', 'bundlerproblem', 'diagnosisdiagnosis', 'writingimplementedusage']",{'issue': 100}
"['generation', 'message']",{'generation': 100}
"['daeedamerge', 'indirectdocument', 'bundle', 'gemfilecontribution', 'reviewingproblemenhancement', 'bundle', 'issue', 'requestproblem', 'gemfile', 'section', 'description', 'webpage', 'bundle', 'string', 'brief', 'frozenchoose', 'possible', 'optionprevious', 'discussion', 'reflect']",{'issue': 100}
"['bundle', 'issue']",{'issue': 100}
"['indirect', 'arbonapguidance', 'reflect', 'check', 'update', 'revisedcontribution', 'reflect', 'bundler', 'changeproblem', 'diagnosisdiagnosisbunder', 'documentation', 'gitignore', 'explainingimplementedgemfile', 'section', 'bundle', 'update', 'installchoose', 'possible', 'optionchosebundler', 'issue', 'address']",{'issue': 100}
"['segiddinssignal', 'defaultproblemprogram', 'theory', 'process', 'bundler', 'ignore', 'nohup', 'bundle', 'command', 'signal', 'problemproblem', 'diagnosisprogram', 'diagnosis', 'process', 'bundler', 'bundle', 'default', 'signal', 'execution', 'example', 'reset', 'priorimplementedsignal', 'problem', 'default', 'thinkchoose', 'possible', 'optionfirst', 'setting', 'default', 'signal', 'aggressive', 'predecessor', 'restoreprogram', 'nohup', 'bundlesigexit', 'default', 'handler', 'currenthandler', 'ignore', 'default', 'current', 'sighupsigint', 'handler', 'bundler', 'bundle', 'default', 'currentdefault', 'handler', 'current', 'sigquitdefault', 'handler', 'sigtrap', 'currentsigabrt', 'handler', 'current', 'defaultsigiot', 'default', 'handler', 'currentdefault', 'handler', 'sigemt', 'currentdefault', 'handler', 'current', 'sigsysdefault', 'handler', 'current', 'sigpipesigalrm', 'default', 'handler', 'currentdefault', 'sigterm', 'current', 'handlerdefault', 'sigurg', 'current', 'handlersigtstp', 'default', 'handler', 'currentdefault', 'handler', 'current', 'sigcontdefault', 'handler', 'current', 'sigchldsigcld', 'default', 'handler', 'currentsigttin', 'default', 'handler', 'currentdefault', 'handler', 'current', 'sigttoudefault', 'sigio', 'current', 'handlersigxcpu', 'default', 'handler', 'currentsigxfsz', 'default', 'handler', 'currentdefault', 'handler', 'sigprof', 'currentsigwinch', 'default', 'handler', 'currentdefault', 'handler', 'current', 'sigusrdefault', 'handler', 'current', 'sigusrdefault', 'siginfo', 'current', 'handlerbundler', 'trappedsigint', 'handler', 'bundler', 'bundle', 'default', 'currentdefault', 'restoredbundler', 'issue']",{'issue': 100}
"['mergemerge', 'swandale', 'colby', 'bundle', 'nholden', 'doctorbundle', 'doctorproblembundler', 'bundle', 'issue', 'command', 'doctorproblem', 'diagnosisformat', 'description', 'bundler', 'bundle', 'documentation', 'doctor', 'showedimplementedbundle', 'doctor', 'addedchoose', 'bundler', 'documentation', 'master', 'choseevery']",{'issue': 100}
"['ajwann', 'swandale', 'colby', 'check', 'doctordoctor', 'command', 'permission', 'checkcontribution', 'reviewingproblemproblempermission', 'bundler', 'bundle', 'check', 'folder', 'doctorwritten', 'readable', 'warning', 'writable', 'folderimplementedprivate', 'error', 'print', 'folderbundler']",{'permission': 100}
"['cbcda', 'mergemerge', 'swandale', 'colby', 'joelvhgemfile', 'bundle', 'update', 'option', 'addedcontribution', 'reviewingproblemgemfile', 'bundle', 'alternate', 'issue', 'update', 'specify', 'specifies', 'install', 'problem', 'configproblem', 'diagnosissimplest', 'solution', 'diagnosis', 'override', 'environment', 'bundler', 'setting', 'bundle', 'parity', 'update', 'diagnose', 'configimplementedgemfile', 'bundle', 'parity', 'update', 'option', 'installchoose', 'possible', 'optiondirect', 'environment', 'gemfiles', 'issue', 'alternative', 'updatingconfig', 'environment', 'setting', 'bundler', 'issue', 'variable', 'override']",{'issue': 100}
"['daeba', 'mergemerge', 'swandale', 'colby', 'check', 'nilsdingwriteable', 'directory', 'current', 'checkproblemdirectory', 'bundler', 'bundle', 'error', 'address', 'print', 'eacces', 'segiddins', 'problem', 'insideproblem', 'diagnosisbundler', 'issue', 'comment', 'issuecommentimplementedgemfile', 'directory', 'current', 'check', 'error', 'writeable', 'print', 'createchoose']",{'issue': 100}
"['doctor', 'command', 'permission', 'check']",{'permission': 100}
"['bundle', 'doctorbundler', 'issue', 'address']",{'issue': 100}
"['mergemerge', 'bundler', 'client', 'colby', 'index', 'indirectclient', 'error', 'index', 'corruption', 'compactproblembundler', 'client', 'crash', 'index', 'compact', 'exception', 'raiseproblem', 'diagnosisimplementedbundler']",{'crash': 100}
"['mergemerge', 'bundler', 'error', 'friendly', 'segiddinsfallback', 'message', 'error', 'friendlyerrors', 'friendly', 'originalproblemwould', 'bundler', 'issue', 'diagnosingproblem', 'diagnosisfallback', 'diagnosis', 'errorimplementederror', 'raising']",{'issue': 100}
"['fallback', 'message', 'error', 'friendlyerrors', 'friendly', 'originalwould', 'bundler', 'issue']",{'issue': 100}
"['efaaa', 'mergemerge', 'bundler', 'swandale', 'colby', 'auditmanpages', 'auditproblemproblemclose', 'issue', 'bundlerproblem', 'diagnosissection', 'diagnosis']",{'issue': 100}
"['fbbffaf', 'mergemerge', 'warning', 'rubygemscontribution', 'warning', 'trunkreturn', 'warning', 'location', 'issue', 'warning', 'update', 'trunk', 'securityimplementedchoose', 'possible', 'optionunaware']",{'issue': 100}
"['image', 'travis', 'trustytravis', 'issue', 'woraround']",{'issue': 100}
"['checkpretty', 'reproductiondouble', 'check', 'index', 'rubygems', 'conclude', 'fetchedthoughdeivid', 'patch', 'issue', 'rodriguez', 'inline', 'seeingcommit', 'cherry', 'acfebcffbcedd']",{'issue': 100}
"['bundler', 'warning', 'mergeoutside', 'binstub', 'warning', 'messageindirectbundler', 'issue', 'issuecomment']",{'issue': 100}
"['checkpretty', 'reproductiondouble', 'check', 'index', 'rubygems', 'conclude', 'fetchedthoughdeivid', 'patch', 'issue', 'rodriguez', 'inline']",{'issue': 100}
"['bbcfebundler', 'warning', 'mergeoutside', 'binstub', 'warning', 'messageindirectbundler', 'issue', 'issuecomment']",{'issue': 100}
"['cefdf', 'mergebundler', 'checkpretty', 'reproductiondouble', 'check', 'index', 'rubygems', 'conclude', 'fetchedthoughdeivid', 'patch', 'issue', 'rodriguez', 'inline']",{'issue': 100}
"['gemspec', 'ensure', 'insidegemfile', 'local', 'command', 'wrong', 'issue', 'withoutshellwords', 'dependencytrivial', 'space']",{'issue': 100}
"['activation', 'bundler', 'swandale', 'colby', 'defaultdirectory', 'ensure', 'autoloads', 'resolvedwould', 'bundler', 'issue', 'default', 'overrideproblembundler', 'problem', 'failingproblem', 'diagnosisautoload', 'diagnosis', 'bundler', 'default', 'possible', 'optionchosecommit', 'cherry', 'cccdccafdddcaff']",{'issue': 100}
"['bundler', 'swandale', 'colby', 'digestdigest', 'stdlib', 'activatingwould', 'bundler', 'activate', 'different', 'problem', 'stdlib', 'choosingtravis', 'trunk', 'diagnosislevel', 'bundler', 'method', 'digest', 'replaces', 'statementwould', 'class', 'digest', 'thread', 'chosecommit', 'cherry']",{'thread': 100}
"['bundler', 'swandale', 'colby', 'digestmanner', 'thread', 'subclass', 'digestwould', 'thread', 'digest', 'usingcommit', 'cherry']",{'thread': 100}
"['ddaacmerge', 'activation', 'bundler', 'swandale', 'colby', 'defaultdirectory', 'ensure', 'autoloads', 'resolvedwould', 'bundler', 'issue', 'default', 'overrideproblembundler', 'problem', 'failingproblem', 'diagnosisautoload', 'diagnosis', 'bundler', 'default', 'possible', 'optionchose']",{'issue': 100}
"['directory', 'ensure', 'autoloads', 'resolvedwould', 'bundler', 'issue', 'default']",{'issue': 100}
"['aeaad', 'mergemerge', 'bundler', 'swandale', 'colby', 'digestdigest', 'stdlib', 'activatingproblemwould', 'bundler', 'activate', 'different', 'problem', 'stdlib', 'choosingtravis', 'trunk', 'buildproblem', 'diagnosisimplementedlevel', 'bundler', 'method', 'digest', 'replaces', 'statementchoose', 'possible', 'optionwould', 'class', 'digest', 'thread']",{'thread': 100}
"['edfafb', 'mergemerge', 'jumbosushi', 'indirectplugin', 'issue', 'continuation', 'createdbundler', 'plugin', 'additional', 'check']",{'issue': 100}
"['mergemerge', 'swandale', 'colby', 'linkify', 'ericboehsissue', 'request', 'changelogproblemnavigate', 'difficult', 'issue', 'reviewingrequest', 'relevant', 'changelogproblem', 'issue', 'addedbundler', 'issue']",{'issue': 100}
"['acefdmerge', 'bundler', 'swandale', 'colby', 'digestmanner', 'thread', 'subclass', 'digestproblemwould', 'digest', 'problemproblem', 'thread', 'digest']",{'thread': 100}
"['manner', 'thread', 'subclass', 'digest']",{'thread': 100}
"['difficult', 'issue', 'reviewingrequest', 'relevant', 'changelogproblem', 'issue', 'addedbundler', 'issue']",{'issue': 100}
"['indirect', 'errorgemspec', 'directoryproblemproblemissue', 'solvedevelopment', 'setup', 'bundler', 'command', 'master', 'dbundle', 'gemspec', 'directory', 'issue', 'optiondiagnosisgemspec', 'directory', 'correctimplementedtrack', 'wonderinggemfile', 'suite', 'entire', 'install', 'rspec', 'similarlywould', 'point', 'direction', 'couldchoose', 'possible', 'optionchoseintuitive']",{'issue': 100}
"['mergemerge', 'bundler', 'rubygems', 'package', 'source', 'invalidproblemwould', 'poison', 'problemclose', 'issue', 'bundlerproblem', 'diagnosisremove', 'diagnosis', 'downloadingimplementedchoose', 'bundler', 'cache', 'entry']",{'issue': 100}
"['ajwann', 'client', 'check', 'index', 'segiddinsensure', 'issue', 'permissiondirectory', 'permission', 'bundler', 'properproblem', 'diagnosispermission', 'solution', 'colby', 'issue', 'check', 'tmpdirimplementedblock', 'errno', 'sufficient', 'process', 'bundler', 'effective', 'permission', 'rescue', 'master', 'thrown', 'eacces', 'creation', 'exceptionchoose', 'possible', 'optionissue']","{'issue': 100, 'permission': 100}"
"['bcbfabundler', 'multisource', 'indirecterror', 'transitive', 'resolver', 'source', 'ambigousproblempriority', 'situation', 'source', 'problem', 'ambiguousproblem', 'error', 'implementation', 'source', 'bundler', 'issue', 'conversation', 'attempt', 'implementchoose', 'possible', 'optionrelevant', 'default', 'warning', 'error']",{'issue': 100}
"['socket', 'openssl', 'versionproblemnilclass', 'bundler', 'method', 'error', 'request', 'webmock', 'usingproblem', 'diagnosisdiagnosis', 'warning', 'socket', 'openssl', 'variable', 'connection', 'versionimplementedguard', 'possible', 'optionvalue', 'socket', 'example', 'trunk', 'guardcommit', 'cherry']",{'OpenSSL': 100}
"['fbddaef', 'mergebundler', 'indirectmajor', 'resolver', 'updatecontribution', 'problemproblem', 'diagnosisstart', 'diagnosisclose', 'issue', 'bundlerimplementedfeature']",{'issue': 100}
"['socket', 'openssl', 'versionproblemnilclass', 'bundler', 'method', 'error', 'request', 'webmock', 'usingproblem', 'diagnosisdiagnosis', 'warning', 'socket', 'openssl', 'variable', 'connection', 'versionimplementedguard', 'possible', 'optionvalue', 'socket', 'example', 'trunk', 'guard']",{'OpenSSL': 100}
"['socket', 'openssl', 'version']",{'OpenSSL': 100}
"['documentationprobleminstall', 'local', 'deployment', 'packageproblem', 'bundler', 'issue', 'bundler', 'bundle', 'trickle', 'whenever', 'command', 'packagebundler', 'master', 'possible', 'optionavailable', 'document']",{'issue': 100}
"['jruby', 'supportproblemcharacter', 'jruby', 'recent', 'issue', 'detect', 'problemproblem', 'diagnosisseparator', 'diagnosis', 'appropriateimplementedjruby', 'rubygems', 'logic', 'possible', 'optionwithin', 'detect']",{'issue': 100}
"['mergemerge', 'bundler', 'bundle', 'pretty', 'indirectprettify', 'outputproblemverbose', 'making', 'output', 'bundle', 'problemproblem', 'diagnosisdiagnosisclose', 'issue', 'bundlerimplementedutility', 'command', 'print', 'primary', 'versionbundler', 'commandcommand', 'primaryenvironment', 'bundle', 'current', 'system', 'option', 'installenvironment', 'bundle', 'current', 'update', 'optionbundle', 'cache', 'option', 'package', 'vendoroption', 'command', 'bundle', 'contextvalue', 'bundle', 'configuration', 'retrieve', 'configavailable', 'describe', 'bundle', 'specific', 'commandutilityinstall', 'gemfile', 'bundle', 'versionbundle', 'binstubs', 'option', 'install', 'listedgemfile', 'bundle', 'check', 'option', 'installedbundle', 'console', 'session', 'groupbundle', 'check', 'common', 'option', 'problem', 'doctorenvironment', 'bundler', 'bundle', 'print', 'information', 'bundle', 'option', 'creates', 'rubygem', 'skeletonoption', 'bundle', 'informationgemfile', 'directory', 'generates', 'current', 'optionbundler', 'bundle', 'issue', 'report', 'learnbundle', 'license', 'printbundle', 'creates', 'lockfiledirectory', 'bundle', 'option', 'version', 'installedbundle', 'compatibility', 'platform', 'option', 'information', 'displaybundler', 'bundle', 'manage', 'plugin', 'pluginscondition', 'bundle', 'pristine', 'restores', 'installedoption', 'bundle', 'givenbundler', 'bundle', 'print', 'information', 'versionoptioncolorization', 'output', 'colornetwork', 'specify', 'command', 'number', 'retry', 'attemptverbose', 'enable', 'output']",{'issue': 100}
"['bcfab', 'mergebundler', 'switch', 'local', 'install', 'problem', 'takingproblem', 'diagnosisbundle', 'diagnosis', 'cleanclose', 'issue', 'possible', 'optionavoids']",{'issue': 100}
"['bffccaa', 'mergebundler', 'github', 'indirectrakefile', 'generate', 'github', 'problem', 'github', 'properclose', 'issue', 'bundlerproblem', 'automate', 'diagnosis', 'bundler', 'liberty', 'release']",{'issue': 100}
"['jruby', 'issue']",{'issue': 100}
"['issue', 'detect', 'order', 'invalid']",{'issue': 100}
"['aaaad', 'mergemerge', 'bundler', 'colby', 'binstubs', 'segiddinsbinstubs', 'bundle', 'stanadloneproblemunless', 'bundler', 'setting', 'bundle', 'different', 'binstubs', 'mostlybundler', 'masterruntimeerror', 'explicit', 'standalonebundler', 'project', 'desktopbundler', 'block', 'project', 'desktopbundler', 'project', 'desktopbundlerimplicit', 'typeerror', 'conversion', 'stringinitializebundlercaught', 'infact', 'standalonebundle', 'issue', 'documentation', 'command', 'option', 'binstubsproblem', 'binstubs', 'command', 'temporary', 'currentlychoose', 'possible', 'optionsimplest', 'solution', 'binstub']",{'issue': 100}
"['download', 'shayonj', 'rubygems', 'retry', 'network', 'remotefetcher', 'ideal', 'helpful', 'failure', 'retryingproblem', 'diagnosisperform', 'bundler', 'morefuture', 'logic', 'becase', 'class', 'bundler', 'remotefetcher', 'intent', 'retry', 'exception', 'fetcherror', 'issue', 'exampleclassretry', 'downloadingfuture', 'classretry', 'downloadingfuture', 'morefuture', 'classrubygem', 'versionretry', 'downloadingbundler', 'retry', 'examplebundler', 'download', 'standarderrorwhereas', 'printfoobar', 'raiseimplementedargument', 'fetcherror', 'bundler', 'remotefetcher', 'future', 'logic', 'possible', 'optionwould', 'bundler', 'issue', 'fulfills', 'retry', 'logic', 'addedcommit', 'cherry', 'cdaeaabbffcab']",{'issue': 100}
"['bundler', 'issue', 'update']",{'issue': 100}
"['facbb', 'mergeadrian', 'segiddins', 'gomezpassword', 'remote', 'username', 'bundler', 'issue', 'username', 'frozenpassword', 'bundle', 'store', 'username', 'negative', 'remote', 'effect']",{'issue': 100}
"['segiddinswrite', 'explaincontribution', 'tryingproblem', 'diagnosisdiagnosisbundler', 'slack', 'bundler', 'documentation', 'editing', 'necessary', 'update', 'command', 'primary', 'touch', 'possible', 'optionchosealleviate', 'contribute', 'bundler', 'confusion', 'point', 'bundle', 'issue', 'different', 'bullet', 'addresscontext', 'depth', 'issue']",{'issue': 100}
"['mergedownload', 'shayonj', 'rubygems', 'retry', 'network', 'remotefetcher', 'ideal', 'helpful', 'failure', 'retryingproblem', 'diagnosisperform', 'bundler', 'morefuture', 'logic', 'becase', 'class', 'bundler', 'remotefetcher', 'intent', 'retry', 'exception', 'fetcherror', 'issue', 'exampleclassretry', 'downloadingfuture', 'classretry', 'downloadingfuture', 'morefuture', 'classrubygem', 'versionretry', 'downloadingbundler', 'retry', 'examplebundler', 'download', 'standarderrorwhereas', 'printfoobar', 'raiseimplementedargument', 'fetcherror', 'bundler', 'remotefetcher', 'future', 'logic', 'possible', 'optionwould', 'bundler', 'issue', 'fulfills', 'retry', 'logic']",{'issue': 100}
"['mergemerge', 'swandale', 'colby', 'arbonapbundle', 'update', 'brokencontribution', 'reviewingproblemproblembundler', 'issue', 'resolveproblem', 'diagnosisdiagnosissection', 'bundle', 'possible', 'optionchosebundler']",{'issue': 100}
"['bundler', 'print', 'version', 'numberbundler', 'issue']",{'issue': 100}
"['mergebundler', 'swandale', 'colby', 'gemfiles', 'printproblemreproduce', 'output', 'bundler', 'issue', 'error', 'report', 'insufficient', 'problemproblem', 'print', 'diagnosisimplementedtrack', 'print']",{'issue': 100}
"['mergemerge', 'bundler', 'cache', 'indirect', 'globallycache', 'source', 'reposproblemclose', 'issue', 'bundlerproblemwould', 'repos', 'cache', 'global', 'default', 'system', 'installs', 'place', 'greatproblem', 'diagnosisdiagnosis', 'cache', 'global', 'location', 'somethingimplementedcache', 'directory', 'globalchoose', 'possible', 'optioncache']",{'issue': 100}
"['indirectcorrect', 'bundler', 'special', 'binstub', 'version', 'ensuresproblemclose', 'issue', 'bundlerbundler', 'version', 'applicationbundler', 'activate', 'versionproblem', 'diagnosisensure', 'application', 'bundler', 'bundle', 'specific', 'binstub', 'versionimplementedbundler', 'bundle', 'binstub', 'binstubs', 'implementchoose', 'appropriate', 'bundler', 'bundle', 'update', 'select', 'version']",{'issue': 100}
"['bundler', 'swandale', 'colby', 'rubymorilloescapepassword', 'bundler', 'issue', 'sentence', 'addedcontribution', 'bundler', 'issue', 'clear', 'problem', 'usernamesproblem', 'diagnosissentence', 'diagnosisimplementedsentencechoose', 'possible', 'optionwould', 'clearer']",{'issue': 100}
"['bundler', 'string', 'empty', 'yamlserializer', 'properlyproblemproblem', 'string', 'emptyclose', 'issue', 'bundlerproblem', 'diagnosisunderstand', 'diagnosis', 'serializer', 'empty', 'neededimplementedencounter', 'parser', 'ensurescommit', 'cherry', 'dfeedefcaedcf']",{'issue': 100}
"['bundler', 'warning', 'versio', 'parseable', 'warning', 'command', 'print', 'bundler', 'warning', 'problem', 'versiontwitter', 'diagnosisparsable', 'diagnosis', 'output', 'command', 'extraneous', 'bundler', 'blacklist', 'warning', 'possible', 'optionsingle', 'parseablecommit', 'cherry', 'daddcbebbeda', 'pickedconflictbundlerbundler']",{'blacklist': 100}
"['adeacmerge', 'bundler', 'string', 'empty', 'yamlserializer', 'properlyproblemproblem', 'string', 'emptyclose', 'issue', 'bundlerproblem', 'diagnosisunderstand', 'diagnosis', 'serializer', 'empty', 'neededimplementedencounter', 'parser', 'ensures']",{'issue': 100}
"['mergemerge', 'bundler', 'warning', 'versio', 'parseable', 'warning', 'command', 'print', 'bundler', 'warning', 'problem', 'versiontwitter', 'diagnosisparsable', 'diagnosis', 'output', 'command', 'extraneous', 'bundler', 'blacklist', 'warning', 'possible', 'optionsingle']",{'blacklist': 100}
"['escapepassword', 'bundler', 'issue']",{'issue': 100}
"['bundler', 'index', 'array', 'stringobject', 'dependency', 'containingproblemgemspecs', 'bundler', 'issue', 'problem', 'invalidproblem', 'diagnosisgemspecs', 'diagnosis', 'insteadimplementedobject', 'array', 'dependency', 'error', 'coerces', 'resolution', 'error', 'chosecommit', 'cherry']",{'issue': 100}
"['jakauppila', 'segiddinsproxy', 'support', 'explicit', 'argumentproblemenvironment', 'present', 'proxy', 'variable', 'honoredenvironment', 'unable', 'access', 'variable', 'internal', 'ultimatelyproblem', 'argument', 'value', 'persistent', 'utilize', 'matchargument', 'drbrain', 'definition', 'proxy', 'explicit', 'argumentstdlib', 'method', 'libdocchoose', 'possible', 'optionwould', 'discussion', 'bundler', 'issue', 'persistentcommit', 'cherry']",{'issue': 100}
"['multiple', 'bundler', 'issue', 'project', 'requirable', 'versioncommit', 'cherry', 'ebbeccdbfdddc', 'pickedconflictruntime']",{'issue': 100}
"['eddfa', 'mergemerge', 'stefansedich', 'operation', 'process', 'bundle', 'installproblemwould', 'multiple', 'concurrent', 'bundle', 'failure', 'installs', 'causeproblem', 'diagnosissolution', 'issue', 'cache', 'container', 'project', 'volume', 'sample', 'docker', 'compose', 'usingimplementedprocess', 'installation', 'install', 'implementchoose', 'possible', 'optionpossible', 'solution']","{'concurrent': 100, 'issue': 100}"
"['mergebundler', 'deployment', 'indirectinstead', 'setting', 'bundler', 'deployment', 'frozenproblembundler', 'whereas', 'lockfile', 'deployment', 'experience', 'problem', 'frozenclose', 'issue', 'bundlerproblem', 'diagnosisdiagnosis', 'setting', 'bundler', 'default', 'deployment', 'frozenimplementedinstead', 'bundle', 'myriad', 'update', 'behavior', 'deployment', 'command', 'place', 'frozen', 'config']",{'issue': 100}
"['multiple', 'process', 'concurrent', 'bundle', 'issue', 'complete', 'install']","{'concurrent': 100, 'issue': 100}"
"['ccefaecmerge', 'segiddinsbundler', 'capitalize', 'descriptionsmallproblembundler', 'followingbundlerindexbundlerbundlerbundler', 'modulewrite', 'mightbundler', 'unsure', 'versionhandleunless', 'bundler', 'versionunless', 'result', 'bundleconsolebundlebundler', 'versioncommandinstall', 'gemfile', 'bundle', 'versionbundle', 'binstubs', 'option', 'install', 'listedoption', 'bundle', 'cache', 'vendorgemfile', 'bundle', 'check', 'option', 'clean', 'bundler', 'bundle', 'option', 'unusedvalue', 'bundle', 'configuration', 'retrieve', 'configbundle', 'check', 'common', 'option', 'problem', 'doctorenvironment', 'bundler', 'bundle', 'print', 'information', 'runningoption', 'command', 'bundle', 'bundle', 'option', 'creates', 'rubygem', 'skeletonavailable', 'describe', 'bundle', 'specific', 'commandsubcommand', 'describe', 'bundle', 'specific', 'command', 'subcommandsoption', 'bundle', 'informationgemfile', 'directory', 'generates', 'current', 'optiongemfile', 'versionbundle', 'plugin', 'source', 'plugins', 'installenvironment', 'bundle', 'current', 'system', 'option', 'installbundler', 'bundle', 'issue', 'report', 'learnbundle', 'license', 'printbundle', 'creates', 'lockfiledirectory', 'bundle', 'option', 'version', 'installedbundle', 'compatibility', 'platform', 'option', 'information', 'displaysubcommand', 'bundler', 'bundle', 'manage', 'plugin', 'pluginscondition', 'bundle', 'pristine', 'restores', 'installedoption', 'bundle', 'givenenvironment', 'bundle', 'current', 'update', 'optionbundler', 'bundle', 'print', 'information', 'versiongenerates', 'bundle', 'graph', 'option', 'dependency', 'visualoptioncolorization', 'output', 'colornetwork', 'specify', 'command', 'number', 'retry', 'attemptverbose', 'description', 'beginningproblem', 'diagnosisimplementedunify', 'description', 'beginningconsolebundlebundler', 'versioncommandinstall', 'gemfile', 'bundle', 'versionbundle', 'binstubs', 'option', 'install', 'listedoption', 'bundle', 'cache', 'vendorgemfile', 'bundle', 'check', 'option', 'clean', 'bundler', 'bundle', 'option', 'unusedvalue', 'bundle', 'configuration', 'retrieve', 'configbundle', 'check', 'common', 'option', 'problem', 'doctorenvironment', 'bundler', 'bundle', 'print', 'information', 'runningoption', 'command', 'bundle', 'bundle', 'option', 'creates', 'rubygem', 'skeletonavailable', 'describe', 'bundle', 'specific', 'commandsubcommand', 'describe', 'bundle', 'specific', 'command', 'subcommandsoption', 'bundle', 'informationgemfile', 'directory', 'generates', 'current', 'optiongemfile', 'versionbundle', 'plugin', 'source', 'plugins', 'installenvironment', 'bundle', 'current', 'system', 'option', 'installbundler', 'bundle', 'issue', 'report', 'learnbundle', 'license', 'printbundle', 'creates', 'lockfiledirectory', 'bundle', 'option', 'version', 'installedbundle', 'compatibility', 'platform', 'option', 'information', 'displaysubcommand', 'bundler', 'bundle', 'manage', 'plugin', 'pluginscondition', 'bundle', 'pristine', 'restores', 'installedoption', 'bundle', 'givenenvironment', 'bundle', 'current', 'update', 'optionbundler', 'bundle', 'print', 'information', 'versiongenerates', 'bundle', 'graph', 'option', 'dependency', 'visualoptioncolorization', 'output', 'colornetwork', 'specify', 'command', 'number', 'retry', 'attemptverbose', 'enable', 'output']",{'issue': 100}
"['indirectenable', 'defaultproblemmulti', 'bundler', 'issue', 'platform', 'problem', 'version', 'dependency', 'handlingproblem', 'notion', 'diagnosis', 'track', 'bundle', 'generic', 'actualimplementedenables', 'default', 'bundler', 'changechoose', 'possible', 'optioncorrect', 'bundler', 'default', 'platform', 'semantics']",{'issue': 100}
"['bbbeeb', 'mergemerge', 'bundler', 'index', 'array', 'stringobject', 'dependency', 'containingproblemgemspecs', 'bundler', 'issue', 'problem', 'invalidproblem', 'diagnosisgemspecs', 'diagnosis', 'insteadimplementedobject', 'array', 'dependency', 'error', 'coerces', 'resolution', 'error']",{'issue': 100}
"['mergemerge', 'bundler', 'suppress', 'indirect', 'usingsuppress', 'message', 'installation', 'versionproblemoutput', 'bundler', 'bundle', 'install', 'problembundler', 'issue', 'featureproblem', 'diagnosisdiagnosis', 'bundler', 'bunch', 'versionimplementedverbose', 'introduce', 'extra', 'message', 'possible', 'optionfeature', 'bundler']",{'issue': 100}
"['bundler', 'swandale', 'colby', 'lockfilelockfile', 'extract', 'generation', 'classproblemproblem', 'stuff', 'mightproblem', 'diagnosissingle', 'diagnosis']",{'generation': 100}
"['lockfile', 'extract', 'generation', 'class']",{'generation': 100}
"['ffaeemerge', 'bundler', 'rubygems', 'rubygems', 'source', 'large', 'security', 'vulnerability', 'release', 'resolver', 'source', 'problem', 'nothingcloseclosecloseproblem', 'diagnosisnotion', 'level', 'diagnosis', 'rubygems', 'source', 'aggregateimplementedfilter', 'level', 'source', 'rubygems', 'rubygems', 'machination', 'abstract', 'single', 'specific', 'refactors', 'source', 'drivenbundler']",{'Security': 100}
"['segiddinsabsolute', 'allowdirect', 'bundler', 'issue', 'quick', 'hello', 'segiddinsproblemcondition', 'argumenterror', 'problem', 'pathnamebundler', 'deploymentgemfile', 'variablegemfile', 'absoluteproblem', 'diagnosiswould', 'diagnosis', 'object', 'bundler', 'absolute', 'error', 'sharedhelpers', 'pathnameimplementedobject', 'bundler', 'sharedhelpers', 'bundler', 'sharedhelpers']",{'issue': 100}
"['afcddmerge', 'jakauppila', 'segiddinsproxy', 'support', 'explicit', 'argumentproblemenvironment', 'present', 'proxy', 'variable', 'honoredenvironment', 'unable', 'access', 'variable', 'internal', 'ultimatelyproblem', 'argument', 'value', 'persistent', 'utilize', 'matchargument', 'drbrain', 'definition', 'proxy', 'explicit', 'argumentstdlib', 'method', 'libdocchoose', 'possible', 'optionwould', 'discussion', 'bundler', 'issue']",{'issue': 100}
"['mergebundler', 'default', 'indirectbundle', 'default', 'message', 'argumentproblemwould', 'directory', 'gemfile', 'unfamiliar', 'bundler', 'bundle', 'pager', 'install', 'problem', 'overwhelmingproblem', 'diagnosisought', 'diagnosis', 'bundle', 'command', 'print', 'install', 'runningimprovement', 'bundler', 'bundle', 'opuodtzl', 'straight', 'promptedimplementedfeature', 'output', 'contingent', 'followingbundler', 'versioncommandinstall', 'gemfile', 'bundle', 'versionbundle', 'binstubs', 'option', 'install', 'listedgemfile', 'bundle', 'check', 'option', 'clean', 'bundler', 'bundle', 'option', 'unusedvalue', 'bundle', 'configuration', 'retrieve', 'configbundle', 'console', 'session', 'groupbundle', 'check', 'common', 'option', 'problem', 'doctorenvironment', 'bundler', 'bundle', 'print', 'information', 'runningoption', 'command', 'bundle', 'bundle', 'option', 'creates', 'rubygem', 'skeletonavailable', 'describe', 'bundle', 'specific', 'commandsubcommand', 'describe', 'bundle', 'specific', 'command', 'subcommandsoption', 'bundle', 'informationgemfile', 'directory', 'generates', 'current', 'optiongemfile', 'versionbundle', 'plugin', 'source', 'plugins', 'installenvironment', 'bundle', 'current', 'system', 'option', 'installbundler', 'bundle', 'issue', 'report', 'learnbundle', 'license', 'printbundle', 'creates', 'lockfiledirectory', 'bundle', 'option', 'version', 'installedbundle', 'cache', 'option', 'package', 'vendorbundle', 'compatibility', 'platform', 'option', 'information', 'displaysubcommand', 'bundler', 'bundle', 'manage', 'plugin', 'pluginscondition', 'bundle', 'repository', 'checkout', 'pristine', 'force', 'restores', 'installedoption', 'bundle', 'givenenvironment', 'bundle', 'current', 'update', 'optionbundler', 'bundle', 'print', 'information', 'versiongenerates', 'bundle', 'graph', 'option', 'dependency', 'visualoptioncolorization', 'output', 'colornetwork', 'specify', 'command', 'number', 'retry', 'attemptverbose', 'enable', 'outputchoose', 'possible', 'optionmanager', 'bundler', 'message', 'aligns', 'argument', 'displaycocoapodsrubygemshomebrewmanager', 'package', 'swiftcarthagecargoinstall', 'default', 'unlikewould', 'particular', 'concisewould', 'output', 'improvement', 'default']",{'issue': 100}
"['feedback', 'clarity', 'issue']",{'issue': 100}
"['indirect', 'updatebundle', 'updateproblemwould', 'explicit', 'destructive', 'bundle', 'update', 'action', 'install', 'problem', 'thinkproblem', 'diagnosisdiagnosis', 'bundle', 'update', 'acknowledgement', 'implicitlyimplementedbundler', 'bundle', 'current', 'update', 'basedchoose', 'possible', 'optionfeature', 'bundler', 'issue']",{'issue': 100}
"['incorrect', 'content', 'header', 'response', 'length', 'support']","{'incorrect': 100, 'length': 100}"
"['mergemerge', 'environment', 'bundler', 'shebang', 'indirectdoesnt', 'shebang', 'print', 'matchcloseshenanigan', 'bundle', 'binstub', 'issue', 'installation', 'shebang', 'print', 'pinpoint']",{'issue': 100}
"['multiple', 'bundler', 'issue', 'project', 'requirable', 'version']",{'issue': 100}
"['bundler', 'jules', 'segiddinsbundler', 'return', 'stubspecbundler', 'supersedesbundler', 'issueexplanationreturn', 'object', 'bundler', 'instantiate', 'method', 'master', 'rubygems', 'integrationbundler', 'master', 'rubygems', 'occurs', 'bundler', 'master', 'infinite', 'assumeweird', 'happencombination', 'bundle', 'issue', 'method', 'suspectreplicate', 'point', 'bundler', 'method', 'specific', 'eventoptionbundler', 'implementreturn', 'bundler', 'specification', 'createthoughtwould', 'making', 'bundler', 'return', 'solution', 'mistakesegiddinscommit', 'cherry']",{'issue': 100}
"['mergebundler', 'jules', 'segiddinsbundler', 'return', 'stubspecbundler', 'supersedesbundler', 'issueexplanationreturn', 'object', 'bundler', 'instantiate', 'method', 'master', 'rubygems', 'integrationbundler', 'master', 'rubygems', 'occurs', 'bundler', 'master', 'infinite', 'assumeweird', 'happencombination', 'bundle', 'issue', 'method', 'suspectreplicate', 'point', 'bundler', 'method', 'specific', 'eventoptionbundler', 'implementreturn', 'bundler', 'specification', 'createthoughtwould', 'making', 'bundler', 'return', 'solution']",{'issue': 100}
"['remote', 'cache', 'setup', 'contribution', 'issue', 'cache', 'source', 'vendorbundle', 'update', 'revision', 'clear', 'present', 'cache', 'version', 'proceeds', 'occurs', 'specific', 'behaviour', 'vendor', 'definition', 'store', 'stale', 'source', 'timecopclosecommit', 'cherry', 'bdecabbeeaffbff']",{'issue': 100}
"['bundler', 'lockfile', 'lockfile', 'updatingclose', 'issue', 'bundlermerge', 'specset', 'usingcommit', 'cherry']",{'issue': 100}
"['rakefile', 'patch', 'milestone', 'issue', 'release', 'contains']",{'issue': 100}
"['remote', 'cache', 'setup', 'contribution', 'issue', 'cache', 'source', 'vendorbundle', 'update', 'revision', 'clear', 'present', 'cache', 'version', 'proceeds', 'occurs', 'specific', 'behaviour', 'vendor', 'definition', 'store', 'stale', 'source']",{'issue': 100}
"['mergebundler', 'lockfile', 'lockfile', 'updatingclose', 'issue', 'bundlermerge', 'specset']",{'issue': 100}
"['style', 'issue']",{'issue': 100}
"['lockfile', 'dependencyclosecloseclosecloseclosecloseclose', 'issue', 'ideal', 'message', 'helpful']",{'issue': 100}
"['dadcaae', 'fcacddenniss', 'segiddins', 'bundlepristine', 'bundle', 'implementationinitial', 'pristine', 'bundle', 'implementationaddressingbundler', 'issuebundler', 'issue']",{'issue': 100}
"['mergeswandale', 'colby', 'jonathanpikebundle', 'issue', 'command', 'print', 'instructionanyone', 'bundler', 'bundle', 'issue', 'contribution', 'listedplease']",{'issue': 100}
"['command', 'issue']",{'issue': 100}
"['remote', 'bundler', 'upstream', 'master', 'configupstream', 'commits', 'mastersocket', 'exception', 'insteadremove', 'issue', 'guidequote', 'empty', 'linuxwithoutmoment', 'command', 'installedcreate', 'command', 'installedunless', 'command', 'installedparagraph', 'readmes', 'spacingselect', 'behavior', 'accountvalue', 'return', 'uninstall', 'pluginsdocumentation', 'small', 'documentation', 'doublebundle', 'parameter', 'configbundle']",{'issue': 100}
"['mergeswandale', 'colby', 'issue', 'mergeremove']",{'issue': 100}
"['swandale', 'colby', 'newgem', 'segiddinsparagraph', 'readmes', 'spacingcosmetic', 'block', 'bundle', 'issue', 'covenant', 'project', 'contributor', 'username', 'adhere', 'request', 'report', 'github', 'spacelicenseavailable', 'license', 'issue', 'testapp', 'project', 'conduct', 'username', 'master', 'covenant', 'project', 'contributor', 'username', 'adhere', 'request', 'report', 'github', 'spacelicenseavailable', 'license', 'issue', 'testapp', 'project', 'conduct', 'username', 'master']",{'issue': 100}
"['efcddc', 'mergedenniss', 'delete', 'frozen', 'segiddinssuggest', 'different', 'command', 'frozen', 'configbundler', 'issue']",{'issue': 100}
"['fixup', 'indirectbundler', 'return', 'ensure', 'versionbundler', 'default', 'default', 'featureversion', 'bundler', 'issue', 'default', 'master', 'rubygems']",{'issue': 100}
"['bdcae', 'bafedbabshekharrajak', 'segiddinsbundle', 'check', 'installedbundler', 'issue']",{'issue': 100}
"['bundle', 'issue', 'command', 'print', 'instruction']",{'issue': 100}
"['bundle', 'cache', 'localbundler', 'issue']",{'issue': 100}
"['mergedenniss', 'validation', 'setting', 'checksum', 'segiddinsbundler', 'issue']",{'issue': 100}
"['bundler', 'regression', 'issue']",{'issue': 100}
"['missingbundler', 'issueclose', 'issue', 'bundlercommit', 'cherry']",{'issue': 100}
"['indirect', 'wjordanenable', 'index', 'compact', 'openssl', 'activemodule', 'generate', 'process', 'object', 'detect', 'accessor', 'approach', 'buildreturn', 'window', 'platform', 'false', 'approach', 'enabledsimulates', 'stderr', 'output', 'process', 'message', 'error', 'behavior', 'openssl', 'activecommit', 'cherry']",{'OpenSSL': 100}
"['rubygems', 'defer', 'rhenium', 'segiddinsnecessary', 'rubygems', 'defer', 'becomesavoid', 'bundle', 'conflict', 'openssl', 'versionnewer', 'default', 'openssl', 'version', 'installedopenssl', 'rubygems', 'resolvsecurerandom', 'runninglibrary', 'standard', 'properbundler', 'currentlyopensslbundler', 'issue', 'referenceissue', 'opensslreproduceinstall', 'opensslinstall', 'opensslinstall', 'bundle', 'gemfilebundle', 'opensslcommit', 'cherry']","{'OpenSSL': 100, 'issue': 100}"
"['globalclose', 'issue', 'bundlerbundler', 'alternativecommit', 'cherry', 'bebcfbacdefbd']",{'issue': 100}
"['mergemerge', 'string', 'error', 'okkez', 'rubygems', 'literal', 'frozen', 'segiddinsreturn', 'array', 'emptybundler', 'rubygemsreturnmodify', 'string', 'error', 'rubygems', 'literal', 'frozendefault', 'version', 'rubygemssickill', 'rainbow', 'issue']",{'issue': 100}
"['missingbundler', 'issueclose', 'issue', 'bundler']",{'issue': 100}
"['indirect', 'wjordanenable', 'index', 'compact', 'openssl', 'activemodule', 'generate', 'process', 'object', 'detect', 'accessor', 'approach', 'buildreturn', 'window', 'platform', 'false', 'approach', 'enabledsimulates', 'stderr', 'output', 'process', 'message', 'error', 'behavior', 'openssl']",{'OpenSSL': 100}
"['simplify', 'openssl']",{'OpenSSL': 100}
"['enable', 'index', 'compact', 'openssl']",{'OpenSSL': 100}
"['return', 'array', 'emptybundler', 'rubygemsreturnmodify', 'string', 'error', 'rubygems', 'literal', 'frozendefault', 'version', 'rubygemsrubygemssickill', 'rainbow', 'issue']",{'issue': 100}
"['rubygems', 'defer', 'rhenium', 'segiddinsnecessary', 'rubygems', 'defer', 'becomesavoid', 'bundle', 'conflict', 'openssl', 'versionnewer', 'default', 'openssl', 'version', 'installedopenssl', 'rubygems', 'resolvsecurerandom', 'runninglibrary', 'standard', 'properbundler', 'currentlyopensslbundler', 'issue', 'referenceissue', 'opensslreproduceinstall', 'opensslinstall', 'opensslinstall', 'bundle', 'gemfilebundle']","{'OpenSSL': 100, 'issue': 100}"
"['globalclose', 'issue', 'bundlerbundler']",{'issue': 100}
"['rubygems', 'defer', 'becomesavoid', 'bundle', 'conflict', 'openssl', 'versionnewer', 'default', 'openssl', 'version', 'installedopenssl', 'rubygems', 'resolvsecurerandom', 'runninglibrary', 'standard', 'properbundler', 'currentlyopensslbundler', 'issue', 'referenceissue', 'openssl']","{'OpenSSL': 100, 'issue': 100}"
"['bundle', 'issue', 'conflict', 'segiddinsbundle', 'conflict', 'bundle', 'command', 'exception', 'failsspecifiedinstancehello', 'touchbundle', 'hellohandlecommit', 'conflict', 'problem', 'exception', 'gracefullyerrorbundler', 'issuecommit', 'cherry']",{'issue': 100}
"['buildclose', 'bundlerclose', 'issue', 'bundlercommit', 'cherry']",{'issue': 100}
"['warning', 'message', 'platform', 'bundle', 'warning', 'empty', 'current', 'message', 'platform', 'installjruby', 'bundler', 'bundle', 'platform', 'dependency', 'tzinfojruby', 'bundle', 'issue', 'message', 'platform', 'existseparator', 'commabundler', 'comma', 'consideredjruby', 'valid', 'platformformat', 'rubygems', 'platformcommit', 'cherry', 'cdefedfcdbc']",{'issue': 100}
"['bundler', 'issue', 'error', 'template', 'segiddinsfriendlyerrors', 'updateexists', 'reorganization', 'longerfeministyissue', 'opening', 'release', 'people', 'frustratedcommit', 'cherry', 'fbcaecbaabfaba']",{'issue': 100}
"['mergemerge', 'bundle', 'issue', 'conflict', 'segiddinsbundle', 'conflict', 'bundle', 'command', 'exception', 'failsspecifiedinstancehello', 'touchbundle', 'hellohandlecommit', 'conflict', 'problem', 'exception', 'gracefullyerrorbundler', 'issue']",{'issue': 100}
"['buildclose', 'bundlerclose', 'issue', 'bundler']",{'issue': 100}
"['permissive', 'directory', 'temporarydirectory', 'permission', 'temporary', 'mechanism']",{'permission': 100}
"['warning', 'message', 'platform', 'bundle', 'warning', 'empty', 'current', 'message', 'platform', 'installjruby', 'bundler', 'bundle', 'platform', 'dependency', 'tzinfojruby', 'bundle', 'issue', 'message', 'platform', 'existseparator', 'commabundler', 'comma', 'consideredjruby', 'valid', 'platformformat', 'rubygems', 'platform']",{'issue': 100}
"['ccbfc', 'mergemerge', 'bundler', 'issue', 'error', 'template', 'segiddinsfriendlyerrors', 'updateexists', 'reorganization', 'longerfeministyissue', 'opening', 'release', 'people']",{'issue': 100}
"['issue', 'rubocop']",{'issue': 100}
"['indirect', 'feministyversion', 'clean', 'platformclose', 'issue', 'check', 'update']",{'issue': 100}
"['stack', 'sharedhelpersistency', 'errorwould', 'yield', 'crash', 'state', 'usingcount', 'issue', 'usingbundler', 'issuelatest', 'testedcommit', 'cherry']","{'stack': 100, 'crash': 100, 'issue': 100}"
"['dfdae', 'mergebundler', 'stack', 'sharedhelpersistency', 'errorwould', 'yield', 'crash', 'state', 'usingcount', 'issue', 'usingbundler', 'issuelatest']","{'stack': 100, 'crash': 100, 'issue': 100}"
"['error', 'stack', 'sharedhelpers', 'consistencywould', 'yield', 'crash', 'state', 'usingcount', 'issue']","{'stack': 100, 'crash': 100, 'issue': 100}"
"['versionclose', 'issue', 'bundlerhacky']",{'issue': 100}
"['mergemerge', 'bundler', 'resolver', 'indirect', 'lockedfirst', 'resolver', 'dependency', 'lockedclose', 'issue', 'bundlerclosemarcandre']",{'issue': 100}
"['support', 'exitingclose', 'issue', 'bundlercommit', 'cherry', 'bbfdde']",{'issue': 100}
"['fbaad', 'ecaebfffbundler', 'support', 'exitingclose', 'issue', 'bundler']",{'issue': 100}
"['mergemerge', 'bundler', 'worker', 'indirect', 'thread', 'worker', 'thread']",{'thread': 100}
"['lockfile', 'thread']",{'thread': 100}
"['worker', 'thread']",{'thread': 100}
"['edeca', 'mergerenuo', 'segiddins', 'gemnotfounderror', 'issue', 'check', 'outlook', 'alreadygemfile', 'directory', 'similar', 'bundle', 'gemfilenotfound', 'message', 'error', 'installrescue', 'gemfilenotfound', 'solution', 'errorbundler', 'credit']",{'issue': 100}
"['bbdedac', 'mergebundler', 'indirectcompactindex', 'openssl', 'disableclose']",{'OpenSSL': 100}
"['bddcfbundler', 'bundle', 'increase', 'issue']",{'issue': 100}
"['compactindex', 'openssl']",{'OpenSSL': 100}
"['issue', 'friendlyerrors']",{'issue': 100}
"['dadcfcf', 'dadcfc', 'mergemerge', 'checksum', 'hmistry', 'segiddinsimprove', 'message', 'error', 'checksum', 'mismatchimprove', 'message', 'checksum', 'mismatchmessageappear', 'checksum', 'security', 'contentchecksum', 'checksum', 'potential', 'security', 'contentissue', 'deleteinstall', 'bundledespite', 'issue', 'security', 'certainverification', 'bundle', 'checksum', 'configinstall', 'bundlechecksum']","{'Security': 100, 'issue': 100}"
"['segiddinsbundle', 'empty', 'executableclose', 'issue', 'bundler']",{'issue': 100}
"['ccaea', 'mergemerge', 'update', 'conservativebehavior', 'issue', 'consistent', 'strictfilter', 'option', 'bundle', 'result', 'outdateddocument', 'reason', 'comment', 'bundle', 'simpler', 'version', 'alonefilter', 'bundle', 'lockfile', 'currentlynewest', 'installedfilter', 'minor', 'simplywould', 'actuallybccfafaacd', 'output', 'chrismo', 'currentlywould', 'filter', 'patch', 'resolution', 'bundle', 'update', 'unfortunate', 'addedwould', 'behavior', 'swayedbundler', 'comment', 'indirectprevious', 'ground', 'resolver']",{'issue': 100}
"['indirect', 'chrismoreplicate', 'bundle', 'install', 'updatebundle', 'discussion', 'conservativebundler', 'issue', 'updatewould', 'conservativebundle', 'conservativeavailable', 'bundle', 'behavior', 'install', 'dependencyavailable', 'bundle']",{'issue': 100}
"['conservative', 'bundle', 'update', 'install', 'updatingbundle', 'discussion', 'update', 'conservativebundler', 'issue', 'featurewould', 'conservativeavailable', 'bundle', 'behavior', 'install', 'dependencyavailable', 'bundle', 'conservative', 'bundle', 'update', 'optionoption', 'bundle', 'appliesoption', 'updatedescriptive', 'dependencypatch', 'level', 'promotes', 'option', 'addedshown', 'command', 'anticipatingpublic']",{'issue': 100}
"['bundle', 'message', 'error', 'remote', 'bundler', 'incorrect']",{'incorrect': 100}
"['segiddinsinformation', 'platformclose', 'issue', 'bundler']",{'issue': 100}
"['mergebundler', 'setting', 'platform', 'forcingbundlerclose', 'issue', 'bundler']",{'issue': 100}
"['error', 'helpful', 'recent', 'issue']",{'issue': 100}
"['indirectbundle', 'update', 'loadingbundler', 'issue']",{'issue': 100}
"['proper', 'placerubygemsevent', 'problem', 'processexpands', 'system', 'issue', 'deploymentbundlerbundler', 'system', 'neverlater', 'problem', 'rubygemswould', 'string', 'empty', 'version', 'rubygemsbundler', 'wrapper', 'contentwrapper', 'rubygemsbundler', 'replaces', 'implementation', 'rubygemsspecialshort', 'bundler', 'rubygemsmethodbundler', 'support', 'activatedshort', 'circuit', 'bundler', 'alert', 'taozanoticedfcaabincludes', 'short', 'circuit', 'rubygemscontinue', 'bundle']",{'issue': 100}
"['mergemerge', 'jruby', 'bundler', 'error', 'indirectcustom', 'javalang', 'message', 'friendlyerrors', 'print', 'outofmemoryerrorclose', 'issue', 'bundler']",{'issue': 100}
"['mergemerge', 'unvendor', 'bundler', 'index', 'compact', 'indirectclient', 'index', 'compact', 'vendorbundler', 'issue']",{'issue': 100}
"['indirect', 'unuseddefinition', 'warning', 'helpful', 'print', 'dependencyplatformbundler', 'issue', 'address']",{'issue': 100}
"['indirect', 'writabledirectory', 'usable', 'fallbackclose', 'issue', 'bundlerbundler', 'alternativeallenzhao']",{'issue': 100}
"['mergemerge', 'swandale', 'colby', 'issue', 'installation', 'indirectpermission', 'bundler', 'documentation', 'install', 'addedpermission', 'bundler', 'documentation', 'issue', 'deniedunfamiliar', 'system']",{'issue': 100}
"['mergemerge', 'chrismoregressioncommit', 'proper', 'placerubygemsevent', 'problem', 'processexpands', 'system', 'issue', 'deploymentbundlerbundler', 'system', 'neverlater', 'problem', 'rubygemswould', 'string', 'empty', 'version', 'rubygemsbundler', 'wrapper', 'contentwrapper', 'rubygemsbundler', 'replaces', 'implementation', 'rubygemsspecialshort', 'bundler', 'rubygemsmethodbundler', 'support', 'activatedshort', 'circuit', 'bundler', 'alert', 'taozanoticedfcaabincludes', 'short', 'circuit', 'rubygemscontinue', 'bundle']",{'issue': 100}
"['proper', 'placerubygemsevent', 'problem', 'processexpands', 'system', 'issue', 'deploymentbundlerbundler', 'system', 'neverlater', 'problem', 'rubygemswould', 'string', 'empty', 'version', 'rubygemsbundler', 'wrapper', 'contentwrapper', 'rubygemsbundler', 'replaces', 'implementation', 'rubygemsspecialshort', 'bundler', 'rubygemsmethodbundler', 'support', 'activatedshort', 'circuit', 'bundler', 'alert', 'taozabundler', 'short', 'circuit', 'rubygemscontinue', 'bundle', 'problem', 'filingcontribution', 'segiddinspatience', 'report']",{'issue': 100}
"['mergesmall', 'renuo', 'segiddinssmall', 'issue', 'brokencontribute', 'issue']",{'issue': 100}
"['small', 'issue']",{'issue': 100}
"['wantingalready', 'issue', 'includedinstall', 'plugin', 'bundlerequire', 'howeverfails', 'obviouslygemfilenotfound', 'message', 'errorgemfile', 'directory', 'expecteddifferent', 'completelyrescue', 'gemfilenotfound', 'solution', 'errorcredit', 'issuebundlerrubocop', 'offense']",{'issue': 100}
"['indirect', 'promptalways', 'promptclose', 'thinkbundler', 'alternate', 'issue']",{'issue': 100}
"['indirectbundle', 'update', 'loadingbundler', 'issue']",{'issue': 100}
"['ffacdb', 'mergebundler', 'error', 'helpful', 'recent', 'issue']",{'issue': 100}
"['indirectdefault', 'updatingclose', 'issue', 'bundler']",{'issue': 100}
"['eebbbc', 'mergebundler', 'gemfile', 'indirectgemfile', 'lockfile', 'relative', 'storeclose', 'bundler', 'issue']",{'issue': 100}
"['readme', 'issue', 'installation']",{'issue': 100}
"['permission', 'bundler', 'documentation']",{'permission': 100}
"['indirect', 'unknownsuggest', 'bundler', 'option', 'invalidbundler', 'issue']",{'issue': 100}
"['mergemerge', 'segiddins', 'chrismobundle', 'openssl']",{'OpenSSL': 100}
"['mergemerge', 'bundler', 'enable', 'trampoline', 'indirecttarget', 'enable', 'versionbundler', 'issue']",{'issue': 100}
"['bundler', 'update', 'indirectblock', 'update', 'version', 'currentlyclose', 'issue', 'bundlerbundler', 'issue']",{'issue': 100}
"['mergeallenzhao', 'issue', 'indirectfilter', 'credential', 'stderr', 'messageclosebroken']",{'issue': 100}
"['mergemerge', 'entry', 'allenzhao', 'segiddinsrescue', 'security', 'argumenterror', 'explainmightrochesterinnyc']",{'Security': 100}
"['mergemerge', 'jkeiser', 'download', 'indirect', 'retryretry', 'downloadsbundler', 'issue']",{'issue': 100}
"['retry', 'downloadsbundler', 'issue']",{'issue': 100}
"['ceebf', 'mergebundler', 'indirectconflict', 'insensitive', 'resiliencyclose']",{'Sensitive': 90}
"['processclosebundler', 'issue']",{'issue': 100}
"['insensitive', 'cache', 'conflict', 'resiliency']",{'Sensitive': 90}
"['bundle', 'openssl']",{'OpenSSL': 100}
"['indirect', 'setupbundler', 'setup', 'haventstack', 'indirect', 'overflow']",{'overflow': 100}
"['indirect', 'zorbashbinstubs', 'manpage', 'bundlebundler', 'issue']",{'issue': 100}
"['bundler', 'message', 'display', 'version', 'lockedbundler', 'issue', 'message', 'vendor', 'issuecomment', 'postit', 'indirect', 'segiddins']",{'issue': 100}
"['fatal', 'doctor']",{'fatal': 100}
"['command', 'issue', 'diagnose', 'commoncheck', 'commondynamic', 'library', 'brokenbundle', 'specificationdynamic', 'library', 'longerbundler', 'message', 'report']",{'issue': 100}
"['mergeallenzhao', 'issue', 'message', 'search', 'generaterochesterinnyc', 'segiddins']",{'issue': 100}
"['indirect', 'nicklamuroconnection', 'fetcheroverviewtimeout', 'connection', 'setupexcerpt', 'stdlibinitializeaddresshttpversionfalsesocketfalse', 'startedconnectproxyaddressconnection', 'openingopentimeoutopentimeoutunless', 'library', 'persistent', 'error', 'variable', 'connection', 'interface', 'state', 'connection', 'network', 'bundler', 'fecther', 'problem', 'default', 'timeout', 'possible', 'currentlywould', 'stall', 'compactindex', 'fishy', 'consistent', 'excerpt', 'likely', 'thread', 'stdlib', 'seemsreproduce', 'question']",{'thread': 100}
"['indirect', 'nicklamurocompactindex', 'fetcher', 'thread', 'reuseoverviewlibrary', 'multiple', 'compactindex', 'instantiate', 'bundle', 'persistent', 'benefit', 'worker', 'request', 'socket', 'connection', 'thread', 'initiatereturn', 'boost', 'iteration', 'performance', 'thread', 'caller', 'resultingsimple', 'worth', 'bundle', 'quickest', 'manageiq', 'slowest', 'benchmark', 'project', 'collection', 'besides', 'result', 'order', 'fetcher', 'source', 'followingbundler', 'sourceindexbundler', 'sourcebundler', 'sourcebundler', 'moduleunless', 'index', 'downloadingbenchmark', 'metadataunlessbranch', 'command', 'metric', 'usingbundler', 'bundle', 'usable', 'average', 'lowestimprovement', 'share', 'range', 'distribution', 'usableresolverretry', 'requirealmost', 'criterion', 'result', 'thrown', 'matchcolumn', 'majority', 'worker', 'number', 'process']",{'thread': 100}
"['fetcher', 'thread', 'reuselibrary', 'persistent', 'benefitconnection', 'request', 'multiplesocket', 'instantiateacross', 'allowscompactindex', 'iterationbundle', 'worker', 'thread', 'initiatereturn', 'thread', 'caller', 'resultingreuse', 'thread', 'collectediteration', 'performanceboostcouldsimple', 'neverworth', 'bundle', 'worker', 'keepingcalles']",{'thread': 100}
"['mergemerge', 'segiddins', 'nicklamuroresponse', 'debug', 'outputdebug', 'output', 'bundler', 'downloader', 'request', 'fetcher', 'response', 'originaloverviewreturn', 'timing', 'output', 'bundler', 'compactindex', 'helpful', 'request', 'fetcher', 'debug', 'ruling', 'bunch', 'issue', 'thread', 'nicklamuro', 'efceafeee', 'endpoint', 'address', 'addition']","{'issue': 100, 'thread': 100}"
"['mergebundler', 'bundle', 'indirectbundlebundler', 'issue']",{'issue': 100}
"['rescue', 'security', 'argumenterror']",{'Security': 100}
"['mergemerge', 'segiddins', 'chrismoupdate', 'conservativebundler', 'patchquestionpresume', 'patch', 'bundler', 'update', 'vulnerable', 'plugin', 'reason', 'scope', 'advisory', 'properlatest', 'patch', 'weird', 'dependencyrenames', 'class', 'patch', 'opinion', 'value', 'bundler', 'removeolder', 'bundle', 'update', 'inconsistency', 'patch', 'guess', 'parent', 'option', 'regress', 'dependency', 'version', 'backwards', 'minor', 'default', 'molinillo', 'weird', 'proper', 'strictpatch', 'minor', 'option', 'behavior', 'resolution', 'updatingdependent', 'patch', 'level', 'warning', 'update', 'minor', 'instruction', 'reason', 'unlockedwould', 'update', 'sense', 'option', 'install', 'insidedocumentation']",{'vulnerable': 100}
"['empty', 'lockfile', 'common', 'plugin', 'integrationgemfile', 'access', 'stack']",{'stack': 100}
"['issue', 'molinillo', 'segiddinsunusual', 'lookingstart', 'release']",{'issue': 100}
"['pending', 'issue']",{'issue': 100}
"['bundler', 'warning', 'project', 'print', 'version', 'lockedrochesterinnyc', 'indirectunless', 'bundler', 'issue', 'warning', 'update', 'bundler', 'switch', 'access', 'issue', 'system', 'project', 'place', 'versionsince', 'store', 'stilldirectory', 'warning', 'project', 'command', 'version', 'storeclose']",{'issue': 100}
"['issue', 'empty', 'chrismo', 'segiddinsunset', 'emptysorta', 'question', 'circumstance', 'probablecombination', 'bundle', 'existissueprocess', 'string', 'empty', 'bundle', 'portionbundle', 'current', 'local', 'install', 'shebangedbundler', 'installsystem', 'rubygemsempty', 'string', 'current', 'conditionalwhereas', 'false', 'evaluatessystem', 'populatedbundlercommit', 'cherry', 'baedddbdcc']",{'issue': 100}
"['aabdamerge', 'issue', 'empty', 'chrismo', 'segiddinsunset', 'emptysorta', 'question', 'circumstance', 'probablecombination', 'bundle', 'existissueprocess', 'string', 'empty', 'bundle', 'portionbundle', 'current', 'local', 'install', 'shebangedbundler', 'installsystem', 'rubygemsempty', 'string', 'current', 'conditionalwhereas', 'false', 'evaluatessystem']",{'issue': 100}
"['source', 'lockedconclude', 'changecompare', 'parsegemspecs', 'currentlycreates', 'index', 'sourcefilesystem', 'parsedcompare', 'filesystems', 'alwaysconclude', 'changeindex', 'source', 'buildcurrent', 'index', 'alreadyindexprior', 'issue', 'method', 'circuitwould', 'force']",{'issue': 100}
"['mergeallenzhao', 'issue']",{'issue': 100}
"['comment', 'issue']",{'issue': 100}
"['style', 'issue', 'rubocop']",{'issue': 100}
"['issue', 'check', 'source', 'logic']",{'issue': 100}
"['segiddinsworker', 'thread', 'cleanwould', 'protection', 'right', 'compactindex', 'meantime', 'garbagepatch', 'total', 'clean', 'thread', 'number', 'activebundler', 'issue']","{'thread': 100, 'issue': 100}"
"['mergemerge', 'segiddinsworker', 'thread', 'cleanwould', 'protection', 'right', 'compactindex', 'meantime', 'garbagepatch', 'total', 'clean', 'thread', 'number', 'activebundler', 'issue']","{'thread': 100, 'issue': 100}"
"['issue', 'version']",{'issue': 100}
"['issue', 'thread']","{'issue': 100, 'thread': 100}"
"['worker', 'thread']",{'thread': 100}
"['concurrent', 'store', 'index', 'downloadsbundler', 'bundle', 'version', 'processdownload', 'original', 'update', 'ensure', 'processprocess']",{'concurrent': 100}
"['update', 'molinilloclose', 'issue', 'bundlerrelease', 'molinillo', 'cocoapods']",{'issue': 100}
"['bundler', 'checksum', 'indirect', 'mismatcherror', 'helpful', 'checksum', 'mismatch', 'updaterbundler', 'issue']",{'issue': 100}
"['update', 'molinilloclose', 'issue', 'bundlerrelease', 'molinillo', 'cocoapods']",{'issue': 100}
"['mergemerge', 'bundler', 'checksum', 'indirect', 'mismatcherror', 'helpful', 'checksum', 'mismatch', 'updaterbundler', 'issue']",{'issue': 100}
"['speed', 'generation']",{'generation': 100}
"['fbccaee', 'mergealias', 'bundler', 'length', 'rochesterinnyc', 'segiddinsalias', 'length', 'bundler', 'specsetclose']",{'length': 100}
"['alias', 'length', 'bundler', 'specsetclose']",{'length': 100}
"['deefffe', 'mergebronzdoc', 'segiddinscolorize', 'updateclose', 'issue', 'bundler']",{'issue': 100}
"['segiddins', 'molinilloresolver', 'update', 'molinillorelease', 'molinillo', 'cocoapodsclose', 'issue', 'bundler']",{'issue': 100}
"['ignore', 'incorrect', 'bundle', 'semanticexample']",{'incorrect': 100}
"['beebb', 'bdccdemerge', 'message', 'error', 'rochesterinnyc', 'invalidgemspecs', 'message', 'error', 'clarity', 'behavior', 'local', 'invalidgemspec', 'fetch', 'incorrect', 'message', 'error', 'helpful', 'local', 'instructs', 'contains', 'attempt', 'immediatelyaddress']",{'incorrect': 100}
"['minor', 'option', 'minor', 'specify', 'command', 'ability', 'majorfeature', 'bundler', 'issue']",{'issue': 100}
"['bfaece', 'mergedtognazzini', 'continuation', 'issuecommentgemspec', 'gemfile', 'bundler', 'issue', 'evaluatedgemfile', 'bundler', 'option', 'breakremember', 'gemfile', 'relative', 'bundler', 'update']",{'issue': 100}
"['segiddins', 'molinilloresolver', 'update', 'molinilloclose', 'issue', 'bundlerclose', 'issue', 'bundler']",{'issue': 100}
"['update', 'digestreduce', 'length']",{'length': 100}
"['usage', 'thread']",{'thread': 100}
"['crash', 'index']",{'crash': 100}
"['cbcfde', 'mergerequest', 'issue', 'mergeoutput']",{'issue': 100}
"['sensitive', 'mirror']",{'Sensitive': 100}
"['server', 'thread']",{'thread': 100}
"['mergemerge', 'catch', 'method', 'indirect', 'rochesterinnycappropriate', 'catch', 'warning', 'friendlyerrors', 'downloader', 'friendlyerrors', 'openssl', 'nomethoderror', 'module', 'loaderror']",{'OpenSSL': 100}
"['crash', 'gemhelper']",{'crash': 100}
"['crash', 'gemhelper']",{'crash': 100}
"['issue', 'style']",{'issue': 100}
"['smellsblue', 'index', 'gemfile', 'index', 'sourceaware', 'issue', 'index', 'possibility', 'comment', 'rubygems', 'solution', 'bundler', 'constructor', 'subclass', 'super', 'fetcher', 'rubygems', 'implementation', 'rubygems', 'mightfirst', 'feedback']",{'issue': 100}
"['friendly', 'segiddinsfilesystem', 'permission', 'friendly', 'errormodification', 'directory', 'errno', 'piece', 'system', 'error', 'introduces', 'result', 'sharedhelpers', 'eacces', 'friendly', 'originalwithin', 'error', 'futureclosecloseoicgrmdd', 'error']",{'permission': 100}
"['eedbf', 'eedafce', 'mergerequest', 'issue', 'mergeignore', 'empty']",{'issue': 100}
"['mergerequest', 'issue', 'mergeerror']",{'issue': 100}
"['friendly', 'errorinstall', 'ambiguous', 'unknown', 'fatal', 'argumentseparatedirectory', 'wrong', 'parse', 'cache', 'error', 'perhapspersists', 'directory', 'cache', 'error', 'removinginstall', 'bundlefetchingfatal', 'wrong', 'parse', 'cache', 'error', 'command', 'perhapspersists', 'directory', 'cache', 'error']",{'fatal': 100}
"['friendly', 'errorinstall', 'ambiguous', 'unknown', 'fatal', 'argumentseparatedirectory', 'wrong', 'parse', 'cache', 'error', 'perhapspersists', 'directory', 'cache', 'error', 'removinginstall', 'bundlefetchingfatal', 'wrong', 'parse', 'cache', 'error', 'command', 'perhapspersists', 'directory', 'cache', 'error']",{'fatal': 100}
"['length', 'module']",{'length': 100}
"['indirectprivate', 'access', 'repository', 'credentialauthorization', 'credential', 'request', 'rubygems', 'support', 'configusername', 'password', 'providepassword', 'bundler', 'bundle', 'username', 'configusername', 'password', 'exportpersonal', 'private', 'oauth', 'repository', 'token', 'especiallybasic', 'oauth', 'server', 'password', 'private', 'deploy', 'repository', 'plain', 'credential', 'security', 'github']",{'Security': 100}
"['mergemerge', 'bundler', 'error', 'resolver', 'segiddinsresolver', 'errorclose', 'issue', 'bundler']",{'issue': 100}
"['dcafemaster', 'request', 'mergenative', 'generates', 'incorrect', 'standalone']",{'incorrect': 100}
"['private', 'access', 'repository', 'credentialauthorization', 'credential', 'request', 'supportbundle', 'rubygems', 'support', 'configusername', 'password', 'providepassword', 'bundler', 'bundle', 'username', 'configusername', 'password', 'private', 'personal', 'repositorytoken', 'oauthbasic', 'oauth', 'exportenables', 'private', 'deploy', 'server', 'password', 'production', 'repository', 'sharedplain', 'credential', 'security']",{'Security': 100}
"['native', 'generates', 'incorrect', 'standalone']",{'incorrect': 100}
"['permission', 'setting', 'readable', 'error']",{'permission': 100}
"['improves', 'message', 'configpermissionerror', 'permission', 'issue']","{'permission': 100, 'issue': 100}"
"['validateclose', 'issue', 'bundler']",{'issue': 100}
"['dependency', 'satisfiedsuppose', 'gemfile', 'specifiescertain', 'requiresprerelease', 'dependency', 'happensbundlecause', 'graph', 'bundler', 'errorexecutesdependencyhigher', 'rubygemschangeignore', 'forcingprevents', 'prereleasegithub', 'issue', 'address']",{'issue': 100}
"['accda', 'mergemerge', 'timmoore', 'issue', 'request', 'source', 'lockedgemfile']",{'issue': 100}
"['mergemerge', 'shorter', 'timmoore', 'issue', 'error', 'request', 'report', 'searchfirst', 'issue', 'message', 'error', 'search']",{'issue': 100}
"['issue', 'message', 'error', 'search']",{'issue': 100}
"['issue', 'number', 'changelogclose']",{'issue': 100}
"['global', 'thread']",{'thread': 100}
"['method', 'thread', 'memoization', 'class']",{'thread': 100}
"['incorrect', 'fetcher']",{'incorrect': 100}
"['direct', 'requirement', 'bundler', 'bundle', 'issue', 'expose', 'scenario', 'install', 'version']","{'issue': 100, 'expose': 100}"
"['mergemerge', 'multi', 'timmoore', 'issue', 'request', 'sourcesource']",{'issue': 100}
"['timmoore', 'issue', 'requesttighten', 'check', 'config']",{'issue': 100}
"['debug', 'permission', 'print', 'error']",{'permission': 100}
"['permission', 'error']",{'permission': 100}
"['abcddcdfmerge', 'timmoore', 'issue', 'request', 'bindirtemplate', 'executables', 'location']",{'issue': 100}
"['expose', 'source', 'scenario', 'dependency']",{'expose': 100}
"['issue', 'repair']",{'issue': 100}
"['efcfb', 'mergemerge', 'timmoore', 'issue', 'credential', 'request', 'source', 'alwayscredential']",{'issue': 100}
"['private', 'issue']",{'issue': 100}
"['mergemerge', 'timmoore', 'issue', 'request', 'source', 'unlockedsource', 'format']",{'issue': 100}
"['sourcebundler', 'issue']",{'issue': 100}
"['mergemerge', 'timmoore', 'issue', 'warning', 'request', 'sourcesource', 'strip', 'ambiguous', 'credential']",{'issue': 100}
"['improvebundler', 'issue']",{'issue': 100}
"['building', 'parallel', 'issue', 'fixedremains', 'ensureinstallationincludes', 'installer', 'rubygems']",{'issue': 100}
"['building', 'parallel', 'issue', 'fixedremains', 'ensureinstallationincludes', 'installer', 'rubygems']",{'issue': 100}
"['tentativebinstubs', 'generation', 'entire', 'thread', 'install', 'important', 'seemsexception']","{'generation': 100, 'thread': 100}"
"['tentativebinstubs', 'generation', 'entire', 'thread', 'install', 'important', 'seemsexception']","{'generation': 100, 'thread': 100}"
"['updatecertificate', 'openssl', 'connectintermediate', 'important', 'rubygems', 'example', 'certificate']",{'OpenSSL': 100}
"['fcbafmerge', 'timmoore', 'issue', 'request', 'source', 'comparison', 'frozencomparison', 'frozen']",{'issue': 100}
"['feefae', 'mergeblock', 'timmoore', 'issue', 'deployment', 'request', 'sourceblock', 'bundle', 'deployment', 'source', 'install']",{'issue': 100}
"['makefileclose', 'compilation', 'issue']",{'issue': 100}
"['openssl', 'insteadautoload', 'persistent', 'openssl', 'request', 'actuallystart']",{'OpenSSL': 100}
"['check', 'openssl', 'update']",{'OpenSSL': 100}
"['bundle', 'policy', 'hardcode', 'option', 'trust', 'openssl', 'behindinstall', 'security', 'policy']","{'OpenSSL': 100, 'Security': 100}"
"['worker', 'switch', 'thread']",{'thread': 100}
"['bundle', 'policy', 'hardcode', 'option', 'trust', 'openssl', 'behindinstall', 'security', 'policy']","{'OpenSSL': 100, 'Security': 100}"
"['makefileclose', 'compilation', 'issue']",{'issue': 100}
"['revert', 'request', 'issue', 'mergelater', 'rubinius', 'rubygems', 'recognizeeither', 'rubinius', 'rubygemsanother', 'exclude', 'rubiniuscommit', 'reverts', 'reversingchange']",{'issue': 100}
"['abcbfrequest', 'issue', 'mergerubinius', 'ignore', 'bundle', 'local', 'install']",{'issue': 100}
"['insecure', 'documentation', 'discouragemanpage']",{'insecure': 100}
"['security', 'issuehappen']",{'Security': 100}
"['mergemerge', 'timmoore', 'issue', 'policy', 'error', 'request', 'securitynameerror']",{'issue': 100}
"['mdkent', 'issue', 'request', 'revertcommit', 'reverts', 'reversingchange']",{'issue': 100}
"['bfeedrequest', 'issue']",{'issue': 100}
"['bundler', 'issue', 'current', 'insteadanothertraverse', 'effecient']",{'issue': 100}
"['aceaaa', 'mergemerge', 'sharma', 'master', 'request', 'shreyinput', 'bundle', 'issue', 'terminal']",{'issue': 100}
"['install', 'thread']",{'thread': 100}
"['fcfafmerge', 'umask', 'yarotsky', 'binstubs', 'requestbinstubs', 'umask', 'permission']",{'permission': 100}
"['binstubs', 'umask', 'permission']",{'permission': 100}
"['worker', 'thread', 'shutdown']",{'thread': 100}
"['dbbdf', 'mergerequest', 'mergesigint', 'worker', 'thread', 'shutdown']",{'thread': 100}
"['worker', 'thread', 'shutdown']",{'thread': 100}
"['issue', 'method']",{'issue': 100}
"['security', 'version', 'rubygems', 'update']",{'Security': 100}
"['bfabc', 'mergemerge', 'bundler', 'error', 'worker', 'cleanup', 'worker', 'thread']",{'thread': 100}
"['bundle', 'rspec', 'invalidreturn', 'status', 'expectsbundler', 'issue']",{'issue': 100}
"['efcdaedbmerge', 'bundler', 'parallel', 'request', 'safety', 'thread', 'installinstall', 'safety', 'parallel', 'thread']",{'thread': 100}
"['index', 'installer', 'thread']",{'thread': 100}
"['worker', 'thread', 'exception', 'enque']",{'thread': 100}
"['script', 'repro', 'issue', 'example']",{'issue': 100}
"['issue', 'entry', 'changelog']",{'issue': 100}
"['mergerequest', 'issue']",{'issue': 100}
"['defberequest', 'issue', 'bundle', 'message', 'error']",{'issue': 100}
"['proper', 'supportgithub', 'issue']",{'issue': 100}
"['fdfdcf', 'mergerequest', 'issue', 'mergepropmt', 'improves']",{'issue': 100}
"['mechanism', 'catchcatch', 'fiber', 'thread', 'dubbedevery', 'maximum', 'stack', 'reduceswould', 'depth', 'recursion', 'gemfilestack', 'patch', 'jruby', 'addressbundler', 'iterative', 'building', 'state', 'sincetrick', 'stack']","{'thread': 100, 'stack': 100}"
"['additional', 'thread']",{'thread': 100}
"['prohibit', 'thread']",{'thread': 100}
"['loaderrors', 'delay', 'catch', 'rubygems', 'security']",{'Security': 100}
"['openssl', 'rubygems']",{'OpenSSL': 100}
"['buildpatch', 'attempt', 'issue']",{'issue': 100}
"['faeccmaster', 'request', 'mergeversion', 'proper', 'openssl', 'check']",{'OpenSSL': 100}
"['openssl', 'version']",{'OpenSSL': 100}
"['policy', 'security']",{'Security': 100}
"['issue', 'securityerror']",{'issue': 100}
"['mergemerge', 'policy', 'cosmiccat', 'request', 'securitypolicy', 'command', 'option', 'install', 'security']",{'Security': 100}
"['option', 'security', 'entry', 'update', 'config']",{'Security': 100}
"['policy', 'command', 'option', 'install', 'securityvalue', 'appropriate', 'accepts', 'policy', 'command', 'optionpolicy', 'event', 'update', 'install', 'security', 'module']",{'Security': 100}
"['extract', 'openssl', 'loadingclose']",{'OpenSSL': 100}
"['expectation', 'issue']",{'issue': 100}
"['crazy', 'trace', 'stack', 'mitchellh']",{'stack': 100}
"['restoresince', 'issue']",{'issue': 100}
"['generation', 'garbage', 'lockfile']",{'generation': 100}
"['remote', 'issue', 'upstream', 'master']",{'issue': 100}
"['affeef', 'eebfee', 'mergemerge', 'jruby', 'request', 'openssl', 'openssl', 'jruby']",{'OpenSSL': 100}
"['injector', 'injection', 'class']",{'injection': 100}
"['default', 'rightlyjruby', 'issue', 'platform', 'throwingrequires', 'jruby', 'openssl', 'problem', 'application', 'repeatedlybundler', 'jruby', 'openssljruby', 'openssl', 'howeverwould', 'preinstalledpatch', 'openssl', 'place', 'statementbundler', 'workedissue', 'closeddavid']","{'issue': 100, 'OpenSSL': 100}"
"['issue', 'message']",{'issue': 100}
"['issue', 'conflict', 'marker']",{'issue': 100}
"['faaefcbundler', 'request', 'bowsersenior', 'mergecouldnt', 'similar', 'worth', 'bundler', 'issue', 'system']",{'issue': 100}
"['instruction', 'openssl']",{'OpenSSL': 100}
"['issue', 'revampremove', 'issueclarity', 'instruction', 'rewrite', 'herokuticket']",{'issue': 100}
"['mergerequest', 'issue', 'nwwatsongemfile', 'level', 'submodules', 'issue']",{'issue': 100}
"['beddfa', 'mergegemspec', 'request', 'soulcutter', 'invalidgemspec', 'workaround', 'issue', 'invalid']",{'issue': 100}
"['fatal', 'error', 'exception']",{'fatal': 100}
"['fatal', 'error', 'exception']",{'fatal': 100}
"['issue', 'example', 'changeescape', 'preformattedcause', 'undefined', 'complain']",{'issue': 100}
"['installerror', 'thing', 'bundler', 'issue', 'message', 'failure', 'report', 'install']",{'issue': 100}
"['sensitive', 'array']",{'Sensitive': 100}
"['syntax', 'error', 'gracefulinitial', 'issue']",{'issue': 100}
"['changelog', 'github', 'issue']",{'issue': 100}
"['global', 'issue', 'empty', 'config']",{'issue': 100}
"['local', 'issue', 'empty', 'config']",{'issue': 100}
"['messagebundle', 'incorrect', 'update']",{'incorrect': 100}
"['carlhudaclean', 'bundle', 'check', 'revision', 'length']",{'length': 100}
"['bundler', 'issue', 'error', 'heroku']",{'issue': 100}
"['clean', 'bundle', 'check', 'revision', 'length']",{'length': 100}
"['adedf', 'mergebundler', 'bensie', 'request', 'mergedefault', 'install', 'executablerbenv', 'discussionsstephenson', 'rbenv', 'issue']",{'issue': 100}
"['revert', 'issue', 'ownedcommit', 'reverts']",{'issue': 100}
"['issue', 'rubygems']",{'issue': 100}
"['issue', 'activation']",{'issue': 100}
"['issue', 'version', 'spork', 'update']",{'issue': 100}
"['issue', 'spork', 'discus']",{'issue': 100}
"['issue', 'instruction', 'update']",{'issue': 100}
"['stable', 'request', 'mergerelative', 'issue', 'installation', 'location']",{'issue': 100}
"['bundler', 'generation', 'fetcher']",{'generation': 100}
"['rubygems', 'issue', 'version', 'update']",{'issue': 100}
"['relative', 'issue', 'installation', 'location', 'window']",{'issue': 100}
"['feddee', 'mergerequest', 'patchgroup', 'thread', 'rubyonrails']",{'thread': 100}
"['group', 'thread', 'rubyonrails']",{'thread': 100}
"['umask', 'permission']",{'permission': 100}
"['mergegoneflyin', 'request', 'mergeliner', 'issue']",{'issue': 100}
"['color', 'bundle', 'issue', 'sequence']",{'issue': 100}
"['uncaught', 'issue', 'report', 'exception', 'github']",{'issue': 100}
"['relative', 'occurs', 'bundle', 'issue', 'current', 'command', 'release']",{'issue': 100}
"['deletion', 'issue']",{'issue': 100}
"['exception', 'overflow']",{'overflow': 100}
"['optional', 'command', 'binary', 'generation']",{'generation': 100}
"['bundler', 'function', 'incorrect']",{'incorrect': 100}
"['incorrect', 'bundle', 'command', 'display', 'config']",{'incorrect': 100}
"['double', 'bundler', 'issue', 'carlhuda', 'quote', 'command']",{'issue': 100}
"['double', 'bundler', 'issue', 'carlhuda', 'quote', 'command']",{'issue': 100}
"['switch', 'issue', 'binary', 'window']",{'issue': 100}
"['switch', 'issue', 'binary', 'window']",{'issue': 100}
"['documentation', 'issue', 'helpful']",{'issue': 100}
"['factor', 'issue']",{'issue': 100}
"['issue', 'lawrence', 'curtis', 'thanks']",{'issue': 100}
"['gemspec', 'option', 'exposure']",{'Exposure': 100}
"['incorrect', 'check', 'thing']",{'incorrect': 100}
"['initial', 'management', 'generation']",{'generation': 100}
"['output', 'insane', 'issue']",{'issue': 100}
"['crash', 'jruby']",{'crash': 100}
"['definition', 'generation']",{'generation': 100}
"['thing', 'issue', 'plugin', 'weird', 'rubygemcommit', 'reverts']",{'issue': 100}
"['bundle', 'issue']",{'issue': 100}
"['relative', 'issue', 'sample']",{'issue': 100}
"['issue', 'default', 'method', 'option']",{'issue': 100}
"['incorrect', 'readme', 'sample', 'update']",{'incorrect': 100}
