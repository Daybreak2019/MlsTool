message,fuzzy
"['mergemerge', 'request', 'issue', 'block', 'troessnerissue', 'block', 'request']",{'issue': 100}
"['issue', 'block', 'request']",{'issue': 100}
"['parser', 'requireupdate', 'dependency', 'parserallow', 'necessary', 'parser', 'concurrent', 'installationrubocopversion', 'disallowedversion', 'install', 'parsersupport', 'officiallyversion', 'support', 'parser']",{'concurrent': 100}
"['mergemerge', 'request', 'issue', 'troessner', 'refinementassign', 'class', 'module']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'navigation', 'troessner', 'navigation', 'nilcheck']",{'issue': 100}
"['mergemerge', 'request', 'reject', 'issue', 'style', 'comment', 'troessnererror', 'legacy', 'comment', 'format']",{'issue': 100}
"['efcabmerge', 'request', 'issue', 'isolate', 'climate', 'troessnerdependency', 'climate', 'isolate']",{'issue': 100}
"['request', 'message', 'issue']",{'issue': 100}
"['fefbd', 'mergemerge', 'request', 'issue', 'ataru', 'troessnerabsorb', 'ataru']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'troessnerensure', 'default', 'method', 'expression']",{'issue': 100}
"['request', 'issue', 'module', 'troessner', 'dynamic', 'detect']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'exception', 'class', 'print', 'troessnerexception', 'class', 'print']",{'issue': 100}
"['mergemerge', 'request', 'locale', 'posix', 'issue', 'troessnerlocale']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'prima', 'troessner', 'method', 'donnareport', 'prima', 'method', 'donna', 'definition']",{'issue': 100}
"['mergemerge', 'request', 'matcher', 'issue', 'troessner', 'configmatcher', 'config']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'troessner', 'empowerempower']",{'issue': 100}
"['bbfdfmerge', 'request', 'private', 'issue', 'comment', 'troessnerprivate', 'comment']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'uncommunicative', 'report', 'uncommunicative', 'parameter']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'irresponsible', 'module']",{'issue': 100}
"['incompatible', 'sequence', 'string', 'escapeincompatible', 'sequence', 'crash', 'string', 'escapeexampleerror', 'incompatible', 'literal', 'contains', 'sequence', 'escapeerror', 'incompatible', 'pocke', 'literal', 'parseerror', 'parser', 'contains', 'syntaxerror', 'sequence', 'rescue', 'source', 'escapepocke', 'sourcepockepockepocke', 'smellpockepocke', 'reportpocke', 'reportpocke', 'block', 'commandpocke', 'commandpocke', 'commandpocke', 'commandpocke', 'executepocke', 'requiredpockepockechangeissue', 'whitequark', 'parser']",{'crash': 100}
"['sickill', 'issue', 'rainbowcould', 'imagecache', 'codeclimate']",{'issue': 100}
"['mergemerge', 'request', 'check', 'incorrect', 'troessner', 'exampleincorrect', 'example', 'check']",{'incorrect': 100}
"['incorrect', 'example', 'checklogic', 'example']",{'incorrect': 100}
"['fingerprint', 'climate', 'reporteridentify', 'climate', 'issue', 'rathermessage', 'smellexample', 'changeclasscharlie', 'delta', 'bravoconstant', 'message', 'warningchangeconstantclimate', 'wouldpoint', 'remediation', 'light', 'weightsomewhere', 'identifiablecontext', 'manualdispatchbelieve']",{'issue': 100}
"['daebdmerge', 'request', 'issue', 'progress', 'troessnerprogress']",{'issue': 100}
"['request', 'issue', 'check', 'troessneroperator', 'navigation', 'check', 'detect']",{'issue': 100}
"['injection', 'dependency']",{'injection': 100}
"['mergemerge', 'request', 'boddhisattva', 'incorrect', 'methodsmell', 'incorrect', 'method']",{'incorrect': 100}
"['incorrect', 'method']",{'incorrect': 100}
"['mutant', 'chance', 'finishingsolvescreates', 'mutant', 'infinite', 'mutationmutant', 'trace', 'stack', 'chokinggenerates', 'infinite']",{'stack': 100}
"['mergemerge', 'request', 'super', 'issue', 'utility', 'function', 'troessnerargument', 'super', 'reference']",{'issue': 100}
"['request', 'attribute', 'issue', 'troessnerrespect', 'comment']",{'issue': 100}
"['cabfdmerge', 'request', 'issue']",{'issue': 100}
"['bccef', 'mergeignore', 'request', 'issue', 'troessner', 'ensure', 'default']",{'issue': 100}
"['mergemerge', 'request', 'issue']",{'issue': 100}
"['miscellaneous', 'issueclean', 'candidatemethod', 'dataclumpdetector', 'configure', 'fullysmell', 'context', 'knowledge', 'sourcespecific', 'select', 'examiner', 'source', 'configkeywords', 'constant', 'conditionalsmelldetector', 'method', 'methodcontextreport', 'output', 'refactorreport', 'output', 'allowpublictodos', 'issue', 'fixmes']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'psych', 'troessnerensure', 'psych']",{'issue': 100}
"['ceddemerge', 'request', 'increase', 'length', 'rubocops', 'troessnerincrease', 'length', 'rubocop']",{'length': 100}
"['increase', 'length', 'rubocop']",{'length': 100}
"['hotfix', 'version', 'issue', 'release']",{'issue': 100}
"['constructor', 'revert', 'memoization', 'access', 'ivarsreverts', 'committroessner', 'revert', 'issue', 'reason']",{'issue': 100}
"['cefbdc', 'mergemerge', 'request', 'issue', 'troessner', 'reportreport']",{'issue': 100}
"['eefbd', 'mergemerge', 'request', 'issue', 'multiline', 'troessner']",{'issue': 100}
"['functionalityclass', 'internalchange', 'sourceargument', 'consitencyupdate', 'documentation', 'purpose', 'dependencysuitable', 'issue', 'installationseems', 'formatterinternal', 'matcher', 'doucmentation', 'rspec', 'update']",{'issue': 100}
"['explicit', 'jruby', 'jruby', 'property', 'issue', 'longerexpectedjruby', 'njruby', 'warning', 'property', 'usingproperty', 'jruby', 'unknown', 'warningproperty', 'jruby', 'unknown', 'warningproperty', 'jruby', 'unknown', 'warningproperty', 'jruby', 'unknown', 'warningexpectation', 'rspecerror', 'report', 'featureerror', 'report', 'featurerspec']",{'issue': 100}
"['mergemerge', 'request', 'order', 'comment', 'troessner', 'featureexplain', 'issue', 'order']",{'issue': 100}
"['issue', 'order']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'troessner', 'featurelvasgn']",{'issue': 100}
"['request', 'issue', 'troessnernewline']",{'issue': 100}
"['issue', 'troessnerannotation', 'cucumber']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'readme', 'update', 'troessnercorrect', 'readme', 'format', 'output']",{'issue': 100}
"['bdbdfmerge', 'request', 'command', 'issue', 'troessner', 'optionorganize', 'command', 'option']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'jruby', 'troessnerexport', 'jruby']",{'issue': 100}
"['eabacmerge', 'request', 'issue', 'unparser', 'troessnerunparser', 'issue']",{'issue': 100}
"['unparser', 'issue', 'pinningcurrent', 'unparser', 'versionversion', 'unparser', 'installerrorerror', 'unparser']",{'issue': 100}
"['fbbaamerge', 'request', 'troessner', 'issue', 'compatibilitybackward', 'alias']",{'issue': 100}
"['mergemerge', 'request', 'length', 'limit', 'rubocops', 'troessnerlength', 'limit', 'rubocops']",{'length': 100}
"['length', 'limit', 'rubocops']",{'length': 100}
"['mergemerge', 'request', 'issue', 'empty', 'comment', 'troessner', 'sourceempty']",{'issue': 100}
"['edddcmerge', 'request', 'issue', 'troessner', 'iteratorsblock', 'iterators']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'version', 'update', 'troessner', 'supportupdate', 'minimum', 'version']",{'issue': 100}
"['aedfd', 'mergemerge', 'request', 'issue', 'parser', 'parse', 'troessnerparse', 'parser']",{'issue': 100}
"['dcdfbamerge', 'request', 'issue', 'troessner', 'supportsupport']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'troessner', 'rubocop', 'configstart', 'rubocop']",{'issue': 100}
"['dadacd', 'mergemerge', 'request', 'clean', 'issue', 'debugger', 'troessnerclean', 'debugger']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'troessner', 'requirerequire']",{'issue': 100}
"['request', 'issue', 'loosen', 'troessner', 'dependencyrubyruby', 'dependency', 'loosen']",{'issue': 100}
"['request', 'issue']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'troessner', 'parameter', 'sequelignore', 'method', 'parameter']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'troessner', 'parameter', 'underscoreuncommunicative', 'parameter']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'default', 'troessner', 'quietissue', 'default']",{'issue': 100}
"['mergemerge', 'request', 'alternative', 'issue', 'troessner', 'option', 'sanitizenumber']",{'issue': 100}
"['mergemerge', 'request', 'duplicate', 'issue', 'refactor', 'troessner', 'methodsmell']",{'issue': 100}
"['mergemerge', 'request', 'clean', 'issue', 'troessner', 'treedresserclean']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'troessner', 'clumpsimplify', 'dataclump', 'implementation']",{'issue': 100}
"['mergemerge', 'request', 'matcher', 'issue', 'simplify', 'troessnersimplify', 'shouldreek', 'matcher']",{'issue': 100}
"['mergemerge', 'request', 'matcher', 'issue', 'troessnerimprove', 'smellofmatcher']",{'issue': 100}
"['issue', 'single', 'github', 'option']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'troessner', 'optioncombination', 'option']",{'issue': 100}
"['eaaebemerge', 'request', 'issue', 'dotfile']",{'issue': 100}
"['integer', 'method', 'string']",{'integer': 100}
"['issue', 'weird']",{'issue': 100}
"['subclass', 'issue']",{'issue': 100}
"['statement', 'condition', 'crash']",{'crash': 100}
"['issue', 'github']",{'issue': 100}
"['incorrect', 'commandline']",{'incorrect': 100}
"['incorrect', 'statement']",{'incorrect': 100}
