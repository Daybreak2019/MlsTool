message,fuzzy
"['class', 'shadow', 'shardingsphere', 'issue', 'projectclass', 'shadow', 'shardingsphere', 'issue', 'projectclass', 'shadow', 'shardingsphere', 'method', 'issueclass', 'shadow', 'shardingsphere', 'issue']",{'issue': 100}
"['issue', 'initializationfixedfixedfixedfixedupdateupdateupdatemethod', 'errorcheckstylecheckstylecheckstyleerrortableupdateintegration', 'updateupdateupdateupdateupdate']",{'issue': 100}
"['distsql', 'english', 'documentation', 'issue', 'syntax']",{'issue': 100}
"['reportfeature', 'process', 'reportcollection', 'check', 'ternary', 'class', 'utils', 'object', 'condition', 'operator', 'replacedfederate', 'moduleadjust', 'order', 'import', 'sequencerewrite', 'moduleengine', 'rewrite', 'infra', 'shardingsphere', 'moduleengine', 'rewrite', 'infra', 'shardingsphere', 'moduleengine', 'rewrite', 'infra', 'shardingsphere', 'modulemodifymodifyrefactorconfig', 'datasource', 'errorsupport', 'error', 'tablefound', 'columnfound', 'columncompletepacket', 'postgresql', 'correctadjust', 'datatypeadjust', 'boolean', 'shadowadjust', 'boolean', 'shadowconstructor', 'refactorcheckstyleremove', 'definition', 'generic', 'rulebuilder', 'uselessjavadocjavadocremove', 'definition', 'generic', 'rulebuilder', 'uselesscheck', 'shardingrule', 'uselessformatcheck', 'shardingrule', 'uselesspackage', 'generic', 'correctcheck', 'ordercreate', 'algorithm', 'checkcreate', 'algorithm', 'checkcreate', 'algorithm', 'checkcreate', 'algorithm', 'checkcreate', 'algorithm', 'checkcreate', 'algorithm', 'checkcreate', 'algorithm', 'checkparse', 'password', 'errorparse', 'password', 'errorvisit', 'modify', 'classcreate', 'generator', 'checkcreate', 'generator', 'checkcreate', 'generator', 'execution', 'statement', 'proxy', 'execution', 'statement', 'proxy', 'retrievereversecloseresultupdate', 'errorupdate', 'document', 'authentication', 'proxyupdate', 'document', 'authentication', 'proxymanual', 'update', 'document', 'proxyclause', 'select', 'statement', 'oracledefinition', 'clausesegment', 'subquery', 'indexalias', 'modifyclausepredicateconstraint', 'oracleselect', 'calcite', 'error', 'optimizeselect', 'calcite', 'logic', 'optimizeerrorextract', 'semicolon', 'table', 'multi', 'errorupdate', 'errorreadme', 'contributor', 'graphreadme', 'update', 'contributor', 'graphreadme', 'updateupdatefeature', 'standardization', 'usage', 'orderstandard', 'shardingorderstandard', 'readwrite', 'orderstandard', 'order', 'discoverystandard', 'encrypt', 'orderparameter', 'calcite', 'optimizeauthentication', 'proxyformat', 'authorityrefactor', 'postgresql', 'proxyrefactor', 'postgresql', 'proxycause', 'error', 'emptycheckstylerefactor', 'postgresql', 'protocol', 'packetmistake', 'optional', 'classcommand', 'foundfrontend', 'postgresqlreplace', 'threadlocalcheckstylepolishstatus', 'docker', 'update', 'maven', 'imageformat', 'authorityupdate', 'status', 'mavenupdate', 'image', 'status', 'dockerdefaultabsence', 'binary', 'format', 'rowdescriptionfixturefixturefixturemodule', 'proxy', 'renamemodule', 'proxy', 'renamemodule', 'proxy', 'renamemodule', 'proxy', 'renamevalidate', 'logic', 'indexvalidate', 'logic', 'indexcheckstylereturn', 'actual', 'postgresqlrefactor', 'minorrefactor', 'minorrefactor', 'minormodifycheck', 'table', 'duplicateremove', 'uselessfixturerefactor', 'oracleresult', 'calcite', 'method', 'error', 'calcite', 'method', 'error', 'selectcreatecreatefailedmodifier', 'finalinterfacerefactorinterfaceroute', 'logic', 'statement', 'datasource', 'optimize', 'selectroute', 'logic', 'statement', 'datasource', 'optimize', 'selectbroadcast', 'route', 'logic', 'optimize', 'update', 'documentexecuteassertionfield', 'renamerefactorrefactorrefactorrefactorrefactorrefactorrefactorrefactorrefactorrefactorpostgresql', 'format', 'column', 'incorrect', 'datarowpostgresql', 'format', 'column', 'incorrect', 'datarowmethod', 'javadocformatstatement', 'polish', 'structurerenamerenamerenamepackage', 'refactorrefactor', 'encrypt', 'minorcheck', 'table', 'duplicaterefactor', 'encrypt', 'minorstylerevisestylerevise', 'formatrefactor', 'distsql', 'documentcheck', 'table', 'duplicaterefactor', 'distsql', 'documentremove', 'distsql', 'parse', 'phase', 'uselessformatversion', 'distsql', 'title', 'english', 'update', 'sequenceversion', 'distsql', 'title', 'english', 'updatedistsql', 'sequenceformatformatchinesesysbench', 'benchmarkparser', 'preparerefactorrefactorupdate', 'releasemodifyrefactorupdate', 'releasemilestonechangeexample', 'updateparserrenamecompile', 'errorupdateoracle', 'analyzeparser', 'refactor', 'adaptstatic', 'singleton', 'insteadpackage', 'parser', 'polishparseastnodeintroduce', 'distsql', 'class', 'object', 'trista', 'panjuanzhang', 'huang', 'localhost']",{'incorrect': 100}
"['postgresql', 'format', 'column', 'incorrect', 'datarowpostgresql', 'format', 'column', 'incorrect', 'datarowmethod', 'javadocformat']",{'incorrect': 100}
"['integer', 'configure', 'datasource', 'password']",{'integer': 100}
"['factory', 'refactor', 'schemabuilder', 'thread']",{'thread': 100}
"['daemon', 'schemabuilder', 'thread']",{'thread': 100}
"['integer', 'binloginteger', 'binlog', 'integer', 'binlog', 'valuecheckstylecheckstyle']",{'integer': 100}
"['execution', 'finish', 'process', 'cleanupmethod', 'finishexecutionid', 'invokeexecutionidprocess', 'enablevariable', 'cleanup', 'thread', 'localreview']",{'thread': 100}
"['postgresql', 'state', 'transaction', 'proxy', 'correctquery', 'postgresql', 'state', 'transaction', 'ready', 'correctpostgresql', 'transaction', 'command', 'completion', 'correcttransaction', 'state', 'incorrect']",{'incorrect': 100}
"['refactor', 'issue', 'tablescontext']",{'issue': 100}
"['statement', 'database', 'issue']",{'issue': 100}
"['integer', 'column']",{'integer': 100}
"['unnecessary', 'thread']",{'thread': 100}
"['table', 'issuecommit', 'table', 'issue', 'conditionblank', 'issueintegration', 'issue']",{'issue': 100}
"['algorithm', 'incorrect']",{'incorrect': 100}
"['issue', 'initialize', 'bugfixbugfixjavadoccheckstyle']",{'issue': 100}
"['rewrite', 'revert', 'encrypt', 'issue', 'togetherreverts']",{'issue': 100}
"['encrypt', 'issue', 'encryptparser', 'projection', 'index', 'columnlogic', 'actualtablename', 'table', 'routeunit']",{'issue': 100}
"['concurrent', 'issue']","{'concurrent': 100, 'issue': 100}"
"['broadcast', 'table', 'index', 'issueformatbroadcast', 'table', 'index', 'issue']",{'issue': 100}
"['support', 'integration', 'scenariobatchdmlit', 'integration', 'thread', 'issue', 'safety']","{'thread': 100, 'issue': 100}"
"['broadcast', 'table', 'issue', 'batchrevise', 'formatrefactortable', 'boradcast', 'issue', 'batch']",{'issue': 100}
"['uselessrefactor', 'basedmlitrenamerefactorrefactor', 'thread', 'multipleremove']",{'thread': 100}
"['issuecommit', 'revertengine', 'configuration', 'rewrite', 'error', 'issue']",{'issue': 100}
"['issue', 'englishconduct', 'issue', 'english']",{'issue': 100}
"['update', 'conduct', 'issue']",{'issue': 100}
"['update', 'conduct', 'issue']",{'issue': 100}
"['conduct', 'issue']",{'issue': 100}
"['multiple', 'thread', 'failure']",{'thread': 100}
"['updateversion', 'update', 'compile', 'error', 'lombok', 'issue', 'rzwitserloot']",{'issue': 100}
"['result', 'route', 'incorrect']",{'incorrect': 100}
"['groovy', 'closure', 'thread']",{'thread': 100}
"['concurrent', 'insert']",{'concurrent': 100}
"['concurrent', 'truncateconcurrent', 'truncaterefinecomment']",{'concurrent': 100}
"['append', 'parameter', 'issueremove', 'useless', 'fixturerefactorrefactorappend', 'parameter', 'issue']",{'issue': 100}
"['append', 'parameter', 'issue']",{'issue': 100}
"['ceafbc', 'mergerequest', 'terrymanu', 'mergesource', 'issue']",{'issue': 100}
"['source', 'issue']",{'issue': 100}
"['request', 'taojintianxia', 'mergetable', 'issue']",{'issue': 100}
"['table', 'issue']",{'issue': 100}
"['testcase', 'insertvaluetestcase', 'insertvaluebuild', 'issue', 'checkstyleinsertvalue', 'checkstyleconduct', 'followinsertvaluetest']",{'issue': 100}
"['logic', 'ignore', 'column', 'sensitive', 'encrypttableupdate', 'encrypttablelogic', 'ignore', 'column', 'sensitive', 'encrypttableremovecipher']",{'Sensitive': 100}
"['incorrect', 'document']",{'incorrect': 100}
"['incorrect', 'document']",{'incorrect': 100}
"['refactorrefactorrefactor', 'method', 'renamereturn', 'incorrect', 'valueindent', 'formatwithout', 'space', 'banlk', 'formatdatanodes', 'refactorremove', 'uselesswithout', 'space', 'banlk']",{'incorrect': 100}
"['thread', 'string']",{'thread': 100}
"['source', 'thread']",{'thread': 100}
"['update', 'template', 'issue']",{'issue': 100}
"['optimize', 'clusteroptimize', 'clusterheartbeat', 'thread']",{'thread': 100}
"['update', 'nullpoint', 'issue']",{'issue': 100}
"['service', 'defect', 'service', 'defect', 'concurrentlyrequest', 'followsformer', 'composite', 'replaces', 'computeifabsent', 'atomic', 'operation', 'thread', 'patch', 'checkrevert', 'indentation']",{'thread': 100}
"['apache', 'duplicate', 'update', 'shardingsphere', 'issue', 'bugfix', 'paramterclause', 'logic', 'duplicate', 'update', 'encrypt', 'bugfix', 'missingapache', 'testcasebugfixapache', 'shardingsphere', 'issueclause', 'duplicate', 'update', 'paramterbugfixapache', 'shardingsphere', 'issueclause', 'logic', 'duplicate', 'update', 'encrypt', 'missingremove', 'wrong', 'implementupstream', 'mergeimproveimproveimproveimproveimproveimproveblank', 'redundantupdatedocument', 'formatupdatestyle', 'ajust']",{'issue': 100}
"['thread', 'async']",{'thread': 100}
"['multiple', 'schemametadatasource', 'different', 'thread', 'multipleremove', 'commentrefactorreplace', 'executor', 'shardingsphere', 'servicecommentrename']",{'thread': 100}
"['suggestion', 'issue']",{'issue': 100}
"['translation', 'picture', 'issue']",{'issue': 100}
"['encryption', 'service', 'advantage', 'middleware', 'translation']",{'encryption': 100}
"['encryption', 'translation', 'process']",{'encryption': 100}
"['encryption', 'translation']",{'encryption': 100}
"['double', 'decryption', 'value', 'object', 'decrypt']",{'encryption': 90}
"['inline', 'algorithm', 'configuration', 'inline', 'algorithm', 'configuration', 'initial', 'issue']",{'issue': 100}
"['schema', 'supportinterface', 'delete', 'issueinterface', 'delete', 'class', 'issue', 'implementremove', 'empty', 'issue']",{'issue': 100}
"['issueconfig', 'center', 'support', 'issueregistry', 'center', 'support', 'issueinvalid', 'issueremove', 'empty', 'issuemethod', 'issue', 'center', 'issue', 'notify']",{'issue': 100}
"['insensitive', 'tableschemametadata', 'column', 'encrypt', 'fieldreview']",{'Sensitive': 90}
"['update', 'documentupdate', 'document', 'issuedelete', 'image', 'issue']",{'issue': 100}
"['refactor', 'orchestrationrefactor', 'issueclass', 'issue', 'renamemodify', 'structurerefactor', 'breadcrumbmodifyerror']",{'issue': 100}
"['methodconfig', 'addedconfiguration', 'issue', 'checkstyle']",{'issue': 100}
"['assertion', 'issue', 'index']",{'issue': 100}
"['assertion', 'issue', 'index']",{'issue': 100}
"['assertion', 'issue', 'index']",{'issue': 100}
"['assertion', 'issue', 'index']",{'issue': 100}
"['uniformed', 'table', 'issue', 'table', 'issue', 'uniformed', 'table', 'error', 'issue', 'objectinner', 'private', 'class', 'method', 'issue', 'extract', 'renameremove', 'inner', 'class', 'issue', 'final', 'fieldremove', 'inner', 'class', 'issue', 'issueoptimize', 'exception', 'issueremove', 'unnecessary', 'issue', 'localremove', 'append', 'operation', 'unnecessary', 'error', 'issue']",{'issue': 100}
"['example', 'error', 'issue']",{'issue': 100}
"['absent', 'encrypt', 'alias', 'projectionrewriteremove', 'logic', 'column', 'cipher', 'mappingrefactorrefactor']",{'cipher': 100}
"['github', 'command', 'resource', 'issue', 'releaseclone', 'issuecompare', 'github', 'issue', 'source', 'releaseupdatecompare', 'github', 'issue', 'source', 'release']",{'issue': 100}
"['clone', 'issue']",{'issue': 100}
"['example', 'incorrect', 'proxy', 'reference']",{'incorrect': 100}
"['retry', 'thread']",{'thread': 100}
"['return', 'incorrect', 'responsereturn', 'incorrect', 'responserefinecheckstylereference', 'columnreference', 'parametercomment']",{'incorrect': 100}
"['support', 'postgresql', 'refactorstream', 'refactor', 'resultsetsupport', 'postgresql', 'quote', 'identifier', 'stringrefactor', 'deadlock', 'avoidrefactorrefactor', 'sqlbuilderrefactor']",{'deadlock': 100}
"['fileds', 'encryption', 'uppercase', 'supportfileds', 'support', 'encryption', 'uppercase', 'bugfixmodify', 'formatstream', 'modifyremove', 'modifystyle', 'modify', 'formatcheckstyle', 'modify', 'correspondencemodify', 'optimizeoptional', 'return', 'modify', 'logic']",{'encryption': 100}
"['update', 'refactor', 'issue']",{'issue': 100}
"['update', 'security']",{'Security': 100}
"['assessment', 'shardingsphere', 'maturityadjust', 'display', 'formatadjustupdateupdate']",{'assessment': 100}
"['folder', 'security']",{'Security': 100}
"['encrypt', 'decoupleremovepackage', 'refactorrewriteengine', 'renamerefactorrefactorrefactorrefactorrefactorrefactorrefactorrefactorrefactorencrypt', 'togetherrenamemergerenamerenamerenamejavadocrefactorrefactorsplitcollection', 'refactorrenamerefactorrenameparametersawarerewriteengine', 'logic', 'cipher', 'insertquery', 'logic', 'column', 'insert', 'rewriteengine', 'plain', 'assistedrewriteengine', 'logic', 'value', 'insertappendremove', 'uselessclean', 'method']",{'cipher': 100}
"['statement', 'generic', 'optimize', 'insert', 'avoidremovecolumnnames', 'generatedkey', 'decouplerefactorrefactor', 'constructorroute', 'generatedkey', 'optimize', 'modulepackage', 'renamemergegetsqlstatement', 'optimize', 'value', 'constant', 'rewrite', 'moduleupdateupdatebranch', 'incubator', 'shardingsphere', 'issue', 'apacheconflictroute', 'shardingsphere', 'apache', 'complexroute', 'standard', 'shardingsphere', 'apache']",{'issue': 100}
"['smallint', 'integer', 'tinyint']",{'integer': 100}
"['mergesunbufu', 'request', 'mergetable', 'incorrect', 'filter']",{'incorrect': 100}
"['table', 'incorrect', 'filtermodify']",{'incorrect': 100}
"['effecb', 'debebee', 'mergetristazero', 'request', 'master', 'mergeupdate', 'document', 'module', 'encryption']",{'encryption': 100}
"['dfbbftristazero', 'request', 'support', 'encryption', 'assistedquery', 'plaincolumn', 'ciphercolumn']",{'encryption': 100}
"['sensitive', 'string']",{'Sensitive': 100}
"['cbeaafitsccn', 'request', 'mergechange', 'document', 'issue']",{'issue': 100}
"['issue', 'documentatchange', 'issue', 'documentat']",{'issue': 100}
"['issue', 'documentatchange', 'issue', 'documentat']",{'issue': 100}
"['safety', 'thread']",{'thread': 100}
"['cabec', 'bdeeec', 'mergerequest', 'cherrylzhao', 'mergebroadcast', 'child', 'context', 'transaction', 'thread']",{'thread': 100}
"['mergerequest', 'tuohai', 'mergereturn', 'integer', 'column', 'tinyint', 'value', 'boolean']",{'integer': 100}
"['showindex', 'issue', 'showcolumns']",{'issue': 100}
"['update', 'table', 'length']",{'length': 100}
"['engine', 'parse', 'package', 'generation']",{'generation': 100}
"['engine', 'parse', 'generation', 'reference']",{'generation': 100}
"['engine', 'parse', 'oracle', 'generation', 'pagination']",{'generation': 100}
"['engine', 'generation']",{'generation': 100}
"['parse', 'engine', 'generation']",{'generation': 100}
"['parse', 'engine', 'mysql', 'generation']",{'generation': 100}
"['engine', 'parse', 'statement', 'mysql', 'process', 'generation']",{'generation': 100}
"['engine', 'others', 'parse', 'statement', 'process', 'generation']",{'generation': 100}
"['engine', 'parse', 'statement', 'table', 'process', 'generation']",{'generation': 100}
"['engine', 'parse', 'statement', 'process', 'generation', 'index']",{'generation': 100}
"['engine', 'column', 'parse', 'statement', 'process', 'generation']",{'generation': 100}
"['status', 'engine', 'parse', 'statement', 'table', 'process', 'generation']",{'generation': 100}
"['engine', 'parse', 'statement', 'table', 'process', 'generation']",{'generation': 100}
"['engine', 'parse', 'statement', 'database', 'process', 'generation']",{'generation': 100}
"['engine', 'parse', 'statement', 'process', 'generation']",{'generation': 100}
"['engine', 'parse', 'statement', 'process', 'generation']",{'generation': 100}
"['issue', 'value']",{'issue': 100}
"['param', 'issue']",{'issue': 100}
"['datasource', 'incorrect', 'table', 'spring']",{'incorrect': 100}
"['rewrite', 'issuerewrite', 'issue']",{'issue': 100}
"['incorrect', 'repair']",{'incorrect': 100}
"['mergetristazero', 'request', 'mergerewrite', 'select', 'encryption']",{'encryption': 100}
"['incubator', 'apache', 'shardingsphere', 'issue']",{'issue': 100}
"['useless', 'length']",{'length': 100}
"['solid', 'mergeevent', 'frontend', 'group', 'thread', 'worker']",{'thread': 100}
"['mergerequest', 'cherrylzhao', 'deadlock', 'proxy']",{'deadlock': 100}
"['frontend', 'group', 'thread', 'backend', 'workerreplace', 'relation', 'eventloopgroup', 'commandexecutor', 'class', 'usergroup', 'thread', 'executorservice']",{'thread': 100}
"['channel', 'thread', 'closecurrent', 'channel', 'thread', 'closecurrent', 'channel', 'thread']",{'thread': 100}
"['status', 'atomicreference', 'thread', 'connection']",{'thread': 100}
"['integer', 'multimap']",{'integer': 100}
"['update', 'release', 'issue']",{'issue': 100}
"['permission', 'update']",{'permission': 100}
"['register', 'concurrent', 'multi', 'resource', 'thread']","{'concurrent': 100, 'thread': 100}"
"['insensitive', 'shardingcolumn']",{'Sensitive': 90}
"['alias', 'insensitive']",{'Sensitive': 90}
"['update', 'release', 'issue']",{'issue': 100}
"['update', 'release', 'issue']",{'issue': 100}
"['mybatis', 'issue', 'insert']",{'issue': 100}
"['example', 'artifactid', 'nodep', 'issue']",{'issue': 100}
