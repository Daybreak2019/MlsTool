message,fuzzy
"['validator', 'cloud', 'issue', 'false', 'requiredparameter', 'check', 'validatorvalue', 'default', 'check', 'false', 'option', 'requiredvalue', 'default', 'check', 'false', 'option', 'requiredconst', 'optional', 'update']",{'issue': 100}
"['check', 'securityparse', 'server', 'security', 'option', 'checkgroupparameter', 'validation', 'checkrunnerstart', 'server', 'addedparse', 'server', 'custom', 'check', 'security', 'option', 'addedcheck', 'scriptreformat', 'outputserver', 'check', 'checkinitial', 'database', 'check']",{'Security': 100}
"['beforesave', 'customobjectidobject', 'beforesave', 'regression', 'issue']",{'issue': 100}
"['bcrypt', 'upgrade', 'version']",{'bcrypt': 100}
"['schemacachettl', 'workingschemacachettl', 'checkingschemacachettl', 'issue', 'roach', 'chang']",{'issue': 100}
"['classname', 'column', 'length', 'invalidcolumn', 'invalid', 'preventclassname', 'beforesave', 'responseimprove']",{'length': 100}
"['rotation', 'filekeyencryption', 'filekeyremove', 'option', 'fileadapterensure', 'getfiledata', 'promisesecretkey', 'switch', 'filekeyrotation', 'filekeydecryption', 'oldkey', 'nokey', 'legacy', 'encryption', 'filekeycleanconsistant', 'fsadapterfilekey']",{'encryption': 100}
"['stack', 'cloudupdateupdate']",{'stack': 100}
"['setting', 'potential', 'undefined', 'issuegeonear', 'aggregationquery', 'parameter', 'geonear', 'issue', 'potential', 'issue', 'setting', 'potentialparse', 'server', 'dicussion', 'communityduplicate']",{'issue': 100}
"['token', 'issuer', 'handleupdatedplease', 'server', 'version', 'parse', 'adapter', 'original', 'value', 'issue', 'morning', 'prefixedupdateupdateupdateupdate']",{'issue': 100}
"['detail', 'security']",{'Security': 100}
"['request', 'mergegraphql', 'breach', 'viewerremove', 'comment']",{'breach': 100}
"['present', 'access', 'contextpresent', 'access', 'contextparse', 'server', 'discussion', 'issue', 'community', 'featurecontext', 'presentobject', 'dplewis', 'findlewis']",{'issue': 100}
"['idempotencymiddleware', 'idempotency', 'routerroute', 'idempotency', 'addedfixedwithout', 'request', 'ignore', 'featurecomment', 'changedstorage', 'adapter', 'inconsistend', 'specificationtrigger', 'notificationtravis', 'triggertravis', 'triggertravis', 'triggeroption', 'rebuilt', 'definitionimport', 'header', 'allowedtypescript', 'fixedclass', 'system', 'helpertypescript', 'fixedparameter', 'postgresparameter', 'postgres', 'removedincorrect', 'index', 'creation', 'index', 'issue', 'postgres', 'index', 'issue', 'postgres', 'index', 'issue', 'postgres', 'index', 'issue', 'postgres', 'index', 'issue', 'postgres', 'index', 'issue', 'postgres', 'index', 'issue', 'postgres', 'postgres', 'issuetravis', 'triggeraddednumber', 'postgres', 'issuereadme', 'github', 'addedchange', 'valuetravis', 'triggertravis', 'triggertravis', 'triggercoverage', 'increasetravis', 'triggerregex', 'configuration', 'syntax', 'removedremovedtravis', 'triggerupdatedupdatedupdatedupdatedupdatetravis']",{'issue': 100}
"['bucket', 'filekey', 'encryption', 'usingencryption', 'filekeyremove', 'option', 'fileadapterensure', 'getfiledata', 'promisesecretkey', 'switch', 'filekey']",{'encryption': 100}
"['postgres', 'config', 'paramsparse', 'felxible', 'connection', 'native', 'config', 'paramsoriginal', 'forgot', 'clientconvert', 'buffer', 'example', 'string', 'postgres', 'consistant']",{'buffer': 100}
"['query', 'username', 'insensitive', 'email', 'errorupdateinstead', 'package', 'postgis', 'postgres', 'installingupdateupdateupdatesolution', 'version', 'postgis', 'service', 'default', 'install', 'guess', 'postgres', 'extra', 'postgresqlcaseinsensitive', 'postgis', 'address', 'minimum', 'requirementcontribution', 'image', 'postgis', 'section', 'postgres', 'updatedpostgrespassword', 'postgres', 'necessary', 'docker', 'contribution', 'wordingimage', 'official', 'creates', 'macjr', 'postgres', 'command', 'container', 'postgres', 'scratch', 'sleep', 'parse', 'commandlatest', 'changeinitialfixedcaseinsensitive', 'postgis', 'address', 'minimum', 'requirementcontribution', 'image', 'postgis', 'section', 'postgres', 'updatedpostgrespassword', 'postgres', 'necessary', 'docker', 'contribution', 'wordingimage', 'official', 'creates', 'macjr', 'postgres', 'command', 'container', 'postgres', 'scratch', 'sleep', 'parse', 'commandlatest', 'changeinitialfixedadapter', 'constraint', 'issue', 'regular', 'postgres', 'ensureindexversion', 'adapter', 'wrong', 'method', 'ensureindex', 'addessuggestion', 'removedfixedpostgresadapter', 'fixedsmallbranch', 'reverteddocker', 'contribute', 'commandability', 'method', 'buildquery', 'setup', 'sequential', 'ability', 'index', 'executes', 'comparsons', 'search', 'postgres', 'analyze', 'version', 'lookingcomparison', 'check', 'return', 'searchexplain', 'username', 'insensitivity', 'aggregate', 'method', 'field', 'issue', 'aggregate', 'method', 'method', 'aggregate', 'revertedusername', 'email', 'issue', 'check', 'aggregate', 'method', 'usingresult', 'query', 'droptables', 'beforeeach', 'plain', 'alreadyimage', 'netrecon', 'order', 'docker', 'username', 'style', 'default', 'compatibile', 'server', 'postgis', 'backwards', 'document', 'postgres', 'command', 'cinader', 'arthur', 'acinader']","{'Sensitive': 90, 'issue': 100}"
"['issue', 'travis', 'postgresinstalls', 'ability', 'temporary', 'postgres', 'mongolibdir', 'access', 'postgis', 'script', 'postgres', 'mongo', 'errorcompatibility', 'respective', 'aforementioned', 'script', 'random', 'versionerror', 'random', 'seeingpostgressecond', 'roundroundroundroundrandom', 'postgres', 'issueright', 'random', 'native', 'postgres', 'error', 'postgres', 'instability', 'seemsissuepostgresfailuremessage', 'success', 'cloudmessageequal', 'hello', 'equal', 'errorjasmineparse', 'server', 'community', 'travis', 'buildprocess', 'internalpostgresfailuremessage', 'success', 'cloudmessageequal', 'hello', 'equal', 'errorjasmineparse', 'server', 'community', 'travis', 'buildprocess', 'internalmessageequal', 'equal', 'errorjasmineparse', 'server', 'community', 'travis', 'buildprocess', 'internaltravis', 'postgres', 'scriptsettingshrink', 'footprint', 'postgres', 'support', 'scriptfixedtravis', 'cleaningremovedclean', 'finishingsince', 'removedupdatepostgres', 'removedimage', 'default', 'travis', 'postgis', 'method', 'postgres', 'issue', 'postgres', 'testcase', 'config', 'dependenceadapter', 'issue', 'potential', 'postgrestravis', 'leverage', 'scriptchange', 'install', 'connection', 'scriptfixedcontains', 'default', 'permission', 'issue', 'postgres', 'stoppingcheckingrevert', 'script', 'install', 'versiondefault', 'leavepostgres', 'uninstall', 'scriptstart', 'service', 'posgres', 'postgres', 'removeddefault', 'postgres', 'usingstart', 'beforstill', 'serviceconfigs', 'switchconfigs', 'switchstart', 'properlyinstallaition', 'postgres', 'seeinginstallaition', 'postgres', 'argument', 'usingversion', 'documentation', 'reflectstart', 'postgres', 'restart', 'insteadfuture', 'ensure', 'extrareload', 'postgres', 'restart', 'restart', 'postgres', 'connectswitch']","{'issue': 100, 'permission': 100}"
"['bcrypt', 'update', 'versionpackage', 'chore', 'update', 'bcrypt', 'versionpackage', 'lockfile', 'chore', 'update']",{'bcrypt': 100}
"['bcrypt', 'update', 'versionpackage', 'chore', 'update', 'bcrypt', 'versionpackage', 'lockfile', 'chore', 'update']",{'bcrypt': 100}
"['websocket', 'unhandle', 'rejectionwebsocket', 'unhandle', 'rejectionparse', 'server', 'close', 'issue', 'websocket', 'preventspecific', 'point', 'bonus', 'sends', 'payload', 'return', 'clientsocketpayload', 'reference']",{'issue': 100}
"['signup', 'insensitivedelete', 'alwayssimple', 'failingusername', 'insensitive', 'validatingsensitivityemail', 'validation', 'insensitivecomment', 'update', 'reflect', 'changewordsmithery', 'grammarfirst', 'insensitive', 'mongo', 'preformantchange', 'insensitive', 'parametercaseinsensitivesupport', 'postgreshandle', 'properlycaseinsensitive', 'insensitive', 'insteadcommenet', 'reclect', 'update', 'currentmysterycreate', 'insensitive', 'indeciessupport', 'insensitive', 'mongoemail', 'username', 'checkspecialkey', 'anothermaintain', 'ordermaintain', 'order', 'paramsparam', 'sequence', 'oceanseems', 'causewould', 'somethingchange', 'gettingexplaincreation', 'verifycaseinsensitive', 'indexprostgressobject', 'mongocollection', 'happychangelogtravisstatic', 'method', 'reference', 'properlyconfirm', 'anonymouscollide', 'username', 'diamond', 'lewis', 'findlewis']",{'Sensitive': 90}
"['bcrypt', 'update', 'versionpackage', 'chore', 'update', 'bcrypt', 'versionpackage', 'lockfile', 'chore', 'update']",{'bcrypt': 100}
"['granular', 'pointer', 'permissionoperatioon', 'pointer', 'permissionaddfield', 'permission']",{'permission': 100}
"['command', 'volumedocker', 'command', 'volumeparse', 'server', 'issue', 'community']",{'issue': 100}
"['object', 'beforefind', 'improveobject', 'beforefind', 'improveparse', 'server', 'close', 'issue', 'communityexclude', 'query', 'modify']",{'issue': 100}
"['websocketserver', 'error', 'handlingwebsocketserver', 'error', 'handlingparse', 'server', 'close', 'issue', 'communityprevents', 'example', 'livequery']",{'issue': 100}
"['bcrypt', 'update', 'versionpackage', 'chore', 'update', 'bcrypt', 'versionpackage', 'lockfile', 'chore', 'update']",{'bcrypt': 100}
"['character', 'warning', 'special', 'sensitive', 'appid', 'addedcharacter', 'warning', 'special', 'sensitive', 'appid']",{'Sensitive': 100}
"['support', 'center', 'appleparse', 'server', 'issue', 'community']",{'issue': 100}
"['afterfind', 'object', 'preventparse', 'server', 'issue', 'community']",{'issue': 100}
"['video', 'range', 'streamrequest', 'video', 'range', 'streamparse', 'server', 'close', 'issue', 'communityparse', 'server', 'similar', 'communitysafari', 'issuerename', 'getfilestream']",{'issue': 100}
"['server', 'issuecomment', 'community', 'issue']",{'issue': 100}
"['field', 'permission', 'supportconflict', 'custom', 'permission', 'class', 'movedpointer', 'regex', 'permissionsupport', 'pointer', 'operation', 'usinguserfield', 'protectedfields', 'readuser', 'readuserfields']",{'permission': 100}
"['buffer', 'notice']",{'buffer': 100}
"['pointer', 'array', 'permission', 'support', 'addedpointer', 'array', 'permission', 'support', 'addedpointer', 'array', 'permission', 'support', 'addedpostgressimplify']",{'permission': 100}
"['prototype', 'builtinsprototype', 'builtinsparse', 'server', 'close', 'issue', 'communitybuiltins', 'prototype', 'referencereplace']",{'issue': 100}
"['value', 'default', 'fieldfield', 'schema', 'option', 'mongo', 'metadataoption', 'validation', 'requireddefault', 'undefined', 'value', 'fieldredisclass', 'option', 'fieldvalue', 'default', 'validateweirdanothertrigger', 'beforesave', 'issue', 'small', 'unset']",{'issue': 100}
"['graphql', 'option', 'configurationparse', 'customisation', 'configuration', 'graph', 'class', 'testedcache', 'controller', 'config', 'graphql', 'awaits', 'choreremove', 'chore', 'checkcache', 'refactorthrow', 'validation', 'chore', 'group', 'errortransformation', 'graphqlschema', 'validation', 'chore', 'controllerusage', 'validation', 'refactor', 'config', 'graphql', 'refactor', 'schemaseparate', 'movedgraphqlschema', 'default', 'configs', 'class', 'return', 'incorrectgraphqlschema', 'account', 'staleness', 'update', 'check', 'config', 'refactorgraphqlserver', 'classfields', 'compatability', 'issue', 'backwards', 'breakage', 'avoidconsistency', 'rename', 'numerous', 'validityminor', 'refactoringminor', 'chore', 'cleanup', 'graphql', 'syntaxclass', 'volatilevalue', 'update', 'config', 'return', 'parsegraphql', 'graphqlconfigmultiple', 'config', 'issuedefault', 'postgres', 'postgresgraphql', 'directivedirectivedirective', 'includechange', 'classfieldstransformation', 'safer', 'field', 'necessarygraphql', 'import', 'incorrect']","{'issue': 100, 'incorrect': 100}"
"['graphql', 'custom', 'schemaempowers', 'parse', 'cloud', 'application', 'custom', 'graphql', 'developerparse', 'customization', 'function', 'server', 'close', 'cloud', 'issue', 'community', 'address', 'custom', 'developer', 'schemagraphql', 'graphqlpathquery', 'extendcustom', 'namespacecustomresolve', 'hello', 'stringresolve', 'hello', 'stringuserecho', 'resolvelevel', 'query', 'empty', 'namespace', 'object', 'mutation', 'field', 'returnparse', 'argument', 'function', 'server', 'specifies', 'cloud', 'notify', 'field', 'graphql', 'directive', 'regular', 'schemaasync', 'helloworld', 'return', 'hellouserecho', 'asyncreturnready', 'customquerycustomhellohellouserecho', 'username', 'somefolkusernamereturncustomworld', 'helloworld', 'hellouserechousername', 'somefolk']",{'issue': 100}
"['event', 'livequery', 'field', 'handleparse', 'server', 'close', 'issue', 'communityoriginal', 'object', 'logic']",{'issue': 100}
"['facebook', 'appsecretparse', 'server', 'close', 'issue', 'community']",{'issue': 100}
"['apple', 'providerapple', 'providerparse', 'server', 'close', 'issue', 'communityremove', 'option']",{'issue': 100}
"['flakyparse', 'server', 'close', 'issue', 'communityparse', 'building', 'server', 'community']",{'issue': 100}
"['option', 'redis', 'livequeryparse', 'server', 'close', 'issue', 'community']",{'issue': 100}
"['beforesave', 'trigger', 'permission', 'validatesproblem', 'reproducetrigger', 'beforesave']",{'permission': 100}
"['parse', 'collection', 'large', 'postgres', 'classcount', 'slowness', 'postgres', 'changedcommit', 'query', 'estimate', 'complexvariable', 'handlign', 'doesntsyntax', 'errorquery', 'finalunless', 'query', 'approximate', 'postgres', 'complexhandlingparse', 'collection', 'large', 'issue', 'errorresult', 'approximation', 'limitinglonger', 'postgres', 'suppresslonger', 'postgres', 'removedchange', 'errorupdatedexclude', 'removedobject', 'method', 'postgresreturnedcount', 'estimatemongo']",{'issue': 100}
"['invisible', 'issue', 'displayinvisible', 'issue']",{'issue': 100}
"['bcrypt', 'update', 'versionpackage', 'chore', 'update', 'bcrypt', 'versionpackage', 'lockfile', 'chore', 'update']",{'bcrypt': 100}
"['filter', 'protectedfields', 'sensitive', 'default', 'field']",{'Sensitive': 100}
"['security', 'handlebarhandlebar', 'update', 'security', 'wycatsrelease', 'wycatsrelease', 'wycats', 'changelogcommits', 'dependabot', 'support']",{'Security': 100}
"['bcrypt', 'update', 'versionpackage', 'chore', 'update', 'bcrypt', 'versionpackage', 'lockfile', 'chore', 'update']",{'bcrypt': 100}
"['bcrypt', 'update', 'versionpackage', 'chore', 'update', 'bcrypt', 'versionpackage', 'lockfile', 'chore', 'update']",{'bcrypt': 100}
"['releaseremove', 'scriptnodemon', 'dependenceis', 'problematicevent', 'security', 'stream', 'debacle']",{'Security': 100}
"['bcrypt', 'update', 'versionpackage', 'chore', 'update', 'bcrypt', 'versionpackage', 'lockfile', 'chore', 'update']",{'bcrypt': 100}
"['bcrypt', 'update', 'versionpackage', 'chore', 'update', 'bcrypt', 'versionpackage', 'lockfile', 'chore', 'update']",{'bcrypt': 100}
"['trigger', 'livequery', 'issue', 'delete', 'unexpectedtrigger', 'function', 'beforedelete', 'cloud', 'livequery', 'delete', 'response', 'local', 'machine', 'retest', 'passedretry', 'cloud', 'travis']",{'issue': 100}
"['google', 'function', 'validatinggoogle', 'function', 'validatingvalue', 'postdata', 'default', 'param', 'validation', 'check', 'usingargument', 'buffer', 'typeerror', 'string', 'errorattempt', 'authenticate', 'thrownquick', 'adapter', 'authentication', 'twitter', 'checkvalidation', 'usingcorrect', 'google', 'adapter']",{'buffer': 100}
"['bcrypt', 'update', 'versionpackage', 'chore', 'update', 'bcrypt', 'versionpackage', 'lockfile', 'chore', 'updategreenkeeper', 'lockfile']",{'bcrypt': 100}
"['babelchange', 'regenerate', 'runningtimingcontribution', 'update', 'guidecoverage', 'inline', 'sourcemaps', 'generation', 'restore']",{'generation': 100}
"['template', 'update', 'issue']",{'issue': 100}
"['flexiblewould', 'access', 'beforedelete', 'issue', 'object', 'calledensure', 'right', 'masterkey', 'attempt', 'method', 'improves', 'usingbeforesave', 'beforedelete', 'wrong', 'ensure', 'scenario', 'beforefindinsufficient']",{'issue': 100}
"['releaseproper', 'issue', 'ensure']",{'issue': 100}
"['template', 'update', 'issue']",{'issue': 100}
"['package', 'chore', 'update', 'bcrypt', 'version']",{'bcrypt': 100}
"['sensitive', 'default']",{'Sensitive': 100}
"['package', 'chore', 'update', 'bcrypt', 'version']",{'bcrypt': 100}
"['masterkey', 'issue', 'purge']",{'issue': 100}
"['issue', 'object', 'creationcanaddfield', 'unset', 'fieldremovedcheck']",{'issue': 100}
"['socket', 'server', 'event', 'livequery', 'crash', 'invalidmessage', 'commandexistingrequiredcomment', 'update']",{'crash': 100}
"['refactors', 'management', 'configurationinterface', 'configurationoptionsingle', 'interface', 'generate', 'configurationoption', 'comment', 'definitionlogic', 'improvesobject', 'circular', 'issue', 'object', 'loggingundefineddefaultdefaultdefault', 'restoreddefault', 'platform', 'mergeaddress', 'visualimprovesvalue', 'ability', 'default', 'comment', 'trailingdefault', 'platform', 'definitionvalue', 'proper', 'option', 'default', 'variousmethod', 'quick', 'option', 'livequery', 'incorrectstart', 'server', 'ignoremiddleware', 'setting', 'customrefactors', 'configvalidates', 'appcachecontroller', 'creation', 'extractsimpler', 'parseserverparseserver', 'serverurl', 'inferencereview']",{'issue': 100}
"['beforesave', 'increment', 'causingbeforesave', 'numeric', 'issue', 'couldhasownproperty', 'check', 'insteadredundant']",{'issue': 100}
"['undefined', 'livequery', 'issue', 'location']",{'issue': 100}
"['pointer', 'permission', 'issueoverridequery', 'pointer', 'reduces', 'permission', 'whithreturn', 'neededconstraint', 'query', 'additional', 'returnlength']",{'permission': 100}
"['package', 'chore', 'update', 'bcrypt', 'version']",{'bcrypt': 100}
"['geopoint', 'postgres', 'issue']",{'issue': 100}
"['class', 'level', 'permissioncount', 'class', 'level', 'permissionlevel', 'fixup', 'permission', 'property', 'object']",{'permission': 100}
"['nears', 'query', 'multiple', 'avoidlimit', 'operation', 'mongo', 'restructuringquery', 'server', 'query', 'multiplelevel', 'whereas', 'wouldlevelparse', 'server', 'issue', 'community']",{'issue': 100}
"['shutdown', 'necessaryhandler', 'shutdown', 'necessarycause', 'shutdown', 'issue', 'process', 'registeringshutdown', 'graceful']",{'issue': 100}
"['client', 'update', 'mongodbintopology', 'replset', 'issue', 'exception', 'getconnection', 'catch', 'mongodynamic', 'issue', 'command', 'usingpromotevalues', 'monitoringcursorid', 'aggregate', 'command', 'listcollectionsmethod', 'group', 'profilinginfoversion', 'stream', 'update', 'readableuncover', 'issuedatabase', 'collectionname', 'writeconcerns', 'fixedreadpreference', 'strict', 'getmore', 'promotevalues', 'testcase', 'addedlevel', 'collection', 'ignoreundefinedupdatemany', 'issue', 'multi', 'option', 'spratthandle']",{'issue': 100}
"['query', 'pointer', 'issue', 'arraytransform', 'array', 'equality']",{'issue': 100}
"['unsafe', 'livequeryquery', 'server', 'master', 'issue']",{'issue': 100}
"['package', 'chore', 'update', 'bcrypt', 'version']",{'bcrypt': 100}
"['package', 'chore', 'update', 'bcrypt', 'version']",{'bcrypt': 100}
"['issue', 'reproduceforce', 'value']",{'issue': 100}
"['package', 'chore', 'update', 'bcrypt', 'version']",{'bcrypt': 100}
"['classlatest', 'update', 'permission', 'syntax']",{'permission': 100}
"['support', 'passwordpolicy', 'password', 'historysupport', 'passwordpolicy', 'password', 'historyrefactoreslint', 'issue']",{'issue': 100}
"['level', 'expose', 'testutils', 'package']",{'expose': 100}
"['repro', 'issue']",{'issue': 100}
"['parse', 'query', 'serverparse', 'query', 'ability', 'server', 'startmessage', 'crash']",{'crash': 100}
"['client', 'displayfilename', 'length', 'client', 'displayfilename', 'length', 'client', 'displayprefix']",{'length': 100}
"['ensure', 'updatedensure', 'updatedalternative', 'update', 'permission']",{'permission': 100}
"['native', 'bcryptperformance', 'native', 'bcryptnodejs', 'compatible', 'native', 'bcrypt', 'bcryptjspackage', 'version']",{'bcrypt': 100}
"['trigger', 'afterdelete', 'issue', 'aftersavetrigger', 'execution', 'afterdelete', 'request', 'multilinefixedproblem', 'beforesave', 'trigger']",{'issue': 100}
"['common', 'logger', 'common', 'logger', 'refactorlogic', 'loggerimprovement', 'configurationgetlogger', 'loggermodule', 'removechange', 'revertslevel', 'requirement', 'configurationflaky', 'removeinvestigationsilent', 'output', 'console', 'optionrestores', 'verboseadapter', 'expose', 'controller', 'method', 'reduces', 'requirementaround', 'initialization', 'shuffleavailable', 'cloudcode', 'loggermodule', 'adapterdefault', 'extractdefault', 'defaultmongouridefault', 'valuefailure', 'proper', 'errorflaky']",{'expose': 100}
"['content', 'header', 'length', 'response', 'filesrouter']",{'length': 100}
"['cdacc', 'mergerequest', 'parseplatform', 'client', 'mergeclientsdk', 'available', 'expose']",{'expose': 100}
"['clientsdk', 'expose', 'restwrite']",{'expose': 100}
"['permission', 'error']",{'permission': 100}
"['update', 'expose']",{'expose': 100}
"['unique', 'revert', 'index', 'objectemail', 'username', 'reconfigurebroken', 'cloudcallback', 'variableserver', 'connectiongridstore', 'adapter', 'issue', 'causedremoveargument', 'reorderdatabase', 'adapter', 'parametermaybeusername', 'postgresargument', 'default', 'field', 'object', 'buildadapter']",{'issue': 100}
"['transformparse', 'server', 'transformingparse', 'validation', 'database', 'performant', 'length']",{'length': 100}
"['unique', 'emailindex', 'finish', 'unique', 'revert', 'index', 'objectemail', 'username', 'reconfigurestart', 'shittyness', 'dealingremove', 'removingpassingfailingspecific', 'server', 'async', 'configanotheremail', 'validationaround', 'stuffdestroy', 'server', 'ensure', 'connectionbroken', 'cloudcallback', 'variabledelete', 'existant', 'cloudserver', 'connectiongridstore', 'adapter', 'issue', 'causedfinal', 'update', 'guidestrictfeaturesyntax', 'errorduplicate', 'command', 'findingupdate']",{'issue': 100}
"['value', 'issue', 'object', 'field', 'mongotransform']",{'issue': 100}
"['cache', 'master', 'clear', 'updatedcache', 'master', 'clear', 'cache', 'session', 'laterstale', 'session', 'issue', 'update']",{'issue': 100}
"['dabcce', 'mergerequest', 'parseplatform', 'issue', 'template', 'mergetemplate', 'update', 'issue']",{'issue': 100}
"['migration', 'issue']",{'issue': 100}
"['loggeradapter', 'trigger', 'expose', 'function', 'cloudtrigger', 'access']",{'expose': 100}
"['support', 'pointer', 'permissionpointer', 'initial', 'permissionprocess', 'pointer', 'matchinglockdown', 'additionallockdown', 'operation', 'pointerpointer', 'permission', 'object', 'class', 'lockedmultiple', 'pointerpermspointer', 'setting', 'validation', 'permissionpointer', 'permission', 'column', 'validatinghierarchy', 'complexpower', 'restores', 'validation', 'fieldcomplexaround', 'variation']",{'permission': 100}
"['application', 'databaseadapter', 'expose', 'simplifydatabaseadapter', 'index', 'exposeindentationdatabaseadapter', 'exportcleardata', 'helper', 'update', 'renameenvironment', 'expose', 'testutils', 'function']",{'expose': 100}
"['defaultschemasdefaultschemasdefaultschema', 'logic', 'injection', 'routerfunction', 'outsideconciseness']",{'injection': 100}
"['session', 'server', 'token', 'configuration', 'length', 'option']",{'length': 100}
"['clean', 'update', 'authdatachain', 'restwrite', 'responseobject', 'authdataupdatedat', 'anonymous', 'authdatatransformedupdatedattwitter', 'updatedat', 'anonymous', 'authdatatransformedtwitter', 'updatedat', 'authdataanonymous', 'upgrade', 'issue', 'android']",{'issue': 100}
"['encodingallow', 'module', 'versioncause', 'colon', 'representation', 'commareplicasomewhat', 'hostname', 'arrayformat', 'effort', 'reprint', 'solutionreplicaunderstand', 'reason', 'issue', 'yield', 'leastuseful']",{'issue': 100}
"['mergeflovilmart', 'request', 'parseplatform', 'patch', 'mergestack', 'overflow']",{'overflow': 100}
"['stack', 'overflowstack', 'overflow', 'community']","{'stack': 100, 'overflow': 100}"
"['length', 'support']",{'length': 100}
"['mergerequest', 'parseplatform', 'mergeclean', 'login', 'android', 'authdata', 'crash']",{'crash': 100}
"['clean', 'login', 'android', 'authdata', 'crash']",{'crash': 100}
"['default', 'permission', 'return']",{'permission': 100}
"['scenario', 'blacklist']",{'blacklist': 100}
"['error', 'runningparse', 'server', 'projectresult', 'expectmessage', 'property', 'typeerror', 'undefinedparse', 'server', 'projectparse', 'adapter', 'anonymous', 'logger', 'server', 'projectparse', 'server', 'projectparse', 'server', 'projectparse', 'server', 'resolveone', 'projectparse', 'anonymous', 'function', 'server', 'projectparse', 'server', 'projectparse', 'server', 'projectparse', 'adapter', 'logger', 'server', 'projectoncompleteparse', 'adapter', 'logger', 'parseplatform', 'server', 'master', 'runner', 'check', 'empty', 'array', 'filename', 'issue']",{'issue': 100}
"['blacklist', 'whitelist', 'npmignore']",{'blacklist': 100}
"['babelparse', 'parseplatform', 'server', 'issue', 'address']",{'issue': 100}
"['fbbbe', 'mergeflessard', 'session', 'request', 'token', 'mergesession', 'token', 'issue']",{'issue': 100}
"['ddaac', 'mergeinstallationid', 'supersolid', 'steven', 'request', 'mergeinstallationid', 'expose', 'request', 'cloud', 'bugfix', 'object']",{'expose': 100}
"['token', 'cryptoutilsobject', 'random', 'generation', 'stringsession', 'generate', 'removecryptographic', 'random', 'numbersecure', 'result', 'replaceformat', 'entropy', 'characterremove']","{'generation': 100, 'entropy': 100}"
"['forceupdate', 'securityrelease', 'vulnerability', 'security', 'february']",{'Security': 100}
"['request', 'installationid', 'cloud', 'expose']",{'expose': 100}
"['parse', 'server', 'examplewould', 'expose', 'right', 'helpful']",{'expose': 100}
"['cross', 'domain', 'issue']",{'issue': 100}
"['scope', 'handlefollowup', 'invocation', 'issue', 'alexander', 'maysale']",{'issue': 100}
"['mergeskinp', 'request', 'mergeobject', 'callback', 'sadapter', 'expose']",{'expose': 100}
"['object', 'callback', 'sadapter', 'expose']",{'expose': 100}
"['cddbba', 'mergerequest', 'bcrypt', 'felixrieseberg', 'mergesupport', 'bcrypt', 'window']",{'bcrypt': 100}
"['support', 'bcrypt', 'windowcommit', 'parse', 'gigabyte', 'window', 'dependency', 'compile', 'bcrypy', 'replaces', 'bcrypt']",{'bcrypt': 100}
