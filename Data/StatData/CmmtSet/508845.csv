message,fuzzy
"['mergemishikopetcare', 'crash', 'requestmanagedobject', 'context', 'entity']",{'crash': 100}
"['entity', 'context', 'visible', 'managedobject', 'crash']",{'crash': 100}
"['private', 'issue']",{'issue': 100}
"['database', 'issue', 'delete']",{'issue': 100}
"['request', 'version', 'relatedtarget', 'deployment', 'project', 'increasedbuild', 'issue', 'reachabilitycocoapods', 'issue', 'headerdirectory', 'network', 'rkhttputilities', 'podspec', 'dependencymeanwhile', 'class', 'install']",{'issue': 100}
"['mergensurlcache', 'deadlock', 'restkit', 'request', 'featurensurlcache', 'deadlock']",{'deadlock': 100}
"['nsurlcache', 'deadlock']",{'deadlock': 100}
"['incorrect', 'contextfunction', 'temporary', 'returnobject', 'destinationwould', 'createentry', 'result', 'overwritecorrect', 'object', 'sinceresult', 'original', 'overwrite']",{'incorrect': 100}
"['mergemerge', 'requestkeypath', 'potential', 'invalid', 'crash']",{'crash': 100}
"['mergemerge', 'cocoalumberjack', 'subspec', 'request', 'timbodeitseparate', 'subspec', 'cocoalumberjack', 'issue']",{'issue': 100}
"['keypath', 'potential', 'invalid', 'crash']",{'crash': 100}
"['issue', 'issuecomment', 'restkit', 'compilation']",{'issue': 100}
"['setting', 'debug', 'concurrency']",{'concurren': 90}
"['request', 'development', 'playdayteamdynamic', 'relation', 'issue', 'crash']","{'issue': 100, 'crash': 100}"
"['finish', 'realizes', 'invokes', 'callback', 'operation', 'error', 'method', 'willfinish', 'thread', 'level', 'invoke', 'condition', 'calledfinish', 'invocation', 'block', 'ensure']",{'thread': 100}
"['crash', 'launch']",{'crash': 100}
"['entity', 'property', 'issue', 'server', 'crash']","{'issue': 100, 'crash': 100}"
"['object', 'request', 'issue', 'server']",{'issue': 100}
"['mergemerge', 'thread', 'request', 'jeffblake', 'accessthread', 'access', 'violation']",{'thread': 100}
"['request', 'block', 'issue']",{'issue': 100}
"['issue', 'crash']","{'issue': 100, 'crash': 100}"
"['mergemerge', 'thread', 'request', 'rkpathmatcher', 'youseerkpathmatcher', 'thread']",{'thread': 100}
"['request', 'development', 'available', 'issue']",{'issue': 100}
"['available', 'issue']",{'issue': 100}
"['thread', 'access', 'violation']",{'thread': 100}
"['validation', 'domain', 'reason', 'error', 'assignment', 'creates', 'context', 'custom', 'coredata', 'issue', 'basic', 'print']",{'issue': 100}
"['persistent', 'store', 'issue']",{'issue': 100}
"['mergeserkrapiv', 'development', 'requestfails', 'crash', 'expectation', 'block']",{'crash': 100}
"['issue', 'object', 'route', 'metadata', 'relationship', 'query', 'addition', 'parameter']",{'issue': 100}
"['crash', 'expectation', 'block']",{'crash': 100}
"['rkpathmatcher', 'thread']",{'thread': 100}
"['switch', 'class', 'deadlock', 'likely', 'initialize', 'point', 'property', 'cache', 'context', 'writeback', 'object', 'thread', 'attribute', 'runtime']","{'deadlock': 100, 'thread': 100}"
"['readme', 'sockit', 'cocoadocsclose', 'restkit', 'issue']",{'issue': 100}
"['expose', 'property', 'consistent', 'duplicate', 'class']",{'expose': 100}
"['nsmanagedobject', 'thread']",{'thread': 100}
"['cbbcb', 'mergemerge', 'sadlerjw', 'request', 'logginginformation', 'sensitive', 'level', 'error', 'warning']",{'Sensitive': 100}
"['identifiable', 'information', 'level', 'error', 'warning', 'thing', 'loggingvalue', 'sincecontain', 'assumption', 'sensitive', 'party']",{'Sensitive': 100}
"['restkit', 'issue']",{'issue': 100}
"['objective', 'switch', 'expecta', 'issue']",{'issue': 100}
"['sourcekeypath', 'rkobjectmappingclose', 'restkit', 'issue']",{'issue': 100}
"['sourcekeypathclose', 'restkit', 'issue']",{'issue': 100}
"['sockitclose', 'restkit', 'issue']",{'issue': 100}
"['incorrect', 'methodimage', 'multipart', 'method']",{'incorrect': 100}
"['valueforkey', 'valueforkeypath', 'crash', 'params']",{'crash': 100}
"['incorrect', 'methodimage', 'multipart', 'method']",{'incorrect': 100}
"['mergemaster', 'softfacade', 'hotfix', 'crash', 'restkit']",{'crash': 100}
"['valueforkey', 'valueforkeypath', 'crash', 'params']",{'crash': 100}
"['object', 'deletion', 'error', 'response', 'mapper', 'close', 'issue']",{'issue': 100}
"['github', 'issue']",{'issue': 100}
"['reference', 'helper', 'objectmanager', 'issue']",{'issue': 100}
"['object', 'deletion', 'predicate', 'cleanup', 'issue', 'inappropriate', 'connection']",{'issue': 100}
"['transition', 'issue', 'documentation', 'brace']",{'issue': 100}
"['rksearchexample', 'issue', 'warning']",{'issue': 100}
"['standalone', 'layout', 'installation', 'issue', 'header', 'subspecs']",{'issue': 100}
"['battery', 'descriptor', 'precedence', 'explicit', 'request', 'close', 'issue']",{'issue': 100}
"['battery', 'descriptor', 'precedence', 'explicit', 'request', 'close', 'issue']",{'issue': 100}
"['travis', 'incorrect', 'scheme']",{'incorrect': 100}
"['mergemirego', 'issue', 'requestretain', 'cycle', 'issue']",{'issue': 100}
"['cycle', 'issue']",{'issue': 100}
"['interface', 'property', 'model', 'issue', 'incorrect', 'rkhuman', 'declaration']","{'issue': 100, 'incorrect': 100}"
"['incorrect', 'usage', 'class', 'couple']",{'incorrect': 100}
"['intermittent', 'crash']",{'crash': 100}
"['implementation', 'isready', 'superclass', 'issue']",{'issue': 100}
"['mergedevelopment', 'dtsiknis', 'requestprecision', 'integer', 'large', 'string']",{'integer': 100}
"['precision', 'integer', 'large', 'string', 'numeric']",{'integer': 100}
"['keypaths', 'method', 'issue', 'parameter']",{'issue': 100}
"['object', 'refetch', 'crash', 'attempt']",{'crash': 100}
"['object', 'trigger', 'result', 'issue']",{'issue': 100}
"['locale', 'generation', 'issue', 'stringdisable', 'kingdom', 'restkit', 'locale', 'clock', 'switch', 'stringspecify', 'enable', 'option', 'localenotation', 'formatter', 'locale', 'ensure', 'updatecleanup']","{'generation': 100, 'issue': 100}"
"['object', 'orphan', 'relationship', 'comparison', 'issue', 'traversal', 'gathering']",{'issue': 100}
"['computation', 'fetch', 'cache', 'request', 'invalid', 'crash']",{'crash': 100}
"['failure', 'crash', 'intermittent']",{'crash': 100}
"['fetch', 'cache', 'request', 'crash']",{'crash': 100}
"['accuracy', 'issue']",{'issue': 100}
"['incorrect', 'model', 'namingclose', 'tweet', 'rename', 'rktweet']",{'incorrect': 100}
"['safety', 'thread', 'cache', 'guard', 'queue']",{'thread': 100}
"['identification', 'single', 'attribute', 'cache', 'optimization', 'generation', 'speed', 'switch', 'performance']",{'generation': 100}
"['development', 'concurrent']",{'concurrent': 100}
"['operation', 'object', 'duplicate', 'rework', 'potential', 'response', 'request', 'callback', 'opportunity', 'concurrent', 'creation']",{'concurrent': 100}
"['operation', 'documentation', 'caveat', 'concurrent']",{'concurrent': 100}
"['subclass', 'state', 'nsoperation', 'transitionkit', 'concurrent']",{'concurrent': 100}
"['dealloc', 'crash', 'implment', 'deallocation']",{'crash': 100}
"['limit', 'concurrency']",{'concurren': 90}
"['parentoperation', 'association', 'concurrency', 'limit', 'connectionqueue']",{'concurren': 90}
"['concurrent', 'machine']",{'concurrent': 100}
"['block', 'issue']",{'issue': 100}
"['incorrect', 'serialization']",{'incorrect': 100}
"['issue', 'targetobject']",{'issue': 100}
"['mutable', 'transformation', 'destination', 'incorrect', 'class']",{'incorrect': 100}
"['execution', 'crash', 'intermittent']",{'crash': 100}
"['twitter', 'baseurls', 'issue', 'example', 'update']",{'issue': 100}
"['crash', 'deallocation']",{'crash': 100}
"['dispatch', 'execution', 'queue', 'crash']",{'crash': 100}
"['incorrect', 'anchor', 'overview']",{'incorrect': 100}
"['operation', 'object', 'executes', 'potential', 'crash', 'connection']",{'crash': 100}
"['union', 'crash']",{'crash': 100}
"['serious', 'object', 'potential', 'objectid', 'error', 'crash']",{'crash': 100}
"['deadlock', 'queue', 'warning']",{'deadlock': 100}
"['identification', 'eviction', 'cache', 'close', 'query', 'compound', 'crash']",{'crash': 100}
"['object', 'deletion', 'implementation', 'refetchingfavor', 'traverse', 'eliminateseliminate', 'special', 'cyclic', 'recursion', 'issue', 'infinite']",{'issue': 100}
"['coverage', 'traversal', 'graph', 'crash']",{'crash': 100}
"['crash', 'class']",{'crash': 100}
"['track', 'issue', 'response', 'error', 'ensure']",{'issue': 100}
"['expecta', 'raisewithreason', 'failure', 'block', 'switch', 'crash']",{'crash': 100}
"['predicate', 'nasty', 'crash', 'reimplement']",{'crash': 100}
"['error', 'override', 'implementation', 'issue']",{'issue': 100}
"['property', 'inspector', 'guard', 'crash']",{'crash': 100}
"['issue', 'server']",{'issue': 100}
"['occasional', 'gateguru', 'unnecessary', 'crash']",{'crash': 100}
"['trigger', 'conditional', 'coredata', 'compilation', 'header', 'specificcomponent', 'workaround', 'decouple', 'distateful', 'temporaryenables', 'conditional', 'compilation', 'specifictarget', 'import', 'moment', 'featurepursue', 'cocoapods', 'issuecocoapods', 'issue']",{'issue': 100}
"['result', 'issue']",{'issue': 100}
"['ambiguous', 'workaround', 'deletion', 'temporary', 'crash']",{'crash': 100}
"['support', 'crash', 'primitive']",{'crash': 100}
"['deadlock', 'operation', 'object', 'workaround', 'thread', 'request', 'instance', 'initialize', 'rkpaginator', 'concurrent']","{'deadlock': 100, 'thread': 100, 'concurrent': 100}"
"['operation', 'object', 'unique', 'concurrent']",{'concurrent': 100}
"['result', 'dictionary', 'crash']",{'crash': 100}
"['secondary', 'descriptor', 'response', 'result', 'incorrect']",{'incorrect': 100}
"['object', 'determination', 'request', 'appropriate', 'issue', 'incorrectparameter', 'expands', 'coverage', 'methodnavigate', 'object']",{'issue': 100}
"['incorrect', 'header', 'documentation', 'comment']",{'incorrect': 100}
"['result', 'crash', 'return', 'empty']",{'crash': 100}
"['double', 'collection', 'wrapping', 'crash']",{'crash': 100}
"['cross', 'object', 'local', 'context', 'comparison', 'issue']",{'issue': 100}
"['behavior', 'source', 'issue', 'development', 'targetobject']",{'issue': 100}
"['header', 'issue', 'multipart']",{'issue': 100}
"['operation', 'multi', 'concurrency', 'enqueue', 'issue', 'update']","{'concurren': 90, 'issue': 100}"
"['deadlock', 'potential']",{'deadlock': 100}
"['unavailable', 'crash', 'attempt']",{'crash': 100}
"['object', 'refetch', 'context', 'result', 'originaleliminate', 'invocation', 'thread']",{'thread': 100}
"['success', 'argument', 'failure', 'block', 'issue']",{'issue': 100}
"['prioritization', 'operation', 'global', 'object', 'cancellation', 'response', 'support', 'request', 'queueoperation', 'object', 'response', 'request', 'cancellation', 'closeobject', 'performs', 'enabledefault', 'concurrency', 'limit', 'queueoccurs', 'serial', 'dispatch', 'response', 'deserialization', 'parse', 'ensure', 'queue', 'migrate']",{'concurren': 90}
"['variable', 'environment', 'length', 'support', 'request', 'response', 'trace', 'level', 'rklogmaxlength']",{'length': 100}
"['relativepath', 'issue']",{'issue': 100}
"['override', 'concurrent', 'method']",{'concurrent': 100}
"['expose', 'default', 'afhttpclient', 'object', 'logic', 'intiialization', 'property', 'rework', 'update', 'reflect', 'manager', 'instance', 'header', 'initialization', 'respect']",{'expose': 100}
"['failure', 'pattern', 'issue', 'prefix']",{'issue': 100}
"['coverage', 'crash', 'string']",{'crash': 100}
"['stack', 'favor', 'library']",{'stack': 100}
"['nserrors', 'issue']",{'issue': 100}
"['reboot', 'lukekhamilton', 'layer', 'request', 'incorrect', 'object']",{'incorrect': 100}
"['incorrect', 'object']",{'incorrect': 100}
"['order', 'nsurlrequest', 'object', 'workaround', 'request', 'baseurl', 'issue']",{'issue': 100}
"['incorrect', 'logic']",{'incorrect': 100}
"['dependency', 'ensure', 'issue', 'cocoapods']",{'issue': 100}
"['backticks', 'section', 'issue']",{'issue': 100}
"['object', 'delivery', 'thread', 'retrieval', 'boundary', 'assertion']",{'thread': 100}
"['initialization', 'crash']",{'crash': 100}
"['suite', 'delay', 'execution', 'processing', 'crash']",{'crash': 100}
"['entity', 'primary', 'thread', 'cache']",{'thread': 100}
"['object', 'restkit', 'concurrency']",{'concurren': 90}
"['security', 'pragma', 'format', 'silence', 'warning', 'string']",{'Security': 100}
"['documentation', 'object', 'route', 'rkrouter', 'generation', 'header', 'parameter']",{'generation': 100}
"['retrieval', 'indexpath', 'result', 'table', 'issue', 'incorrect']","{'issue': 100, 'incorrect': 100}"
"['reimplement', 'issue']",{'issue': 100}
"['object', 'collection', 'refresh', 'table', 'issue', 'section', 'empty']",{'issue': 100}
"['payload', 'value', 'primary', 'integer', 'mismatch', 'assertion', 'contains', 'string']",{'integer': 100}
"['analyzer', 'static', 'issue']",{'issue': 100}
"['constant', 'issue', 'externaldevice', 'unclear', 'building', 'simulator']",{'issue': 100}
"['invalid', 'crash']",{'crash': 100}
"['object', 'primary', 'value', 'duplication', 'model', 'issue', 'contains', 'stringobject', 'number', 'fetch']",{'issue': 100}
"['crash', 'intermittent', 'suite']",{'crash': 100}
"['issue', 'implementation']",{'issue': 100}
"['assertion', 'issue', 'parameter']",{'issue': 100}
"['strategy', 'primarykey', 'cache', 'close', 'issue', 'awareinterface', 'xcode', 'builder', 'withininterface', 'addedsystem', 'primarykey', 'dependency', 'acrossreference']",{'issue': 100}
"['issue', 'incorrect']","{'issue': 100, 'incorrect': 100}"
"['stack', 'debug', 'clang', 'error', 'machine']",{'stack': 100}
"['issue', 'cycle', 'relationship']",{'issue': 100}
"['favor', 'style', 'rsync', 'header', 'eliminatedbuild', 'flakiness', 'archive', 'issue', 'configurationinclude', 'simpler', 'avoideliminates', 'rsync']",{'issue': 100}
"['deselection', 'onselectcell', 'table', 'processing', 'crash']",{'crash': 100}
"['tablecontroller', 'convention', 'issue', 'infinite']",{'issue': 100}
"['reuseidentifier', 'control', 'deselection', 'tablecontroller', 'tableview', 'automatic', 'issue', 'header']",{'issue': 100}
"['issue', 'insert', 'table', 'deletes']",{'issue': 100}
"['length', 'content', 'header', 'rkparams', 'concern']",{'length': 100}
"['integer', 'timestamps', 'representation', 'transforms', 'string']",{'integer': 100}
"['string', 'issue']",{'issue': 100}
"['value', 'patch', 'close', 'scott', 'issue']",{'issue': 100}
"['stack', 'console', 'debug']",{'stack': 100}
"['issue', 'reachability', 'hostname', 'support', 'access', 'addressstatus', 'usage', 'check', 'synchronous', 'reachabilitycallback', 'reachability', 'cache', 'reworkedretain', 'monitor', 'rkclient', 'internet', 'favor', 'property', 'hostname', 'reachabilityobserver', 'baseurl', 'mutation', 'suspension', 'queue', 'reachability']",{'issue': 100}
"['release', 'rkparams', 'crash', 'workaround']",{'crash': 100}
"['example', 'project', 'invalid', 'twitter', 'warning', 'deprecationsearch', 'sense', 'issue', 'header']",{'issue': 100}
"['compiler', 'issue']",{'issue': 100}
"['generation', 'support', 'cache', 'buildeliminate', 'cachefilemdhash', 'composite', 'rkparams', 'return', 'attachmentinstance', 'method', 'implementedrkrequest', 'utilize', 'rkparams']",{'generation': 100}
"['value', 'appdirectory', 'martijnthe', 'incorrect', 'thanks', 'return']",{'incorrect': 100}
"['mergemerge', 'parkerboundy', 'request', 'license', 'apacheclose', 'license', 'issue', 'header', 'thanks', 'apache']",{'issue': 100}
"['mergemaster', 'bjornjonsson', 'discernible', 'request', 'solid', 'night', 'issue', 'respect']",{'issue': 100}
"['improper', 'rkclient', 'import']",{'improper': 100}
"['token', 'update', 'issue']",{'issue': 100}
"['setting', 'relationship', 'additional', 'coverage', 'issue']",{'issue': 100}
"['board', 'dbuser', 'helper', 'login', 'discussion', 'issue', 'block', 'mutation', 'logout']",{'issue': 100}
"['mappable', 'behavior', 'result', 'issue', 'method']",{'issue': 100}
"['background', 'thread', 'contract', 'violation', 'method']",{'thread': 100}
"['authentication', 'payload', 'challenge', 'error', 'nsinputstream', 'issue', 'rkparams', 'credential', 'params']",{'issue': 100}
"['queue', 'issue', 'safety', 'restkit', 'thread', 'request']","{'issue': 100, 'thread': 100}"
"['length', 'content', 'header', 'params']",{'length': 100}
"['close', 'crash', 'empty']",{'crash': 100}
"['primary', 'lookup', 'coerce', 'local', 'thread', 'cache', 'string', 'numeric']",{'thread': 100}
"['validation', 'issue', 'object', 'value']",{'issue': 100}
"['object', 'network', 'improvement', 'reliability', 'local', 'thread', 'cache']",{'thread': 100}
"['invocation', 'network', 'helper', 'rkspec', 'rkrequestqueue', 'flaky', 'issue', 'queue', 'request', 'iteration', 'making', 'entrant']",{'issue': 100}
"['issue', 'object', 'error', 'postobject']",{'issue': 100}
"['restkit', 'issue']",{'issue': 100}
"['rkspec', 'hamcrest', 'failure', 'crash', 'implementation', 'update']",{'crash': 100}
"['symbol', 'suppress', 'crash', 'warning', 'visibility']",{'crash': 100}
"['issue', 'queue', 'rkrequestcache', 'conditional', 'cache', 'support', 'response', 'closethree', 'layer', 'tttableitem', 'class', 'close', 'intermediary', 'updateensure', 'compiler', 'clangsymbol', 'safety', 'check', 'conditional', 'uikit', 'corefoundation', 'target', 'library', 'linkage', 'unnecessaryrkrequest', 'object', 'loadnextinqueuestart', 'request', 'loadcount', 'decrement']",{'issue': 100}
"['coverage', 'issue', 'update', 'rkobjectloader']",{'issue': 100}
"['unavailable', 'crash', 'notification', 'service']",{'crash': 100}
"['compile', 'network', 'automatic', 'issue', 'encounter', 'activity']",{'issue': 100}
"['initial', 'generation', 'appledoc', 'documentation', 'signature', 'mismatch', 'generation', 'documentation', 'comment', 'generation', 'ampersand', 'failure', 'parser', 'appledoc', 'docset']",{'generation': 100}
"['development', 'updatestory', 'behavior', 'invalid', 'method', 'parser', 'encounter', 'crash', 'update', 'exceptioninvocation', 'indeterminate', 'request', 'deferral', 'timer', 'ensure', 'queue']",{'crash': 100}
"['permission', 'header', 'issue']","{'permission': 100, 'issue': 100}"
"['level', 'archive', 'issue', 'aggregate']",{'issue': 100}
"['online', 'loader', 'object', 'issue', 'launch', 'state', 'check', 'prevents']",{'issue': 100}
"['issue', 'reference', 'xcodebuild', 'ocmock']",{'issue': 100}
"['notfound', 'seletz', 'issue', 'warning']",{'issue': 100}
"['mapper', 'uispec', 'baseurl', 'initialization', 'class', 'rkclient', 'observer', 'dealloc', 'crash', 'harness', 'support', 'thing', 'object', 'keypath', 'blank', 'update']",{'crash': 100}
"['pretty', 'permission', 'abstraction', 'controller']",{'permission': 100}
"['image', 'incorrect']",{'incorrect': 100}
"['observer', 'request', 'access', 'prevents', 'issue', 'yield', 'reachability', 'tenth']",{'issue': 100}
"['refactor', 'restkit', 'twotoasters', 'issue']",{'issue': 100}
"['reference', 'object', 'comment', 'globalclient', 'globalmanager', 'incorrect']",{'incorrect': 100}
"['loadedtime', 'timing', 'issue']",{'issue': 100}
"['helpful', 'resourcepath', 'response', 'crash', 'array', 'autoreleasepool', 'requestqueue', 'request', 'error', 'enumeration', 'method', 'object', 'background']",{'crash': 100}
"['short', 'loader', 'issue', 'parameter', 'circuit', 'offline', 'property', 'support', 'manager', 'request', 'source', 'object', 'thread', 'resource', 'level', 'boundary', 'client', 'reachability']","{'issue': 100, 'thread': 100}"
"['object', 'operation', 'single', 'thread', 'cache', 'dictionary', 'ensure']",{'thread': 100}
"['incorrect', 'submission']",{'incorrect': 100}
"['isjson', 'payload', 'sends', 'check', 'nasty', 'response', 'crash', 'rkobjectloader']",{'crash': 100}
"['loader', 'reference', 'store', 'singleton', 'access', 'issue', 'objectstore']",{'issue': 100}
"['sbjson', 'crash', 'parser']",{'crash': 100}
"['release', 'dealloc', 'issue']",{'issue': 100}
"['cycle', 'krenek', 'issue', 'markkrenek']",{'issue': 100}
"['unnecessary', 'crash']",{'crash': 100}
"['loader', 'model', 'result', 'crash']",{'crash': 100}
"['incorrect', 'model']",{'incorrect': 100}
"['multiple', 'thread', 'context', 'crash', 'pattern']","{'thread': 100, 'crash': 100}"
"['expose', 'header', 'project']",{'expose': 100}
"['value', 'integer']",{'integer': 100}
"['signature', 'compiler', 'class', 'model', 'crash', 'protocol', 'warning', 'generate', 'method']",{'crash': 100}
"['background', 'thread', 'model', 'result']",{'thread': 100}
"['issue', 'accidental']",{'issue': 100}
