message,fuzzy
"['flask', 'updateflask', 'security', 'updatepallet', 'flask', 'memory', 'project', 'attack', 'version', 'vector', 'david', 'dashyanregex', 'robust', 'david', 'dashyan']",{'Security': 100}
"['issue', 'template', 'update']",{'issue': 100}
"['restart', 'failure', 'container', 'sporadicserver', 'account', 'beneficial', 'container', 'ability', 'daemon', 'sporadic', 'docker', 'restart', 'issue', 'bigchaindb', 'compose', 'failure']",{'issue': 100}
"['output', 'incorrect', 'responds', 'problemoutput', 'unspent', 'query', 'agnostic', 'order', 'problemquery', 'respect', 'document', 'solutionquery', 'query', 'mongo', 'problemquery', 'elemmatch', 'simplify', 'solutionoutput', 'problemcorrect', 'check', 'multiple', 'input', 'documentoutput', 'assert', 'tranasction', 'problemassert', 'tranasction', 'solution']",{'incorrect': 100}
"['tendermint', 'version', 'incompatible', 'tendermint', 'version', 'bigchaindb', 'unsupported', 'disconnect', 'expose', 'display', 'tendermint', 'version', 'bigchaindb', 'commandwarningmethod']",{'expose': 100}
"['generalize', 'command', 'election', 'managementclass', 'election', 'common', 'inherit', 'problemlogic', 'class', 'parent', 'solutionrequirement', 'solutiondifferent', 'store', 'election', 'table', 'problemremove', 'class', 'election', 'property', 'solutiondifferent', 'store', 'election', 'revert', 'table', 'problemreverts', 'commitmethod', 'bigchain', 'class', 'election', 'solutionstore', 'table', 'election', 'table', 'election', 'class', 'store', 'election', 'table', 'problemclass', 'problemgeneral', 'class', 'signature', 'error', 'solutionproblem', 'reference', 'class', 'election', 'hardcodedreference', 'class', 'variable', 'solutionrefers', 'solutionspecific', 'class', 'operation', 'solutionoption', 'election', 'validator', 'upsert', 'command', 'manage', 'class', 'default', 'election', 'problemfield', 'method', 'additional', 'asset', 'solutionstyle', 'multiple', 'issue', 'comment', 'solutionclass', 'election', 'variable', 'hardcodedissue', 'style', 'minor', 'problemcomment', 'solutionbroke', 'format', 'validator', 'reflect', 'solutionproblem', 'public', 'election', 'command', 'displayingpublic', 'solutionrefers', 'message', 'validator', 'upsert', 'problemmessage']",{'issue': 100}
"['crash', 'bigchaindb', 'chain', 'problemappropirate', 'return', 'tendermint', 'height', 'solution']",{'crash': 100}
"['problemtransaction', 'expose', 'describe', 'store', 'document', 'async', 'bigchaindb']",{'expose': 100}
"['sentence', 'incorrect', 'problemdelete', 'solution']",{'incorrect': 100}
"['privacy', 'problemhandle', 'privacy', 'private', 'problemwrite', 'solutionserver', 'security', 'privacy', 'problemsecurity', 'solution', 'privacy', 'productioninitial', 'comment', 'gautamdhameja', 'address']",{'Security': 100}
"['condition', 'crypto', 'error', 'compliancestill', 'upgrade', 'docker', 'tendermintcondition', 'crypto', 'problemlonger', 'solution']",{'crypto': 100}
"['transaction', 'performance', 'lookup', 'issue', 'problemtransaction']",{'issue': 100}
"['describe', 'issue', 'problemknown', 'changelog', 'describe', 'revise', 'issue', 'release', 'solution']",{'issue': 100}
"['stack', 'issue', 'centos', 'package', 'installation', 'problem']","{'stack': 100, 'issue': 100}"
"['incorrect', 'document', 'volume', 'environment']",{'incorrect': 100}
"['mongodb', 'problemoperator', 'query', 'expose', 'power']",{'expose': 100}
"['alpha', 'releaseinitial', 'alpha', 'release', 'updateknown', 'changelog', 'issue', 'alpha', 'sectionupdate', 'docker', 'image', 'alpha', 'bigchaindbalpha', 'update']",{'issue': 100}
"['crash', 'mechanism', 'recovery', 'problemlogic', 'crash', 'recovery', 'solution']",{'crash': 100}
"['validator', 'bigchaindb', 'insecure', 'upsert', 'problemremove', 'validator', 'upsert', 'bigchaindb', 'insecure', 'label', 'solution']",{'insecure': 100}
"['release', 'problemrelease', 'updatewrong', 'alpha', 'bigchaindb', 'problemalpha', 'bigchaindb', 'solutionknown', 'issue', 'blogpost', 'hyperlink', 'solutionknown', 'documentalpha', 'release', 'wrong', 'problemapril', 'alpha', 'solution']",{'issue': 100}
"['problemconfig', 'worker', 'default', 'thread', 'multi', 'generate', 'solutiondocumentation', 'necessary', 'solution']",{'thread': 100}
"['container', 'update', 'configuration', 'alpha', 'releaseserver', 'update', 'worker', 'thread', 'bigchaindbdebug', 'tendermint', 'configure', 'level']",{'thread': 100}
"['mergeserver', 'update', 'request', 'muawiakh', 'mergecluster', 'terminology', 'incorrect', 'health', 'check', 'problem']",{'incorrect': 100}
"['workflow', 'standardize', 'docker', 'compose', 'problemdocker', 'workflow', 'standardize', 'composedocker', 'version', 'compose', 'changeversion', 'composedepends', 'inherits', 'supporttowards', 'migration', 'usingstrategy', 'stack', 'dockerbigchaindb', 'service', 'changedummy', 'proxy', 'service', 'introducedbusyboxhealthcheck', 'bigchaindb', 'server', 'ensure', 'startedscenario', 'bigchaindb', 'starteddocker', 'check', 'composebigchaindb', 'ensure', 'problemdeployment', 'workflow', 'commandpytest', 'command', 'containerdocker', 'pytest', 'bigchaindb', 'pytest', 'docker', 'bigchaindb', 'composeremove', 'mongodb', 'service', 'changespecific', 'exampletendermint', 'proxy', 'bigchaindb', 'updateinsteaddirectory']",{'stack': 100}
"['access', 'others', 'authorization', 'deployment', 'tokenauthorization', 'access', 'tokencluster', 'issue', 'inconsistency', 'causingfrontend', 'cluster']",{'issue': 100}
"['issue', 'nginxnazir']",{'issue': 100}
"['issue', 'nginxnazir']",{'issue': 100}
"['crash', 'rollback', 'mechanism', 'recovery']",{'crash': 100}
"['generation', 'script', 'deployment', 'certificate']",{'generation': 100}
"['crash', 'mechanism', 'recoverycrash', 'mechanism', 'recoverypropogate', 'exceptionblock', 'crash', 'receovery', 'writeissue', 'flakeremove', 'crash', 'approach', 'bigchiandbbuild', 'issuedocumentation']",{'crash': 100}
"['cfdafexample', 'issue', 'request', 'bigchaindb', 'mergeissue']",{'issue': 100}
"['issue', 'storage', 'cache', 'enginevalue', 'emptyspecify', 'storage', 'cache', 'engine']",{'issue': 100}
"['issue', 'parameterdocker', 'image', 'mongodbquotation', 'alwaysimpossible', 'verificationstorage', 'cache', 'image', 'enginequote', 'double', 'changevalue', 'default']",{'issue': 100}
"['mergeprotocol', 'schema', 'validation', 'issue', 'request', 'bigchaindb', 'transaction', 'appendix', 'schema']",{'issue': 100}
"['mergeschema', 'issue', 'request', 'version', 'bigchaindb', 'mergetransaction', 'schema', 'version']",{'issue': 100}
"['template', 'update', 'issue', 'report', 'reflect']",{'issue': 100}
"['issue', 'referrer', 'subsequent', 'referer', 'referrer', 'option', 'request', 'origin', 'browser', 'response', 'cross', 'check', 'preflight']",{'issue': 100}
"['schema', 'documentation', 'generation']",{'generation': 100}
"['issue', 'rethinkdbcustom', 'travis', 'marker']",{'issue': 100}
"['fbaebmerge', 'request', 'bigchaindb', 'permissionbigchaindb', 'permission']",{'permission': 100}
"['bigchaindb', 'permission']",{'permission': 100}
"['issue', 'request', 'bigchaindb', 'issue', 'bigchaindb', 'template']",{'issue': 100}
"['issue', 'bigchaindb', 'template']",{'issue': 100}
"['disperseddocumentation', 'issue', 'membernginx', 'invalid', 'minor', 'configmapnginx', 'backend', 'mongodb', 'reconfigure', 'editor', 'whitespaces']",{'issue': 100}
"['invalid', 'command', 'deployment', 'productionexpects', 'message', 'incorrect', 'error', 'guidesection', 'nginx', 'integration', 'scaleclustersince', 'return', 'workflow', 'command', 'errorrelevant', 'return', 'response', 'commandsanitycluster']",{'incorrect': 100}
"['length', 'fulfillment']",{'length': 100}
"['mergemerge', 'request', 'bigchaindb', 'crypto', 'condition']",{'crypto': 100}
"['detail', 'condition', 'subconditions', 'rename', 'subfulfillmentsimplement', 'signatureoutput', 'subconditions', 'renamesimpler', 'depth', 'overlow', 'thresholdkwargcondition', 'changeimport']",{'overflow': 93}
"['condition', 'crypto', 'version']",{'crypto': 100}
"['mergemerge', 'request', 'nothreads', 'bigchaindbdisable', 'worker', 'thread']",{'thread': 100}
"['worker', 'thread']",{'thread': 100}
"['block', 'status', 'insensitive']",{'Sensitive': 90}
"['issue', 'nomenclature', 'address']",{'issue': 100}
"['updatinginclude', 'generation']",{'generation': 100}
"['mergelevel', 'jackric', 'insens', 'request', 'mergeargument', 'level', 'insensitive']",{'Sensitive': 90}
"['argument', 'level', 'insensitive']",{'Sensitive': 90}
"['issue', 'flake']",{'issue': 100}
"['mergepipeline', 'request', 'bigchaindb', 'steppingpipeline', 'issue']",{'issue': 100}
"['pipeline', 'issue']",{'issue': 100}
"['mergemerge', 'issue', 'request', 'bigchaindbdecouple', 'container', 'docker', 'backend', 'bigchaindb']",{'issue': 100}
"['issue', 'integration']",{'issue': 100}
"['eebbcinsensitive', 'parameter', 'request', 'bigchaindb', 'mergeoperation', 'unspent', 'insensitive', 'parameter']",{'Sensitive': 90}
"['operation', 'unspent', 'insensitive', 'parameter']",{'Sensitive': 90}
"['input', 'issue']",{'issue': 100}
"['documentation', 'issue', 'transaction', 'schema']",{'issue': 100}
"['rethinkdb', 'schema', 'issue', 'module']",{'issue': 100}
"['setting', 'issue', 'request', 'bigchaindb', 'setting', 'everywhere']",{'issue': 100}
"['generates', 'server', 'script', 'example', 'generation']",{'generation': 100}
"['definition', 'schemamessage', 'posteritydefinition', 'transaction', 'schemaschemaobjectproperty', 'definions', 'schemaobjectdocumentation', 'schema', 'updatebasic', 'validationdefiniton', 'generation', 'changeobject', 'straightdefiniton', 'asset', 'transactionremove', 'validation', 'outdatedtransaction', 'validation', 'errorvalidationschemadocumentation', 'schema', 'generator', 'automaticsection', 'redundantloadingschema', 'changecorrect', 'schemabrokenupdatemethod', 'validationjsonschema', 'dependencyvalidation', 'transaction', 'schema', 'markdownremovedocuementation', 'todos', 'schema', 'resolveschemacopiedconcernes', 'addressconcern', 'addresstransaction', 'exception', 'schema', 'validation', 'refactor', 'function', 'indicatingtransaction', 'handler', 'schema', 'validation', 'invalid', 'returnedtransaction', 'schema', 'index', 'timestampintroduction', 'schema', 'reasondefinition', 'schema', 'prefix', 'constantvalidationerror', 'exception', 'importhelper', 'validate', 'transaction', 'transaction', 'schema', 'orderedrender', 'backticks', 'double', 'schematransaction', 'description', 'backticks', 'schema', 'version', 'changecondition', 'detail', 'mandatory', 'propertydocumentationschema', 'renamedocumentation', 'metadatadocumentationvarious', 'documentationdocumentation', 'section', 'rename', 'title', 'renderedhandle', 'managecomma', 'extrenuousremove', 'analyze', 'schema', 'impact', 'validation', 'consumer', 'downstreamerror', 'flakealways']",{'generation': 100}
"['security', 'ubuntu']",{'Security': 100}
"['docstrings', 'incorrect', 'update']",{'incorrect': 100}
"['thread', 'daemonize']",{'thread': 100}
"['security', 'group', 'deployment', 'parameter']",{'Security': 100}
"['mergelluminita', 'issue']",{'issue': 100}
"['mergelluminita', 'issue']",{'issue': 100}
"['example', 'crypto']",{'crypto': 100}
"['number', 'issue', 'project', 'couple']",{'issue': 100}
"['mergeintegration', 'hashlock', 'bigchain', 'condition', 'request', 'crypto', 'bigchaindb', 'mergeintegration', 'hashlock', 'bigchain', 'condition', 'crypto']",{'crypto': 100}
"['mergeintegration', 'hashlock', 'remote', 'condition', 'crypto', 'origin']",{'crypto': 100}
"['mergeoutput', 'integration', 'hashlock', 'multiple', 'input', 'remote', 'condition', 'crypto', 'origin']",{'crypto': 100}
"['minor', 'request', 'crypto', 'bigchaindb', 'section', 'cryptography']",{'crypto': 100}
"['sentence', 'crypto']",{'crypto': 100}
"['fdbbbeoutput', 'integration', 'multiple', 'input', 'remote', 'condition', 'crypto', 'origin']",{'crypto': 100}
"['remote', 'condition', 'crypto', 'origin']",{'crypto': 100}
"['mergeoutput', 'integration', 'multiple', 'input', 'remote', 'condition', 'crypto', 'origin']",{'crypto': 100}
"['context', 'manager', 'reorganizeprevious', 'deadlock']",{'deadlock': 100}
"['mergeoutput', 'integration', 'multiple', 'input', 'remote', 'condition', 'crypto', 'origin']",{'crypto': 100}
"['remote', 'condition', 'crypto', 'origin']",{'crypto': 100}
"['mergeoutput', 'integration', 'multiple', 'input', 'remote', 'condition', 'crypto', 'origin']",{'crypto': 100}
"['mergeoutput', 'integration', 'bigchain', 'multiple', 'input', 'condition', 'crypto']",{'crypto': 100}
"['mergeoutput', 'integration', 'multiple', 'input', 'remote', 'condition', 'crypto', 'origin']",{'crypto': 100}
"['mergeoutput', 'integration', 'bigchain', 'multiple', 'input', 'condition', 'crypto']",{'crypto': 100}
"['mergeoutput', 'integration', 'multiple', 'input', 'remote', 'condition', 'crypto', 'origin']",{'crypto': 100}
"['mergeintegration', 'config', 'remote', 'condition', 'crypto', 'origin']",{'crypto': 100}
"['dbcbaoutput', 'integration', 'multiple', 'input', 'remote', 'condition', 'crypto', 'origin']",{'crypto': 100}
"['mergemerge', 'fixedoutput', 'integration', 'multiple', 'input', 'remote', 'condition', 'crypto', 'origin']",{'crypto': 100}
"['mergeoutput', 'integration', 'multiple', 'input', 'remote', 'condition', 'crypto', 'origin']",{'crypto': 100}
"['cafcdfoutput', 'integration', 'multiple', 'input', 'remote', 'condition', 'crypto', 'origin']",{'crypto': 100}
"['mergesingle', 'validate', 'fulfillment', 'ownerintegration', 'condition', 'crypto', 'origin']",{'crypto': 100}
"['mergecompatible', 'request', 'crypto']",{'crypto': 100}
"['adebfboutput', 'integration', 'multiple', 'input', 'remote', 'condition', 'crypto', 'origin']",{'crypto': 100}
"['ecbcaoutput', 'integration', 'multiple', 'input', 'remote', 'condition', 'crypto', 'origin']",{'crypto': 100}
"['mergeoutput', 'integration', 'multiple', 'input', 'remote', 'condition', 'crypto', 'origin']",{'crypto': 100}
"['crypto', 'origin']",{'crypto': 100}
"['mergeroderik', 'crypto']",{'crypto': 100}
"['documentation', 'update', 'crypto', 'module', 'reflect']",{'crypto': 100}
"['dependency', 'cryptography', 'cryptography', 'openssl', 'recent', 'issue', 'error', 'alpine']","{'OpenSSL': 100, 'issue': 100}"
"['crypto', 'import']",{'crypto': 100}
"['security', 'group', 'rename', 'bigchaindb']",{'Security': 100}
"['crypto', 'module']",{'crypto': 100}
"['length', 'pystyleguidestyle', 'length', 'python', 'maximum', 'sentence', 'section', 'guidewidth', 'github', 'review', 'character']",{'length': 100}
"['roadmap', 'issue', 'introduction']",{'issue': 100}
"['mergemerge', 'issue', 'request', 'bigchaindbissue']",{'issue': 100}
"['dbbbefconfig', 'docker', 'request', 'bigchaindb', 'mergedocker', 'issue', 'config', 'compose']",{'issue': 100}
"['docker', 'issue', 'config', 'compose']",{'issue': 100}
