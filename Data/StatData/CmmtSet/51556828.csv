message,fuzzy
"['mergelogbroker', 'dperny', 'request', 'deadlockbroker', 'possible', 'deadlock']",{'deadlock': 100}
"['request', 'failure', 'rollbackfailure', 'update', 'issue', 'service']",{'issue': 100}
"['failure', 'update', 'issue', 'serviceawilliams']",{'issue': 100}
"['subscription', 'altersprocedure', 'publishlogs', 'prevents', 'wholesolution', 'number', 'immediatelypossibility', 'existsclose', 'reading', 'final', 'stream', 'withoutdocumentationensure', 'stream', 'followingclose', 'clientconncontext', 'providederror', 'recvmsgmight', 'client', 'protobuf', 'streamingcloseandrecv', 'function', 'helper', 'closesendtherefore', 'release', 'resourceerror', 'header', 'receivecontext', 'goroutinestats', 'agent', 'function', 'closeagent', 'stream', 'sendscontext', 'worker', 'attemptagent', 'explicitlypossible', 'routecontextcontext', 'agent', 'createdcontext', 'createdcontext', 'whenever', 'subscription', 'subscriptionmanager', 'locatedagent', 'manager', 'initiate', 'connectsserver', 'manager', 'sends', 'subscriptionrequest', 'manager', 'streamcreates', 'stream', 'subscribelogsagent', 'message', 'stream', 'sendsagent', 'creates', 'streamstream', 'sendsthird', 'stream', 'threecomplex', 'concurrent', 'communicateseriesstart', 'stream', 'watchrelevant', 'agent', 'contains', 'queue', 'notifymanager', 'publishlogs', 'message', 'streamindicates', 'agent', 'removepublishlogs', 'finish', 'subscriptionclose', 'message', 'clean', 'notifyprogress', 'requestopportunity', 'manager', 'neveragent', 'closeresponsibility', 'clean', 'completedguaranteeclose', 'function', 'publishlogsderny']",{'concurrent': 100}
"['gometalinter', 'golangcilinter', 'golangcifound', 'issue']",{'issue': 100}
"['crypto', 'update', 'salsagolang']",{'crypto': 100}
"['mergemerge', 'request', 'stack', 'anshulpundirimplementation', 'controlapi']",{'stack': 100}
"['ebfbaa', 'mergemerge', 'request', 'stack', 'anshulpundirextension', 'declaration', 'resource']",{'stack': 100}
"['request', 'dispatcher', 'deadlockmanager', 'dispatcher', 'deadlock']",{'deadlock': 100}
"['address', 'refactor', 'swarm', 'params', 'aroundstruct', 'networkconfig', 'createdsubnet', 'length', 'struct', 'address', 'addedolder', 'comment', 'review', 'addressedselansen']",{'length': 100}
"['issue', 'lintingissue', 'compilationagent', 'composite', 'docker', 'field', 'swarmkit', 'literalagent', 'composite', 'docker', 'field', 'swarmkit', 'literalagent', 'composite', 'docker', 'field', 'swarmkit', 'literalagent', 'composite', 'docker', 'field', 'swarmkit', 'literalagent', 'composite', 'docker', 'field', 'swarmkit', 'literalmanager', 'directive', 'dispatcher', 'possiblemanager', 'directive', 'github', 'sebastiaan', 'stijn']",{'issue': 100}
"['eeeaaac', 'mergecleanup', 'request', 'encryptionalgorithm', 'minor', 'encryption', 'cleanup']",{'encryption': 100}
"['raftdekmanager', 'keyreadwriter', 'encryption', 'documentrespective']",{'encryption': 100}
"['string', 'error', 'breakage', 'issue', 'error', 'documentingavoid', 'issuefunction', 'manager', 'update', 'insteadequivalent', 'github', 'sebastiaan', 'stijn']",{'issue': 100}
"['environment', 'somethinginstead', 'formatter', 'package', 'keyutil', 'requiredefault', 'utility', 'couldcompliance', 'default', 'request', 'encryption', 'specify']",{'encryption': 100}
"['mergemerge', 'request', 'encryptionmanager', 'encryption', 'support']",{'encryption': 100}
"['cefadbc', 'mergefernet', 'request', 'encryptionmanager', 'fernet', 'encryption', 'option', 'state']",{'encryption': 100}
"['check', 'environment', 'variabledetermine', 'encryption']",{'encryption': 100}
"['multidecrypter', 'nicety', 'encryption', 'package']",{'encryption': 100}
"['crypto', 'revendor', 'github', 'sebastiaan', 'stijn']",{'crypto': 100}
"['token', 'rafttool', 'swarm', 'redactinclude', 'forgot', 'swarm', 'redactregistry', 'sensitive', 'tokenpresent']",{'Sensitive': 100}
"['packagefunction', 'parse', 'private', 'convertfunction', 'youmark', 'forkedsignature', 'crypto', 'matchsimplify', 'helper', 'package', 'cfssl']",{'crypto': 100}
"['request', 'sanatizeinformation', 'sensitive', 'option', 'redact', 'cluster', 'state']",{'Sensitive': 100}
"['network', 'ingres', 'issue', 'leader', 'restore', 'allocator', 'logicaddress', 'ingres', 'addedrestore', 'balrajsingh', 'singh']",{'issue': 100}
"['mergemerge', 'request', 'crunchywelcharchitecture', 'issue', 'aarch', 'normalize']",{'issue': 100}
"['sensitive', 'option', 'redact', 'clusterswarm', 'powerful', 'snapshotchange', 'cluster', 'sensitivesecret', 'redact', 'removecontainer']",{'Sensitive': 100}
"['version', 'security', 'containsgolang', 'hzyiemnkde', 'forum', 'github', 'sebastiaan', 'stijn']",{'Security': 100}
"['request', 'signer', 'configserver', 'security', 'separate', 'config']",{'Security': 100}
"['instabilityserver', 'issue', 'request', 'timingright', 'externalalready', 'external', 'rotateddifferent', 'external', 'intermediate', 'addedalready', 'external', 'removedwould', 'normal', 'renewtlsconfig']",{'issue': 100}
"['verison', 'security']",{'Security': 100}
"['security', 'validate', 'certificate', 'configcertificate', 'matchalready', 'credentialagent', 'manager', 'tellingconnects', 'agent', 'invalid', 'happenmanager']",{'Security': 100}
"['false', 'integer', 'fieldcompatibility', 'ensures']",{'integer': 100}
"['request', 'deadlock', 'aaronlehmannagent', 'deadlock']",{'deadlock': 100}
"['agent', 'deadlock', 'resolveproblem', 'senderror', 'force', 'updatenodesenderror', 'sends', 'channelmultiple', 'channel', 'error', 'bufferexample', 'session', 'happenselect', 'chooses', 'immediatelyclose', 'updatenode', 'terminatereceiver', 'channellehmann']",{'deadlock': 100}
"['request', 'masternetwork', 'ingres', 'issue', 'service']",{'issue': 100}
"['requestnetwork', 'issue', 'service']",{'issue': 100}
"['mergemerge', 'request', 'decryption', 'flakeyflaky']",{'encryption': 90}
"['mergemerge', 'request', 'decryptionrotation', 'encryption']",{'encryption': 100}
"['security', 'object']",{'Security': 100}
"['cefafsecurity', 'issuer', 'request', 'configsecurityconfig', 'issuer', 'propagate', 'certificate']",{'issue': 91}
"['securityconfig', 'issuerserver', 'issuer', 'information', 'client']",{'issue': 91}
"['handletestca', 'issue', 'thest']",{'issue': 100}
"['mergeserver', 'service', 'request', 'configserver', 'security', 'control', 'rootca', 'config']",{'Security': 100}
"['server', 'security', 'control', 'configupdater', 'security', 'function', 'configlatest', 'rootca']",{'Security': 100}
"['security', 'object', 'actual', 'rootca']",{'Security': 100}
"['security', 'information', 'rootca', 'configobject', 'rootca']",{'Security': 100}
"['request', 'integration', 'aaronlehmannfails', 'print', 'stack', 'integration']",{'stack': 100}
"['consume', 'certificate', 'renewal', 'requestingshutdown', 'sometimeswrite', 'agent', 'tryingchannel', 'goroutinemaybe', 'process', 'retryingwrite', 'consume', 'tryingagent', 'goroutinecontext', 'deadlock', 'causeagent', 'manager']",{'deadlock': 100}
"['print', 'stack', 'integrationfailure', 'track', 'integrationcontext', 'agent', 'level', 'error', 'deadline', 'clean', 'assignment', 'context', 'error', 'deadline', 'workerprint', 'stacklehmann']",{'stack': 100}
"['crypto', 'cryptorand', 'importcrypto', 'uncomfortable', 'importingdefine', 'package', 'clasharound', 'import', 'movedintroduce', 'cryptographiccrypto', 'cryptorand']",{'crypto': 100}
"['requestupdate', 'security']",{'Security': 100}
"['ensure', 'security']",{'Security': 100}
"['request', 'swarmd', 'crash', 'unknown', 'huikangnetwork', 'plugin', 'swarmd', 'crash', 'unknow', 'reference']",{'crash': 100}
"['mergemanager', 'update', 'requestmanager', 'security', 'update', 'cluster', 'configs']",{'Security': 100}
"['network', 'plugin', 'swarmd', 'crash', 'unknow']",{'crash': 100}
"['duplicate', 'snapshot', 'reportinglogical', 'issue', 'reportsnapshot', 'snapshotrebase', 'mightlehmann']",{'issue': 100}
"['request', 'patchfatalf', 'fatal', 'simplify']",{'fatal': 100}
"['mergemerge', 'request', 'sanimejchange', 'encryption', 'leader']",{'encryption': 100}
"['encryption', 'leader']",{'encryption': 100}
"['publishedportswarm', 'restartedrelies', 'issue', 'reasonservice', 'portspace', 'restoredswarminitialization', 'allocator']",{'issue': 100}
"['swarmctl', 'update', 'validation', 'usageincludes', 'patch', 'followingswarmctl', 'update', 'usageargument', 'length', 'validation', 'updatenodeohmura']",{'length': 100}
"['customnameid', 'relocate', 'pluginswarmkit', 'extra', 'importdependency', 'protoc', 'sincedependency', 'generation']",{'generation': 100}
"['plugin', 'replaceaddress', 'repeatedlygolang', 'conformingaddress', 'issue', 'field', 'preprocessmatchcertain']",{'issue': 100}
"['request', 'publish', 'update', 'service', 'issue']",{'issue': 100}
"['update', 'service', 'issuedocker', 'update', 'servicepublishissue', 'reasoncapture', 'publishaddress', 'issue', 'allocatedingres']",{'issue': 100}
"['pluginsmultiple', 'issue', 'pluginnetwork']",{'issue': 100}
"['proposal', 'method', 'interruptcomponent', 'manager', 'deadlock', 'shuttingmethod']",{'deadlock': 100}
"['logbrokerremember', 'issue']",{'issue': 100}
"['expose', 'service', 'socket', 'control', 'function', 'service', 'swarm', 'withoutcontrol', 'dispatcher', 'socketmanager', 'expose', 'socket', 'commitproxy', 'informationcontext', 'identifies', 'handler', 'local', 'informationserver', 'error']",{'expose': 100}
"['raftproxy', 'proxy', 'inherentlyhandlerissuecomment', 'docker', 'issue']",{'issue': 100}
"['mergemerge', 'request', 'stress', 'stabilize', 'rotationstress', 'aggressive', 'encryption']",{'encryption': 100}
"['encryption', 'stress', 'stabilize']",{'encryption': 100}
"['potential', 'crash']",{'crash': 100}
"['drain', 'swarm', 'issue', 'address', 'docker', 'togetherdockerdrain', 'manager', 'possible', 'availabilityavailabilityavailability', 'specify']",{'issue': 100}
"['encryption', 'snapshot', 'rotation']",{'encryption': 100}
"['manager', 'deadlock']",{'deadlock': 100}
"['mergemerge', 'request', 'mutex', 'renewal', 'aaronlehmanncertificate', 'concurrent', 'renewal']",{'concurrent': 100}
"['certificate', 'concurrent', 'renewal', 'preventmanager', 'unlockedgoroutines', 'certificate', 'overlap', 'scheduleddifferent', 'securityconfigserver', 'client', 'credentialpotentiallylimit', 'concurrentlehmann']",{'concurrent': 100}
"['mergemerge', 'request', 'deadlock', 'orchestrator', 'global', 'aaronlehmannglobal', 'update', 'orchestrator', 'deadlock']",{'deadlock': 100}
"['refactorsplitlatter', 'rootca', 'methodrootca', 'issue', 'objectcreate', 'struct', 'certificate', 'configuresincludes', 'address', 'thing', 'token', 'authenticatedownstreamlehmann']",{'issue': 100}
"['mergemerge', 'requestagent', 'fatalf', 'goroutine']",{'fatal': 91}
"['agent', 'fatalf', 'goroutinefunction', 'goroutinealexander', 'morozov']",{'fatal': 91}
"['request', 'windowmanipulation', 'directory', 'encryption', 'window']",{'encryption': 100}
"['request', 'snapshotwrapper', 'encryption', 'package']",{'encryption': 100}
"['refactorstorage', 'rotate', 'encryption', 'packagerotation']",{'encryption': 100}
"['blacklist', 'addedmonica']",{'blacklist': 100}
"['request', 'encryption', 'packagearound', 'encryption', 'snapshot', 'wrapper', 'secretbox']",{'encryption': 100}
"['encryption', 'snapshot']",{'encryption': 100}
"['default', 'encryption']",{'encryption': 100}
"['character', 'domain', 'random', 'identitygenerates', 'entropy', 'package', 'current', 'identityslight', 'mismatchcorresponds', 'character', 'alwaysdigit', 'partial', 'sincelikelyrender', 'generate', 'extra', 'discardcharacter']",{'entropy': 100}
"['bdcdamerge', 'request', 'crash', 'aaronlehmann', 'allocatorpanic', 'allocation', 'allocator']",{'crash': 100}
"['request', 'length', 'aaronlehmanncontrolapi', 'validate', 'label']",{'length': 100}
"['controlapi', 'validate', 'labelnetwork', 'regexp', 'validate', 'service', 'followcheck', 'length', 'labelvalidchecklehmann']",{'length': 100}
"['unembedmethod', 'expose', 'public', 'readabilityunderlyingalexander', 'morozov']",{'expose': 100}
"['newnode', 'rewrite', 'revert', 'handlecommit', 'original', 'treatmeant', 'fatal', 'nonexistent', 'stateinitialization', 'necessary', 'revertaaronl', 'lehmann']",{'fatal': 100}
"['migrate', 'directoryversion', 'vendoredincompatible', 'version', 'packagedecoder', 'reading', 'createddowngrade', 'crash', 'causingdockerversion', 'downgradedcatch', 'statemigrate', 'downgrade', 'snapshotvisiblelehmann']",{'crash': 100}
"['mergemerge', 'request', 'aaronlehmann', 'deadlockpossible', 'deadlock']",{'deadlock': 100}
"['issue', 'templateissue', 'template', 'docker', 'engine', 'reportlehmann']",{'issue': 100}
"['cccba', 'mergemerge', 'requeststopmu', 'deadlock']",{'deadlock': 100}
"['reconcile', 'orchestratorprepares', 'configurable', 'strategy', 'startingrollout', 'issue', 'level', 'service', 'reconciliation', 'situation', 'handlechange', 'activelevel', 'instance', 'statereconciliation', 'service', 'levelinstead', 'dimension', 'instance', 'containsallows', 'partialupdater', 'service', 'current', 'matchdirty', 'scaleupdater', 'instance', 'reconcile', 'alternative', 'approachrecognize', 'partial', 'complexity', 'orchestratoraction', 'update', 'making', 'remediateprogress', 'current', 'model', 'update', 'fight', 'elegantorchestratorupdater', 'willing', 'explorelehmann']",{'issue': 100}
"['wrong', 'error', 'connection', 'closingconnection', 'specificconnection', 'memberclose', 'existingsendtomember', 'invocation', 'concurrent', 'problemtryingclose', 'connectioninstead', 'error', 'sendtomember', 'producefailure', 'invocation', 'cascadeclose', 'connectionconnection', 'replaceconnection', 'connection', 'stillavoid', 'caller', 'dialingdocker', 'appearslehmann']",{'concurrent': 100}
"['portconfigrelateddockerdocker', 'issue', 'swarmkitdocker', 'issuedifferent', 'service', 'errorcheck', 'portconfig', 'request', 'service', 'value']",{'issue': 100}
"['mergemerge', 'request', 'shutdown', 'deadlock', 'aaronlehmannavoid', 'double', 'stopmu']",{'deadlock': 100}
"['processalthough', 'manager', 'issuedleave', 'issue', 'impossible', 'docker', 'swarmcheck', 'failedallows', 'docker', 'removemanager', 'acceptedregisteredbeslic']",{'issue': 100}
"['mergemerge', 'request', 'deadlock', 'muststop', 'aaronlehmannavoid', 'deadlock', 'demotion']",{'deadlock': 100}
"['deadlock', 'demotionfunction', 'returningreturnproposal', 'deadlock', 'couldcontext']",{'deadlock': 100}
"['expose', 'membershiptonistiigi', 'tonis', 'tiigi']",{'expose': 100}
"['genration', 'ipsec', 'gossipsanthosh']",{'generation': 95}
"['mergemerge', 'request', 'deadlock', 'update', 'service', 'orchestrator', 'deadlock']",{'deadlock': 100}
"['proposal', 'deadlock', 'quorumbeslic']",{'deadlock': 100}
"['agent', 'refactor', 'managementcomponent', 'agent', 'execution', 'splitsimplifyresolveemployment', 'ensure', 'proper', 'statestate', 'operation', 'returnexecutor', 'controller', 'reducedisparate', 'problem', 'surface', 'management', 'stateearlier', 'commitpausable', 'issue', 'proper', 'stateresiliencetaskmanagermanager', 'worker', 'coordinateminimize', 'manages', 'reporter', 'stateconcurrent', 'operationreportercontinues', 'reliable', 'separateagent', 'retry', 'update', 'stateboltdb', 'persistent', 'store', 'worker', 'statestorage', 'assignement', 'interfacedatabase', 'access', 'helperstephen']",{'issue': 100}
"['mergewhite', 'diogomonica', 'controlapi', 'request', 'clustermechanism', 'acceptance', 'bcrypt', 'store']",{'bcrypt': 100}
"['server', 'bcrypt', 'support']",{'bcrypt': 100}
"['requestswarmctl', 'functionality', 'expose']",{'expose': 100}
"['request', 'sanimejmanager', 'allocation', 'encryption', 'distribution', 'support']",{'encryption': 100}
"['manager', 'encryption', 'allocation', 'distributionpurposeagent', 'network', 'encryption', 'symmetric', 'communication', 'gossipagent', 'endpoint', 'service', 'discovery', 'overlayoverlay', 'network', 'trafficsanthosh']",{'encryption': 100}
"['getlocalrootca', 'foundfunction', 'private', 'corresponding', 'rootca', 'return', 'private', 'returningbehavior', 'issue', 'patch', 'matchjlhawn', 'docker']",{'issue': 100}
"['mergeagent', 'concurrent', 'aluzzardiagent', 'concurrent']",{'concurrent': 100}
"['mergeproto', 'aluzzardi', 'requestproto', 'generation']",{'generation': 100}
"['expose', 'control', 'socketmanager', 'multiple', 'address', 'allowexpose', 'controllehmann']",{'expose': 100}
"['orchestrator', 'stateshutdown', 'available', 'containerdebug', 'incorrect', 'thing', 'crash', 'easierargumentcontainer', 'assignmentdisappear', 'agent', 'assignmentagent', 'removelehmann']","{'incorrect': 100, 'crash': 100}"
"['agent', 'function', 'operation', 'controllererror', 'control', 'transition', 'stateruntime', 'methodstate', 'update', 'centralize', 'returntransition', 'controller', 'logicreduce', 'disparate', 'issue', 'status', 'reportingincludes', 'changeset', 'function', 'definitionstatus']",{'issue': 100}
"['component', 'manager', 'shutdown', 'removalprocess', 'removal', 'shutdown', 'logiccontact', 'issue', 'circumventsguess', 'processingremovedmember', 'issue', 'tryingelection', 'removederror', 'returnedmember', 'message', 'foundremovebeslic']",{'issue': 100}
"['valid', 'levelsince', 'nullableprone', 'check', 'error', 'nullable', 'cleancorner', 'crash', 'couldcheck', 'missinglehmann']",{'crash': 100}
"['plugin', 'generation', 'betterability', 'unlock', 'deepcopy', 'messagerelies', 'incompitible', 'deepcopy', 'importstephen']",{'generation': 100}
"['mergestevvooe', 'manager', 'request', 'weight', 'integermanager', 'weight', 'integer']",{'integer': 100}
"['manager', 'weight', 'integermanager', 'weight', 'integer', 'observationagent', 'connectionstephen']",{'integer': 100}
"['state', 'ignore', 'cluster', 'specifiedwould', 'warning', 'clusterbehavior', 'callingconsistent', 'address', 'subsysteminstead', 'cluster', 'error', 'channel', 'fatal', 'error', 'deadlock', 'monitor', 'withoutlehmann']","{'fatal': 100, 'deadlock': 100}"
"['startingrejoin', 'clustereither', 'newnode', 'generation', 'movedremotelehmann']",{'generation': 100}
"['behavior', 'agent', 'issue', 'container', 'handlestartup', 'event', 'container', 'problemmeant', 'ensure', 'eventretry', 'docker', 'imagestephen']",{'issue': 100}
"['stateensure', 'service', 'field', 'provideclarify', 'general', 'structurearbitrary', 'message', 'field', 'serialize', 'couldtrick', 'generation', 'acheiveidiomatic', 'generatestephen']",{'generation': 100}
"['ensure', 'consistent', 'declarationalong', 'issue', 'consistency', 'addressidentifier', 'declaration', 'declaredidentifier', 'proper', 'declaredbiggest', 'source', 'movingallows', 'agent', 'instruct', 'exactusage', 'version', 'clearer', 'becomestephen']",{'issue': 100}
"['request', 'random', 'identityprovide', 'generation', 'identifier', 'identity']",{'generation': 100}
"['generation', 'identifier', 'identityprovides', 'identity', 'packagecomponent', 'identifier', 'random', 'compatible', 'humanprovide', 'roughmaximum', 'identifier']",{'generation': 100}
"['memory', 'store', 'interface', 'store', 'simplevolatile', 'concurrency', 'implementedminorandrea', 'aluzzardi']",{'concurren': 90}
