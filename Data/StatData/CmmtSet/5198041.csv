message,fuzzy
"['vulnerable', 'update']",{'vulnerable': 100}
"['mergemerge', 'netflix', 'request', 'incorrect', 'loggingincorrect']",{'incorrect': 100}
"['thread', 'issue']","{'thread': 100, 'issue': 100}"
"['jackson', 'dependency', 'woodstox', 'eureka', 'issue']",{'issue': 100}
"['default', 'property', 'eureka', 'client', 'server', 'updateinternal', 'issue', 'calculate', 'netflix', 'eureka', 'instance', 'necessary', 'preservation', 'client', 'server']",{'issue': 100}
"['mergeeureka', 'mgtriffid', 'requestcongestion', 'eureka', 'counter', 'issue']",{'issue': 100}
"['congestion', 'eureka', 'counter', 'issue']",{'issue': 100}
"['stack', 'payload']",{'stack': 100}
"['stack', 'payload']",{'stack': 100}
"['mergeissue', 'krutsko', 'requestclientconfig', 'register', 'issue']",{'issue': 100}
"['clientconfig', 'register', 'issue']",{'issue': 100}
"['mergemerge', 'request', 'register', 'tdanylchuk', 'handler', 'healthcheck', 'concurrentregister', 'handler', 'custom', 'healthcheck', 'discoveryclient', 'concurrent']",{'concurrent': 100}
"['default', 'health', 'possibility', 'check', 'register', 'handler', 'rewrite', 'client', 'healthcheck', 'sincecausedefault', 'thread', 'check', 'register', 'handler', 'custom', 'healthcheck', 'discoveryclient', 'creationresolution', 'summarydefault', 'reference', 'atomicreference', 'handler', 'healthcheck', 'implementation']",{'thread': 100}
"['requestpotential', 'issue']",{'issue': 100}
"['potential', 'issue']",{'issue': 100}
"['dbbabe', 'mergemaster', 'qiangdavidliu', 'requestxstream', 'security', 'framework']",{'Security': 100}
"['security', 'stream', 'framework']",{'Security': 100}
"['improves', 'methodprevent', 'register', 'eureka', 'client', 'servereureka', 'netflix', 'corresponding', 'issue']",{'issue': 100}
"['incorrect', 'loggerfound', 'netbeans', 'helper', 'issueplugin']",{'incorrect': 100}
"['incorrect', 'loggerfound', 'netbeans', 'helper', 'issueplugin']",{'incorrect': 100}
"['requestfound', 'concurrency']",{'concurren': 90}
"['mergemaster', 'qiangdavidliu', 'registration', 'potential', 'issue', 'condition']",{'issue': 100}
"['issue', 'conditionexperimental']",{'issue': 100}
"['daefe', 'dafeb', 'mergemaster', 'requestauthentication', 'restore', 'support', 'issue']",{'issue': 100}
"['authentication', 'restore', 'support', 'issue']",{'issue': 100}
"['charset', 'content', 'issue', 'header']",{'issue': 100}
"['expose', 'event', 'eurekaclient']",{'expose': 100}
"['timing', 'issue']",{'issue': 100}
"['charset', 'content', 'issue', 'header', 'entity', 'undone']",{'issue': 100}
"['requestrevert', 'external', 'dependency', 'issue']",{'issue': 100}
"['mergemaster', 'qiangdavidliu', 'requestasync', 'thread', 'resolver', 'daemon']",{'thread': 100}
"['async', 'thread', 'resolver', 'daemon']",{'thread': 100}
"['charset', 'content', 'issue', 'header']",{'issue': 100}
"['charset', 'content', 'issue', 'header']",{'issue': 100}
"['bcffc', 'mergemaster', 'requestjackson', 'compatibility', 'netflix', 'revert', 'eureka', 'issue']",{'issue': 100}
"['jackson', 'compatibility', 'netflix', 'revert', 'eureka', 'issue']",{'issue': 100}
"['requesteureka', 'netflix', 'issue']",{'issue': 100}
"['eureka', 'netflix', 'issue']",{'issue': 100}
"['thread', 'daemon', 'eureka']",{'thread': 100}
"['issue', 'connection']",{'issue': 100}
"['issue', 'connection']",{'issue': 100}
"['content', 'request', 'invalid', 'error', 'handlingeureka', 'netflix', 'issue']",{'issue': 100}
"['incorrect', 'default']",{'incorrect': 100}
"['mergejeremydyoung', 'master', 'requestjersey', 'thread', 'shutdown', 'discoveryclient']",{'thread': 100}
"['jersey', 'thread', 'shutdown', 'discoveryclient']",{'thread': 100}
"['instanceinfo', 'lazysingletondiscoveryclient', 'injection', 'singleton']",{'injection': 100}
"['requestregion', 'thread', 'replication']",{'thread': 100}
"['region', 'thread', 'current', 'gauge', 'thread', 'usage', 'level']",{'thread': 100}
"['generation', 'guard', 'remoteregistry', 'update']",{'generation': 100}
"['requestconverter', 'replacement', 'configurable', 'issue']",{'issue': 100}
"['issue', 'static', 'eureka']",{'issue': 100}
"['converter', 'replacement', 'issue', 'config', 'setup']",{'issue': 100}
"['converter', 'replacement', 'issue', 'config', 'setup']",{'issue': 100}
"['converter', 'replacement', 'configurable', 'issue']",{'issue': 100}
"['issue', 'clearingevery']",{'issue': 100}
"['argument', 'constructor', 'issue', 'anotherinside', 'dependent', 'netflix', 'package', 'making', 'constructor']",{'issue': 100}
"['eipmanager', 'issue']",{'issue': 100}
"['concurrency', 'control', 'switch', 'update']",{'concurren': 90}
"['heartbeat', 'thread', 'heartbeat', 'timeout', 'backup', 'cacherefresh', 'discoveryclient']",{'thread': 100}
"['heartbeat', 'thread', 'cacherefresh', 'wrapping', 'discoveryclientsupervisor', 'thread', 'enforces']",{'thread': 100}
"['issuejerseyclient', 'thread', 'eureka', 'making']",{'thread': 100}
"['dffcd', 'mergeknewton', 'checkstyles', 'various', 'issue']",{'issue': 100}
"['incorrect', 'javadoc']",{'incorrect': 100}
"['traffic', 'network', 'event', 'optimization', 'individual', 'eureka', 'replicationstate', 'maintenance', 'effect', 'issue', 'request', 'optimization', 'eureka', 'server', 'number', 'great', 'thread', 'cluster', 'replication', 'expands']","{'issue': 100, 'thread': 100}"
"['mergekarthik', 'master', 'requestassignment', 'netflix', 'simplify', 'eureka', 'issue']",{'issue': 100}
"['mergekarthik', 'master', 'requesteureka', 'netflix', 'issue']",{'issue': 100}
"['mergekarthik', 'master', 'requesteureka', 'netflix', 'issue']",{'issue': 100}
"['number', 'network', 'startup', 'cluster', 'eureka', 'instance', 'accessible', 'issue', 'registeredbetter', 'threshold', 'valid', 'preservation', 'enable', 'renewal']",{'issue': 100}
"['subtypes', 'application', 'netflix', 'check', 'deserialization', 'eureka', 'appropriate', 'issue', 'exact', 'xstream', 'string']",{'issue': 100}
"['netflix', 'eureka', 'issue', 'specific', 'updateusage', 'metadata', 'localhost', 'eureka', 'myapp']",{'issue': 100}
"['registry', 'security']",{'Security': 100}
"['central', 'javadoc', 'maven', 'source', 'issue']",{'issue': 100}
"['central', 'javadoc', 'maven', 'source', 'issue']",{'issue': 100}
