message,fuzzy
"['xchaha', 'crash', 'cryptmethod', 'patchproblem', 'xchaha', 'crash', 'cryptmethod', 'tournoijdisable', 'solution']",{'crash': 100}
"['crash', 'patch', 'function', 'partialproblem', 'crash', 'return', 'function']",{'crash': 100}
"['crypt', 'problem', 'libsodium', 'patch', 'issuecrypt', 'problem', 'solutionadjust', 'message', 'error', 'coveritychristian']",{'crypto': 91}
"['operator', 'unpack', 'crash', 'assignment', 'problem', 'operator', 'unpack', 'crashnaohiroclose', 'variable', 'solution', 'value']",{'crash': 100}
"['early', 'crash', 'value', 'patch', 'echoingproblem', 'nishino', 'crash', 'value', 'naruhikosolution', 'truncateclose']",{'crash': 100}
"['crash', 'patch', 'reference', 'functionnaohiro', 'problem', 'crash', 'functionsolution', 'close', 'check', 'invalid', 'function']",{'crash': 100}
"['crash', 'patch', 'level', 'problem', 'level', 'crashexecution', 'solution']",{'crash': 100}
"['compile', 'crash', 'patch', 'function', 'callingproblem', 'crash', 'function', 'callingclose', 'solution']",{'crash': 100}
"['buffer', 'patch', 'relatedbuffer', 'problem', 'relatedclose', 'solution', 'yegappan']",{'buffer': 100}
"['patch', 'stack', 'numberproblem', 'salman', 'stack', 'numberhalimoffset', 'solution']",{'stack': 100}
"['various', 'length', 'patch', 'computingproblem', 'array', 'various', 'length', 'computingsolution']",{'length': 100}
"['patch', 'functionproblem', 'shadow', 'yasuhiro', 'matsumoto', 'issue', 'check']",{'issue': 100}
"['window', 'crash', 'terminal', 'patch', 'cmdline', 'problem', 'window', 'crash', 'terminal', 'cmdline']",{'crash': 100}
"['patch', 'string', 'fullcommandproblem', 'crash', 'string', 'fullcommandcheck', 'solution']",{'crash': 100}
"['solution', 'issue']",{'issue': 100}
"['crash', 'patch', 'inline', 'functioninline', 'check', 'inline', 'functionclose']",{'crash': 100}
"['crash', 'partialproblem', 'crashcheck', 'solution', 'dominique']",{'crash': 100}
"['expression', 'crash', 'substitute', 'problem', 'crash', 'substitute', 'stillclose', 'instruction', 'solution', 'stack']","{'crash': 100, 'stack': 100}"
"['expression', 'crash', 'substitute', 'patch', 'function', 'callingproblem', 'crash', 'substitute', 'function', 'callingsubstitute', 'instruction', 'solution', 'expressionclose']",{'crash': 100}
"['buffer', 'local', 'patch', 'mapset', 'global', 'settingproblem', 'buffer', 'local', 'global', 'settinglocal', 'solution']",{'buffer': 100}
"['window', 'echoconsole', 'crash', 'problem', 'crash', 'windowalready', 'solution']",{'crash': 100}
"['error', 'memory', 'patch', 'accessproblem', 'error', 'memory', 'accessadjust', 'length', 'solution', 'memmove']",{'length': 100}
"['variable', 'error', 'patch', 'changingerror', 'problem', 'changingvariable', 'solution', 'issue']",{'issue': 100}
"['patch', 'testedproblem', 'concatenatingsolution', 'issue']",{'issue': 100}
"['double', 'crash', 'index', 'double', 'problem', 'crashhandle', 'solution', 'closemessage', 'error']",{'crash': 100}
"['variable', 'script', 'lockedscript', 'problem', 'variable', 'lockedsolution', 'legacy', 'check', 'variable', 'issue', 'script']",{'issue': 100}
"['crash', 'patch', 'variable', 'scriptscript', 'problem', 'crashsolution']",{'crash': 100}
"['terminal', 'message', 'patch', 'writeterminal', 'message', 'problem', 'writeechoconsole', 'solution', 'issue']",{'issue': 100}
"['index', 'patch', 'string', 'includeslice', 'problem', 'index', 'string', 'issue', 'solution']",{'issue': 100}
"['unknown', 'dictionary', 'patch', 'puttingproblem', 'crash', 'unknownlakshmanan', 'yegappanhandle', 'solution']",{'crash': 100}
"['buffer', 'patch', 'session', 'hiddenproblem', 'alternate', 'buffer', 'sessionclose', 'check', 'solution']",{'buffer': 100}
"['wrong', 'crash', 'patch', 'function', 'wrong', 'crash', 'close', 'argument']",{'crash': 100}
"['crash', 'legacy', 'patch', 'functionlegacy', 'problem', 'crash', 'gettingsolution', 'initialize']",{'crash': 100}
"['solution', 'comment', 'issue']",{'issue': 100}
"['patchproblemsolution', 'issue']",{'issue': 100}
"['patch', 'command', 'reasonconsider', 'problem', 'reasonsolution', 'issue']",{'issue': 100}
"['patch', 'stack', 'signal', 'glibcproblem', 'stack', 'signal', 'glibcsysconf', 'solution', 'zdenek']",{'stack': 100}
"['patch', 'mouseproblem', 'mousesolution', 'issue']",{'issue': 100}
"['window', 'error', 'crash', 'terminal', 'patch', 'heightproblem', 'window', 'leonid', 'error', 'crash', 'terminalfedorenchiksolution', 'resize', 'close', 'width', 'height']",{'crash': 100}
"['cursorline', 'boolean', 'patch', 'allowcursorline', 'boolean', 'problem', 'allowsolution', 'issue']",{'issue': 100}
"['crash', 'iterator', 'patch', 'problem', 'crash', 'pythonincrement', 'close', 'solution', 'reference']",{'crash': 100}
"['patch', 'crash', 'failsproblem']",{'crash': 100}
"['error', 'range', 'patch', 'confusingerror', 'problem', 'confusingerror', 'solution', 'issue']",{'issue': 100}
"['lambda', 'crash', 'patch', 'failsproblem', 'lambda', 'crashcompilation', 'solution']",{'crash': 100}
"['crash', 'return', 'patch', 'invalid', 'problem', 'crash', 'return', 'invalid', 'functionfunction', 'memory', 'solution']",{'crash': 100}
"['crash', 'closure', 'patch', 'argumentargument', 'problem', 'crashcheck', 'solution']",{'crash': 100}
"['stack', 'leaveproblem', 'error', 'leaveclose', 'solution', 'stack']",{'stack': 100}
"['command', 'buffer', 'patch', 'translatedcommand', 'buffer', 'problemgabriel', 'solution']",{'buffer': 100}
"['current', 'deletebufline', 'wrong', 'buffer', 'patch', 'failsproblem', 'current', 'deletebufline', 'wrong', 'buffer', 'delete', 'failsanotherrestore', 'current', 'solution']",{'buffer': 100}
"['generic', 'error', 'patch', 'argumentgeneric', 'problem', 'argumentmention', 'solution', 'issue']",{'issue': 100}
"['memory', 'buffer', 'problem', 'window', 'memory', 'buffer', 'solution', 'disallow']",{'buffer': 100}
"['command', 'window', 'crash', 'autocommand', 'patch', 'triggercommand', 'problem', 'window', 'crash', 'triggerhouyunsongcurrent', 'solution', 'window']",{'crash': 100}
"['window', 'crash', 'autocommand', 'patchcommand', 'problem', 'window', 'crashhouyunsongrestore', 'solution']",{'crash': 100}
"['native', 'screen', 'fuoptionsnative', 'screen', 'screen', 'nativenative', 'centerview', 'resizevimviewframe', 'centerwrong', 'function', 'removinglonger', 'maxvert', 'fuopts', 'centerview', 'tryingnative', 'screen', 'window', 'insteadwholeallow', 'option', 'usefulamong', 'differentnative', 'preference', 'screen', 'regularnative', 'expose', 'apperance']",{'expose': 100}
"['range', 'crash', 'patch', 'problem', 'crash', 'houyunsong']",{'crash': 100}
"['value', 'patch', 'stack', 'conditionvalue', 'problem', 'stack', 'conditionsolution', 'clearissue']",{'stack': 100}
"['command', 'window', 'state', 'patch', 'stuckcommand', 'problem', 'window', 'stucksolution', 'editing', 'arglist', 'buffer', 'reset']",{'buffer': 100}
"['window', 'crash', 'patch', 'dohnal', 'problem', 'crash', 'zdenek', 'cmdlinecmdline', 'solution', 'disallow']",{'crash': 100}
"['patch', 'cstack', 'problem', 'cstack', 'field']",{'stack': 91}
"['space', 'patch', 'whiteproblem', 'space', 'whitesolution', 'error', 'stray', 'issue']",{'issue': 100}
"['silent', 'patch', 'silent', 'problem', 'crashrewind', 'solution', 'error', 'silent', 'stack']",{'stack': 100}
"['occasional', 'patch', 'timer', 'problem', 'crash', 'occasional', 'catchrestore', 'solution', 'timerclose']",{'crash': 100}
"['message', 'error', 'patch', 'dividingmessage', 'error', 'problem', 'dividingerror', 'solution', 'issue']",{'issue': 100}
"['range', 'expression', 'crash', 'problem', 'range', 'crash', 'variable', 'solutionclose']",{'crash': 100}
"['crash', 'dividingsolution']",{'crash': 100}
"['crash', 'return', 'patch', 'function', 'failsproblem', 'crash', 'return', 'functionreturn', 'close', 'solution']",{'crash': 100}
"['combination', 'autocommands', 'crash', 'weird', 'patchweird', 'problem', 'combination', 'crashincrement', 'solution']",{'crash': 100}
"['block', 'crash', 'crashclose', 'instruction', 'solution', 'generate']",{'crash': 100}
"['patch', 'reference', 'function', 'problem', 'lookup', 'solution', 'check', 'reference', 'functionargument', 'issue']",{'issue': 100}
"['wrong', 'patch', 'stack', 'wrong', 'stack', 'orderclose', 'constant', 'solution', 'generate']",{'stack': 100}
"['message', 'flaky', 'making', 'error', 'memory', 'patch', 'invalid', 'accessmessage', 'problem', 'making', 'error', 'memory', 'invalid', 'accesscheck', 'solution', 'issue']",{'issue': 100}
"['lambda', 'crash', 'patch', 'argumentproblem', 'lambda', 'crash', 'argument', 'check']",{'crash': 100}
"['mismatch', 'strncmp', 'length', 'patch', 'argument', 'checkmismatch', 'problem', 'strncmp', 'christian', 'length', 'argument', 'checkbrabandtadjust', 'length', 'solution']",{'length': 100}
"['error', 'buffer', 'patch', 'python', 'changingproblem', 'error', 'buffer', 'solution', 'block']",{'buffer': 100}
"['patch', 'enddef', 'endfuncerror', 'problem', 'endfunc', 'mismatchedcheck', 'solution', 'issue']",{'issue': 100}
"['lambda', 'crash', 'return', 'patch', 'problem', 'lambda', 'crash', 'return', 'withoutreturn']",{'crash': 100}
"['negative', 'crash', 'patch', 'widthproblem', 'window', 'crash', 'widthwidth', 'solution', 'window']",{'crash': 100}
"['patch', 'popup', 'crash', 'containsproblem', 'popup', 'crash', 'containsclose', 'check', 'solution', 'boundary']",{'crash': 100}
"['different', 'crash', 'patch', 'variable', 'scriptproblem', 'different', 'crash', 'check', 'solution']",{'crash': 100}
"['support', 'issue', 'option']",{'issue': 100}
"['support', 'issue', 'optionstateful', 'recent', 'renderermacvim', 'ignoresdummy', 'creates', 'differentmacvim', 'discard', 'spacingbehavior', 'introduces', 'discard', 'commitpreference', 'spacingterminal', 'survey', 'casualxcode', 'behavior']",{'issue': 100}
"['command', 'patch', 'globalsolution', 'issue']",{'issue': 100}
"['lambda', 'space', 'patch', 'confusingaround', 'problem', 'lambda', 'space', 'white', 'withoutsolution', 'space', 'issue']",{'issue': 100}
"['function', 'patch', 'constantchange', 'problem', 'constantcheck', 'variable', 'solution', 'issue']",{'issue': 100}
"['crash', 'patch', 'global', 'function', 'callingproblem', 'crash', 'global', 'function', 'callingouter', 'solution', 'context', 'partialufunc', 'track']",{'crash': 100}
"['bufunload', 'buffer', 'dummy', 'patch', 'quickfixproblem', 'bufunload', 'dummy', 'quickfixclose', 'pontus', 'solution', 'triggeraround', 'space']",{'buffer': 100}
"['number', 'patch', 'crash', 'indexingproblem', 'crash', 'indexingsolution']",{'crash': 100}
"['macvim', 'snapshotupdatedminor', 'issue', 'release', 'updatelaunch', 'macos', 'sierracompatibilitymacos', 'requiresinterface', 'script', 'compatibility', 'versionpythonpython']",{'issue': 100}
"['crash', 'exception', 'patchproblem', 'crash', 'exceptioncompare', 'execption', 'solution']",{'crash': 100}
"['buffer', 'terminal', 'patch', 'popupwin', 'failsproblem', 'buffer', 'terminal', 'popupwin', 'failssolution']",{'buffer': 100}
"['apple', 'silicon', 'release', 'supportfeaturemacospreference', 'macvim', 'toolbars', 'updatedinterface', 'updatedmacvim', 'warning', 'touchsymbol', 'double', 'character', 'macos', 'specificimprovement', 'performance', 'rendererrewritten', 'setting', 'default', 'mmrendererknown', 'update', 'futurelocalizationlangmenu', 'localizationlangmenu', 'wouldexists', 'stillmacvim', 'vimtutor', 'accessrelease', 'latestgeneralnative', 'apple', 'silicon', 'version', 'pythonrelease', 'default', 'homebrewmacvim', 'apple', 'buildable', 'nativesource', 'downloadingprogress', 'github', 'universal', 'releasingapplemacvim', 'github', 'discussiondiscussion', 'generalmacvim', 'discussion', 'checkmacvim', 'locale', 'decimalseparatorplugins', 'winbar', 'vimspectorcreate', 'dummy', 'browse', 'crash', 'terminal', 'tabnew', 'macvimversion', 'language', 'scriptingbuilt', 'pythonbuiltcompatibilitymacos', 'requiresinterface', 'script', 'compatibility', 'versionpythonpython']",{'crash': 100}
"['wrong', 'eddsa', 'update', 'sparkleeddsa', 'snapshot', 'release', 'fatal', 'generate', 'sparklefuture', 'update', 'rightmacvim', 'likely', 'directlypeople']",{'fatal': 100}
"['apple', 'silicon', 'release', 'supportfeaturemacospreference', 'macvim', 'toolbars', 'updatedinterface', 'updatedmacvim', 'warning', 'touchsymbol', 'double', 'character', 'macos', 'specificimprovement', 'performance', 'rendererrewritten', 'setting', 'default', 'mmrendererknown', 'update', 'futurelocalizationlangmenu', 'localizationlangmenu', 'wouldexists', 'stillmacvim', 'vimtutor', 'accessrelease', 'latestgeneralnative', 'apple', 'silicon', 'version', 'pythonrelease', 'default', 'homebrewmacvim', 'apple', 'buildable', 'nativesource', 'downloadingprogress', 'github', 'universal', 'releasingapplemacvim', 'github', 'discussiondiscussion', 'generalmacvim', 'discussion', 'checkmacvim', 'locale', 'decimalseparatorplugins', 'winbar', 'vimspectorcreate', 'dummy', 'browse', 'crash', 'terminal', 'tabnew', 'macvimversion', 'language', 'scriptingbuilt', 'pythonbuiltcompatibilitymacos', 'requiresinterface', 'script', 'compatibility', 'versionpythonpython']",{'crash': 100}
"['complete', 'buffer', 'patch', 'complete', 'buffer', 'boris', 'popupstaleticbuffer', 'solution']",{'buffer': 100}
"['early', 'vimscript', 'crash', 'patch', 'problem', 'vimscript']",{'crash': 100}
"['window', 'guifont', 'crash', 'problem', 'window', 'guifont', 'crashcheck', 'solution']",{'crash': 100}
"['patch', 'recognizedproblemmatch', 'solution', 'issue']",{'issue': 100}
"['concat', 'member', 'crash', 'patch', 'failedproblem', 'member', 'crash', 'failedsolution']",{'crash': 100}
"['member', 'crash', 'silent', 'patch', 'member', 'crash', 'silentsolution']",{'crash': 100}
"['console', 'character', 'patch', 'typedproblem', 'window', 'console', 'typedlonger', 'solution', 'issue']",{'issue': 100}
"['border', 'patch', 'whitestand', 'problem', 'border', 'whitecurrent', 'solution', 'theme', 'close', 'issue']",{'issue': 100}
"['buffer', 'terminal', 'bufhidden', 'patch', 'disappearsproblem', 'buffer', 'terminal', 'bufhidden', 'disappearssergey', 'vlasovsolution', 'bufhiddden', 'buffer', 'terminal']",{'buffer': 100}
"['patch', 'quickfix', 'failsproblem', 'buffer', 'messedquickfix', 'windowsolution', 'buffer', 'check']",{'buffer': 100}
"['function', 'patch', 'maxfuncdepthfunction', 'problem', 'maxfuncdepthsolution', 'issue', 'maxfuncdepth']",{'issue': 100}
"['popup', 'causeproblem', 'popup', 'causesolution', 'yasuhiro', 'length']",{'length': 100}
"['crash', 'terminal', 'patch', 'crash', 'terminal', 'popupcheck', 'solution']",{'crash': 100}
"['patch', 'invalid', 'quickfixproblem', 'window', 'invalid', 'quickfixsolution', 'yegappan', 'update', 'close', 'buffer', 'quickfixclose']",{'buffer': 100}
"['cursor', 'backspace', 'problem', 'cursor', 'backspace', 'buffer', 'maximprompt', 'close', 'solution', 'ignore']",{'buffer': 100}
"['window', 'crash', 'patch', 'popup', 'problem', 'window', 'crash', 'popup', 'latinscreenlinesuc', 'solution']",{'crash': 100}
"['patch', 'access', 'netbeansproblem', 'access', 'netbeanssolution', 'yegappan', 'buffer', 'pointer', 'checkclose']",{'buffer': 100}
"['crash', 'buffer', 'terminal', 'empty', 'patchproblem', 'crash', 'buffer', 'terminal', 'dhiraj', 'mishrasolution']","{'crash': 100, 'buffer': 100}"
"['crash', 'patch', 'function', 'crash', 'function', 'failshandle', 'solution']",{'crash': 100}
"['crash', 'patchmessage', 'problem', 'crash', 'srinathavadhanulamessage']",{'crash': 100}
"['problem', 'dewar', 'crash', 'withoutclose', 'check', 'solution']",{'crash': 100}
"['patch', 'function', 'reduceproblem', 'crash', 'function', 'reducecheck', 'dominique', 'solution', 'pointerclose']",{'crash': 100}
"['buffer', 'terminal', 'patch', 'wipingbuffer', 'terminal', 'problem', 'wipingbuffer', 'terminal']",{'buffer': 100}
"['patch', 'crash', 'indexingproblem', 'crash', 'indexingsolution', 'error', 'empty', 'stringmessage', 'empty']",{'crash': 100}
"['wrong', 'patchproblemupdate', 'solution', 'issue']",{'issue': 100}
"['buffer', 'patch', 'normal', 'problem', 'failsinstead', 'conceallevel', 'solution', 'numberwidth']",{'buffer': 100}
"['value', 'buffer', 'patch', 'problem', 'default']",{'buffer': 100}
"['patch', 'memory', 'crash', 'situationproblem', 'memory', 'crashsolution', 'dominique']",{'crash': 100}
"['space', 'error', 'white', 'patch', 'errornousproblem', 'space', 'error', 'errornousspace', 'solution', 'issue']",{'issue': 100}
"['crash', 'exception', 'patch', 'string', 'throwingproblem', 'crash', 'exception', 'dhiraj', 'throwingmishrahandle', 'solution', 'close', 'empty', 'string']",{'crash': 100}
"['allocation', 'memory', 'buffer', 'patch', 'netbeans', 'numberallocation', 'problem', 'memory', 'buffer', 'netbeans', 'numbercheck', 'solution']",{'buffer': 100}
"['browse', 'crash', 'patch', 'problem', 'crash', 'definedmemory', 'solution', 'yegappanclose']",{'crash': 100}
"['window', 'stdin', 'patch', 'issue', 'pythonissue', 'problem', 'window', 'pythonstdin', 'check', 'solution']",{'issue': 100}
"['error', 'crash', 'callback', 'patch', 'timer', 'happensproblem', 'error', 'crash', 'timer', 'happenscheck', 'solution']",{'crash': 100}
"['problem', 'shell', 'terminalsolution', 'settmode', 'issue']",{'issue': 100}
"['patch', 'crashproblem', 'crash', 'dhiraj', 'mishrasolution', 'return', 'empty', 'string']",{'crash': 100}
"['crash', 'patch', 'pythonproblem', 'window', 'crash', 'pythoninstead', 'solution']",{'crash': 100}
"['constant', 'patch', 'invalid', 'crashproblem', 'crash', 'invalid', 'dhiraj', 'mishrareturn', 'solution']",{'crash': 100}
"['problem', 'commits', 'patch', 'security', 'scannedproblem', 'commits', 'security', 'scannedsolution', 'christian', 'close', 'enable', 'github']",{'Security': 100}
"['insert', 'interferes', 'buffer', 'patchproblem', 'insert', 'interferes', 'curwin', 'solutionclose']",{'buffer': 100}
"['clear', 'patch', 'context', 'partialouter', 'problem', 'partialouter', 'solution', 'close', 'stack', 'context']",{'stack': 100}
"['patch', 'quickfix', 'windowproblem', 'quickfix', 'windowsolution', 'yegappan', 'buffer', 'shorten', 'firstclose']",{'buffer': 100}
"['crash', 'mapset', 'patch', 'argument', 'firstproblem', 'crash', 'mapset', 'firstcheck', 'solution']",{'crash': 100}
"['patch', 'marker', 'crashproblem', 'marker', 'crash', 'dhiraj', 'mishrafunction', 'check', 'solution']",{'crash': 100}
"['crash', 'marker', 'patch', 'invalid', 'problem', 'crash', 'invalid', 'dhiraj', 'heredoc', 'mishracheck', 'comment', 'solution']",{'crash': 100}
"['import', 'crash', 'patch', 'level', 'problem', 'import', 'crash']",{'crash': 100}
"['crash', 'closure', 'patch', 'function', 'failsproblem', 'crash', 'closure', 'failshandle', 'solution']",{'crash': 100}
"['crash', 'patchproblem', 'window']",{'crash': 100}
"['function', 'crash', 'patch', 'compilingproblem', 'crash', 'antony', 'compilingscrivenscript', 'check', 'solution']",{'crash': 100}
"['closure', 'patch', 'funcrefclosure', 'problem', 'funcrefsolution', 'funcref', 'growarray', 'stack', 'puttingexecution']",{'stack': 100}
"['error', 'patch', 'popupproblem', 'popup', 'callback', 'issue', 'filter']",{'issue': 100}
"['macvim', 'snapshotupdatedfeatureimprovement', 'touchdisplay', 'support', 'touchdisplay', 'tmenu', 'insertpicker', 'touchbar', 'emojilonger', 'window', 'screen', 'duplicateswitch', 'window', 'whenever', 'screen', 'entrymacvim', 'screen', 'issue', 'titlebar', 'appearancewould', 'focus', 'resultcommand', 'dialog', 'passwordlonger', 'askpass', 'password', 'entry', 'macvim', 'focusfocusminor', 'wrong', 'preference', 'tooltip', 'sparkle', 'preference', 'behavior', 'firstcompatibilitymacos', 'requiresinterface', 'script', 'compatibility', 'versionpythonpython']",{'issue': 100}
"['window', 'option', 'translation', 'patch', 'duplicateduplicate', 'problem', 'window', 'optionsolution', 'wrong', 'buffer', 'local', 'entry', 'globalclose']",{'buffer': 100}
"['color', 'crash', 'patch', 'setting', 'motifproblem', 'andrzej', 'crash', 'bylicki', 'setting', 'solution', 'closeclose']",{'crash': 100}
"['multiple', 'error', 'crash', 'closure', 'patchproblem', 'multiple', 'crash', 'function', 'update']",{'crash': 100}
"['finder', 'event', 'macvimdialog', 'permission', 'focus', 'issuemacvim', 'littlefinder', 'controlclose']",{'permission': 100}
"['autoload', 'error', 'crash', 'patch', 'scriptscript', 'autoload', 'problem', 'crashcheck', 'reset', 'solution']",{'crash': 100}
"['crash', 'patch', 'problem', 'crash', 'foldedcheck', 'solution']",{'crash': 100}
"['mkview', 'memory', 'buffer', 'terminal', 'problem', 'mkview', 'memory', 'terminalhastab', 'solution']",{'buffer': 100}
"['buffer', 'terminal', 'restore', 'patch', 'mksession', 'problem', 'buffer', 'terminal', 'restore', 'mksessionterminal', 'hashtab', 'solution']",{'buffer': 100}
"['mergetooltips', 'request', 'sfsamremove', 'panel', 'tooltips', 'appearance', 'incorrect']",{'incorrect': 100}
"['panel', 'tooltips', 'appearance', 'incorrect']",{'incorrect': 100}
"['current', 'window', 'buffer', 'patch', 'hiddenproblem', 'current', 'window', 'display', 'buffer', 'hiddenjohnny', 'mcarthurinstead', 'solutionclose']",{'buffer': 100}
"['final', 'patch', 'stack', 'numberfinal', 'problem', 'stack']",{'stack': 100}
"['patch', 'window', 'optionproblem', 'window', 'optiontranslation', 'local', 'solutionlocal', 'issue', 'whichwrap']",{'issue': 100}
"['submatch', 'crash', 'substitute', 'submatch', 'problem', 'crash', 'substituteincrement', 'close', 'solution', 'reference']",{'crash': 100}
"['wrong', 'winheight', 'problem', 'winheightwinheight', 'solution', 'issue']",{'issue': 100}
"['buffer', 'patch', 'promptproblem', 'promptsolution']",{'buffer': 100}
"['error', 'buffer', 'patchbuffer', 'error', 'problemsolution']",{'buffer': 100}
"['vimgrep', 'patch', 'crashproblem', 'crash', 'segura', 'vimgrep', 'startedclose', 'check', 'solution', 'yegappan']",{'crash': 100}
"['patch', 'crash', 'normalproblem', 'crash']",{'crash': 100}
"['clang', 'warning', 'patchproblem', 'mccoy', 'clang', 'warning', 'solution', 'issue']",{'issue': 100}
"['crash', 'patch', 'invalid', 'invalid', 'scriptscript', 'check', 'solution']",{'crash': 100}
"['buffer', 'patch', 'spellfile', 'readingbuffer', 'yegappan', 'problem', 'readinglakshmananlength', 'check', 'store', 'solution']",{'buffer': 100}
"['comment', 'crash', 'patch', 'heredocempty', 'comment', 'solution']",{'crash': 100}
"['lambda', 'crash', 'patch', 'clear', 'growarray', 'pointer', 'correctclose']",{'crash': 100}
"['travis', 'permission', 'image', 'target', 'issue', 'macvimcreate', 'osascript', 'prettify', 'createdsince', 'travis', 'woulddialog', 'macos', 'permission', 'latercreate', 'version', 'interacthandle', 'failure', 'version', 'maintainerbuilt', 'travis', 'locallynotarization', 'travis']","{'permission': 100, 'issue': 100}"
"['typecast', 'crash', 'patch', 'typecast', 'problem', 'constant', 'solution', 'generate']",{'crash': 100}
"['patch', 'existproblem', 'dependssilent', 'solution', 'issue']",{'issue': 100}
"['upstream', 'macos', 'clipboard', 'issue', 'ifdefifdef', 'upstream', 'incorrect']","{'issue': 100, 'incorrect': 100}"
"['outer', 'lambda', 'crash', 'patch', 'argument', 'functionouter', 'problem', 'lambda', 'crash', 'functionouter', 'context', 'solution']",{'crash': 100}
"['boolean', 'operator', 'patch', 'resultproblem', 'operator', 'resultdepend', 'false', 'issue']",{'issue': 100}
"['script', 'twiceautoload', 'problem', 'script', 'twiceautoload', 'solution', 'source', 'issue', 'script']",{'issue': 100}
"['stdin', 'crash', 'patch', 'pythonproblem', 'window', 'stdin', 'crash', 'pythonyasuhiro', 'reconnect', 'solution']",{'crash': 100}
"['window', 'double', 'crash', 'character', 'terminal', 'patch', 'drawingproblem', 'double', 'crash', 'character', 'terminal', 'drawingmasato', 'nishihatasolution', 'issue', 'check', 'getcell']","{'crash': 100, 'issue': 100}"
"['variable', 'patch', 'variable', 'issue', 'guess']",{'issue': 100}
"['local', 'check', 'patch', 'variable', 'script', 'assigningproblem', 'local', 'check', 'variable', 'script', 'assigningsolution', 'issue']",{'issue': 100}
"['varargs', 'patch', 'optionalvarargs', 'problem', 'optionalcheck', 'solution', 'issue']",{'issue': 100}
"['varargs', 'patch', 'argument', 'properlyargument', 'varargs', 'problem', 'parsedsolution', 'issue']",{'issue': 100}
"['patch', 'argument', 'optional', 'properlyargument', 'problem', 'optionalsolution', 'issue']",{'issue': 100}
"['patch', 'failsoften', 'problem', 'stack', 'failsentry', 'exception', 'solution', 'stack']",{'stack': 100}
"['custom', 'completion', 'crash', 'patch', 'problem', 'custom', 'completion', 'crashsolution', 'initialize']",{'crash': 100}
"['crash', 'patch', 'problem', 'crash', 'importedfunction', 'solution']",{'crash': 100}
"['argument', 'assignment', 'problemsolution', 'check', 'issue', 'argument', 'function']",{'issue': 100}
"['compiler', 'buffer', 'warning', 'patchcompiler', 'buffer', 'problem', 'warningsolution', 'offset']",{'buffer': 100}
"['value', 'assigns', 'patchassigns', 'declaration', 'problemcheck', 'solution', 'issue']",{'issue': 100}
"['error', 'patch', 'funcref', 'argument', 'functionproblem', 'error', 'funcref', 'argument', 'functionfunction', 'actual', 'solution', 'issue']",{'issue': 100}
"['declaration', 'function', 'patch', 'skippingdeclaration', 'function', 'problem', 'skippingreturnreturn', 'solution', 'issue']",{'issue': 100}
"['crash', 'patch', 'failssplit', 'exitfree', 'problem', 'crashrestore', 'cpoptions', 'solution']",{'crash': 100}
"['window', 'error', 'memory', 'patch', 'access', 'popupproblem', 'window', 'error', 'memory', 'buffer', 'access']",{'buffer': 100}
"['builtin', 'closure', 'patch', 'function', 'callingproblem', 'crash', 'builtin', 'closure', 'callingexecution', 'current', 'solution']",{'crash': 100}
"['patch', 'crash', 'problem', 'crash', 'numbercheck', 'solution']",{'crash': 100}
"['patch', 'memory', 'possible', 'crashproblem', 'crash', 'possiblecheck', 'solution', 'dominique']",{'crash': 100}
"['crash', 'patch', 'problem', 'crash', 'importedsolution', 'function', 'check', 'context', 'script', 'callingclose']",{'crash': 100}
"['option', 'preference', 'appearance', 'titlealready', 'title', 'expose', 'optioncachenative', 'respect', 'fullscreen', 'appearance', 'changingpreferenceappareance']",{'expose': 100}
"['behavior', 'protocol', 'double', 'properlybehavior', 'protocol', 'double', 'state', 'encode', 'previousprotocol', 'protocol', 'single', 'compatibility', 'singlecharacter', 'encode', 'detecterroneouslymacvim', 'intelligentlycharacter', 'spacecharacter', 'ambiguitydiscussion', 'issue']",{'issue': 100}
"['command', 'crash', 'variable', 'patch', 'typedproblem', 'crash', 'variable', 'typedscript', 'solution', 'indexclose']",{'crash': 100}
"['buffer', 'patchproblem', 'buffermessage', 'solution', 'trunctate']",{'buffer': 100}
"['patch', 'crash', 'problem', 'crash', 'reducesolution', 'access']",{'crash': 100}
"['crash', 'autocommand', 'problem', 'yegappan', 'crash', 'lakshmananallow', 'solution', 'window', 'autocommand']",{'crash': 100}
"['crash', 'patch', 'problem', 'crash', 'reducesolution']",{'crash': 100}
"['crash', 'patch', 'crash', 'continuationcheck', 'solution']",{'crash': 100}
"['crash', 'terminal', 'patchproblem', 'window', 'terminal', 'reducingbecome', 'solution', 'column']",{'crash': 100}
"['import', 'crash', 'problem', 'import', 'solution', 'error', 'import', 'outsideclose']",{'crash': 100}
"['window', 'crash', 'terminal', 'patch', 'resizingproblem', 'august', 'crash', 'terminal', 'masquelier', 'resizingvalid', 'check', 'solution']",{'crash': 100}
"['buffer', 'patch', 'current', 'dependstranschar', 'solution', 'close', 'buffer']",{'buffer': 100}
"['window', 'crash', 'buffer', 'patch', 'cmdline', 'opening', 'failsproblem', 'chris', 'window', 'crash', 'buffer', 'cmdline', 'openingbarberreset', 'check', 'solutionclose']","{'crash': 100, 'buffer': 100}"
"['table', 'crash', 'patch', 'function', 'changingproblem', 'table', 'crash', 'changingtable', 'function', 'solution']",{'crash': 100}
"['searchcount', 'crash', 'patch', 'string', 'callingproblem', 'crash', 'searchcountargument', 'check', 'solution']",{'crash': 100}
"['current', 'curwin', 'buffer', 'patch', 'hiddenbuffer', 'problem', 'current', 'curwinhennepecurrent', 'solution']",{'buffer': 100}
"['terminal', 'patch', 'windowterminal', 'problem', 'windowsolution', 'redraw', 'backgroundnobuhiro', 'output', 'color', 'flush', 'buffer', 'screen']",{'buffer': 100}
"['compiler', 'warning', 'patch', 'integercompiler', 'integer', 'problem', 'warningsolution', 'williams']",{'integer': 100}
"['patch', 'snprintf', 'failssnprintf', 'problem']",{'Sprintf': 93}
"['buffer', 'patch', 'setting', 'consideredcrypt', 'problem', 'buffer', 'setting', 'consideredchristian', 'close', 'solution']",{'buffer': 100}
"['terminal', 'buffer', 'patch', 'popupproblem', 'terminal', 'buffer', 'popupallow', 'solution', 'editing']",{'buffer': 100}
"['stack', 'valueproblem', 'valuecorrect', 'solution']",{'stack': 100}
"['buffer', 'patch', 'variableproblem', 'window', 'variable', 'appendingsolution']",{'buffer': 100}
"['closure', 'patch', 'supportproblem', 'supportsolution', 'stack']",{'stack': 100}
"['patch', 'crash', 'partialproblem', 'crash', 'partialcheck', 'solution', 'yegappanclose']",{'crash': 100}
"['crash', 'patch', 'filter', 'problem', 'crash', 'filter', 'partialclose', 'solution', 'yegappan']",{'crash': 100}
"['patch', 'crashjames', 'problem', 'crash', 'mccoysolution']",{'crash': 100}
"['patch', 'crash', 'readingproblem', 'crash', 'readingsolution', 'dominique', 'avoidadjust', 'error']",{'crash': 100}
"['buffer', 'patch', 'addedbuffer', 'problem', 'addedclose', 'cheng', 'solution', 'number']",{'buffer': 100}
"['return', 'patch', 'invalid', 'crashproblem', 'yegappan', 'crash', 'return', 'lakshmananreturn', 'solution']",{'crash': 100}
"['buffer', 'patchbuffer', 'problembuffer', 'solution']",{'buffer': 100}
"['window', 'crash', 'patch', 'popupproblem', 'window', 'devin', 'crash', 'close', 'popup']",{'crash': 100}
"['special', 'buffer', 'patch', 'properlybuffer', 'problem', 'special', 'handlesolution', 'buffer', 'track', 'dictionary', 'reliablycommand', 'buffilepre', 'buffilepost', 'triggerbuffer', 'terminal']",{'buffer': 100}
"['mergeychin', 'buffer', 'stale', 'cmdline', 'request', 'window', 'buffer', 'terminal', 'stale', 'cmdline']",{'buffer': 100}
"['window', 'buffer', 'terminal', 'stale', 'cmdlinecommand', 'special', 'buffer', 'terminallocation', 'window', 'buffer', 'quickfixbuffer', 'removedbuffer', 'bufferbuffilepre', 'renamedbuffer', 'autocommands', 'normalcommand', 'window', 'accessible', 'cachedbufnum', 'dictionary', 'alwaysbuffer', 'removecommand', 'buffilepre', 'window', 'autocommandsbuffer', 'commandterminal', 'buffilepre', 'window', 'autocommandsbuffer', 'followinglocation', 'quickfix', 'bufdeletedbuffer', 'stalebuffer', 'scriptcmdline', 'terminal', 'buffermacvim', 'failureduplicate']",{'buffer': 100}
"['memory', 'autocommand', 'problem', 'memory', 'close', 'buffer', 'dummy']",{'buffer': 100}
"['combination', 'crash', 'autocmd', 'terminal', 'patch', 'popupproblem', 'combination', 'crash', 'terminal', 'popupcurrent', 'solution', 'disallow', 'check', 'popupbuffer']",{'crash': 100}
"['patch', 'failsproblem', 'failsinstead', 'snprintf', 'solution']",{'Sprintf': 93}
"['window', 'crash', 'terminal', 'patch', 'opening', 'popupproblem', 'crash', 'terminal', 'opening', 'popupcheck', 'solution', 'prevwin']",{'crash': 100}
"['short', 'buffer', 'patchterminal', 'problem', 'shortshort', 'solution']",{'buffer': 100}
"['crash', 'patch', 'disassamble', 'problem', 'crash', 'disassamble', 'dhiraj', 'mishrasolution', 'dominique']",{'crash': 100}
"['crash', 'patch', 'setting', 'quickfix', 'buftypeproblem', 'crash', 'setting', 'quickfix', 'buftypeerror', 'check', 'solution']",{'crash': 100}
"['problem', 'memory', 'pelle', 'dominiqueconverion', 'buffer', 'solution']",{'buffer': 100}
"['wincolor', 'window', 'crash', 'terminal', 'patch', 'settingwincolor', 'problem', 'crash', 'terminal', 'settingbakudankunsolution', 'yasuhiro', 'vterm', 'close', 'checkclose']",{'crash': 100}
"['compiler', 'crash', 'patchcommand', 'problem', 'compiler', 'steinberg', 'danielscript', 'solution', 'index']",{'crash': 100}
"['member', 'crash', 'patch', 'crash', 'membercheck', 'solution', 'invalid']",{'crash': 100}
"['window', 'crash', 'winnr', 'patch', 'problem', 'crash', 'winnr', 'popupsolution', 'close', 'search', 'neighbor', 'popup']",{'crash': 100}
"['mergetravis', 'ychin', 'issue', 'python', 'request', 'mergetravis', 'issue', 'python']",{'issue': 100}
"['issue', 'python', 'manuallyconflict', 'homebrew', 'reason', 'issue', 'python', 'startedmanual', 'python', 'force']",{'issue': 100}
"['warning', 'coverity', 'buffer', 'patch', 'problem', 'warning', 'coverity', 'uninitializedcheck', 'solution']",{'buffer': 100}
"['command', 'window', 'buffer', 'patch', 'popupbuffer', 'problem', 'command', 'popupnaruhiko', 'solution', 'disallow']",{'buffer': 100}
"['crash', 'buffer', 'patch', 'problem', 'window', 'crash', 'buffer', 'popupbuffer', 'decrement', 'solution', 'reference']","{'crash': 100, 'buffer': 100}"
"['crash', 'gettabwinvar', 'patch', 'invalid', 'problem', 'yilin', 'crash', 'gettabwinvar', 'invalidsolution', 'curtab']",{'crash': 100}
"['echomsg', 'crash', 'patch', 'objectproblem', 'echomsg', 'crash', 'objectyasuhiro', 'check', 'solution']",{'crash': 100}
"['wrong', 'length', 'patch', 'stack', 'wrong', 'length', 'stack', 'withoutcheck', 'solution']","{'length': 100, 'stack': 100}"
"['autocommand', 'patch', 'crash', 'spellfileautocommand', 'problem', 'crashclose', 'solution', 'exestack']",{'crash': 100}
"['setfiletype', 'completion', 'memory', 'crash', 'patchsetfiletype', 'problem', 'memory', 'crash', 'runningclose', 'solution', 'dominique']",{'crash': 100}
"['command', 'expansion', 'memory', 'crash', 'patchcommand', 'expansion', 'problem', 'crashexpandgeneric', 'check', 'solutiondominique']",{'crash': 100}
"['listenerproblem', 'buffer', 'forsman']",{'buffer': 100}
"['debug', 'crash', 'problem', 'debug', 'dominique', 'crash', 'pelle', 'pythonsolution', 'whenever']",{'crash': 100}
"['problem', 'dominique', 'crash', 'pelle', 'pythonclose', 'solution', 'whenever']",{'crash': 100}
"['patch', 'stackproblem', 'stack', 'executegargage', 'solution']",{'stack': 100}
"['inefficient', 'patch', 'stack', 'execution', 'incompleteexecution', 'problem', 'incomplete', 'stackintroduce', 'proper', 'solution', 'stack', 'executioncreate', 'string']",{'stack': 100}
"['command', 'window', 'crash', 'empty', 'patchempty', 'problem', 'crash', 'windowyasuhiro', 'check', 'solution']",{'crash': 100}
"['buffer', 'patch', 'numberanother', 'problem', 'numberyasuhiro', 'linecount', 'solution', 'getbufinfoclose']",{'buffer': 100}
"['buffer', 'reload', 'patch', 'interruptedbuffer', 'reload', 'abort', 'solution', 'close', 'dummy']",{'buffer': 100}
"['console', 'buffer', 'patchproblem', 'window', 'console', 'bufferresizeconbuf', 'solution', 'nobuhiroclose']",{'buffer': 100}
"['wrong', 'bufnr', 'buffer', 'patch', 'wrong', 'bufnr', 'popupbuffer', 'solution']",{'buffer': 100}
"['expression', 'crash', 'patchproblem', 'expression', 'crash', 'dhiraj', 'mishracheck']",{'crash': 100}
"['crash', 'empty', 'balloon', 'problem', 'crash', 'empty', 'balloonhandle', 'solution', 'empty', 'markus', 'braun']",{'crash': 100}
"['local', 'patch', 'textprop', 'popupproblem', 'buffer', 'local', 'popupsolution']",{'buffer': 100}
"['window', 'buffer', 'cursorline', 'patch', 'popupproblem', 'window', 'buffer', 'cursorline', 'popupcheck', 'solution', 'group']",{'buffer': 100}
"['substitute', 'patch', 'partialproblem', 'crash', 'substitute', 'partialargument', 'extra', 'solution']",{'crash': 100}
"['buffer', 'patchbuffer', 'problemgetbufinfo', 'solution', 'buffer']",{'buffer': 100}
"['buffer', 'error', 'patchbuffer', 'error', 'problembuffer', 'message', 'solution', 'number']",{'buffer': 100}
"['allocation', 'memory', 'crash', 'patch', 'failsallocation', 'problem', 'memory', 'crashchristian', 'check', 'curwin', 'solutionclose']",{'crash': 100}
"['enable', 'runtime', 'revert', 'runtime', 'framework', 'issue', 'hardeneddebug', 'making', 'useful', 'hardenedproject', 'runtimenotarization', 'runtime']",{'issue': 100}
"['crash', 'autocommand', 'patch', 'problem', 'center', 'crashsolution', 'close', 'empty']",{'crash': 100}
"['extra', 'metadata', 'initialization', 'pullingseems', 'issue', 'initializationaspect', 'behavior', 'consistentprevious', 'behavior']",{'issue': 100}
"['early', 'memory', 'crash', 'problem', 'memory', 'crashiobuff', 'solution']",{'crash': 100}
"['memory', 'crash', 'patch', 'failsjiang', 'problem', 'memory', 'crash', 'allocatingcheck', 'solution', 'spellcapcheck']",{'crash': 100}
"['window', 'crash', 'terminal', 'patch', 'popupproblem', 'crash', 'buffer', 'terminal', 'popupsolution', 'terminal']","{'crash': 100, 'buffer': 100}"
"['buffer', 'colorcolumn', 'patch', 'editingbuffer', 'problem', 'colorcolumn', 'editingbuffer']",{'buffer': 100}
"['window', 'crash', 'terminal', 'patchproblem', 'crash', 'window', 'tryingyasuhiro', 'check', 'solution']",{'crash': 100}
"['patch', 'sourceproblem', 'sourcesolution', 'window', 'buffer', 'function', 'relatedclose', 'yegappan']",{'buffer': 100}
"['buffer', 'wrapping', 'patch', 'problem', 'searchinstead', 'front', 'solution']",{'buffer': 100}
"['crash', 'patch', 'problem', 'crash', 'filterwithout', 'string', 'solution', 'clearing']",{'crash': 100}
"['current', 'buffer', 'empty', 'patch', 'current', 'buffer', 'empty', 'stringsolution', 'bufnr', 'bufname', 'argument', 'optional']",{'buffer': 100}
"['window', 'buffer', 'current', 'window', 'value', 'buffer', 'optionsolution', 'window']",{'buffer': 100}
"['window', 'consumes', 'buffer', 'patch', 'number', 'popup', 'everyproblem', 'window', 'consumes', 'buffer', 'popup', 'everybuffer', 'popup', 'solution', 'recyclewindow']",{'buffer': 100}
"['patch', 'callback', 'crash', 'soundproblem', 'callback', 'crashsolution', 'invoke', 'callback', 'event']",{'crash': 100}
"['command', 'terminal', 'langmap', 'patchcommand', 'problem', 'langmapcommand', 'typeahead', 'solution', 'buffer', 'stuffclose']",{'buffer': 100}
"['patch', 'memory', 'problem', 'pointersolution', 'buffer', 'popup']",{'buffer': 100}
"['property', 'buffer', 'patchlonger', 'problem', 'property', 'buffer', 'addingcreate', 'solution']",{'buffer': 100}
"['patch', 'crash', 'problem', 'kraft', 'crash', 'spelledlength', 'check', 'solution']",{'crash': 100}
"['overflow', 'window', 'title', 'patch', 'popupproblem', 'popup', 'title', 'windowsolution', 'truncate']",{'overflow': 100}
"['window', 'patch', 'bufdo', 'problem', 'window', 'yasuhiro', 'syntaxmatsumotosolution', 'autocommands', 'buffer', 'syntax', 'triggerclose']",{'buffer': 100}
"['patch', 'addedanother', 'buffer', 'problem', 'addedsolution', 'topline']",{'buffer': 100}
"['patch', 'option', 'failsproblem', 'option', 'failssolution', 'value', 'buffer', 'local', 'check', 'completeslash']",{'buffer': 100}
"['patch', 'addedproblem', 'buffer', 'appendbuflinesolution', 'christian', 'close', 'update']",{'buffer': 100}
"['ftplugin', 'buffer', 'empty', 'patch', 'behindbuffer', 'empty', 'problem', 'ftpluginjason', 'solution', 'window', 'franklin']",{'buffer': 100}
"['command', 'completion', 'buffer', 'cmdwin', 'local', 'patchproblem', 'completion', 'buffer', 'cmdwin', 'localsolution']",{'buffer': 100}
"['patch', 'pointer', 'insufficientproblem', 'window', 'pointer', 'breakingsolution', 'window', 'close', 'buffer', 'check']",{'buffer': 100}
"['wrong', 'callback', 'buffer', 'patch', 'listenerproblem', 'wrong', 'callback', 'listenerlistener', 'invoke', 'solution']",{'buffer': 100}
"['cursor', 'window', 'bottom', 'crash', 'terminal', 'patchcursor', 'problem', 'window', 'bottom', 'crashyasuhiro', 'cursor', 'solution', 'positionclose']",{'crash': 100}
"['insert', 'stray', 'buffer', 'patch', 'listenerproblem', 'insert', 'stray', 'buffer', 'listenersolution']",{'buffer': 100}
"['window', 'crash', 'screen', 'patch', 'popupproblem', 'popup', 'crash', 'windowcorrect', 'solution', 'boundary']",{'crash': 100}
"['scrollbar', 'crash', 'patch', 'popupproblem', 'crash', 'aaberge', 'popup', 'trygvedivide', 'scrollbar', 'solution']",{'crash': 100}
"['window', 'buffer', 'patch', 'popupproblem', 'window', 'popuppopups', 'getbufinfo', 'solution']",{'buffer': 100}
"['amiga', 'patch', 'stack', 'systemsystem', 'problem', 'amigamegabyte', 'solution', 'reserve']",{'stack': 100}
"['crash', 'buffer', 'patch', 'numberproblem', 'yasuhiro', 'crash', 'buffer', 'numbermatsumotoinitialze', 'solution', 'window']","{'crash': 100, 'buffer': 100}"
"['window', 'buffer', 'patch', 'popupbuffer', 'problem', 'popup', 'existingsolution', 'buffer', 'argument', 'support', 'number']",{'buffer': 100}
"['reuses', 'buffer', 'patch', 'bufaddproblem', 'reuses', 'buffer', 'bufaddcreate', 'empty', 'solution']",{'buffer': 100}
"['property', 'crash', 'unknown', 'patch', 'problem', 'crash', 'unknown', 'highlightinghighlight', 'check', 'solution']",{'crash': 100}
"['present', 'prefixmacvim', 'issue']",{'issue': 100}
"['window', 'range', 'buffer', 'patch', 'popupbuffer', 'problem', 'range', 'popupfirstline', 'solution']",{'buffer': 100}
"['buffer', 'patch', 'popupproblem', 'window', 'buffer', 'popupsolution']",{'buffer': 100}
"['column', 'crash', 'visible', 'patch', 'setting', 'popupproblem', 'column', 'crash', 'setting', 'popupsolution', 'recompute']",{'crash': 100}
"['length', 'patch', 'digit', 'termresponselength', 'problem', 'digit', 'termresponseadjust', 'solution']",{'length': 100}
"['buffer', 'screen', 'patch', 'reuseproblem', 'buffer', 'screen', 'reusebufnr', 'solution']",{'buffer': 100}
"['crash', 'patch', 'popupproblem', 'crash', 'popupsolution']",{'crash': 100}
"['current', 'window', 'option', 'buffer', 'patch', 'popupproblem', 'current', 'window', 'option', 'popupsolution', 'clear', 'local', 'popup', 'option']",{'buffer': 100}
"['window', 'length', 'patch', 'popup', 'firstproblem', 'window', 'popupclose', 'solution']",{'length': 100}
"['buffer', 'wincolor', 'patch', 'applywincolor', 'problem', 'applywincolor', 'solution', 'number']",{'buffer': 100}
"['error', 'buffer', 'patch', 'error', 'problem', 'callingbuffer', 'solutionbuffer']",{'buffer': 100}
"['buffer', 'empty', 'patch', 'callingproblem', 'dominique', 'buffer', 'empty', 'callingpellememline']",{'buffer': 100}
"['issue', 'macvim', 'sanitize', 'filename', 'opening', 'properlyissuecommand', 'addinput', 'filenameconvenient', 'requiressince', 'input', 'filename', 'escapedvariablefnameescape', 'solutionnewline', 'vimscript', 'weird', 'filenamecommand', 'solution', 'constructinternals', 'forceusage', 'arbitary', 'robust', 'replacemethodopeningconstruct', 'functionweird', 'behavior', 'multiple', 'existingwrong', 'choosesplitbehavior', 'macvim', 'issue', 'stomp', 'forcefullyunsavedservice', 'macos', 'firstexists', 'functionality', 'alreadyhandler', 'mmbackend', 'simplicityanythingfutureinfrastructure']",{'issue': 100}
"['buffer', 'shortmess', 'patch', 'hiddenbuffer', 'problem', 'shortmesssolution', 'shortmess', 'buffer', 'checkjason', 'franklin']",{'buffer': 100}
"['buffer', 'track', 'patch', 'possibletrack', 'problem', 'possible', 'changesolution']",{'buffer': 100}
"['length', 'place', 'patch', 'function', 'computinglength', 'function', 'problem', 'computinglength', 'compute', 'solution']",{'length': 100}
"['crash', 'patch', 'invalid', 'argumentcommand', 'problem', 'crash', 'invalidcheck', 'solution', 'option']",{'crash': 100}
"['window', 'click', 'winbar', 'crash', 'patchproblem', 'window', 'winbar', 'crash', 'jacksonsolution', 'window', 'pointer', 'check']",{'crash': 100}
"['problem', 'crash', 'schandlsolution', 'title']",{'crash': 100}
"['window', 'compiler', 'sprintf', 'warning', 'format', 'patchproblem', 'window', 'compiler', 'sprintf', 'warningchange', 'solution', 'takata']",{'Sprintf': 100}
"['clever', 'compiler', 'warns', 'small', 'buffer', 'patchproblem', 'clever', 'compiler', 'warns', 'buffersolution']",{'buffer': 100}
"['incorrect', 'patch', 'stackincorrect', 'problem', 'stackhandle', 'solution', 'closeclose']",{'incorrect': 100}
"['buffer', 'patch']",{'buffer': 100}
"['issue', 'githubproblem', 'github', 'issue', 'addedrequest']",{'issue': 100}
"['error', 'buffer', 'patch', 'python', 'problem', 'error', 'python', 'hiddencursor', 'solution', 'positionclose']",{'buffer': 100}
"['buffer', 'patch', 'quickfix', 'numberbuffer', 'problem', 'solution', 'window', 'buffer', 'quickfixbuffer', 'getqflist', 'quickfix', 'numberclose', 'yegappan']",{'buffer': 100}
"['break', 'location', 'window', 'buffer', 'break', 'problem', 'location', 'window', 'bufferclose', 'solution', 'yegappan']",{'buffer': 100}
"['large', 'regexp', 'crash', 'patch', 'numberproblem', 'kuang', 'large', 'crash']",{'crash': 100}
"['overflow', 'problem', 'dosinstall', 'buffer', 'patchoverflow', 'problem', 'dosinstall', 'buffer', 'stillsolution', 'yasuhiro', 'close', 'buffer']","{'overflow': 100, 'buffer': 100}"
"['ufffffc', 'crash', 'patch', 'pattern', 'problem', 'crash', 'pattern', 'searchcharacter', 'solution', 'limit']",{'crash': 100}
"['scrollbar', 'mojave', 'artifact', 'mojave', 'issue', 'resize', 'placescrollbarsstill', 'defer', 'couldframe', 'callingsplit']",{'issue': 100}
"['regexp', 'buffer', 'patch', 'invalid', 'engineproblem', 'iskeyword', 'regexp', 'buffer', 'invalid', 'enginebuffer', 'kuang', 'uninitializedsolution']",{'buffer': 100}
"['window', 'output', 'terminal', 'patch', 'normalterminal', 'output', 'problem', 'normalsolution', 'buffer', 'terminal', 'postpone']",{'buffer': 100}
"['crash', 'tricky', 'patch', 'pattern', 'searchproblem', 'kuang', 'crash', 'tricky', 'check', 'solution']",{'crash': 100}
"['regexp', 'crash', 'patchproblem', 'regexpsolution', 'limit', 'recursiveness', 'close', 'addstate']",{'crash': 100}
"['patch', 'crashproblem', 'crash', 'pavel', 'cheremushkinretry', 'solution', 'limit']",{'crash': 100}
"['window', 'buffer', 'patch', 'quickfix', 'everyproblem', 'window', 'buffer', 'quickfix', 'everyclose', 'solution', 'reuse', 'yegappan']",{'buffer': 100}
"['macvim', 'snapshotpatchtarget', 'macosgeneralmacvim', 'developer', 'program', 'issue', 'externalversion', 'updatedscrollbars', 'misplacedcommand', 'performance', 'issue', 'version', 'renderingmojaveappleevent', 'editor', 'permission', 'macvim', 'properlysuite', 'requiresversion', 'mojave', 'window', 'borderlessinterface', 'script', 'compatibility', 'versionpythonpython']","{'issue': 100, 'permission': 100}"
"['mergeychin', 'request', 'mergecommand', 'performance', 'issue', 'version']",{'issue': 100}
"['performance', 'issue', 'version', 'renderingrender', 'coretext', 'mojave', 'renderersimilar', 'versionoutput', 'issue', 'happenedcommand', 'pattern', 'delete', 'issuinganother', 'delete', 'causemojave', 'relies', 'mojave', 'function', 'layer', 'backedmandatory', 'implementation', 'scroll', 'rendererimage', 'optimizer', 'processdelete', 'togethercombine', 'delete', 'singlecommand', 'rightversion', 'instaneousintermediary', 'solution', 'normal', 'rendererusage', 'state', 'glyph', 'cachearound', 'glpyh', 'image']",{'issue': 100}
"['crash', 'patch', 'garbage', 'function', 'collectorproblem', 'crash', 'garbage', 'function', 'collectormichael', 'henrygarbage', 'collector', 'solution', 'rightclose']",{'crash': 100}
"['extra', 'buffer', 'creates', 'patch', 'session', 'hiddenproblem', 'extra', 'creates', 'session', 'hiddencommand', 'jason', 'solution', 'franklin']",{'buffer': 100}
"['crash', 'empty', 'patch', 'errmsg', 'settingproblem', 'crash', 'empty', 'errmsg', 'setting', 'franklinsolution']",{'crash': 100}
"['crypt', 'patch', 'testedcrypt', 'problemcrypt']",{'crypto': 91}
"['patch', 'misplacedbottom', 'buffer', 'update', 'numberclose', 'delete', 'yegappan']",{'buffer': 100}
"['launch', 'mmbackend', 'class', 'duplicationhomebrew', 'issue', 'macvim', 'github', 'detectedconfiguration', 'sierra', 'install', 'freshcommand', 'startingerror', 'followingmacos', 'content', 'mmbackend', 'cellar', 'local', 'macvim', 'class', 'implementederror', 'graphical', 'issue', 'binarypollutes', 'mmbackend', 'classabsolute', 'relative', 'quazirelative', 'componentactual', 'resolution', 'binary', 'droppingdirectory', 'script']",{'issue': 100}
"['problem', 'sprintf', 'semsgozaki', 'semsg', 'solution']",{'Sprintf': 100}
"['compiler', 'sprintf', 'warning', 'patch', 'argumentcompiler', 'problem', 'warning', 'sprintfsolution']",{'Sprintf': 100}
"['buffer', 'place', 'patch', 'currentplace', 'problem', 'currentbuffer', 'solutionbuffer', 'message', 'error', 'invalidclose', 'yegappan']",{'buffer': 100}
"['buffer', 'place', 'patch', 'argument', 'requiresbuffer', 'place', 'problem', 'requiresargument', 'update', 'clean', 'solutionclose', 'yegappan']",{'buffer': 100}
"['buffer', 'channel', 'patchproblem', 'buffer', 'channelbuffer', 'exists', 'solution', 'prepareclose']",{'buffer': 100}
"['buffer', 'patch', 'argument', 'functionbuffer', 'function', 'problem', 'argumentclose', 'solution', 'yegappan']",{'buffer': 100}
"['window', 'memory', 'crash', 'terminal', 'patch', 'openingproblem', 'memory', 'crash', 'terminal', 'openinghandle', 'memory', 'solution']",{'crash': 100}
"['insecure', 'patch', 'function', 'insecure', 'functionbarta', 'gabrielsecure', 'solution']",{'insecure': 100}
"['crash', 'character', 'terminal', 'crash', 'terminalyasuhiro', 'close', 'solution', 'spaceclose']",{'crash': 100}
"['message', 'permission', 'clarify', 'appleeventsstate']",{'permission': 100}
"['expose', 'option', 'preference', 'update', 'installoption', 'sparkle', 'supportdownload', 'update', 'install', 'visiblecheckbox', 'meaningpreference', 'setting', 'check', 'update']",{'expose': 100}
"['issue', 'setting', 'fullscreen', 'relatedfullscreen', 'gvimrcnative', 'screen', 'fullscreennative', 'behavior', 'fullscreen', 'cglayerartifact', 'cgcontext', 'block', 'situation', 'block', 'cglayer', 'rendererclean', 'black', 'screen', 'setting', 'presentation', 'macvim', 'fullscreenwindowguioptionrandom', 'recalculate']",{'issue': 100}
"['issue', 'transparent', 'transparency', 'titlechange', 'mojave', 'backgroundcolor', 'sierra', 'effect', 'setting', 'transparent', 'titlewindow', 'previous', 'backgroundchange', 'color', 'title', 'backgroundmojave', 'mojave', 'transparencylayer', 'renderingblend', 'transparent', 'window', 'desktop', 'backgroundcolor', 'beginalpha', 'whole', 'window', 'backgroundborder', 'behaves', 'disappears', 'windowconsider', 'aesthetic', 'issue']",{'issue': 100}
"['issue', 'tablinecoretext', 'issue', 'particular', 'initiatedchange', 'resizingfullscreenorder', 'issue', 'operationwindow', 'macvim', 'firsthandle', 'resizingbuffer', 'coretext', 'rendererchange', 'order', 'updatelayer', 'rightmacvim', 'alreadyagreementbuffer', 'blockissue', 'suffers', 'order', 'sometimesappear', 'updatelayer', 'causingimage', 'black', 'flickeringsolve', 'previous', 'backgroundtabline', 'default', 'color', 'backgroundtabline', 'separatormacos', 'clear', 'section', 'issue']",{'issue': 100}
"['issue', 'renderinglegacy', 'behavior', 'rendereracross', 'nsview', 'contentcommand', 'drawing', 'content', 'existingwithout', 'redrawingcontent', 'layer', 'preservedefault', 'layer', 'redrawcgbitmapcontext', 'stack', 'guess', 'bitmap', 'stack', 'drawnoverflow', 'stackcontrolleddefault', 'macos']","{'issue': 100, 'stack': 100}"
"['callback', 'crash', 'buffer', 'patch', 'unloadsproblem', 'mccoy', 'james', 'callback', 'crash', 'unloadsround', 'solution']","{'crash': 100, 'buffer': 100}"
"['insecure', 'value', 'patch', 'optionproblem', 'insecure', 'value', 'evaluatesecure', 'solution', 'option', 'changingcharacter']",{'insecure': 100}
"['timer', 'breakingmacvim', 'issuedisable', 'travis', 'frequentlybreak', 'track', 'issue']",{'issue': 100}
"['wrong', 'shiftwidth', 'buffer', 'patch', 'wrong', 'shiftwidth', 'buffersolution', 'christian', 'curbuf', 'brabandt']",{'buffer': 100}
"['patch', 'stack', 'signalproblem', 'vladimir', 'marek', 'signalvariable', 'solution']",{'stack': 100}
"['window', 'buffer', 'empty', 'patch', 'quickfixproblem', 'window', 'buffer', 'empty', 'opening', 'quickfixclose', 'solution', 'yegappan']",{'buffer': 100}
"['patchcommand', 'problem', 'buffer', 'nothingjason', 'solution', 'franklin']",{'buffer': 100}
"['buffer', 'patch', 'alternatebuffer', 'problem', 'alternatealternate', 'solution', 'jason', 'method']",{'buffer': 100}
"['border', 'double', 'resize', 'fixedwindow', 'border', 'click', 'double', 'issue', 'cornerbehavior', 'macos', 'window', 'resize', 'macvimborder', 'resize', 'screen', 'incomplete', 'resultinstance', 'resize', 'message', 'speed', 'finish', 'resize']",{'issue': 100}
"['native', 'window', 'toggle', 'fullscreenwindow', 'originalmacvim', 'resize', 'issue', 'windowdidresize', 'callback', 'restore', 'fullscreensetframesize', 'resizeshandler', 'resize', 'window']",{'issue': 100}
"['native', 'corruption', 'fullscreen', 'renderingimage', 'issue', 'macvimblack', 'fullscreen', 'mostlyreproduce', 'fullscreenanother', 'click', 'switch', 'fullscreenswitchscreen', 'observereason', 'resize', 'macvim', 'happenscontent', 'resize', 'windowelement', 'columnresize', 'visiblekeeponscreen', 'windowswitch', 'smallerdecides', 'macos', 'window', 'resize', 'screenresize', 'event', 'window', 'causinginvalidates', 'causingblack', 'largeguioptions', 'screen', 'treatcontent', 'windowscreen', 'fullscreen', 'whole', 'windownative', 'similar', 'gettingblack', 'closeissue', 'screen', 'issue', 'cglayer', 'macvim', 'cache', 'reliesnswindow', 'content', 'cglayer', 'fullscreen', 'requiresbehavior', 'macos', 'window', 'borderless', 'basicallysetwantsdisplay', 'nswindow', 'content', 'window', 'limitedredraws', 'resize']",{'issue': 100}
"['location', 'vimpgrep', 'autocmd', 'crash', 'clear', 'patchproblem', 'location', 'vimpgrep', 'autocmd', 'crash', 'clearlakshmanan', 'return', 'solution', 'yegappan']",{'crash': 100}
"['patch', 'memoryproblem', 'memory', 'stack', 'funccal']",{'stack': 100}
"['empty', 'patch', 'stack', 'quickfixproblem', 'empty', 'stack', 'quickfixlakshmanan', 'solution', 'yegappan']",{'stack': 100}
"['appendbufline', 'error', 'patch', 'crashproblem', 'error', 'masashi', 'crash', 'iizuka', 'appendbuflinesolution', 'window', 'hirohito', 'close', 'buffer']","{'crash': 100, 'buffer': 100}"
"['patch', 'pointer', 'stack', 'problem', 'quickfix', 'stacksolution', 'pointer', 'yegappanclose']",{'stack': 100}
"['buffer', 'patchanother', 'problemswapname', 'ozaki', 'solution']",{'buffer': 100}
"['callback', 'crash', 'buffer', 'patchbuffer', 'problem', 'solution', 'peekingclose']","{'crash': 100, 'buffer': 100}"
"['window', 'callback', 'crash', 'patch', 'deletesproblem', 'window', 'callback', 'crash', 'deletessolution', 'buffer', 'unload', 'displayedavoid']","{'crash': 100, 'buffer': 100}"
"['argadd', 'buffer', 'empty', 'patchproblem', 'juhas', 'argadd', 'buffer', 'empty', 'pavolbuffer', 'current', 'solution', 'goingbuffer']",{'buffer': 100}
"['buffer', 'patch', 'autowrite', 'effect', 'writteneffect', 'buffer', 'problem', 'autowritebuffer', 'solution', 'writeautowrite']",{'buffer': 100}
"['renderingbroken', 'window', 'wrong', 'issue', 'macvim', 'renderinganother', 'windowimplementation', 'guioptionsfunction', 'issueunsetfunction', 'responsible', 'resizeduetomovealways', 'unsetmessage', 'excessive', 'resize']",{'issue': 100}
"['incsearch', 'space', 'patch', 'problem', 'incsearch', 'whitespace', 'solution', 'issue']",{'issue': 100}
"['reverse', 'incsearch', 'range', 'patch', 'highlightingreverse', 'problem', 'incsearch', 'highlightingrange', 'solution', 'issue']",{'issue': 100}
"['insert', 'completion', 'buffer', 'patch', 'invalid', 'pointerproblem', 'insert', 'completion', 'buffer', 'invalidcheck', 'solution']",{'buffer': 100}
"['patch', 'crash', 'problem', 'crash', 'reset', 'solution', 'initialization']",{'crash': 100}
"['regexp', 'crash', 'patch', 'failsvariable', 'solution']",{'crash': 100}
"['autoread', 'buffer', 'patchbuffer', 'problem', 'autoread', 'updatednaumann', 'michaeltimestamp', 'solution']",{'buffer': 100}
"['shiftwidth', 'crash', 'softtabstop', 'smarttab', 'patchproblem', 'shiftwidth', 'crash', 'softtabstop', 'solution', 'tabstop']",{'crash': 100}
"['ballooneval', 'vartabstop', 'crash', 'patch', 'ballooneval', 'problem', 'vartabstop', 'crash', 'relatedballooneval', 'solution', 'markus', 'braun', 'initialize']",{'crash': 100}
"['clear', 'buffer', 'patch', 'python', 'optionproblem', 'clear', 'buffer', 'python', 'jacob', 'option', 'niehussolution']",{'buffer': 100}
"['setloclist', 'autocommands', 'patch', 'crashproblem', 'dominique', 'setloclist', 'autocommands', 'crash', 'pellequickfix']",{'crash': 100}
"['buffer', 'patch', 'solution', 'autocommands']",{'buffer': 100}
"['buffer', 'patch', 'promptbuffer', 'problem', 'promptcheck', 'solution']",{'buffer': 100}
"['current', 'autocommands', 'crash', 'buffer', 'patch', 'deleteproblem', 'current', 'dominique', 'autocommands', 'crash', 'deletepellechange', 'check', 'solution', 'autocommands']","{'crash': 100, 'buffer': 100}"
"['crash', 'hardcopy', 'patch', 'problem', 'crash', 'hardcopy', 'illegalsolution', 'pelle', 'dominique', 'check']",{'crash': 100}
"['buffer', 'patch', 'deletedelete', 'problem', 'easilydeletebufline', 'solution']",{'buffer': 100}
"['buffer', 'patchanother', 'problem', 'appendappendbufline', 'solution']",{'buffer': 100}
"['buffer', 'patch', 'problem', 'insert', 'buffer', 'leavingmousecursor', 'solution', 'positioncursor']",{'buffer': 100}
"['switch', 'window', 'buffer', 'patchbuffer', 'switch', 'problem', 'promptcommand', 'insert', 'solution']",{'buffer': 100}
"['buffer', 'patch', 'failsbuffer', 'problem']",{'buffer': 100}
"['undefined', 'clang', 'warns', 'patchclang', 'problem', 'warns', 'undefinedmichael', 'solution', 'sprintf', 'ifdef', 'suggestion', 'outsideclose']",{'Sprintf': 100}
"['possible', 'crashproblem', 'pelle', 'crash', 'dominique', 'possiblevalid', 'solution', 'close', 'buffer', 'check']","{'crash': 100, 'buffer': 100}"
"['window', 'buffer', 'local', 'patch', 'recent', 'optionproblem', 'window', 'buffer', 'local', 'recent', 'optionanother', 'stillsolution', 'window', 'optionclose', 'bjorn']",{'buffer': 100}
"['wrong', 'buffer', 'terminal', 'wrong', 'buffer', 'terminalsolution']",{'buffer': 100}
"['window', 'crash', 'terminal', 'patch', 'lazyredrawproblem', 'window', 'crash', 'terminal']",{'crash': 100}
"['window', 'crash', 'terminal', 'patch', 'lazyredrawproblem', 'window', 'antoine', 'crash', 'terminal', 'lazyredrawexists', 'solution', 'terminal']",{'crash': 100}
"['buffer', 'terminal', 'patch', 'normalproblem', 'buffer', 'terminal', 'normalcontent', 'solution', 'window', 'buffer', 'terminalterminal']",{'buffer': 100}
"['color', 'patch', 'gettingproblem', 'color', 'solution', 'sprintf', 'xparsecolor', 'value', 'avoidxcolor']",{'Sprintf': 100}
"['incorrect', 'patch', 'virtualedit', 'insertproblem', 'insert', 'virtualedit', 'incorrectchristian', 'coladd', 'solution']",{'incorrect': 100}
"['argedit', 'buffer', 'empty', 'patch', 'problem', 'argedit', 'empty', 'reusechristian', 'solutionclose']",{'buffer': 100}
"['loccation', 'crash', 'clearing', 'autocommand', 'patchproblem', 'loccation', 'crash', 'clearingsolution', 'yegappan', 'lakshmanan', 'equal', 'check']",{'crash': 100}
"['crash', 'buffer', 'terminal', 'patch', 'deletesterminal', 'problem', 'deletes', 'crashbuffer', 'solution']","{'crash': 100, 'buffer': 100}"
"['buffer', 'terminal', 'patch', 'terminalscrollbuffer', 'terminal', 'problem', 'terminalscrollchange', 'solution']",{'buffer': 100}
"['buffer', 'error', 'patch', 'normalerror', 'problem', 'normalerror', 'solution']",{'buffer': 100}
"['flaky', 'window', 'terminal', 'patchterminal', 'problem', 'buffer', 'solution', 'increase']",{'buffer': 100}
"['channel', 'patch', 'crash', 'readingproblem', 'crash', 'readingshinya', 'solution', 'clear', 'writeclose']",{'crash': 100}
"['output', 'buffer', 'terminal', 'patch', 'filterfilter', 'terminal', 'problem', 'outputterminal', 'solution', 'marcin']",{'buffer': 100}
"['patch', 'ifdefsproblemsolution', 'reason', 'buffer']",{'buffer': 100}
"['associate', 'singledispatch', 'buffer', 'order', 'writewould']",{'buffer': 100}
"['patch', 'readingspell', 'problem', 'readingsolution', 'character', 'length', 'check']",{'length': 100}
"['patch', 'winpty', 'crashproblem', 'winpty', 'crash', 'tryingterminal', 'shellyasuhiro', 'return', 'check', 'solutionclose']",{'crash': 100}
"['command', 'patch', 'crash', 'shellcommand', 'problem', 'shellyasuhiro', 'solution', 'situationclose']",{'crash': 100}
"['buffer', 'patch', 'everybuffer', 'problem', 'chris', 'solution', 'buffer', 'numberclose']",{'buffer': 100}
"['virtual', 'crash', 'patchvirtual', 'problem', 'crashadjust', 'brabandt', 'solution', 'christian']",{'crash': 100}
"['integer', 'regexp', 'patch', 'patternoverflow', 'problem', 'integer', 'regexp', 'geeknikchristian']",{'integer': 100}
"['problem', 'pointersolution', 'buffer', 'search']",{'buffer': 100}
"['patch', 'crash', 'failsproblem', 'crashsolution', 'initialize']",{'crash': 100}
"['crash', 'empty', 'patch', 'argument', 'callingempty', 'problem', 'crashsolution', 'yasuhiro', 'close', 'invalid', 'checkmemory']",{'crash': 100}
"['cbuffer', 'memory']",{'buffer': 92}
"['buffer', 'command', 'patch', 'overflowbuffer', 'problem', 'overflowsolution', 'dominique']",{'buffer': 100}
"['patch', 'memory', 'invalid', 'accessproblem', 'memory', 'autocommands', 'invalid', 'accesspelle', 'dominiquesolution', 'close', 'buffer']",{'buffer': 100}
"['problem', 'dominique', 'pelle', 'buffer', 'solution', 'autocommands', 'buffer', 'dummy']",{'buffer': 100}
"['nasty', 'patch', 'autocommand', 'crashproblem', 'pelle', 'dominique', 'crash', 'current', 'solution', 'close', 'buffer', 'check']","{'crash': 100, 'buffer': 100}"
"['select', 'getbufinfo', 'buffer', 'patchselect', 'getbufinfo', 'problem', 'solution', 'yegappan']",{'buffer': 100}
"['terminal', 'patchmessage', 'problem', 'terminalfritz', 'mehnersolution', 'buffer', 'terminal']",{'buffer': 100}
"['buffer', 'patch', 'hiddenproblem', 'hiddendiffopt', 'hiddenoff', 'solution']",{'buffer': 100}
"['patch', 'window', 'possible', 'crashproblem', 'window', 'crash', 'possible', 'josephdornischsolution', 'window']",{'crash': 100}
"['error', 'patch', 'stack', 'useful', 'traceerror', 'problem', 'trace', 'stacksolution', 'james']",{'stack': 100}
"['wrong', 'viminfo', 'patch', 'permissionproblem', 'wrong', 'group', 'permissionsolution', 'group', 'permission', 'check']",{'permission': 100}
"['crash', 'channel', 'problem', 'marek', 'crash', 'occasionaldecrement', 'solution', 'close', 'reference']",{'crash': 100}
"['crash', 'channel', 'problem', 'marek', 'crash', 'occasionaldecrement', 'solution', 'close', 'reference']",{'crash': 100}
"['careless', 'others', 'patchcareless', 'others', 'problemprimaryworld', 'solution', 'permission', 'reading', 'group', 'allowsgroup', 'permission']",{'permission': 100}
"['remote', 'patch', 'debug', 'inspectproblem', 'remote', 'debug', 'inspectsolution', 'debug', 'close', 'discard', 'stack']",{'stack': 100}
"['buffer', 'unload', 'patch', 'unload', 'possiblecheck', 'solution']",{'buffer': 100}
"['crash', 'buffer', 'getbufinfo', 'problem', 'crash', 'bufferlakshmanan', 'yegappanbuffer', 'changedtick', 'solution']","{'crash': 100, 'buffer': 100}"
"['wrong', 'length', 'patch', 'ifdef', 'wrong', 'ifdef', 'computingyasuhiro']",{'length': 100}
"['system', 'patch', 'failsproblem', 'failsriesebietersolution', 'integer', 'james']",{'integer': 100}
"['resize', 'buffer', 'terminal', 'patch', 'endless', 'showingproblem', 'resize', 'hirohito', 'terminal', 'endless']",{'buffer': 100}
"['problem', 'crash', 'foldtextresultrecursive', 'solution', 'yasuhiro']",{'crash': 100}
"['various', 'small', 'patch', 'issue', 'quickfixquickfix', 'problem', 'various', 'smalltitle', 'solution', 'prefixupdate', 'couplelakshmanan', 'yegappan']",{'issue': 100}
"['memory', 'buffer', 'terminal', 'patch', 'optionproblem', 'memory', 'buffer', 'terminal', 'optionbuffer', 'solution']",{'buffer': 100}
"['buffer', 'patch', 'overflowbuffer', 'problem', 'overflowpelle', 'solution', 'dominique']",{'buffer': 100}
"['buffer', 'terminal', 'patchbuffer', 'terminal', 'problem', 'sendinginstead', 'solution', 'everyargument']",{'buffer': 100}
"['buffer', 'terminal', 'patchbuffer', 'terminal', 'problem', 'sendingyasuhiro', 'solutionclose']",{'buffer': 100}
"['buffer', 'session', 'patch', 'windowbuffer', 'session', 'problem', 'manualjeansenchristian', 'solution']",{'buffer': 100}
"['different', 'buffer', 'terminal', 'patch', 'behavesproblem', 'window', 'different', 'terminal', 'windowbuffer', 'bufhidden', 'solutionterminal', 'scratch']",{'buffer': 100}
"['terminal', 'patch', 'crashproblem', 'pavlov', 'nikolai', 'crash', 'terminalscrollback', 'check', 'solution']",{'crash': 100}
"['buffer', 'patch', 'channelbuffer', 'problem', 'select', 'solution']",{'buffer': 100}
"['crash', 'virtualeditproblem', 'crash', 'neovim', 'joshua', 'check', 'solution', 'coladd']",{'crash': 100}
"['window', 'status', 'crash', 'close', 'patch', 'timer', 'draggingproblem', 'window', 'status', 'crash', 'close', 'timer', 'draggingsolution', 'window', 'yasuhiro']",{'crash': 100}
"['buffer', 'terminal', 'patchbuffer', 'terminal', 'problem']",{'buffer': 100}
"['viminfo', 'buffer', 'terminal', 'patch', 'storedproblem', 'viminfo', 'buffer', 'terminal', 'storedbuffer', 'terminal', 'solution']",{'buffer': 100}
"['terminal', 'patch', 'crashproblem', 'kazunobu', 'crash', 'terminal', 'kuriyamaterminal', 'reset', 'solution']",{'crash': 100}
"['patch', 'crash', 'problem', 'crashcheck', 'solution', 'dominique']",{'crash': 100}
"['command', 'sequence', 'crash', 'weird', 'patchcommand', 'problem', 'dominique', 'crash', 'pelle', 'weirdinstead', 'strcpy', 'solution']",{'crash': 100}
"['appends', 'channel', 'buffer', 'patch', 'effectappends', 'problem', 'channel', 'buffer', 'effectcurrentswitch', 'solution', 'yasuhiro', 'buffer', 'properlyclose']",{'buffer': 100}
"['command', 'crash', 'unknown', 'terminal', 'patchproblem', 'crash', 'unknown', 'terminal', 'runningyasuhiro', 'check', 'solution']",{'crash': 100}
"['message', 'window', 'startup', 'crash', 'patch', 'possiblemessage', 'problem', 'window', 'crash', 'possibleyasuhiro', 'solution', 'initialize']",{'crash': 100}
"['patch', 'crash', 'causeproblem', 'causecheck', 'solution', 'hirohito', 'higashi']",{'crash': 100}
"['window', 'buffer', 'terminal', 'patcharound', 'problem', 'window', 'buffer', 'terminalsolution', 'window', 'buffer', 'terminal']",{'buffer': 100}
"['buffer', 'terminal', 'patch', 'buffer', 'terminal', 'reset', 'buftype']",{'buffer': 100}
"['crash', 'buffer', 'patch', 'invalid', 'problem', 'crash', 'buffer', 'invalidyasuhiro', 'check', 'solution']","{'crash': 100, 'buffer': 100}"
"['buffer', 'empty', 'patch', 'argument', 'withoutproblem', 'buffer', 'empty', 'argument', 'withoutcommand', 'solution', 'shell']",{'buffer': 100}
"['error', 'buffer', 'patch', 'psearch', 'withoutproblem', 'error', 'dominique', 'buffer', 'psearch', 'withoutpellecursor', 'solution', 'buffer', 'check', 'number']",{'buffer': 100}
"['buffer', 'terminal', 'patch', 'optionproblem', 'window', 'buffer', 'terminal', 'optionterminal', 'solution', 'buftype', 'valuedepend', 'bufhidden', 'quickfixbuffer']",{'buffer': 100}
"['window', 'crash', 'terminal', 'patch', 'problem', 'crash', 'terminal', 'possibleyasuhiro', 'check', 'solution']",{'crash': 100}
"['selection', 'patch', 'crashproblem', 'crash', 'selectionstatic', 'solution', 'allocatingozaki', 'kiichi']",{'crash': 100}
"['indication', 'buffer', 'patch', 'quickfixproblem', 'content', 'window', 'notice', 'quickfixincrement', 'solution', 'quickfix', 'changedticklakshmanan', 'yegappan']",{'buffer': 100}
"['buffer', 'modeless', 'patchproblem', 'selection', 'callback', 'buffer', 'modelessinsert', 'solution', 'callback', 'screen', 'deletemodeless']",{'buffer': 100}
"['clear', 'buffer', 'patchcommand', 'problem', 'clear', 'bufferramel', 'eshedcompletion', 'redraw', 'solution']",{'buffer': 100}
"['wrong', 'memory', 'autocommands', 'patch', 'wrong', 'memory', 'buffer', 'manipulatingjames', 'mccoysolution', 'pointer']",{'buffer': 100}
"['window', 'crash', 'patch', 'cmdlineproblem', 'window', 'mccoy', 'crash', 'james', 'cmdlinecmdbuff', 'solution']",{'crash': 100}
"['error', 'callback', 'crash', 'patch', 'timererror', 'problem', 'timer', 'crashozaki', 'kiichicheck', 'solution', 'nullifylonger']",{'crash': 100}
"['problem', 'patch', 'solution', 'buffer', 'wincmd', 'invalid', 'avoidclose']",{'buffer': 100}
"['crash', 'patch', 'python', 'functioncommand', 'problem', 'pyeval', 'crash', 'happensrickycommand', 'solution', 'python', 'avoidclose', 'timer', 'trigger']",{'crash': 100}
"['minor', 'patch', 'issue', 'quickfix', 'relatedminor', 'problem', 'issue', 'relatedproper', 'solution', 'status', 'return', 'minor', 'update', 'yegappanlakshmanan']",{'issue': 100}
"['switch', 'filetype', 'buffer', 'patch', 'settingproblem', 'filetype', 'buffer', 'settingchange', 'windowsolution']",{'buffer': 100}
"['window', 'crash', 'autocmd', 'patch', 'quickfixproblem', 'window', 'crash', 'filetype', 'autocommand', 'quickfixquickfix', 'window', 'triggeroptionset']",{'crash': 100}
"['version', 'patch', 'problem', 'crash', 'solution', 'kazunobu', 'ifdefskuriyama']",{'crash': 100}
"['buffer', 'patch', 'invalid', 'quickfixbecome', 'problem', 'buffer', 'performance', 'cache', 'quickfixdaniel', 'hahlerdaniel', 'reset', 'solutionclose']",{'buffer': 100}
"['request', 'mergeexpansion', 'issue']",{'issue': 100}
"['expansion', 'issue']",{'issue': 100}
"['buffer', 'screen', 'patchbuffer', 'problem', 'typingmessage', 'screen', 'changedbuffer', 'ramel', 'causecommand', 'update', 'solution', 'screenscreen', 'clearbuffer', 'status', 'update']",{'buffer': 100}
"['negative', 'buffer', 'empty', 'patch', 'problem', 'cursor', 'negative', 'empty']",{'buffer': 100}
"['patch', 'detect', 'systembazel', 'problem', 'check', 'issue', 'script']",{'issue': 100}
"['crash', 'patch', 'positionproblem', 'window', 'marvin', 'crash', 'position', 'schmidtterminal', 'solution']",{'crash': 100}
"['typeahead', 'buffer', 'patch', 'oftenbuffer', 'typeahead', 'problem', 'reallocatedbuffer', 'solution']",{'buffer': 100}
"['buffer', 'patch', 'savingbuffer', 'problem', 'functionkarkat', 'functionsolution', 'close', 'buffer', 'function']",{'buffer': 100}
"['patch', 'stack', 'quickfixproblem', 'window', 'quickfixsolution', 'yegappan', 'update', 'lakshmanan', 'quickfix']",{'stack': 100}
"['memory', 'patch', 'problem', 'memory', 'withinfunction', 'solution', 'clear', 'stack']",{'stack': 100}
"['buffer', 'patch', 'column', 'overflowoverflow', 'problem', 'pavlov', 'nikolai', 'column', 'compute', 'solutionclose']",{'buffer': 100}
"['buffer', 'prioritize', 'patch', 'taglistproblem', 'taglist', 'prioritizesolution', 'close', 'buffer', 'duncan', 'optional']",{'buffer': 100}
"['window', 'crash', 'autocmd', 'patch', 'endlessproblem', 'window', 'sessionloadpost', 'crash', 'endlessvalid', 'solution', 'neovim', 'check']",{'crash': 100}
"['potential', 'crash', 'problem', 'potential', 'crashsolution', 'nikolai', 'close', 'reference']",{'crash': 100}
"['patchmichael', 'problem', 'soykacurrent', 'solution', 'complete', 'buffer']",{'buffer': 100}
"['configure', 'issue', 'system', 'script', 'linkerenable', 'rubyinterp', 'command', 'configureframeworkcommand', 'rubyinterp', 'configure', 'local', 'library', 'configure', 'rightenable', 'rubyinterp', 'command', 'configureframeworkcommand', 'rubyinterp', 'configure', 'local', 'enablelpthread', 'lobjc']",{'issue': 100}
"['overflow', 'reading', 'patch', 'possibleoverflow', 'problem', 'reading']",{'overflow': 100}
"['overflow', 'reading', 'patch', 'possibleoverflow', 'problem', 'reading']",{'overflow': 100}
"['crash', 'value', 'weird', 'guicursor', 'patch', 'settingproblem', 'crash', 'weird', 'guicursor', 'settingsolution', 'negative', 'dominique']",{'crash': 100}
"['possibleoverflow', 'problem', 'solution', 'length', 'invalid', 'check']",{'length': 100}
"['buffer', 'patch', 'hiddenproblem', 'hahler', 'solution', 'diffoff', 'buffer', 'whole', 'diffedclose']",{'buffer': 100}
"['buffer', 'patch', 'collapseproblem', 'failedflaky', 'solution']",{'buffer': 100}
"['setpos', 'buffer', 'patch', 'argumentproblem', 'buffer', 'setpos', 'argumentmatthew', 'malcomsonbuffer', 'local', 'solution', 'argumentneovim']",{'buffer': 100}
"['formatprg', 'value', 'local', 'patch', 'optionproblem', 'formatprg', 'value', 'buffer', 'local']",{'buffer': 100}
"['patch', 'crashfileformat', 'problem', 'crash', 'firstemptystart', 'check', 'solution']",{'crash': 100}
"['early', 'block', 'patch', 'problem', 'blockselectionsolution', 'christian', 'neovim', 'issue', 'check']",{'issue': 100}
"['overflow', 'ubsan', 'report', 'error', 'patchproblem', 'ubsan', 'report', 'error', 'integerselect', 'solution', 'expression', 'williams']",{'overflow': 100}
"['command', 'specialkeys', 'length', 'patch', 'netbeans', 'argument', 'checkcommand', 'problem', 'specialkeys', 'netbeans', 'argument', 'checkcoveritylength', 'solution']",{'length': 100}
"['buffer', 'patch', 'smallproblem', 'store', 'buffer', 'theoreticalycoveritycount', 'solution', 'modifier', 'check', 'possiblelength']",{'buffer': 100}
"['bufenter', 'directory', 'autocommand', 'patch', 'firedproblem', 'buffer', 'directory', 'opening', 'catchbufenter', 'eventsolution', 'notdone', 'directory', 'return', 'readfilejustin', 'close', 'return']",{'buffer': 100}
"['patch', 'crash', 'problem', 'channel', 'failsmemory', 'solution']",{'crash': 100}
"['overflow', 'ubsan', 'integer', 'warns', 'patchinteger', 'problem', 'warns', 'ubsanpelle', 'solution', 'dominique']","{'overflow': 100, 'integer': 100}"
"['content', 'clumsy', 'buffer', 'patch', 'systemsystemlist', 'problem', 'content', 'buffer', 'systemcreate', 'string', 'firstsolution', 'close', 'buffer']",{'buffer': 100}
"['current', 'wrong', 'buffer', 'patch', 'numbergetbufinfo', 'problem', 'current', 'buffer', 'numberbuffer', 'current', 'solution', 'takata']",{'buffer': 100}
"['macvim', 'snapshottarget', 'macos', 'crash', 'binaryinterface', 'script', 'compatibility', 'versionpythonpython']",{'crash': 100}
"['layer', 'thread', 'backgroundlayer', 'screenpartialfinish', 'latency', 'keydown', 'overall', 'drawrectstock', 'layer', 'coretextrenderer']",{'thread': 100}
"['macvim', 'snapshottarget', 'macos', 'binarypatchnative', 'sierra', 'issue', 'fullscreeninterface', 'script', 'compatibility', 'versionpythonpython']",{'issue': 100}
"['patchproblem', 'crash', 'henry']",{'crash': 100}
"['problem', 'window', 'crash', 'previewlifepillarwrong', 'solution']",{'crash': 100}
"['patchcrypt', 'problem', 'editing', 'crash', 'igorxsolution', 'christian', 'length', 'brabandt', 'check']","{'crash': 100, 'length': 100}"
"['crash', 'buffer', 'visualpelle', 'dominiquesolution', 'number', 'position', 'computingbuffer', 'visual']","{'crash': 100, 'buffer': 100}"
"['patchbufwinleave', 'problem', 'hirohito', 'autocmd', 'crash', 'anotherhigashisolution']",{'crash': 100}
"['patchproblem', 'editing', 'bufunload', 'crash', 'buffer', 'autocommandtakagi', 'solution', 'hirohito', 'higashi', 'partlystyle', 'error']","{'crash': 100, 'buffer': 100}"
"['augroup', 'problem', 'crash', 'listingpelle', 'dominiquesolution']",{'crash': 100}
"['patchproblem', 'dominique', 'crash', 'pelle', 'window', 'anotherright']",{'crash': 100}
"['patchtabnext', 'problem', 'dominique', 'bufunload', 'crash', 'pelleabort', 'solution', 'detectingdelete', 'window']",{'crash': 100}
"['patchproblem', 'quickfixcmdpre', 'autocommands', 'quickfixcmdpostsolution', 'yegappan', 'cbuffer', 'lakshmanan', 'trigger']",{'buffer': 92}
"['problem', 'dominique', 'crash', 'pelle', 'funcref', 'check', 'solution']",{'crash': 100}
"['crashsolution', 'dominique', 'pelle', 'buffer']",{'buffer': 100}
"['problem', 'buffer', 'character', 'feedkeys', 'latincheck', 'illegal', 'solution']",{'buffer': 100}
"['netbeanscheck', 'solution', 'permission']",{'permission': 100}
"['patchproblem', 'warns', 'coverity', 'buffer', 'possibleinstead', 'solution', 'strcat']",{'buffer': 100}
"['problem', 'duplicatesolution', 'error', 'buffer', 'entry']",{'buffer': 100}
"['patcherror', 'problem', 'buffer', 'rememberstartautocommands']",{'buffer': 100}
"['tabnext', 'problem', 'norio', 'bufunload', 'crash', 'takagicurrent', 'solution', 'hirohito', 'buffer', 'check', 'firsthigashi']","{'crash': 100, 'buffer': 100}"
"['patchproblem', 'crash', 'filter', 'numberconvert', 'ozaki', 'solution', 'kiichi']",{'crash': 100}
"['problem', 'insert', 'buffer', 'emptykarkatadjust', 'empty', 'solutionclose']",{'buffer': 100}
"['channel', 'buffer', 'netbeansxavier', 'check', 'solution']",{'buffer': 100}
"['problem', 'append', 'buffer', 'garbagecharacterreplace', 'ozaki', 'solution']",{'buffer': 100}
"['wrong', 'viminfo', 'length', 'continuation']",{'length': 100}
"['patchproblem', 'crash', 'history', 'solution', 'index']",{'crash': 100}
"['problem', 'autocommands', 'stack', 'chancesignal', 'invoke', 'solution', 'autocommands']",{'stack': 100}
"['pointer', 'netbeanssolution', 'takata', 'buffer', 'place']",{'buffer': 100}
"['channel', 'buffer', 'searchingramel', 'xavier', 'eshedsolution', 'containsavoid', 'string']",{'buffer': 100}
"['problem', 'crash', 'channelhermittedecrement', 'solution', 'channel', 'reference']",{'crash': 100}
"['patchproblem', 'crash', 'possible', 'concealvalid', 'solution', 'screen', 'check']",{'crash': 100}
"['buffer', 'problem', 'filetypesyntax', 'killthemule', 'causesolution', 'filetype', 'firedclose', 'anton']",{'buffer': 100}
"['patchcommand', 'problem', 'buffer', 'screenmessedpostpone', 'redraw', 'solution', 'screen']",{'buffer': 100}
"['patchproblem', 'crash', 'garbagecollect', 'detect', 'causedstill', 'solution']",{'crash': 100}
"['crash', 'garbagecollect', 'callingozaki', 'copyid', 'solution', 'hirohitokiichi']",{'crash': 100}
"['autocommand', 'buffer', 'applies', 'errorbuffer', 'check', 'solution', 'alexanderclose']",{'buffer': 100}
"['positive', 'warns', 'coverity', 'buffer', 'length', 'false', 'fixedcheck', 'solution']","{'buffer': 100, 'length': 100}"
"['positive', 'warns', 'coverity', 'length', 'falsecharacter', 'solution']",{'length': 100}
"['problem', 'crash', 'partialincrement', 'solution', 'hirohito', 'higashi', 'reference', 'partial']",{'crash': 100}
"['problem', 'crash', 'buffer', 'withoutsolution', 'james']","{'crash': 100, 'buffer': 100}"
"['dominique', 'crash', 'autocommand', 'quickfixsolution', 'wether', 'yegappan', 'entry', 'checkhirohito', 'higashi']",{'crash': 100}
"['patchvimrc', 'problem', 'buffer', 'applies', 'fileformatsinitialfileformat', 'solution', 'williams']",{'buffer': 100}
"['current', 'output', 'buffer', 'optionmatsumoto', 'yasuhiro', 'curbuf', 'solution']",{'buffer': 100}
"['problem', 'crash', 'luchr', 'functioninitial', 'solution']",{'crash': 100}
"['patchwrong', 'problem', 'window', 'closesolution', 'process', 'takata', 'hthread']",{'thread': 92}
"['patchproblem', 'channel', 'buffer']",{'buffer': 100}
"['patchproblem', 'permission', 'failsexpect', 'solution']",{'permission': 100}
"['problem', 'crash', 'damiencheck', 'solution']",{'crash': 100}
"['channel', 'buffer', 'implementedimplement', 'solution']",{'buffer': 100}
"['problem', 'coverity', 'buffer', 'pointer', 'solution', 'possibleencode', 'append']",{'buffer': 100}
"['optionsolution', 'append', 'output', 'value', 'buffer']",{'buffer': 100}
"['christian', 'crash', 'solution', 'callback']",{'crash': 100}
"['problem', 'crash', 'channel', 'failedsolution', 'nakadaira', 'check', 'update', 'yukihiro']",{'crash': 100}
"['patchproblem', 'crash', 'channel', 'variable', 'unlettingchristian', 'robinson', 'callbacksolution', 'increase', 'reference']",{'crash': 100}
"['crash', 'pattern', 'catchpelle', 'dominiquemessage', 'error', 'solution', 'block']",{'crash': 100}
"['patchcommand', 'problem', 'crash', 'channel', 'withoutcheck', 'solution']",{'crash': 100}
"['process', 'crash', 'channeldescriptor', 'solution', 'damien']",{'crash': 100}
"['buffer', 'syntaxsolution', 'anton', 'syntax', 'option', 'changinglindqvist']",{'buffer': 100}
"['patchproblem', 'crash', 'invalid', 'globregpat', 'argumentcheck', 'solution', 'justin']",{'crash': 100}
"['argadd', 'buffer', 'argument', 'withoutsolution']",{'buffer': 100}
"['overflow', 'button']",{'overflow': 100}
"['buffer', 'problem', 'crashsolution', 'limit', 'dominique', 'pelle', 'value', 'return']",{'buffer': 100}
"['buffer', 'unload', 'hiddencurrent', 'current', 'solution', 'yasuhiro', 'buffer', 'unloadhirohito', 'higashi']",{'buffer': 100}
"['patchflaky', 'problemsolution', 'minimum', 'thread']",{'thread': 100}
"['buffer', 'navigates', 'scriptwrong', 'createdtestname', 'solution', 'damien']",{'buffer': 100}
"['problem', 'completion', 'crash', 'longestarray', 'solution']",{'crash': 100}
"['macvim', 'compilation', 'issue']",{'issue': 100}
"['patchproblem', 'crash', 'runtimeinstead', 'solution', 'damien']",{'crash': 100}
"['mergerequest', 'macvim', 'mergeshowtabline', 'similar', 'redraw', 'issue']",{'issue': 100}
"['similar', 'redraw', 'issue']",{'issue': 100}
"['snapshotmountain', 'target', 'yosemite', 'maverick', 'capitan', 'binarypatchcoretext', 'basic', 'support', 'ligaturetransparent', 'optional', 'windowdirectory', 'dialog', 'allowsplit', 'capitan', 'issue', 'renderingxcode', 'deployment', 'target', 'yosemite']",{'issue': 100}
"['patchfreeze', 'problem', 'remote', 'crash', 'sleepyngvemessage', 'solution', 'queue']",{'crash': 100}
"['capitan', 'issue', 'request', 'mergesplit', 'issue', 'capitan']",{'issue': 100}
"['issue', 'capitan']",{'issue': 100}
"['problem', 'window', 'buffer', 'screensystemsolution', 'screen', 'duplicatematsumoto', 'yasuhiro']",{'buffer': 100}
"['problem', 'windowfreeze', 'provider', 'window', 'solution', 'buffer', 'screen', 'original', 'externalrevert', 'programmuraoka']",{'buffer': 100}
"['remote', 'crash', 'option', 'changingfritz', 'benjamininstead', 'message', 'solutionjames']",{'crash': 100}
"['transparency', 'leopardtiger', 'jpetrie', 'issue', 'header', 'cgsinternal', 'commitguard', 'check']",{'issue': 100}
"['transparency', 'leopardtiger', 'jpetrie', 'issue', 'header', 'cgsinternal', 'commitguard', 'check']",{'issue': 100}
"['patchtravis', 'problem', 'crash', 'lebsock', 'bevaldestroywindow', 'solution', 'raymond']",{'crash': 100}
"['problem', 'dominique', 'crash', 'pelle', 'keywordraymond', 'keyword', 'solution', 'initialize']",{'crash': 100}
"['patchbuffer', 'problemargument', 'buffer', 'specify', 'solutionszamotulski', 'marcin']",{'buffer': 100}
"['crash', 'urtica', 'dioicacursor', 'solution', 'number']",{'crash': 100}
"['problem', 'solution', 'kazunobu', 'buffer', 'patch', 'kuriyama']",{'buffer': 100}
"['problem', 'solution', 'brook', 'value', 'buffer', 'specify', 'vsplit', 'patch', 'switchbuf', 'quickfix', 'vertical']",{'buffer': 100}
"['problem', 'solution', 'christian', 'patch', 'comma', 'issue', 'brabandt']",{'issue': 100}
"['problem', 'solution', 'window', 'arglist', 'backslashes', 'mccoy', 'expansion', 'james', 'patch', 'issue', 'vimgrep']",{'issue': 100}
"['patch', 'issue', 'pointer', 'setting']",{'issue': 100}
"['problem', 'solution', 'christian', 'crash', 'occasional', 'patch', 'brabandt']",{'crash': 100}
"['problem', 'solution', 'window', 'patch', 'issue', 'context']",{'issue': 100}
"['overflow', 'problem', 'solution', 'mccoy', 'james', 'subtract', 'patch', 'pointer', 'maxcol']",{'overflow': 100}
"['problem', 'solution', 'memory', 'dominique', 'pelle', 'length', 'patch', 'invalid', 'access']",{'length': 100}
"['problem', 'solution', 'memory', 'dominique', 'pelle', 'length', 'patch', 'access', 'check']",{'length': 100}
"['mergeunicode', 'crash', 'jpetrie', 'request', 'mergeinvalid', 'unicode']",{'crash': 100}
"['buffer', 'specify', 'verticalquickfixsolution', 'brook', 'value', 'vsplit', 'switchbuf']",{'buffer': 100}
"['patchproblem', 'window', 'arglist', 'issue', 'vimgrepexpansion', 'solution', 'backslashesjames', 'mccoy']",{'issue': 100}
"['problem', 'crypt', 'remainsissuecorrect', 'solution', 'indexpointer']",{'crypto': 91}
"['illegal', 'memory', 'accesssolution', 'pelle', 'dominique', 'length', 'check']",{'length': 100}
"['problem', 'solution', 'space', 'david', 'patch', 'issue', 'listchars', 'visibible']",{'issue': 100}
"['problem', 'solution', 'christian', 'buffer', 'patch', 'brabandt', 'yutao', 'delete']",{'buffer': 100}
"['problem', 'solution', 'memory', 'patch', 'stack']",{'stack': 100}
"['problem', 'solution', 'issue', 'version', 'popup']",{'issue': 100}
"['issue', 'argument', 'version']",{'issue': 100}
"['ruler', 'problem', 'curswant', 'solution', 'status', 'column', 'issue', 'version']",{'issue': 100}
"['problem', 'solution', 'window', 'reset', 'increment', 'buffer', 'autocommand', 'empty', 'version', 'bufadd']",{'buffer': 100}
"['counter', 'problem', 'solution', 'reset', 'default', 'format', 'issue', 'oswald', 'version']",{'issue': 100}
"['problem', 'insert', 'solution', 'character', 'brabandt', 'insstart', 'issue', 'version']",{'issue': 100}
"['reverse', 'problem', 'solution', 'buffer', 'autocommand', 'check', 'loren', 'version', 'number']",{'buffer': 100}
"['fileformat', 'problem', 'solution', 'eswald', 'block', 'check', 'issue', 'version']",{'issue': 100}
"['problem', 'insert', 'completion', 'yasuhiro', 'matsumoto', 'autocommands', 'buffer', 'version']",{'buffer': 100}
"['memory', 'crash', 'value', 'return', 'williams', 'version']",{'crash': 100}
"['problem', 'solution', 'limit', 'large', 'dominique', 'crash', 'pelle', 'pattern', 'version']",{'crash': 100}
"['patchvisibible', 'problem', 'possible', 'spacesolution', 'space', 'david', 'issue', 'listchars']",{'issue': 100}
"['problem', 'memory', 'freeingsolution', 'eliseo', 'stack']",{'stack': 100}
"['yosemite', 'macvim', 'mastermacvim', 'commits', 'mastersnapshotproblem', 'solution', 'compiler', 'warning', 'version', 'unusedproblem', 'solution', 'wrong', 'function', 'return', 'versionproblem', 'solution', 'compiler', 'warning', 'fritz', 'mechelynck', 'version', 'initializeproblem', 'solution', 'return', 'version', 'correctproblem', 'ozaki', 'solution', 'kiichi', 'version', 'statementruntime', 'updatekarkat', 'problem', 'solution', 'wrong', 'range', 'marcin', 'argdo', 'problem', 'insert', 'solution', 'compute', 'christian', 'front', 'brabandt', 'versionariya', 'problem', 'solution', 'yasuhiro', 'mizutani', 'version', 'everyproblem', 'solution', 'christian', 'patch', 'brabandt', 'versionproblem', 'redrawtime', 'solution', 'version', 'enginetakimoto', 'problem', 'solution', 'version', 'register', 'failsproblem', 'solution', 'statement', 'version', 'syntaxproto', 'problem', 'function', 'versiondicts', 'problem', 'iterative', 'solution', 'making', 'fritz', 'stack', 'garbage', 'version', 'collectorproblem', 'solution', 'failsproblem', 'solution', 'compiler', 'kazunobu', 'warning', 'kuriyama', 'version', 'problem', 'solution', 'small', 'crash', 'brabandt', 'versionproblem', 'solution', 'version', 'register']","{'stack': 100, 'crash': 100}"
"['mergemerge', 'branchcommitsproblem', 'solution', 'compiler', 'warning', 'version', 'unusedproblem', 'solution', 'wrong', 'function', 'return', 'versionproblem', 'solution', 'compiler', 'warning', 'fritz', 'mechelynck', 'version', 'initializeproblem', 'solution', 'return', 'version', 'correctproblem', 'ozaki', 'solution', 'kiichi', 'version', 'statementruntime', 'updatekarkat', 'problem', 'solution', 'wrong', 'range', 'marcin', 'argdo', 'problem', 'insert', 'solution', 'compute', 'christian', 'front', 'brabandt', 'versionariya', 'problem', 'solution', 'yasuhiro', 'mizutani', 'version', 'everyproblem', 'solution', 'christian', 'patch', 'brabandt', 'versionproblem', 'redrawtime', 'solution', 'version', 'enginetakimoto', 'problem', 'solution', 'version', 'register', 'failsproblem', 'solution', 'statement', 'version', 'syntaxproto', 'problem', 'function', 'versiondicts', 'problem', 'iterative', 'solution', 'making', 'fritz', 'stack', 'garbage', 'version', 'collectorproblem', 'solution', 'failsproblem', 'solution', 'compiler', 'kazunobu', 'warning', 'kuriyama', 'version', 'problem', 'solution', 'small', 'crash', 'brabandt', 'versionproblem', 'solution', 'version', 'registerproblem', 'solution']","{'stack': 100, 'crash': 100}"
"['version', 'updatedproblem', 'buffer', 'autocommand', 'numberreverse', 'solution', 'buffer', 'loren', 'check']",{'buffer': 100}
"['version', 'updatedproblem', 'pelle', 'dominique', 'crash', 'searchinglimit', 'solution', 'engine']",{'crash': 100}
"['version', 'updatedproblem', 'wrong', 'range', 'buffer', 'localcheck', 'szamotulski', 'solution', 'marcin']",{'buffer': 100}
"['version', 'updatedrestarts', 'problem', 'serversolution', 'application', 'issue']",{'issue': 100}
"['version', 'updatedproblem', 'range', 'crash', 'buffer', 'computingwrong', 'range', 'visualcheck', 'szamotulski', 'marcin']","{'crash': 100, 'buffer': 100}"
"['version', 'updatedproblem', 'issue', 'functionchristian', 'brabandt', 'solution']",{'issue': 100}
"['version', 'updatedfoldmethod', 'problem', 'buffer', 'global', 'marshallfoldmethod', 'reset']",{'buffer': 100}
"['version', 'updatedproblem', 'crash', 'reference', 'countgetregincrement', 'solution', 'kimmy', 'reference', 'lindvall']",{'crash': 100}
"['version', 'updatedbuffer', 'specify', 'problem', 'makingthree', 'uselesssolution', 'mccoy', 'james', 'buffer']",{'buffer': 100}
"['length', 'character', 'showbreakcharacter', 'compute', 'solution', 'marco']",{'length': 100}
"['version', 'updatedcompiler', 'issue', 'problem', 'handlesolution']",{'issue': 100}
"['version', 'updatedproblem', 'cursor', 'incorrect', 'movement', 'numbercolumnsolution', 'christian', 'column', 'brabandt']",{'incorrect': 100}
"['version', 'updatedproblem', 'cursor', 'issue', 'heightchristian', 'check', 'brabandt', 'solution']",{'issue': 100}
"['version', 'updatedproblem', 'error', 'empty', 'input', 'system', 'callingsolution', 'dabrunz', 'length', 'string']",{'length': 100}
"['version', 'updatedcommand', 'problem', 'buffer', 'supportsolution', 'marcin', 'szamotulski', 'argument', 'relevant']",{'buffer': 100}
"['problem', 'error', 'buffer', 'python', 'cursor', 'solution']",{'buffer': 100}
"['version', 'updatedproblem', 'crash', 'urtica', 'dioicamulti', 'solution', 'disallow']",{'crash': 100}
"['version', 'updatedproblem', 'kazunobu', 'crash', 'certain', 'kuriyamawhole', 'solution']",{'crash': 100}
"['version', 'updatedimplementation', 'encryption', 'problem', 'blowfishrefactor', 'solution', 'store', 'state', 'struct', 'restore', 'introduce', 'insteadblowfish', 'encrypts', 'weaknessleadbeater', 'whole', 'david']",{'encryption': 100}
"['version', 'updatedsyntax', 'problem', 'topmost', 'matchparensolution', 'mccoy', 'james', 'stack', 'syntaxgetcurpos']",{'stack': 100}
"['version', 'updatedproblem', 'pelle', 'dominique', 'crash', 'patternlarge', 'solution', 'limit']",{'crash': 100}
"['version', 'updatedproblem', 'pelle', 'dominique', 'crash', 'searchinglimit', 'solution', 'engine']",{'crash': 100}
"['version', 'updatedproblem', 'wrong', 'range', 'buffer', 'localcheck', 'szamotulski', 'solution', 'marcin']",{'buffer': 100}
"['version', 'updatedrestarts', 'problem', 'serversolution', 'application', 'issue']",{'issue': 100}
"['version', 'updatedproblem', 'range', 'crash', 'buffer', 'computingwrong', 'range', 'visualcheck', 'szamotulski', 'marcin']","{'crash': 100, 'buffer': 100}"
"['version', 'updatedproblem', 'issue', 'functionchristian', 'brabandt', 'solution']",{'issue': 100}
"['version', 'updatedfoldmethod', 'problem', 'buffer', 'global', 'marshallfoldmethod', 'reset']",{'buffer': 100}
"['version', 'updatedproblem', 'crash', 'reference', 'countgetregincrement', 'solution', 'kimmy', 'reference', 'lindvall']",{'crash': 100}
"['version', 'updatedbuffer', 'specify', 'problem', 'makingthree', 'uselesssolution', 'mccoy', 'james', 'buffer']",{'buffer': 100}
"['length', 'character', 'showbreakcharacter', 'compute', 'solution', 'marco']",{'length': 100}
"['version', 'updatedcompiler', 'issue', 'problem', 'handlesolution']",{'issue': 100}
"['version', 'updatedproblem', 'cursor', 'incorrect', 'movement', 'numbercolumnsolution', 'christian', 'column', 'brabandt']",{'incorrect': 100}
"['version', 'updatedproblem', 'cursor', 'issue', 'heightchristian', 'check', 'brabandt', 'solution']",{'issue': 100}
"['version', 'updatedproblem', 'error', 'empty', 'input', 'system', 'callingsolution', 'dabrunz', 'length', 'string']",{'length': 100}
"['version', 'updatedcommand', 'problem', 'buffer', 'supportsolution', 'marcin', 'szamotulski', 'argument', 'relevant']",{'buffer': 100}
"['problem', 'error', 'buffer', 'python', 'cursor', 'solution']",{'buffer': 100}
"['version', 'updatedproblem', 'crash', 'urtica', 'dioicamulti', 'solution', 'disallow']",{'crash': 100}
"['version', 'updatedproblem', 'kazunobu', 'crash', 'certain', 'kuriyamawhole', 'solution']",{'crash': 100}
"['version', 'updatedimplementation', 'encryption', 'problem', 'blowfishrefactor', 'solution', 'store', 'state', 'struct', 'restore', 'introduce', 'insteadblowfish', 'encrypts', 'weaknessleadbeater', 'whole', 'david']",{'encryption': 100}
"['version', 'updatedsyntax', 'problem', 'topmost', 'matchparensolution', 'mccoy', 'james', 'stack', 'syntaxgetcurpos']",{'stack': 100}
"['version', 'updatedproblem', 'matchaddpos', 'length', 'numbercharacter', 'highlight', 'continuessolution', 'condition']",{'length': 100}
"['version', 'updatedproblem', 'matchaddpos', 'length', 'numbercharacter', 'highlight', 'continuessolution', 'condition']",{'length': 100}
"['version', 'updatedrelative', 'problem', 'linewise', 'issue', 'numberingchristian', 'redraw', 'brabandt', 'solution']",{'issue': 100}
"['version', 'updatedrelative', 'problem', 'linewise', 'issue', 'numberingchristian', 'redraw', 'brabandt', 'solution']",{'issue': 100}
"['version', 'updatedproblem', 'bufleave', 'crash', 'autocommand', 'deletes', 'possiblesolution', 'window', 'postpone', 'pointer', 'checkmatsumoto', 'yasuhiro', 'autocommands', 'window']",{'crash': 100}
"['version', 'updatedproblem', 'bufleave', 'crash', 'autocommand', 'deletes', 'possiblesolution', 'window', 'postpone', 'pointer', 'checkmatsumoto', 'yasuhiro', 'autocommands', 'window']",{'crash': 100}
"['problem', 'crash', 'pattern', 'external', 'syntaxgarnes', 'havardsolution', 'column', 'discard']",{'crash': 100}
"['problem', 'crash', 'pattern', 'external', 'syntaxgarnes', 'havardsolution', 'column', 'discard']",{'crash': 100}
"['version', 'updatedautocommand', 'problem', 'bufadd', 'crashsolution', 'buffer', 'checkhirohito', 'higashi']",{'buffer': 100}
"['version', 'updatedautocommand', 'problem', 'bufadd', 'crashsolution', 'buffer', 'checkhirohito', 'higashi']",{'buffer': 100}
"['version', 'updatedproblem', 'copen', 'resize', 'issue', 'quickfixsolution', 'window', 'christian', 'resize', 'brabandt']",{'issue': 100}
"['version', 'updatedproblem', 'copen', 'resize', 'issue', 'quickfixsolution', 'window', 'christian', 'resize', 'brabandt']",{'issue': 100}
"['version', 'updatedreload', 'problem', 'inconsistencyliang', 'currentcurrent', 'solution', 'buffer', 'reload']",{'buffer': 100}
"['version', 'updatedreload', 'problem', 'inconsistencyliang', 'currentcurrent', 'solution', 'buffer', 'reload']",{'buffer': 100}
"['version', 'updatedproblem', 'exception', 'crash', 'pythonvariable', 'solution', 'exception']",{'crash': 100}
"['version', 'updatedproblem', 'exception', 'crash', 'pythonvariable', 'solution', 'exception']",{'crash': 100}
"['version', 'updatedproblem', 'current', 'completion', 'buffer', 'scanningchristian', 'current', 'position']",{'buffer': 100}
"['version', 'updatedproblem', 'current', 'completion', 'buffer', 'scanningchristian', 'current', 'position']",{'buffer': 100}
"['version', 'updatedproblem', 'crash', 'buffer', 'autocommand', 'triggerdelete', 'solution', 'hirohito', 'higashi']","{'crash': 100, 'buffer': 100}"
"['version', 'updatedproblem', 'crash', 'buffer', 'autocommand', 'triggerdelete', 'solution', 'hirohito', 'higashi']","{'crash': 100, 'buffer': 100}"
"['version', 'updatedproblem', 'current', 'colorscheme', 'buffer', 'autocommand', 'matchsolution', 'christian', 'colorscheme', 'brabandt']",{'buffer': 100}
"['version', 'updatedproblem', 'current', 'colorscheme', 'buffer', 'autocommand', 'matchsolution', 'christian', 'colorscheme', 'brabandt']",{'buffer': 100}
"['version', 'updatedproblem', 'editing', 'sshfs', 'directory', 'mountedcontext', 'security', 'renamedpeter', 'solution', 'backes']",{'Security': 100}
"['version', 'updatedproblem', 'editing', 'sshfs', 'directory', 'mountedcontext', 'security', 'renamedpeter', 'solution', 'backes']",{'Security': 100}
"['version', 'updatedproblem', 'buffer', 'undolevels', 'settingsolution', 'christian', 'local', 'brabandt', 'global', 'undolevels']",{'buffer': 100}
"['version', 'updatedproblem', 'buffer', 'undolevels', 'settingsolution', 'christian', 'local', 'brabandt', 'global', 'undolevels']",{'buffer': 100}
"['problem', 'crash', 'invalid', 'pythoncheck', 'object', 'solution']",{'crash': 100}
"['problem', 'crash', 'invalid', 'pythoncheck', 'object', 'solution']",{'crash': 100}
"['version', 'updatedproblem', 'deadlock', 'allocatingsolution', 'deathtrap', 'mccoy', 'gettext', 'james']",{'deadlock': 100}
"['version', 'updatedproblem', 'deadlock', 'allocatingsolution', 'deathtrap', 'mccoy', 'gettext', 'james']",{'deadlock': 100}
"['version', 'updatedproblem', 'crash', 'invalid', 'mkdir', 'argumentempty', 'check', 'solution']",{'crash': 100}
"['version', 'updatedproblem', 'crash', 'invalid', 'mkdir', 'argumentempty', 'check', 'solution']",{'crash': 100}
"['destroychristian', 'decryption', 'solution', 'readonlybrabandt']",{'encryption': 90}
"['destroychristian', 'decryption', 'solution', 'readonlybrabandt']",{'encryption': 90}
"['version', 'updatedproblem', 'regexp', 'crash', 'pattern', 'kielhornaround', 'solution']",{'crash': 100}
"['version', 'updatedproblem', 'regexp', 'crash', 'pattern', 'kielhornaround', 'solution']",{'crash': 100}
"['version', 'updatedproblem', 'andrew', 'bufunload', 'autocommands', 'crash', 'closepimlottavoid', 'curbuf', 'curwin', 'solution']",{'crash': 100}
"['version', 'updatedproblem', 'andrew', 'bufunload', 'autocommands', 'crash', 'closepimlottavoid', 'curbuf', 'curwin', 'solution']",{'crash': 100}
"['double', 'encode', 'parsingmacvim', 'issue', 'unsafe', 'escapingcharacter', 'twicebreak', 'macvim', 'legit']",{'issue': 100}
"['version', 'updatedproblem', 'cursor', 'buffer', 'position', 'pythonmight', 'causingirnovcurrent', 'solution']",{'buffer': 100}
"['version', 'updatedproblem', 'cursor', 'buffer', 'position', 'pythonmight', 'causingirnovcurrent', 'solution']",{'buffer': 100}
"['version', 'updatedproblem', 'editing', 'aliaksandr', 'crash', 'rahalevichstate', 'reallocate', 'solution']",{'crash': 100}
"['version', 'updatedproblem', 'editing', 'aliaksandr', 'crash', 'rahalevichstate', 'reallocate', 'solution']",{'crash': 100}
"['problem', 'buffer', 'empty', 'hauke', 'petersenchristian', 'empty', 'brabandt', 'solution']",{'buffer': 100}
"['problem', 'buffer', 'empty', 'hauke', 'petersenchristian', 'empty', 'brabandt', 'solution']",{'buffer': 100}
"['version', 'updatedproblem', 'keymap', 'buffer', 'local', 'insert', 'aaroncharacter']",{'buffer': 100}
"['version', 'updatedproblem', 'keymap', 'buffer', 'local', 'insert', 'aaroncharacter']",{'buffer': 100}
"['version', 'updatedinterface', 'problem', 'crash', 'pythonargument']",{'crash': 100}
"['version', 'updatedinterface', 'problem', 'crash', 'pythonargument']",{'crash': 100}
"['version', 'updatedproblem', 'various', 'pythonsolution', 'debug', 'memory', 'crash', 'pythondumprefsstringtoline', 'buffermark']",{'crash': 100}
"['version', 'updatedproblem', 'various', 'pythonsolution', 'debug', 'memory', 'crash', 'pythondumprefsstringtoline', 'buffermark']",{'crash': 100}
"['version', 'updateddarren', 'problem', 'issue', 'foldedaccount', 'solution', 'foldingheader']",{'issue': 100}
"['version', 'updateddarren', 'problem', 'issue', 'foldedaccount', 'solution', 'foldingheader']",{'issue': 100}
"['version', 'updatedproblem', 'window', 'crash', 'pythoncheck', 'solution', 'takata']",{'crash': 100}
"['version', 'updatedproblem', 'window', 'crash', 'pythoncheck', 'solution', 'takata']",{'crash': 100}
"['version', 'updatedproblem', 'compiler', 'warning', 'crash', 'python', 'unuseddisable', 'solution']",{'crash': 100}
"['version', 'updatedproblem', 'compiler', 'warning', 'crash', 'python', 'unuseddisable', 'solution']",{'crash': 100}
"['version', 'updatedinterface', 'problem', 'compile', 'pythonissue', 'solution', 'thread']",{'thread': 100}
"['version', 'updatedinterface', 'problem', 'compile', 'pythonissue', 'solution', 'thread']",{'thread': 100}
"['version', 'updatedcollection', 'garbage', 'problem', 'pythonproper', 'negative', 'solution', 'issue', 'avoidsobjectrangetraverse']",{'issue': 100}
"['version', 'updatedcollection', 'garbage', 'problem', 'pythonproper', 'negative', 'solution', 'issue', 'avoidsobjectrangetraverse']",{'issue': 100}
"['version', 'updatedmulti', 'problem', 'regexp', 'enginepoint', 'integer', 'solution']",{'integer': 100}
"['version', 'updatedmulti', 'problem', 'regexp', 'enginepoint', 'integer', 'solution']",{'integer': 100}
"['version', 'updatedproblem', 'regexp', 'actual', 'solution', 'stack', 'arbitrarymatsumoto', 'yasuhiro']",{'stack': 100}
"['version', 'updatedproblem', 'regexp', 'actual', 'solution', 'stack', 'arbitrarymatsumoto', 'yasuhiro']",{'stack': 100}
"['version', 'updatedproblem', 'window', 'buffer', 'pythonassign', 'solution', 'ability']",{'buffer': 100}
"['version', 'updatedproblem', 'window', 'buffer', 'pythonassign', 'solution', 'ability']",{'buffer': 100}
"['version', 'updatedproblem', 'python', 'printer', 'stack', 'tracekeyerrors', 'solution']",{'stack': 100}
"['version', 'updatedproblem', 'python', 'printer', 'stack', 'tracekeyerrors', 'solution']",{'stack': 100}
"['version', 'updatedproblem', 'crashshirosaki', 'hiroshi', 'solution', 'stack']",{'stack': 100}
"['version', 'updatedproblem', 'crashshirosaki', 'hiroshi', 'solution', 'stack']",{'stack': 100}
"['issue', 'mousepelle', 'solution', 'dominique', 'value']",{'issue': 100}
"['issue', 'mousepelle', 'solution', 'dominique', 'value']",{'issue': 100}
"['problem', 'crash', 'return', 'solution']",{'crash': 100}
"['problem', 'crash', 'return', 'solution']",{'crash': 100}
"['window', 'crashinstead', 'dictionary', 'solution', 'allocatewindow', 'nakadaira', 'buffer', 'tabpage', 'yukihiro']",{'buffer': 100}
"['window', 'crashinstead', 'dictionary', 'solution', 'allocatewindow', 'nakadaira', 'buffer', 'tabpage', 'yukihiro']",{'buffer': 100}
"['version', 'updatedbuffer', 'bufwinnr', 'problem', 'matchcurrent', 'solution', 'bufwinnr', 'buffer', 'matchradkov', 'alexey']",{'buffer': 100}
"['version', 'updatedbuffer', 'bufwinnr', 'problem', 'matchcurrent', 'solution', 'bufwinnr', 'buffer', 'matchradkov', 'alexey']",{'buffer': 100}
"['version', 'updatedproblem', 'pythonadjust', 'solution', 'stack', 'output']",{'stack': 100}
"['version', 'updatedproblem', 'pythonadjust', 'solution', 'stack', 'output']",{'stack': 100}
"['version', 'updatederror', 'problem', 'pythonunless', 'solution', 'print', 'silent', 'stack']",{'stack': 100}
"['version', 'updatederror', 'problem', 'pythonunless', 'solution', 'print', 'silent', 'stack']",{'stack': 100}
"['version', 'updatedproblem', 'thread', 'pythonsolution', 'takata', 'python']",{'thread': 100}
"['version', 'updatedproblem', 'thread', 'pythonsolution', 'takata', 'python']",{'thread': 100}
"['buffer', 'problem', 'modelinessolution', 'takata']",{'buffer': 100}
"['buffer', 'problem', 'modelinessolution', 'takata']",{'buffer': 100}
"['version', 'updatedproblem', 'issue', 'python', 'thread', 'backgroundmanipulate', 'statement', 'solution', 'thread']","{'issue': 100, 'thread': 100}"
"['version', 'updatedproblem', 'issue', 'python', 'thread', 'backgroundmanipulate', 'statement', 'solution', 'thread']","{'issue': 100, 'thread': 100}"
"['version', 'updatedsearch', 'problem', 'crash', 'specificsolution', 'initialize']",{'crash': 100}
"['version', 'updatedsearch', 'problem', 'crash', 'specificsolution', 'initialize']",{'crash': 100}
"['version', 'updatedcommand', 'problem', 'memory', 'issue', 'access', 'triggerpelle', 'dominiquesolution']",{'issue': 100}
"['version', 'updatedcommand', 'problem', 'memory', 'issue', 'access', 'triggerpelle', 'dominiquesolution']",{'issue': 100}
"['version', 'updatednumber', 'problem', 'integer', 'computingsolution', 'pelle', 'dominique', 'maxcol', 'check']",{'integer': 100}
"['version', 'updatednumber', 'problem', 'integer', 'computingsolution', 'pelle', 'dominique', 'maxcol', 'check']",{'integer': 100}
"['current', 'buffer', 'local', 'optionsolution', 'christian', 'buffer', 'local', 'brabandt', 'initialize']",{'buffer': 100}
"['current', 'buffer', 'local', 'optionsolution', 'christian', 'buffer', 'local', 'brabandt', 'initialize']",{'buffer': 100}
"['version', 'updatedproblem', 'bufunload', 'setloclist', 'crash', 'marcin', 'callingszamotulskisolutionchristian', 'brabandt']",{'crash': 100}
"['version', 'updatedproblem', 'bufunload', 'setloclist', 'crash', 'marcin', 'callingszamotulskisolutionchristian', 'brabandt']",{'crash': 100}
"['version', 'updatedoverflow', 'problem', 'window', 'crash', 'stack', 'settinghandle', 'solution', 'iconv']","{'crash': 100, 'stack': 100}"
"['version', 'updatedoverflow', 'problem', 'window', 'crash', 'stack', 'settinghandle', 'solution', 'iconv']","{'crash': 100, 'stack': 100}"
"['version', 'updatedproblem', 'current', 'maximum', 'directory', 'length', 'exactlysolution', 'duvall', 'danek']",{'length': 100}
"['version', 'updatedproblem', 'current', 'maximum', 'directory', 'length', 'exactlysolution', 'duvall', 'danek']",{'length': 100}
"['version', 'updatedproblem', 'crash', 'vimbindeval', 'return', 'pythoncheck', 'solution', 'yukihiro', 'nakadaira']",{'crash': 100}
"['version', 'updatedproblem', 'crash', 'vimbindeval', 'return', 'pythoncheck', 'solution', 'yukihiro', 'nakadaira']",{'crash': 100}
"['version', 'updatedproblem', 'crash', 'workaround', 'pythonlength', 'estabrooks', 'solution']",{'crash': 100}
"['version', 'updatedproblem', 'crash', 'workaround', 'pythonlength', 'estabrooks', 'solution']",{'crash': 100}
"['problem', 'crashsolution', 'length', 'buffer', 'check']","{'length': 100, 'buffer': 100}"
"['problem', 'crashsolution', 'length', 'buffer', 'check']","{'length': 100, 'buffer': 100}"
"['unusable', 'buffer', 'becomesdmitri', 'solution', 'christian']",{'buffer': 100}
"['unusable', 'buffer', 'becomesdmitri', 'solution', 'christian']",{'buffer': 100}
"['version', 'updatedproblem', 'wrong', 'startup', 'issue', 'systemyngvestill', 'solution', 'shellchristian', 'brabandt']",{'issue': 100}
"['version', 'updatedproblem', 'wrong', 'startup', 'issue', 'systemyngvestill', 'solution', 'shellchristian', 'brabandt']",{'issue': 100}
"['insertion', 'point', 'drawingcursor', 'issue', 'spilldisplay', 'retina']",{'issue': 100}
"['runtime', 'issue']",{'issue': 100}
"['runtime', 'issue']",{'issue': 100}
"['problem', 'vipvv', 'crash', 'provencio', 'alexandrelength']",{'crash': 100}
"['problem', 'vipvv', 'crash', 'provencio', 'alexandrelength']",{'crash': 100}
"['version', 'updatedproblem', 'crashsolution', 'hirohito', 'crash', 'higashi', 'thinca']",{'crash': 100}
"['version', 'updatedproblem', 'crashsolution', 'hirohito', 'crash', 'higashi', 'thinca']",{'crash': 100}
"['version', 'updatedproblem', 'crash', 'print', 'solution', 'christianbrabandt']",{'crash': 100}
"['version', 'updatedproblem', 'crash', 'print', 'solution', 'christianbrabandt']",{'crash': 100}
"['buffer', 'pickingcurrent', 'solution', 'hirohito', 'higashi']",{'buffer': 100}
"['buffer', 'pickingcurrent', 'solution', 'hirohito', 'higashi']",{'buffer': 100}
"['problem', 'bufenter', 'crash', 'autocommand', 'solution', 'autocommandscheck', 'option', 'valuechristian', 'sergey', 'khorev']",{'crash': 100}
"['problem', 'bufenter', 'crash', 'autocommand', 'solution', 'autocommandscheck', 'option', 'valuechristian', 'sergey', 'khorev']",{'crash': 100}
"['version', 'updatedbufwinleave', 'problem', 'crash', 'close', 'autocommanddanielabort', 'solution']",{'crash': 100}
"['version', 'updatedbufwinleave', 'problem', 'crash', 'close', 'autocommanddanielabort', 'solution']",{'crash': 100}
"['exitfree', 'problem', 'crash', 'definedsolution', 'window', 'pelle', 'dominique', 'check']",{'crash': 100}
"['exitfree', 'problem', 'crash', 'definedsolution', 'window', 'pelle', 'dominique', 'check']",{'crash': 100}
"['version', 'updatedproblem', 'weber', 'crashsolution', 'buffer', 'check']",{'buffer': 100}
"['version', 'updatedproblem', 'weber', 'crashsolution', 'buffer', 'check']",{'buffer': 100}
"['unicode', 'problem', 'large', 'crash', 'characterngollan', 'syntaxsolution', 'pelle', 'dominique']",{'crash': 100}
"['unicode', 'problem', 'large', 'crash', 'characterngollan', 'syntaxsolution', 'pelle', 'dominique']",{'crash': 100}
"['problem', 'scrollbar', 'window', 'chancewindow', 'triggervalidsolution', 'buffer', 'detect', 'invalid', 'pointerbuffer', 'place', 'pointer']",{'buffer': 100}
"['problem', 'scrollbar', 'window', 'chancewindow', 'triggervalidsolution', 'buffer', 'detect', 'invalid', 'pointerbuffer', 'place', 'pointer']",{'buffer': 100}
"['problem', 'block', 'marker', 'crash', 'lidderjames', 'check', 'solution', 'column']",{'crash': 100}
"['problem', 'block', 'marker', 'crash', 'lidderjames', 'check', 'solution', 'column']",{'crash': 100}
"['version', 'updatedproblem', 'autocommand', 'bufwritecmd', 'buffer', 'state', 'markednakadaira', 'yukihiro', 'writesolution']",{'buffer': 100}
"['version', 'updatedproblem', 'autocommand', 'bufwritecmd', 'buffer', 'state', 'markednakadaira', 'yukihiro', 'writesolution']",{'buffer': 100}
"['large', 'crash', 'numbersolution', 'recompute', 'entry', 'pointer']",{'crash': 100}
"['large', 'crash', 'numbersolution', 'recompute', 'entry', 'pointer']",{'crash': 100}
"['emergency', 'problemoptimization', 'alloca', 'generates', 'dependsbecomes', 'pointer', 'stacklatter', 'alloca', 'avoidsproblem', 'henceemergency', 'crash', 'leastinterface']",{'crash': 100}
"['emergency', 'problemoptimization', 'alloca', 'generates', 'dependsbecomes', 'pointer', 'stacklatter', 'alloca', 'avoidsproblem', 'henceemergency', 'crash', 'leastinterface']",{'crash': 100}
"['toggledisplay', 'toggle', 'panel', 'crash']",{'crash': 100}
"['drawing', 'issue']",{'issue': 100}
"['crash', 'filterextend', 'nakadaira', 'yukihiroerror']",{'crash': 100}
"['crash', 'filterextend', 'nakadaira', 'yukihiroerror']",{'crash': 100}
"['version', 'updatedproblem', 'holliday', 'kearn', 'crash', 'pythoncolumbus', 'tobias', 'solution']",{'crash': 100}
"['version', 'updatedproblem', 'holliday', 'kearn', 'crash', 'pythoncolumbus', 'tobias', 'solution']",{'crash': 100}
"['document', 'generation', 'readme']",{'generation': 100}
"['buildunavailable', 'monaco', 'documentinside', 'generation', 'getenvy']",{'generation': 100}
"['encryption', 'problem', 'method', 'clearmessage', 'blowfish', 'solution']",{'encryption': 100}
"['encryption', 'problem', 'method', 'clearmessage', 'blowfish', 'solution']",{'encryption': 100}
"['problem', 'integernicer', 'check', 'integer', 'solution']",{'integer': 100}
"['problem', 'integernicer', 'check', 'integer', 'solution']",{'integer': 100}
"['version', 'updatedproblem', 'processing', 'crash', 'esperanto', 'failspelle', 'memory', 'solutioncompoundrule']",{'crash': 100}
"['version', 'updatedproblem', 'processing', 'crash', 'esperanto', 'failspelle', 'memory', 'solutioncompoundrule']",{'crash': 100}
"['problem', 'window', 'crash', 'yukihironakadairasolution', 'fraction', 'window']",{'crash': 100}
"['problem', 'window', 'crash', 'yukihironakadairasolution', 'fraction', 'window']",{'crash': 100}
"['version', 'updatedproblem', 'window', 'crash', 'vimgrep', 'changingchristian', 'brabandtdummy']",{'crash': 100}
"['version', 'updatedproblem', 'window', 'crash', 'vimgrep', 'changingchristian', 'brabandtdummy']",{'crash': 100}
"['version', 'updatedproblem', 'socket', 'crash', 'netbeans', 'disconnectedcleanup', 'message', 'solution', 'queuexavier', 'disconnect']",{'crash': 100}
"['version', 'updatedproblem', 'socket', 'crash', 'netbeans', 'disconnectedcleanup', 'message', 'solution', 'queuexavier', 'disconnect']",{'crash': 100}
"['version', 'updatederror', 'problem', 'window', 'completefuncxavier', 'deguillardsolution', 'window', 'buffer', 'completefuncabort', 'deletes', 'completefunc']",{'buffer': 100}
"['version', 'updatederror', 'problem', 'window', 'completefuncxavier', 'deguillardsolution', 'window', 'buffer', 'completefuncabort', 'deletes', 'completefunc']",{'buffer': 100}
"['problem', 'crashevaluation', 'solution', 'expression', 'length', 'resultnoriaki', 'pelle', 'dominique']",{'length': 100}
"['problem', 'crashevaluation', 'solution', 'expression', 'length', 'resultnoriaki', 'pelle', 'dominique']",{'length': 100}
"['version', 'updatedproblem', 'maparg', 'buffer', 'return', 'scriptsilent', 'restoreimprove', 'solution', 'christian', 'maparg', 'brabandt']",{'buffer': 100}
"['version', 'updatedproblem', 'maparg', 'buffer', 'return', 'scriptsilent', 'restoreimprove', 'solution', 'christian', 'maparg', 'brabandt']",{'buffer': 100}
"['input', 'whilst', 'avoidkeyboard', 'buffer', 'input', 'arrivesinput', 'backend', 'firstproblem', 'opening']",{'buffer': 100}
"['problem', 'strftime', 'window', 'crash', 'argumentchristian', 'brabandtsolution', 'williams']",{'crash': 100}
"['problem', 'strftime', 'window', 'crash', 'argumentchristian', 'brabandtsolution', 'williams']",{'crash': 100}
"['version', 'updateddefines', 'problem', 'python', 'buffer', 'globalhandle', 'solution', 'array', 'codingmemory', 'situation']",{'buffer': 100}
"['version', 'updateddefines', 'problem', 'python', 'buffer', 'globalhandle', 'solution', 'array', 'codingmemory', 'situation']",{'buffer': 100}
"['problem', 'christian', 'crash', 'undotree', 'brabandtreference', 'undotree', 'solution', 'increaseloren']",{'crash': 100}
"['problem', 'christian', 'crash', 'undotree', 'brabandtreference', 'undotree', 'solution', 'increaseloren']",{'crash': 100}
"['problem', 'peter', 'crash', 'oddingcarlo', 'reset', 'solution', 'teubner']",{'crash': 100}
"['problem', 'peter', 'crash', 'oddingcarlo', 'reset', 'solution', 'teubner']",{'crash': 100}
"['problem', 'explaineddefault', 'external', 'shelloccur', 'behaviourproblemmacvim', 'external', 'program', 'executesinformation', 'child', 'parent', 'implementation', 'slave', 'unusedparent', 'problem', 'causeoperation', 'writechild', 'parentchild', 'closedarwin', 'kernelbceccd', 'thread', 'group']",{'thread': 100}
"['version', 'updatedproblem', 'peter', 'specific', 'crash', 'bufwritepostquickfix', 'loren', 'solution', 'title']",{'crash': 100}
"['version', 'updatedproblem', 'peter', 'specific', 'crash', 'bufwritepostquickfix', 'loren', 'solution', 'title']",{'crash': 100}
"['buffer', 'librarybranch']",{'buffer': 100}
"['buffer', 'library']",{'buffer': 100}
"['crash', 'terminal', 'netbeansxavier', 'partlybranch']",{'crash': 100}
"['crash', 'terminal', 'netbeansxavier']",{'crash': 100}
"['setting', 'crypt', 'updatedcreatedbranch']",{'crypto': 91}
"['setting', 'crypt']",{'crypto': 91}
"['ramliy', 'crash', 'nazribranch']",{'crash': 100}
"['ramliy', 'crash', 'nazri']",{'crash': 100}
"['pelle', 'setting', 'encryption', 'dominiquebranch']",{'encryption': 100}
"['pelle', 'setting', 'encryption', 'dominique']",{'encryption': 100}
"['crash', 'usingbranch']",{'crash': 100}
"['prototype', 'generation', 'automaticbranch']",{'generation': 100}
"['prototype', 'generation']",{'generation': 100}
"['filter', 'pthread']",{'thread': 92}
"['crash', 'generatingbranch']",{'crash': 100}
"['problem', 'filechangedro', 'autocmd', 'crash', 'eventreloads', 'pelle', 'dominiqueallow', 'solution', 'autocommands']",{'crash': 100}
"['problem', 'filechangedro', 'autocmd', 'crash', 'eventreloads', 'pelle', 'dominiqueallow', 'solution', 'autocommands']",{'crash': 100}
"['ownsyntax', 'pelle', 'dominique', 'crash']",{'crash': 100}
"['crypt', 'optimize', 'blowfish', 'decryptbranch']",{'crypto': 91}
"['crypt', 'optimize', 'blowfish', 'decrypt']",{'crypto': 91}
"['crypt', 'decryptbranch']",{'crypto': 91}
"['crypt', 'decrypt']",{'crypto': 91}
"['version', 'updatedproblem', 'completion', 'memory', 'thesaurus', 'invalid', 'accessinfercaseminimal', 'length', 'solution', 'completedpelle', 'dominique']",{'length': 100}
"['version', 'updatedproblem', 'completion', 'memory', 'thesaurus', 'invalid', 'accessinfercaseminimal', 'length', 'solution', 'completedpelle', 'dominique']",{'length': 100}
"['version', 'updatedproblem', 'completion', 'memory', 'thesaurus', 'invalid', 'accessinfercaseminimal', 'length', 'solution', 'completedpelle', 'dominiquebranch']",{'length': 100}
"['version', 'updatedproblem', 'completion', 'memory', 'thesaurus', 'invalid', 'accessinfercaseminimal', 'length', 'solution', 'completedpelle', 'dominique']",{'length': 100}
"['mohsin', 'encryption', 'blowfish', 'patchbranch']",{'encryption': 100}
"['mohsin', 'encryption', 'blowfish', 'patch']",{'encryption': 100}
"['version', 'updatedproblem', 'dominique', 'crash', 'pelle', 'reproducible', 'syntax', 'georgeinstead', 'pelle', 'solution', 'dominique']",{'crash': 100}
"['version', 'updatedproblem', 'dominique', 'crash', 'pelle', 'reproducible', 'syntax', 'georgeinstead', 'pelle', 'solution', 'dominique']",{'crash': 100}
"['version', 'updatedproblem', 'dominique', 'crash', 'pelle', 'reproducible', 'syntax', 'georgeinstead', 'pelle', 'solution', 'dominiquebranch']",{'crash': 100}
"['version', 'updatedproblem', 'dominique', 'crash', 'pelle', 'reproducible', 'syntax', 'georgeinstead', 'pelle', 'solution', 'dominique']",{'crash': 100}
"['problem', 'texier', 'crash', 'patrickreproduce', 'solution', 'argument']",{'crash': 100}
"['problem', 'texier', 'crash', 'patrickreproduce', 'solution', 'argument']",{'crash': 100}
"['problem', 'texier', 'crash', 'patrickreproduce', 'solution', 'argumentbranch']",{'crash': 100}
"['problem', 'texier', 'crash', 'patrickreproduce', 'solution', 'argument']",{'crash': 100}
"['buffer', 'check', 'recoverybranch']",{'buffer': 100}
"['buffer', 'check', 'recovery']",{'buffer': 100}
"['buffer', 'check', 'recoveryextra', 'ebfcadddeceae']",{'buffer': 100}
"['version', 'updatedproblem', 'crash', 'nakadaira', 'yukihiro', 'assigninginstead', 'solution', 'pointer', 'containpelle', 'dominique']",{'crash': 100}
"['version', 'updatedproblem', 'crash', 'nakadaira', 'yukihiro', 'assigninginstead', 'solution', 'pointer', 'containpelle', 'dominique']",{'crash': 100}
"['version', 'updatedproblem', 'cmdlinebufhideexists', 'solution', 'buffer', 'check', 'invokingpelle', 'dominique']",{'buffer': 100}
"['version', 'updatedproblem', 'cmdlinebufhideexists', 'solution', 'buffer', 'check', 'invokingpelle', 'dominique']",{'buffer': 100}
"['problem', 'crash', 'netbeansfunction', 'solutionxavier']",{'crash': 100}
"['problem', 'crash', 'netbeansfunction', 'solutionxavier']",{'crash': 100}
"['drawing', 'issue']",{'issue': 100}
"['redefines', 'problem', 'crash', 'solution', 'value']",{'crash': 100}
"['redefines', 'problem', 'crash', 'solution', 'value']",{'crash': 100}
"['problem', 'reloads', 'crash', 'autocommand', 'triggerpelle', 'solution', 'dominique']",{'crash': 100}
"['problem', 'reloads', 'crash', 'autocommand', 'triggerpelle', 'solution', 'dominique']",{'crash': 100}
"['atsui', 'compilation', 'issue', 'tiger']",{'issue': 100}
"['generation', 'leopard']",{'generation': 100}
"['generation', 'leopardseems', 'scrap', 'support', 'leopardmanager']",{'generation': 100}
"['generation', 'makefile']",{'generation': 100}
"['cleanup', 'generation']",{'generation': 100}
"['compiler', 'issue', 'tiger']",{'issue': 100}
"['generation', 'tiger']",{'generation': 100}
"['generation', 'script']",{'generation': 100}
"['macmeta', 'buffer', 'local', 'press', 'macvim', 'macmeta', 'updatedsyntax']",{'buffer': 100}
"['window', 'issue']",{'issue': 100}
