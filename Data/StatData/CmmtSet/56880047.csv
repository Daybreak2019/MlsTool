message,fuzzy
"['provideextra', 'concurrency', 'existallow', 'flatten', 'stream', 'consumer', 'maximumconcurrency', 'operator', 'supportconnect', 'maximumstaltz', 'xstream']",{'concurren': 90}
"['tsconfig', 'refactor', 'buffer']",{'buffer': 100}
"['refactor', 'update', 'buffer', 'style']",{'buffer': 100}
"['separator', 'buffer', 'stream', 'input', 'assertion', 'neighbour', 'stream', 'input', 'interval']",{'buffer': 100}
"['separator', 'buffer', 'stream', 'array', 'extra', 'input', 'operatorevent', 'separator', 'stream', 'buffer', 'input', 'operator', 'accepts', 'separatos', 'separator', 'stream', 'array', 'emits', 'outputstream', 'goodnesssquad']",{'buffer': 100}
"['fusion', 'operator', 'avoidflatten', 'fusion', 'filter', 'operator', 'causinglibrary', 'prioritize', 'focus', 'performance', 'possiblebesides', 'library', 'correctness', 'fusion', 'issue', 'operator', 'removingothers']",{'issue': 100}
"['equal', 'inner', 'stream', 'previous', 'restartreverts', 'problematic', 'changexstream', 'behavior', 'issue', 'reverts', 'commitissue']",{'issue': 100}
"['emitter', 'event', 'support', 'nodejs', 'fromeventfromevent', 'eventemitters', 'extra', 'supportgeneration', 'stream', 'supportdomelement', 'fromevent', 'argument', 'firstfromevent', 'providingargument', 'staltz', 'xstreamindent', 'revert', 'changeproject', 'consistent', 'revert', 'indentation', 'remainguard', 'source', 'refactor', 'conform', 'styleadjust', 'source', 'introduce', 'style', 'withinguard', 'instanceof', 'typeof', 'producerremove', 'style', 'align', 'project', 'whitespaceremove', 'producer', 'class', 'assignmentdocumentation', 'update', 'includeremove', 'example', 'semicolon', 'whitespacesproducer', 'guard', 'instantiationinstanceof', 'typeofremove', 'importreorder', 'equality', 'assertiondocumentation', 'parameter', 'eventname', 'fromevent', 'eventtype', 'renameemitter', 'guardaddlistener', 'element', 'method', 'check', 'suppliedfunction', 'ensures', 'invoke', 'attemptxstream', 'addlistener', 'stream', 'incorrect', 'method', 'instancescenario', 'typeerror', 'throwfunction']",{'incorrect': 100}
"['event', 'remembersissueoverflow', 'cycle', 'stack', 'preventremember', 'subject', 'usageempty', 'flatten', 'inner', 'stream', 'checklistener', 'inner', 'removingversion', 'release', 'package', 'choreremember', 'subject', 'usagesplit']",{'stack': 100}
"['issue', 'imitateimitation', 'stream', 'mimic', 'target', 'imitateimitateissue']",{'issue': 100}
"['cycle', 'stack', 'imitateoverflow', 'cycle', 'stack']",{'stack': 100}
"['refactor', 'execution', 'cyclic', 'imitatemimicstream', 'rewrite', 'listener', 'fieldtrigger', 'listener', 'imitate', 'startmimicstream', 'target', 'approach', 'imitate', 'usagemimicstream', 'streaminvalidates', 'issue', 'deprecates']",{'issue': 100}
"['small', 'stream', 'member', 'issue', 'privatesimilar', 'member', 'private', 'access']",{'issue': 100}
"['imitatemethod', 'issue', 'mitigate', 'imitatemimicstream', 'stream', 'imitatemimicstream', 'createdmethod', 'imitatetrigger', 'producer', 'stream']",{'issue': 100}
"['extra', 'operator', 'generation']",{'generation': 100}
"['stream', 'array', 'concurrency', 'scheduling', 'array', 'listener', 'iterates', 'reference', 'listener']",{'concurren': 90}
"['takeoperatorwould', 'input', 'concurrent', 'listenerstate']",{'concurrent': 100}
"['readme', 'travis', 'update', 'badgereadme', 'minor', 'generation']",{'generation': 100}
"['content', 'generation']",{'generation': 100}
"['variable', 'chore', 'shorten', 'length', 'underscore', 'debounce']",{'length': 100}
