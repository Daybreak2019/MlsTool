message,fuzzy
"['chunkperformance', 'issue', 'objectparameter', 'chunk', 'changeimplementation', 'streamingbody', 'botocore', 'performs', 'bettermaster', 'botocoredefault', 'chunkmethod']",{'issue': 100}
"['daemon', 'pythonwindow', 'daemon', 'pythonspotify', 'patch', 'daemon', 'address', 'luigi', 'requirement', 'window', 'platform', 'python', 'loosens', 'issue', 'dependency', 'requireslistcomp']",{'issue': 100}
"['problem', 'writelogic', 'correctoperation', 'python', 'compatibleresult', 'different', 'impact', 'behavior', 'arithmetic', 'erroneous', 'python', 'yield', 'permission', 'contrib', 'behaves', 'python', 'warning', 'properlysyntax']",{'permission': 100}
"['style', 'issue']",{'issue': 100}
"['microsoft', 'openpai', 'wrappersupportconfig', 'status', 'token', 'support', 'property', 'abstract', 'commentcorrectexception', 'raiseglobal', 'loggerexpiration', 'integer', 'unittest', 'comment', 'refine', 'cleanuplimit', 'request', 'issue']","{'integer': 100, 'issue': 100}"
"['refactor', 'methodextract', 'methodfunction', 'reuseoptional', 'changereturn', 'number', 'singleinsteadreturn', 'tupleparameter', 'destinationhelper', 'thread', 'reuse', 'funtions', 'paramsconstant']",{'thread': 100}
"['redshift', 'exists', 'schemaallow', 'schematable', 'schemacreate', 'table', 'existsassumption', 'wouldbehaviorwithout', 'potential', 'crash', 'error', 'schematable', 'schema']",{'crash': 100}
"['available', 'cmdlineparser', 'summary', 'execution', 'bugfixtrace', 'luigi', 'stack']",{'stack': 100}
"['append', 'vulnerability', 'usageappend', 'introduce', 'issue', 'followingstatic', 'luigi', 'taskid', 'visualiser', 'instance', 'ealert', 'navigate', 'graph', 'fscript', 'cscript', 'vistypealert', 'displayingappend']",{'issue': 100}
"['possibility', 'redshift', 'specify', 'columnspecify', 'column', 'additional', 'elementaddedsyntax', 'issue']",{'issue': 100}
"['python', 'support', 'minimal', 'wrapper', 'dockerdefaulthandlelevel', 'print', 'debuggingrefractoredmount', 'support', 'tempdir', 'busybox', 'neededbusybox', 'alwaysexception', 'message', 'fallbacklevel', 'image', 'debug', 'loweredextra', 'volume', 'params', 'passedrequirement', 'right', 'level', 'imagemount', 'issue', 'trigger', 'volume', 'method', 'amongst', 'avoidparameter', 'super', 'kwargsauthor', 'additional', 'elipapatarget', 'contributiondaemon', 'present', 'dockerliteral', 'becomedefault', 'dockercontribution', 'module', 'extendedversion', 'docker', 'dependencymount', 'volume', 'renameallow', 'travis', 'service', 'docker', 'dockertask', 'enableproblem']",{'issue': 100}
"['entrypointspotify', 'issue', 'luigiffcfffbbbb', 'obsolete']",{'issue': 100}
"['question', 'template', 'issuesometimes', 'maintainer', 'issue']",{'issue': 100}
"['table', 'verifies', 'assertsummary', 'workerplease', 'insert', 'table', 'selectbetter', 'issuespotify', 'issue', 'luigi']",{'issue': 100}
"['override', 'status', 'scheduler', 'runningzgdxxbgaj', 'relevance', 'luigi', 'searchin', 'forum', 'wciqfnefwy', 'issue', 'stefano']",{'issue': 100}
"['decode', 'reading', 'issue', 'cmdlinespotify', 'luigi']",{'issue': 100}
"['insensitive', 'update', 'table', 'existence', 'check']",{'Sensitive': 90}
"['unpause', 'scheduler', 'pausesometimes', 'happenspipeline', 'issue', 'deploycommit', 'accomplishvisualiser', 'header', 'toggle', 'pauseallow', 'currentlystart', 'scheduler', 'finish', 'anothergivingworker']",{'issue': 100}
"['length', 'state', 'equaldefault', 'value', 'lengthdefault']",{'length': 100}
"['duplicate', 'table', 'exists', 'exceptioncreate', 'table', 'exists', 'issue', 'exception']",{'issue': 100}
"['issue', 'warning', 'document']",{'issue': 100}
"['luigi', 'emotional', 'issue', 'explicit', 'subjective']",{'issue': 100}
"['window', 'pickle', 'issue', 'classdifferent', 'window', 'method', 'issue', 'causetaskprocess', 'status', 'function', 'passedpickleintroduces', 'status', 'class', 'encapsulatepickle']",{'issue': 100}
"['notifier', 'style', 'issue', 'batch']",{'issue': 100}
"['update', 'logic', 'locallocal', 'address', 'issue', 'machineluigiimprove', 'startup', 'performence', 'bugfix', 'massivelyentrylogic', 'behaviorcould', 'perhapsalways', 'possiblealthough']",{'issue': 100}
"['interface', 'buffer', 'string', 'conversion', 'unicode', 'luigi', 'temporary', 'python']",{'buffer': 100}
"['github', 'comment', 'incorrect', 'codecov', 'coveragedisablespotify', 'luigi']",{'incorrect': 100}
"['mergehouzz', 'request', 'mergecache', 'basis', 'thread']",{'thread': 100}
"['class', 'command', 'error', 'issue']",{'issue': 100}
"['column', 'redshift', 'error', 'column', 'length', 'alert', 'method', 'exhaustive', 'elementneither', 'incorrect', 'query', 'valueerror']","{'length': 100, 'incorrect': 100}"
"['readthedocs', 'migration', 'project', 'convertemail', 'project', 'subdomainssubdomains', 'security', 'concern']",{'Security': 100}
"['permission', 'clarify', 'message', 'errorpermission']",{'permission': 100}
"['runningnosetest', 'crash', 'external', 'similar', 'python', 'projectrecent', 'tracebackpackage', 'luigiwritestderrbytesobject', 'buffer', 'attribute', 'attributeerroroverride', 'xunit', 'becuase', 'classbuffersourceplugins', 'master']","{'crash': 100, 'buffer': 100}"
"['bugfix', 'crash', 'specifiedbroke', 'empty', 'value', 'function', 'string']",{'crash': 100}
"['mergerequest', 'stephenpascoe', 'issue', 'dagre']",{'issue': 100}
"['issue', 'dagre']",{'issue': 100}
"['ebabb', 'mergerequest', 'tarrasch', 'mergeconfigs', 'bugfix', 'crash', 'scheduler']",{'crash': 100}
"['configs', 'bugfix', 'crash', 'schedulerallow', 'simplyintparameters', 'value']",{'crash': 100}
"['mergequery', 'request', 'dlstadtherquery', 'postgresquery', 'incorrect', 'usage', 'redshift']",{'incorrect': 100}
"['mergepython', 'tarrasch', 'scheduler', 'issue', 'requestresource', 'scheduler', 'python', 'issue']",{'issue': 100}
"['mergerequest', 'generation', 'mergedocumentation', 'generation']",{'generation': 100}
"['mergemezianemehdi', 'request', 'master', 'equal', 'property', 'option', 'issue', 'contains']",{'issue': 100}
"['mergerequest', 'jeremyjjbrown', 'python', 'issue']",{'issue': 100}
"['python', 'issue']",{'issue': 100}
"['travis', 'issue']",{'issue': 100}
"['mergerequest', 'tarrasch', 'mergesummary', 'execution', 'crash', 'uncomparables']",{'crash': 100}
"['summary', 'execution', 'crash', 'uncomparablesspotify', 'important', 'luigi']",{'crash': 100}
"['proper', 'notificationcommits', 'contains', 'followingtimeouts', 'email', 'luigiemail', 'process', 'normal', 'pygments', 'properremove', 'duplicationclean', 'trace', 'effect', 'stack', 'properlyinternal', 'field', 'workerencode']",{'stack': 100}
"['argument', 'processing', 'parameter', 'normalize', 'passedcompat', 'introduce', 'validation', 'issue']",{'issue': 100}
"['mergerequest', 'tarrasch', 'mergefailure', 'trace', 'print', 'stack']",{'stack': 100}
"['symbolic', 'supportwithout', 'function', 'listdir', 'ignoreresult', 'listdir', 'symlinks', 'symlink', 'incorrect']",{'incorrect': 100}
"['failure', 'trace', 'print', 'stack', 'nestedtrace', 'stack', 'report', 'exceptionexception']",{'stack': 100}
"['mergerequest', 'tarrasch', 'taskname', 'incorrect']",{'incorrect': 100}
"['taskname', 'incorrect', 'mentionmisspell', 'invocationmytaskk', 'param', 'luigicomplain', 'param']",{'incorrect': 100}
"['phantomjs', 'visualiser', 'addingvisualiser', 'toxenvioloop', 'minimise', 'phantomjs', 'thread', 'tornado']",{'thread': 100}
"['version', 'enforceluigid', 'everyspotify', 'detail', 'issue', 'luigi']",{'issue': 100}
"['daemon', 'readthedocs', 'pythonspotify', 'issue', 'luigi']",{'issue': 100}
"['luigi', 'authenticate', 'agent', 'ability', 'session', 'remoteserver', 'prevents', 'remoteopenssh', 'regard', 'mainpage', 'forwardagent', 'warningability', 'agent', 'enabledbypass', 'agent', 'permission', 'domain', 'remoteaccess', 'agent', 'socket', 'localobtain', 'attacker', 'authenticate', 'operation']",{'permission': 100}
"['param', 'unknownimplementation', 'different', 'issue', 'solvesmention', 'luigipositional', 'wonder', 'betteroptparser', 'argument', 'luigidefault', 'argument', 'luigirecent', 'command']",{'issue': 100}
"['adroll', 'luigipipeline', 'luigi', 'article', 'stack']",{'stack': 100}
"['luigi', 'stephenpascoe', 'issue']",{'issue': 100}
"['default', 'luigi', 'initial', 'stephenpascoe', 'issue', 'vistype']",{'issue': 100}
"['current', 'luigi', 'stephenpascoe', 'issue']",{'issue': 100}
"['tooltips', 'luigi', 'action', 'stephenpascoe', 'issue']",{'issue': 100}
"['sidebar', 'luigi', 'graph', 'stephenpascoe', 'issue', 'worker']",{'issue': 100}
"['luigi', 'stephenpascoe', 'issue', 'resource']",{'issue': 100}
"['warning', 'display', 'luigi', 'stephenpascoe', 'issue', 'towardscalculate', 'basis', 'categorynumber', 'accurate', 'family']",{'issue': 100}
"['stephenpascoe', 'issue']",{'issue': 100}
"['parameter', 'buggy', 'objectimplementation', 'parameter', 'currentparameter', 'state', 'issue', 'object', 'containsexample', 'inheritance', 'objectleast', 'parameter', 'usage', 'people', 'mightswitchmytask', 'instantiation', 'somethingconfig', 'family', 'matchparameter', 'example', 'mytask']",{'issue': 100}
"['supportreason', 'example', 'motivation', 'harderunclear', 'config', 'parameter', 'command', 'interplay', 'replacingadditive', 'semantics', 'ordergoogle', 'group', 'thread', 'proposedmaintain', 'addition', 'backward', 'burdenunclearexample', 'comma', 'listify', 'factory', 'object', 'parmeters', 'implementkywhgzddc', 'topic', 'forum', 'luigi']",{'thread': 100}
"['mergeluigi', 'followup', 'soxofaan', 'issue', 'requestglobal', 'style', 'deprecation', 'issue', 'warning']",{'issue': 100}
"['global', 'style', 'deprecation', 'issue', 'warning']",{'issue': 100}
"['external', 'clarify', 'message', 'describe', 'luigi', 'message', 'level', 'developer', 'error', 'terminology', 'issue', 'problem']",{'issue': 100}
"['intermittent', 'failurespotify', 'instance', 'travis', 'luigithink', 'reproducetrace', 'stack']",{'stack': 100}
"['aaecacsoxofaan', 'clientcfg', 'issue', 'support', 'issue']",{'issue': 100}
"['mergesoxofaan', 'scheduler', 'issue', 'request', 'localscheduler']",{'issue': 100}
"['global', 'eliminatedefault', 'global', 'value', 'issue']",{'issue': 100}
"['various', 'snippet', 'update', 'issue']",{'issue': 100}
"['support', 'issue']",{'issue': 100}
"['travisimplementation', 'default', 'travis', 'encryption', 'gcloud', 'credential', 'describedencryptingdefault', 'application', 'protocol', 'identity', 'credential']",{'encryption': 100}
"['method', 'issue', 'luigisingle', 'class', 'abstract']",{'issue': 100}
"['mergerequest', 'jooon', 'socket', 'crash', 'remotescheduler']",{'crash': 100}
"['crash', 'remoteschedulertimeout', 'pythonlater']",{'crash': 100}
"['environment', 'encodinghopefullygabrielfalcao', 'issuecomment', 'httpretty', 'issue']",{'issue': 100}
"['mergescare', 'request', 'tarrasch', 'mergecascadingclient', 'trace', 'scary', 'stack']",{'stack': 100}
"['cascadingclient', 'trace', 'scary', 'stack', 'avoidcommon', 'chainblind', 'stack']",{'stack': 100}
"['timestamps', 'issue', 'serialisingcompatibility']",{'issue': 100}
"['issue', 'stdout']",{'issue': 100}
"['surface', 'issue', 'snakebite']",{'issue': 100}
"['script', 'issue']",{'issue': 100}
"['issue', 'operator']",{'issue': 100}
"['mockfile', 'mocktarget', 'renamedinstead', 'wonder', 'inmemorytarget', 'somethingglobal', 'scope', 'localtarget', 'mocktargetlocalfile', 'constructor', 'issue', 'coverage']",{'issue': 100}
"['weirdrecent', 'reason', 'issue', 'tornado', 'release', 'stabilize']",{'issue': 100}
"['crash', 'kwargs']",{'crash': 100}
"['textformat', 'issue']",{'issue': 100}
"['positional', 'params', 'revert', 'behaviorparameter', 'commits', 'issue', 'major', 'thinkstill', 'backward', 'arbitrary', 'breakspotify', 'behavior', 'intermediete', 'wouldcondition', 'changeparamsparamsglobal', 'thoughparameter', 'somethingchange', 'people', 'developmentchange', 'developmentparamsremove']",{'issue': 100}
"['affec', 'mergespotify', 'history', 'erikbern', 'requesthistory', 'issue']",{'issue': 100}
"['luigid', 'issue']",{'issue': 100}
"['dependency', 'request', 'booshrelates', 'recheck', 'issue', 'dependency']",{'issue': 100}
"['sphinxautopep', 'ignore', 'class', 'blanksqlalchemy', 'import', 'changednecessary', 'sphinx', 'issuesphinx', 'sphinxdescription', 'character', 'parameter', 'severe', 'level', 'error', 'target', 'sphinx', 'unknownwithout', 'blank', 'markup', 'warning', 'explicit', 'sphinxwithout', 'blank', 'markup', 'warning', 'explicit', 'sphinxspotify', 'explicit', 'duplicate', 'target', 'sphinxbroken', 'fixedfixedgoogle', 'luigifixedsource', 'sphinx', 'table', 'sphinx', 'sphinxdocsapi', 'mergeenvironment', 'creates', 'docsapi', 'documentation', 'command', 'generation', 'mightgithub', 'synchronizegithub', 'table', 'sphinx']",{'generation': 100}
"['mergespotify', 'parameter', 'class', 'expose', 'erikbern', 'requestexpose', 'command', 'parameter', 'class']",{'expose': 100}
"['target', 'autopephandy', 'target', 'check', 'autopepleave', 'firstignore', 'length']",{'length': 100}
"['issue', 'anotheraddress', 'documentation']",{'issue': 100}
"['zenlucentdetail', 'issue']",{'issue': 100}
"['detail', 'issue']",{'issue': 100}
"['workerovernight', 'morninghadoop', 'killingwhatever', 'issue', 'weird', 'causedproperty', 'attempt', 'workerproperty', 'default', 'overridden', 'overrideapplies', 'workerseparate', 'process', 'order']",{'issue': 100}
"['reproduce', 'flakyassume', 'travis', 'thing', 'runningparallel', 'accordingdocumentation', 'tempfile', 'condition', 'causeaccess', 'program', 'anotherdirectory', 'temporary', 'issue', 'mkdtemp', 'clarifyingtemporary']",{'issue': 100}
"['spotify', 'revert', 'strategy', 'luigiintroduces', 'directory', 'nestedexternaltasks', 'luigi', 'serious', 'issue', 'culpritschemamkdirluigirmdir', 'luigianytime', 'shorteither', 'externaltask', 'dependencyspotify', 'easiest', 'probablyfolder', 'reprocess', 'output']",{'issue': 100}
"['parallel', 'scheduling', 'various', 'complete', 'checksystem', 'function', 'modifies', 'function', 'workerresult', 'issue', 'orderclient', 'maximum', 'multiprocesscommand', 'minimize', 'wrapper', 'difference', 'objectqueue', 'interface', 'single', 'processor']",{'issue': 100}
"['solution', 'check', 'currentchmod', 'performscommit', 'followingcommit', 'aceefefaeacbefsajana', 'sajan', 'alexander', 'authorcommit', 'cafdcdfcaceedcsajana', 'sajan', 'alexander', 'authorremove', 'permission', 'exists', 'removalcommitsajana', 'sajan', 'alexander']",{'permission': 100}
"['deadlock', 'followingobvious', 'approach', 'problem', 'momentsection', 'atomic', 'operation', 'processdisappears', 'threadpossibility', 'threadstate', 'unusable', 'mutexes', 'moreover', 'mightchildimplementation', 'dependent', 'reset', 'mutexes', 'usablebehave', 'linux', 'mutexes', 'machinelockedthink', 'thread', 'background', 'issue', 'quicklythread', 'getaddrinfostart', 'process', 'child', 'getaddrinfoexample', 'timing', 'child', 'process', 'lockedfound', 'scriptcaafcbbcf', 'andpol']","{'deadlock': 100, 'thread': 100, 'issue': 100}"
"['hadoop', 'native', 'warning', 'librarydefault', 'hadoop', 'native', 'warning', 'apache', 'header', 'compiledlocal', 'openjdk', 'server', 'guard', 'hadoop', 'stack', 'native', 'warning', 'noexecstack', 'execstack', 'libraryimport', 'luigihadoop', 'cache', 'countstdoutprint', 'stdoutlocal', 'openjdk', 'server', 'guard', 'hadoop', 'stack', 'native', 'warning', 'noexecstack', 'execstack', 'librarycache']",{'stack': 100}
"['issue', 'ownerluigistate', 'somethingluigiluigi', 'rwxrwxrwxcommand', 'luigiruntime', 'exceptinchmod', 'luigichown', 'ownerdeletesolution', 'overwrite', 'reliablecreate', 'wouldchown', 'anyoneplatform']",{'issue': 100}
"['ignore', 'modify', 'hadoop', 'native', 'warning', 'librarydefault', 'hadoop', 'native', 'binary', 'header', 'hadoop', 'native', 'class', 'builtin', 'unable', 'applicable', 'librarylocal', 'openjdk', 'server', 'guard', 'hadoop', 'stack', 'native', 'warning', 'noexecstack', 'execstack', 'librarysubprocess', 'stdout', 'stderr']",{'stack': 100}
"['usernamerather', 'wouldtempfile', 'username', 'luigitempfile', 'luigispotify', 'issue', 'common', 'experiencingluigiproductioninteractive', 'waste', 'folder', 'serious', 'productionquite', 'permission']","{'issue': 100, 'permission': 100}"
"['catch', 'child', 'processdiscussion', 'issue']",{'issue': 100}
"['global', 'directory', 'fishy', 'issue', 'exception', 'importexception', 'hadoopsyncmanager', 'processrecent', 'tracebackmultiprocessingmultiprocessingmultiprocessingserver', 'serializermultiprocessingbacklog', 'listener', 'addressmultiprocessingbacklog', 'theory', 'event', 'clean', 'import']",{'issue': 100}
"['multiple', 'workersupport', 'mockfile', 'multiple', 'process', 'scheduler', 'thing', 'relatedbunch', 'error', 'issue', 'machinereplace', 'platform', 'theory', 'doubt']",{'issue': 100}
"['mergespotify', 'request', 'freider', 'mergepickle', 'corrupt', 'state', 'crash']",{'crash': 100}
"['corrupt', 'state', 'crash', 'loadingserver', 'pickle', 'luigi', 'state', 'startup', 'corrupt', 'reason', 'crash']",{'crash': 100}
"['issue', 'cosmetic']",{'issue': 100}
"['mergehouzz', 'request', 'mergeintensive', 'stack', 'rendertasks']",{'stack': 100}
"['intensive', 'stack', 'rendertasks']",{'stack': 100}
"['mergeregister', 'erikbern', 'request', 'issue', 'edeacfbc']",{'issue': 100}
"['issue', 'edeacfbcprevious', 'creation', 'wouldaddedsimpler', 'previous', 'mechanism', 'unregister', 'method']",{'issue': 100}
"['mergeerikbern', 'request', 'timeout', 'issue', 'timeout']",{'issue': 100}
"['issue', 'timeout']",{'issue': 100}
"['mergedaleroberts', 'request', 'master', 'mergehadoop', 'incorrect']",{'incorrect': 100}
"['hadoop', 'incorrect']",{'incorrect': 100}
"['documentation', 'readme', 'event', 'incorrect']",{'incorrect': 100}
"['parameter', 'command', 'issue']",{'issue': 100}
"['dddfcrequest', 'edwardnewett', 'issue', 'reducer']",{'issue': 100}
"['issue', 'reduceribcbfabccebab']",{'issue': 100}
"['configurable', 'luigidadjust', 'section', 'state', 'option', 'schedulerstatespotify', 'luigi', 'issue', 'address']",{'issue': 100}
"['recursive', 'stack']",{'stack': 100}
"['schedulerconfigurable', 'intervalalive', 'accessible', 'method', 'thread', 'worker']",{'thread': 100}
"['atomic', 'hadoopjobrunner', 'revert', 'final', 'output', 'changingcreates', 'empty', 'issue', 'trigger', 'outputreverts']",{'issue': 100}
"['graphluigi', 'print', 'message', 'warning', 'unknownquite', 'thoughspotify', 'issue', 'luigi']",{'issue': 100}
"['implementation', 'spotify', 'issue', 'thoughtaskparameters', 'righthistory', 'vieweravailable', 'history']",{'issue': 100}
"['deadlock', 'stdoutspotify', 'luigi']",{'deadlock': 100}
"['issuespotify', 'issue', 'luigi']",{'issue': 100}
"['issuerunner', 'catch', 'constructor', 'forgot', 'issue', 'module', 'importverify', 'bunch']",{'issue': 100}
"['localtargetspotify', 'issue', 'gerritcompile', 'teamcityerikbern', 'bernhardsson']",{'issue': 100}
"['keyword', 'issue', 'gerritcompile', 'teamcityerikbern', 'bernhardsson']",{'issue': 100}
"['incorrect', 'argument', 'parameter', 'instance', 'dictionary']",{'incorrect': 100}
"['variantthought', 'issue', 'convertingbubble', 'functionality']",{'issue': 100}
"['entire', 'complete', 'process', 'crash', 'notification', 'gerritcompile', 'teamcityanders', 'nyman', 'reviewedfreider']",{'crash': 100}
"['concurrency', 'number', 'thread']","{'concurren': 90, 'thread': 100}"
"['incorrect', 'order']",{'incorrect': 100}
