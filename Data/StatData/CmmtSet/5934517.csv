message,fuzzy
"['requirement', 'issue']",{'issue': 100}
"['request', 'thread', 'deadlock', 'heartbeat', 'consumer', 'timeout']","{'thread': 100, 'deadlock': 100}"
"['length', 'value', 'header']",{'length': 100}
"['block', 'thread', 'sender', 'timeout']",{'thread': 100}
"['issue', 'xfail']",{'issue': 100}
"['admin', 'integration', 'issue', 'travis', 'fixture']",{'issue': 100}
"['internal', 'client', 'interface', 'consumer', 'timeout', 'reduceblock', 'iterator', 'timing', 'attempt', 'issue', 'backoff', 'heartbeat', 'address', 'consumer', 'retry', 'timeout']",{'issue': 100}
"['cachemetadata', 'object', 'issue', 'cluster', 'fetch']",{'issue': 100}
"['thread', 'sender', 'wakeup', 'client']",{'thread': 100}
"['cipher', 'configuration']",{'cipher': 100}
"['attempt', 'thread', 'heartbeat', 'closethread', 'issue', 'attempt', 'connection', 'access', 'error', 'heartbeat', 'crash', 'block', 'object']","{'thread': 100, 'issue': 100, 'crash': 100}"
"['async', 'kafkaconsumer', 'sends', 'synchronize', 'buffer', 'protocol']",{'buffer': 100}
"['kafkaconsumer', 'thread', 'heartbeat']",{'thread': 100}
"['kafka', 'pythonorder', 'kafka', 'issue']",{'issue': 100}
"['safety', 'issue', 'thread', 'metric']","{'issue': 100, 'thread': 100}"
"['broker', 'querykafka', 'queriedquery', 'order', 'broker', 'inverse', 'group', 'query', 'coordinator', 'groupbroker', 'kafka', 'return', 'groupimplementation', 'detail', 'coordinatorbroker', 'describe', 'consumer', 'script', 'offset', 'fetchgroup', 'issue', 'broker', 'clusterissue', 'script', 'couple', 'everysituation', 'matterinterface']",{'issue': 100}
"['attempt', 'heartbeat', 'consumer', 'deadlock']",{'deadlock': 100}
"['consumerrecords', 'record', 'expose', 'header']",{'expose': 100}
"['client', 'deadlock']",{'deadlock': 100}
"['heartbeat', 'thread', 'close', 'start']",{'thread': 100}
"['failure', 'check', 'immediate', 'thread', 'coordinator']",{'thread': 100}
"['kafka', 'thread', 'awake', 'equal', 'heartbeat']",{'thread': 100}
"['indexerror', 'thread', 'pending', 'completion']",{'thread': 100}
"['pinningcheck', 'requirement', 'openingthanks', 'kafka', 'issue', 'issuecomment', 'diligent', 'python']",{'issue': 100}
"['heartbeat', 'thread', 'backoff']",{'thread': 100}
"['security', 'layer', 'gssapi', 'negotiationkafka', 'gssapi', 'timing', 'mechanism', 'connection', 'authenticationbroker', 'kafka', 'noticedauthenticate', 'failedimplementation', 'gssapi', 'client', 'handshake', 'security', 'serverkafka', 'implementation', 'support', 'commitextendedkafka', 'kerberosbroker', 'protocol', 'gssapi']",{'Security': 100}
"['kafka', 'thread', 'process', 'background', 'heartbeat', 'consumer']",{'thread': 100}
"['check', 'falsey', 'equality', 'issue', 'identity']",{'issue': 100}
"['falsesomehow', 'empty', 'state', 'evaluates', 'group', 'false', 'leader', 'additional', 'symptom', 'group', 'empty', 'issue', 'leader', 'trigger', 'condition', 'partition', 'python']",{'issue': 100}
"['issue', 'jeffwidman', 'review']",{'issue': 100}
"['issue', 'decompression', 'assertionerror']",{'issue': 100}
"['safety', 'thread', 'describe', 'consumer']",{'thread': 100}
"['clear', 'exception', 'issue', 'raising', 'memory', 'condition']",{'issue': 100}
"['buffer', 'kafkaproducer']",{'buffer': 100}
"['selector', 'expose', 'config', 'option']",{'expose': 100}
"['issue', 'squelch']",{'issue': 100}
"['thread', 'consumer', 'cleanup']",{'thread': 100}
"['crash', 'iteration']",{'crash': 100}
"['mergerequest', 'mergetruncate', 'message', 'buffer']",{'buffer': 100}
"['message', 'buffer', 'truncate']",{'buffer': 100}
"['zookeeper', 'kafka', 'management', 'fixturedaemon', 'spawn', 'thread', 'fixtureclose', 'interpreter', 'atexit', 'fixture', 'avoidtimeouts']",{'thread': 100}
"['abddc', 'mergerequest', 'mergeproducer', 'support', 'buffer']",{'buffer': 100}
"['producer', 'support', 'buffer']",{'buffer': 100}
"['issue', 'error', 'address', 'timeout']",{'issue': 100}
"['exception', 'issue', 'stopiteration', 'error', 'deserializer']",{'issue': 100}
"['issue', 'simpleclient', 'update']",{'issue': 100}
"['buffer', 'snappy', 'slice', 'python']",{'buffer': 100}
"['ignore', 'pylint', 'buffer', 'memoryview', 'error']",{'buffer': 100}
"['buffer', 'memoryview', 'support', 'python']",{'buffer': 100}
"['daemon', 'thread']",{'thread': 100}
"['buffer', 'default', 'snappy', 'xerial']",{'buffer': 100}
"['mergerequest', 'mergeblock', 'thread']",{'thread': 100}
"['block', 'async', 'thread']",{'thread': 100}
"['import', 'kafka', 'issue']",{'issue': 100}
"['mergemaster', 'bschopman', 'request', 'mergeasync', 'thread', 'prevents', 'producer']",{'thread': 100}
"['async', 'thread', 'prevents', 'producer', 'communicationexception', 'thread', 'occurs', 'uncaughtcrash', 'kafka', 'queue', 'thread', 'communicationresume', 'exception', 'changecould']",{'thread': 100}
"['block', 'simpleconsumerblock', 'message', 'number', 'value', 'integer', 'definesblock', 'message', 'number', 'caller', 'allowsotherwise', 'caller', 'request', 'wouldblock', 'message']",{'integer': 100}
"['kafka', 'issue', 'mumrah', 'pythonlogic']",{'issue': 100}
"['failure', 'thread']",{'thread': 100}
"['fixture', 'thread', 'child']",{'thread': 100}
"['extra', 'thread', 'connection', 'client']",{'thread': 100}
"['issue', 'rebase']",{'issue': 100}
"['issue', 'compatible']",{'issue': 100}
"['mergerequest', 'mergeregister', 'cleanup', 'thread', 'atexit', 'handler', 'producer', 'multiprocess', 'consumer']",{'thread': 100}
"['register', 'cleanup', 'thread', 'atexit', 'handler', 'producer', 'multiprocess', 'consumer']",{'thread': 100}
"['class', 'consumer', 'offset', 'issue', 'multiprocessor', 'consumer', 'servercommit', 'offset', 'accessrefactor', 'unknown', 'setting', 'offset']",{'issue': 100}
"['issue', 'mpconsumer']",{'issue': 100}
"['thread', 'consumer', 'partition']",{'thread': 100}
"['mergemaster', 'chmduquesne', 'request', 'mergecontain', 'object', 'thread']",{'thread': 100}
"['thread', 'reference']",{'thread': 100}
"['thread', 'async', 'producer']",{'thread': 100}
"['issue', 'producer']",{'issue': 100}
"['mergerequest', 'kafkaconsumer', 'expose', 'dinoshauer', 'mergekafkaconsumer']",{'expose': 100}
"['issue', 'package']",{'issue': 100}
"['mergerequest', 'mergetimeout', 'issue', 'behavior', 'simpleconsumer']",{'issue': 100}
"['timeout', 'issue', 'behavior', 'simpleconsumer']",{'issue': 100}
"['zever', 'incorrect', 'format', 'mergeclause', 'error']",{'incorrect': 100}
"['mergerequest', 'buffer', 'multifetch', 'datadog', 'mergeconsumer', 'retry', 'logicconflictkafka']",{'buffer': 100}
"['issue', 'error', 'spurious']",{'issue': 100}
"['stand', 'offset', 'logicclass', 'offset', 'fetch', 'consumerexpose', 'behavior', 'wouldchange', 'consumer', 'expose', 'ability', 'fetchknown', 'similar', 'somethinglonger']",{'expose': 100}
"['mergerequest', 'wizzat', 'mergeerror', 'issue', 'connection']",{'issue': 100}
"['consumer', 'retry', 'logicfollow', 'conditionbuffer', 'instance', 'level', 'fetch', 'responsedouble', 'consumer', 'retry', 'bufferdouble', 'consumer', 'bufferraiselogic', 'buffer', 'instance', 'level', 'fetch', 'responsedouble', 'consumer', 'retry', 'bufferdouble', 'consumer', 'retry', 'bufferrepeat', 'consumer', 'partitionyield', 'consumer', 'messageyield', 'consumer', 'message']",{'buffer': 100}
"['mergerdiomar', 'request', 'mergerather', 'issue', 'argument', 'topic', 'previous', 'producer', 'compatibility']",{'issue': 100}
"['mergemaster', 'vadimg', 'request', 'mergefield', 'format', 'length']",{'length': 100}
"['field', 'format', 'length']",{'length': 100}
"['mergerdiomar', 'request', 'mergevarious', 'changesocket', 'timeouts', 'allowkafka', 'number', 'correctsocket', 'reading', 'expectedremove', 'client', 'bufsizechange', 'errorupper', 'consumer', 'limit', 'optional', 'buffer', 'fetchintegration']",{'buffer': 100}
"['request', 'limit', 'buffer', 'fetch', 'retry', 'crazy', 'message', 'timeouts', 'limit', 'fault', 'buffer', 'client']",{'buffer': 100}
"['beginning', 'integer', 'protocolpayload']",{'integer': 100}
"['mergeunderflow', 'request', 'import', 'jimjh', 'buffer', 'error', 'mergeimport', 'error', 'bufferunderflow']",{'buffer': 100}
"['default', 'local', 'writeensuresince', 'connection', 'behaviouramong', 'thread', 'consumer']",{'thread': 100}
"['producer', 'support', 'asynckafka', 'support', 'mechanism', 'client', 'queue', 'message', 'usingmessage', 'thread', 'queue', 'worker', 'sendingfeature', 'ticket']",{'thread': 100}
"['issue', 'thread', 'argument']","{'issue': 100, 'thread': 100}"
"['thread', 'optimizetimer', 'previous', 'optimizedcommit', 'thread', 'timerblock', 'timer', 'thread', 'finishthread', 'event', 'single']",{'thread': 100}
"['spawn', 'thread', 'necessarymessage', 'timerthread', 'message', 'timer', 'thread']",{'thread': 100}
