message,fuzzy
"['issue', 'update', 'carthage', 'podspecupdate', 'podspec', 'sourcexcode', 'carthage', 'workaround', 'issue']",{'issue': 100}
"['abstraction', 'backpressure', 'stack', 'support', 'observer', 'future', 'tracesubscribercreate', 'observer', 'subscriber', 'operator']",{'stack': 100}
"['issue', 'intermediatefailingissue', 'intermediateupdatebatch', 'failingliftleft']",{'issue': 100}
"['optimizationaddition', 'overflow', 'operatoriterator']",{'overflow': 100}
"['submission', 'coveragecarthage', 'issue']",{'issue': 100}
"['dacfe', 'mergerequest', 'pthread', 'reactivecocoapthread', 'issue']","{'thread': 92, 'issue': 100}"
"['issue', 'debug']",{'issue': 100}
"['beafabuilder', 'reactivecocoa', 'request', 'deadlock', 'aggregate', 'mergedeadlock']",{'deadlock': 100}
"['bddddsafety', 'thread', 'signal', 'reactivecocoa', 'request', 'mergeavoid', 'management', 'signal']",{'thread': 100}
"['mutableproperty', 'reactivecocoamitigate', 'feedback', 'action', 'random', 'async', 'deadlock', 'infinite', 'mutableproperty', 'failure']",{'deadlock': 100}
"['semaphore', 'deadlock']",{'deadlock': 100}
"['deadlock', 'barrier', 'mutableproperty']",{'deadlock': 100}
"['mitigate', 'random', 'async', 'deadlock', 'mutableproperty', 'failure']",{'deadlock': 100}
"['mergereactivecocoa', 'patch', 'request', 'concurrent']",{'concurrent': 100}
"['mergereactivecocoa', 'strategy', 'request', 'concurrent', 'mergeintroduce']",{'concurrent': 100}
"['concurrent', 'limit', 'precondition']",{'concurrent': 100}
"['mergereactivecocoa', 'patch', 'request', 'symlink', 'generation']",{'generation': 100}
"['symlink', 'generation']",{'generation': 100}
"['bbeaesignal', 'reactivecocoa', 'request', 'deadlock', 'mergeterminal', 'signal', 'event', 'condition']",{'deadlock': 100}
"['terminal', 'ensure', 'explicit', 'deinitialize', 'result', 'updatelock', 'event', 'deadlock', 'snapshot', 'state']",{'deadlock': 100}
"['mergereactivecocoa', 'patch', 'request', 'symlink', 'generation']",{'generation': 100}
"['symlink', 'generation']",{'generation': 100}
"['documentation', 'generation']",{'generation': 100}
"['automate', 'documentation', 'generation']",{'generation': 100}
"['mergerequest', 'issue']",{'issue': 100}
"['fdaac', 'mergerequest', 'taquitos', 'mergetimer', 'interval', 'crash', 'producer']",{'crash': 100}
"['timer', 'interval', 'producer', 'seconddevice', 'overflow', 'nanos', 'conversion', 'dispatch']",{'overflow': 100}
"['swift', 'deallocation', 'object', 'enable', 'observation', 'lifetimesignal', 'complete', 'object', 'expose', 'lifetimeanother', 'objectobjective', 'access', 'object', 'property']",{'expose': 100}
"['swift', 'deallocation', 'object', 'enable', 'observation', 'lifetimesignal', 'complete', 'object', 'expose', 'lifetimeanother', 'objectobjective', 'access', 'object', 'property']",{'expose': 100}
"['private', 'buffer']",{'buffer': 100}
"['request', 'buffer', 'usage', 'mergeusage']",{'buffer': 100}
"['mergereactivecocoa', 'request', 'buffer']",{'buffer': 100}
"['action', 'inout', 'modify', 'expose']",{'expose': 100}
"['issue', 'producer']",{'issue': 100}
"['anyproperty', 'crash']",{'crash': 100}
"['incorrect', 'readme']",{'incorrect': 100}
"['readme', 'issue']",{'issue': 100}
"['mergereactivecocoa', 'request', 'buffer', 'deadlock', 'mergeatomic', 'reimplement', 'single']","{'buffer': 100, 'deadlock': 100}"
"['eecbbavoid', 'reactivecocoa', 'request', 'buffer']",{'buffer': 100}
"['specifiy', 'raccommand', 'inputlightweight', 'issue', 'simple', 'raccommand', 'inputtype', 'suffer', 'racsignal', 'input', 'generic', 'attemptingprogrammer', 'ensure', 'catch', 'error', 'command', 'helpful', 'input', 'project', 'usingmight', 'action', 'suggestion', 'raccommand', 'compiler', 'expose']","{'issue': 100, 'expose': 100}"
"['signalproducer', 'flatten', 'clarify', 'signalsignalproducer', 'flatten', 'stream', 'signal', 'signalproducers', 'signal', 'signalproducerssignalproducer', 'lettersobserver', 'noerrornumbersobserver', 'signalproducer', 'noerrorsignalproducer', 'observer', 'signal', 'noerrorprint', 'signalsignal', 'lettersobserver', 'noerrornumbersobserver', 'signal', 'noerrorsignal', 'noerrorprint', 'mergedprintprint', 'nothingprint', 'signal', 'buffer', 'signalsigcobserver', 'signal', 'noerrorsignal', 'noerror', 'sigdobserversignalproducer', 'signal', 'noerrorprint', 'mergedprintprint', 'nothingprint', 'signal', 'buffer']",{'buffer': 100}
"['controversial', 'contextdocumentation', 'operator', 'misuse', 'replay', 'cautious', 'cache', 'contains', 'multicast', 'pattern', 'multiple', 'commoninteger', 'final', 'behaviorsubject', 'subjectobservable', 'integer', 'finalsomewherebehaviorsubject', 'backedlastnumber', 'finalcompile', 'thread', 'comment', 'block', 'propertytype', 'pattern', 'betterwould', 'others', 'alrea', 'event', 'mutableproperty', 'observe', 'party', 'signal', 'question', 'stackoverflow', 'solution', 'immediatelydetailwhether', 'semantics', 'semantics', 'commitsignalproducer', 'operator', 'consistency', 'semantics', 'value', 'point', 'subsequentsignalproducer', 'different', 'value', 'thing', 'weird', 'reference', 'observer', 'version', 'sharedfails', 'error', 'producer', 'subsequent', 'forwardedcompletes', 'observer', 'producer', 'valuesignalproducer', 'subscription', 'observersignalproducer', 'producer', 'subscription', 'replayedsignalproducer', 'version', 'operator', 'operator', 'sense', 'signal', 'multicast', 'importantallows', 'semantics', 'element', 'multicast', 'notice', 'singlethanks', 'possible', 'triedavoid', 'asyncimageview', 'operator', 'nachosoto', 'semantics', 'optimization', 'master', 'framework', 'renderers', 'multiplesignalproducer', 'operator', 'combinelatest', 'subscription', 'thing', 'multiplequestionwould', 'implementation', 'controversial', 'jspahrsummers', 'hearing', 'people']","{'integer': 100, 'thread': 100}"
"['value', 'expose']",{'expose': 100}
"['dedcc', 'mergenachosoto', 'error', 'request', 'fatal', 'mergefatalerror', 'dynamicproperty', 'assert']",{'fatal': 100}
"['tonyarnold', 'productnameframework', 'issue']",{'issue': 100}
"['framework', 'issue']",{'issue': 100}
"['thread', 'generator', 'element', 'revert', 'copyingcommit', 'reverts']",{'thread': 100}
"['availability', 'restore', 'functionalityavailability', 'restore', 'variant', 'macro', 'internal', 'testable', 'scheme', 'directive', 'changeset', 'configuration', 'function', 'expose']",{'expose': 100}
"['signalproducer', 'crash', 'propertyof', 'signal']",{'crash': 100}
"['issue', 'rephrase']",{'issue': 100}
"['buffer', 'todayimportant']",{'buffer': 100}
"['recursive', 'buffer']",{'buffer': 100}
"['mutability', 'warning', 'incorrect', 'compiler', 'workaround']",{'incorrect': 100}
"['mergecapacity', 'reactivecocoa', 'request', 'buffer', 'mergeupdate', 'reflect', 'capacity', 'behavior']",{'buffer': 100}
"['crash', 'compiler', 'optimization', 'workaround']",{'crash': 100}
"['tweak', 'buffer']",{'buffer': 100}
"['mergenorio', 'signal', 'request', 'buffer', 'nomura']",{'buffer': 100}
"['incorrect', 'producer', 'signal', 'comment']",{'incorrect': 100}
"['observer', 'interruptedcould', 'thread']",{'thread': 100}
"['mergelatest', 'reactivecocoa', 'request', 'deadlock', 'mergedeadlock', 'switchtolatest', 'refactor']",{'deadlock': 100}
"['deadlock', 'switchtolatest', 'naive']",{'deadlock': 100}
"['ecdcfissue', 'request', 'rupert', 'nsobject', 'object', 'mergeracdescription', 'issue', 'nsobject', 'object']",{'issue': 100}
"['promoteerrorsseems', 'issue', 'trace']",{'issue': 100}
"['cocoaactionsdevice', 'release', 'crash', 'runtime']",{'crash': 100}
"['mergebugfix', 'request', 'buffer', 'buffer', 'behaviour']",{'buffer': 100}
"['uncurryavoid', 'crash', 'swift', 'runtime']",{'crash': 100}
"['configuration', 'specify', 'releasedetect', 'issue', 'compiler']",{'issue': 100}
"['uncurry', 'combinepreviousavoid', 'crash', 'swift', 'runtime']",{'crash': 100}
"['fbcfc', 'mergerequest', 'crash']",{'crash': 100}
"['uncurry', 'crash']",{'crash': 100}
"['swift', 'crash']",{'crash': 100}
"['refactor', 'functionunless', 'crash', 'runtime', 'function']",{'crash': 100}
"['incorrect', 'interruption', 'terminates', 'startwithsignal']",{'incorrect': 100}
"['issue', 'memory', 'fixingaround', 'guard', 'autorelease', 'scheduledmanage', 'autoreleaseguaranteegeneral', 'documentation', 'operationqueues', 'library', 'conceptual']",{'issue': 100}
"['crash', 'signalproducers', 'swift', 'compiler']",{'crash': 100}
"['concurrent', 'queue', 'barrier']",{'concurrent': 100}
"['thread', 'changealready', 'private', 'serialize', 'sincemutation', 'queue']",{'thread': 100}
"['enabledaround', 'issue']",{'issue': 100}
"['issue', 'implementation', 'reactivecocoa', 'discussion', 'rackvoproxy']",{'issue': 100}
"['error', 'upgrade', 'fatal', 'handler']",{'fatal': 100}
"['expose', 'initializer']",{'expose': 100}
"['buffer', 'replay']",{'buffer': 100}
"['crash', 'racbacktrace']",{'crash': 100}
"['mergerequest', 'issue']",{'issue': 100}
"['method', 'thread', 'disposable', 'osspinlock', 'order', 'osatomic', 'reimplement']",{'thread': 100}
"['implementation', 'unsafe', 'thread']",{'thread': 100}
"['error', 'generation', 'racerror']",{'generation': 100}
"['recursive', 'overflow', 'scheduling']",{'overflow': 100}
"['setkeypath', 'unsafeness', 'thread', 'onobject', 'document']",{'thread': 100}
"['mergeoverflow', 'backtrace', 'reactivecocoa', 'request', 'stack', 'mergeoverflow', 'backtrace', 'chain', 'stack']",{'stack': 100}
"['issue', 'label', 'collaborator', 'applydannygreg']",{'issue': 100}
"['override', 'removeinformation', 'objectseems', 'crash', 'introducedirect', 'issue', 'incidence', 'reduceglobal']","{'crash': 100, 'issue': 100}"
"['depth', 'request', 'stack', 'mergecounter', 'rackvochannel', 'depth']",{'stack': 100}
"['stack', 'depth']",{'stack': 100}
"['disposable', 'ownership', 'conditionanother', 'thread', 'subsequent', 'value', 'opportunity', 'ownershipretain', 'release', 'disposable', 'event', 'performingwould']",{'thread': 100}
"['autorelease', 'precise', 'backtraces', 'stack']",{'stack': 100}
"['thread', 'error', 'arrivingthough', 'deliveron', 'valuelogic', 'specific', 'static', 'couple']",{'thread': 100}
"['ensure', 'thread', 'terminates']",{'thread': 100}
"['mergeflatten', 'crash', 'reactivecocoa', 'request', 'mergecrash', 'flatten', 'refactor']",{'crash': 100}
"['flatten', 'refactor', 'compound', 'crash', 'disposal']",{'crash': 100}
"['incorrect', 'sample']",{'incorrect': 100}
"['thread', 'document', 'requirement']",{'thread': 100}
"['mergethread', 'counter', 'local', 'reactivecocoa', 'request', 'stack', 'mergethread', 'counter', 'stack']",{'stack': 100}
"['mergethread', 'counter', 'local', 'development', 'stack', 'mergeconflictreactivecocoa']",{'stack': 100}
"['variable', 'thread', 'storage', 'local']",{'thread': 100}
"['integer', 'value']",{'integer': 100}
"['thread', 'event']",{'thread': 100}
"['reproduces', 'issue']",{'issue': 100}
"['scheme', 'expose', 'target']",{'expose': 100}
"['mergereactivecocoa', 'window', 'request', 'buffer', 'deprecateclose', 'buffer', 'deprecate', 'windowwithstart']",{'buffer': 100}
"['buffer', 'development']",{'buffer': 100}
"['buffer', 'deprecate', 'windowwithstart']",{'buffer': 100}
"['thread', 'event']",{'thread': 100}
"['dynamic', 'delete', 'generation']",{'generation': 100}
"['synchronization', 'thread', 'reference', 'object']",{'thread': 100}
"['generation', 'function', 'extract', 'signature']",{'generation': 100}
"['stack', 'assert']",{'stack': 100}
"['concurrent', 'scheduler', 'queue', 'support']",{'concurrent': 100}
"['request', 'scheduler', 'expose', 'currentsupport']",{'expose': 100}
"['facaaa', 'mergecurrent', 'development', 'scheduler', 'expose']",{'expose': 100}
"['development', 'scheduler', 'expose', 'mergeconflict']",{'expose': 100}
"['issue', 'review']",{'issue': 100}
"['disposable', 'revert', 'stack', 'enumerationcommit', 'revertsconflictreactivecocoa']",{'stack': 100}
"['thread', 'raccommand']",{'thread': 100}
"['couple', 'thread', 'assertionmight']",{'thread': 100}
"['thread', 'logic', 'raccommand']",{'thread': 100}
"['mergecommand', 'reactivecocoa', 'request', 'concurrency']",{'concurren': 90}
"['issue', 'nserror', 'comparison']",{'issue': 100}
"['arithmetic', 'integer', 'index', 'underflow']","{'integer': 100, 'underflow': 100}"
"['length', 'honor', 'enumeration']",{'length': 100}
"['stack', 'overflow', 'enumeration', 'racsequence']","{'stack': 100, 'overflow': 100}"
"['dccdesafety', 'thread', 'reactivecocoa', 'request', 'mergethread']",{'thread': 100}
"['ndouglascorrect', 'length', 'memmove']",{'length': 100}
"['length', 'memmove']",{'length': 100}
"['repeat', 'concurrency']",{'concurren': 90}
"['mergesafety', 'thread', 'concat', 'reactivecocoa', 'request', 'mergethread', 'concat', 'safety', 'racsignal']",{'thread': 100}
"['thread', 'concat', 'safety', 'racsignal']",{'thread': 100}
"['overflow', 'stack']","{'overflow': 100, 'stack': 100}"
"['overflow', 'racsequence', 'thanks', 'coneko', 'deallocation']",{'overflow': 100}
"['edfac', 'mergethrottle', 'request', 'delay', 'github', 'mergedelay', 'background', 'thread', 'throttle']",{'thread': 100}
"['thread', 'background', 'refactor', 'throttle']",{'thread': 100}
"['thread', 'method']",{'thread': 100}
"['problem', 'timer', 'thread']",{'thread': 100}
"['safety', 'thread', 'toproperty', 'onobject']",{'thread': 100}
"['scheduling', 'thread', 'ensure', 'block', 'occurs', 'delay']",{'thread': 100}
"['background', 'refactor', 'scheduler', 'defaultbehave', 'thread', 'default', 'queue', 'likelihood', 'operation']",{'thread': 100}
"['thread', 'background']",{'thread': 100}
"['unable', 'crash', 'application']",{'crash': 100}
"['queue', 'concurrency', 'memory']",{'concurren': 90}
"['thread', 'coneko', 'dictionary']",{'thread': 100}
"['return', 'concurrent']",{'concurrent': 100}
"['thread', 'expectmatcher', 'trollface', 'failure']",{'thread': 100}
"['thread', 'racsubscriber']",{'thread': 100}
"['overflow', 'libextobjc']",{'overflow': 100}
"['mergerequest', 'github', 'crash', 'mergecrash']",{'crash': 100}
"['expose', 'constructor', 'racsequence']",{'expose': 100}
"['mergemerge', 'concurrent', 'master', 'branchconflict']",{'concurrent': 100}
"['thread', 'safety']",{'thread': 100}
"['expose', 'block']",{'expose': 100}
"['mergeasync', 'request', 'stack', 'github', 'mergebacktraces', 'asynchronous']",{'stack': 100}
"['master', 'stack']",{'stack': 100}
"['master', 'stack']",{'stack': 100}
"['wrapper', 'expose']",{'expose': 100}
"['mergerequest', 'github', 'thread', 'mergerackvowrapper']",{'thread': 100}
"['nsobject', 'completelyswitch', 'target', 'clearer', 'refactoringtarget', 'thread', 'distinction', 'observer', 'unnecessary', 'improves']",{'thread': 100}
"['setting', 'raciosdemo', 'specify', 'targetgithub', 'issue']",{'issue': 100}
"['thread', 'pipingconflictnstask', 'reactivecocoa']",{'thread': 100}
"['expose', 'racasyncsubject']",{'expose': 100}
"['expose', 'header']",{'expose': 100}
"['expose', 'method', 'racvalue', 'return']",{'expose': 100}
"['private', 'header', 'executeblock', 'expose', 'property', 'canexecuteblock']",{'expose': 100}
"['canexecute', 'operation', 'concurrent', 'number']",{'concurrent': 100}
"['expose', 'method']",{'expose': 100}
"['expose', 'lastobject']",{'expose': 100}
