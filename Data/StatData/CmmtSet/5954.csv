message,fuzzy
"['cipher', 'rescue', 'runtimeerror', 'check']",{'cipher': 100}
"['associationmodel', 'thread', 'sequel', 'createsmutex', 'eagerlyquery', 'database', 'access', 'protects', 'actualmutex', 'datasets', 'eagerlyconcurrent', 'eager', 'loadingalways', 'optioneager', 'multipleconcurrent', 'associationassociation', 'sequelcustom', 'association', 'supportoption', 'support', 'updatemutex', 'easiercustommethod', 'eithermutex', 'synchronizeotherwise', 'yieldseparate', 'implementation', 'making', 'refactorsorder', 'preparation', 'eager', 'loadingconcurrent', 'allowenvironment', 'plugin', 'integration', 'adaptereager', 'multiple', 'association']",{'thread': 100}
"['guard', 'betteropenssl', 'cipher', 'couldcipher']",{'cipher': 100}
"['plugin', 'check', 'constraintunintentional', 'corruption', 'column', 'encryptedthree', 'checkgeneral', 'checkfirst', 'patternstartinsensitive', 'searchableminimum', 'check', 'overhead', 'length', 'simplewithout', 'column', 'valid', 'check', 'constraint', 'urlsafedatabase', 'unintentional', 'corruptionfirst', 'check', 'falsenegative', 'check', 'constraintminimum', 'adjusts', 'decrypt', 'check', 'reflect', 'lengthminimum', 'actual', 'column', 'searchableminimum', 'previous', 'searchabledevelopment', 'header']",{'length': 100}
"['value', 'column', 'encryptingcipher', 'valuesupport', 'searchability', 'master', 'searchability', 'usingstill', 'value', 'master', 'unencryptedcipher', 'support', 'rotation', 'reencryption', 'simpleolder', 'support', 'value', 'serializationquery', 'value', 'reencryption', 'searchablestandard', 'index', 'databasecolumn', 'overhead', 'value', 'result', 'encryptingvalue', 'overhead']",{'encryption': 91}
"['issue', 'plugin', 'minor', 'serializationmethod', 'accessors', 'alias', 'overridden', 'message', 'error', 'serialization']",{'issue': 100}
"['query', 'database', 'thread', 'asynchronouslyexecution', 'query', 'latency', 'application', 'especiallyamount', 'large', 'latencydatabase', 'query', 'asynchronousmethod', 'execution', 'block', 'object', 'proxy', 'resultasynchronous', 'datasetmethod', 'dataset', 'result', 'returnmethod', 'query', 'thread', 'desirable', 'current', 'allowquery', 'thread', 'executedatabasedatabase', 'thread', 'option', 'numberquery', 'thread', 'asynchronous', 'executedefault', 'connectionquery', 'support', 'async', 'databasetransactionalobject', 'proxy', 'boolean', 'cornercontext']",{'thread': 100}
"['safety', 'database', 'thread', 'issue', 'possible', 'twiceentry', 'check', 'insidemutex']","{'thread': 100, 'issue': 100}"
"['issue', 'document', 'mysql', 'serverseems', 'servertimezone', 'specifynewer', 'driver', 'olderissue', 'sequel', 'fixedtimezone']",{'issue': 100}
"['disconnect', 'database', 'postgres', 'rescue', 'sequel', 'databaseerrorserror', 'disconnectfuture', 'incorrect', 'result', 'version', 'error', 'resultraise', 'driver', 'error', 'unexpecteddatabase']",{'incorrect': 100}
"['deprecation', 'issue', 'plugin', 'argument', 'sequel', 'warningplugin', 'configureblock', 'argument', 'block', 'problem', 'argument', 'optional', 'causeraise', 'sequel', 'betterissue', 'deprecation']",{'issue': 100}
"['check', 'whitelist', 'plugins', 'blacklist', 'security', 'whetherbetter']","{'blacklist': 100, 'Security': 100}"
"['connection', 'usingfiber', 'thread', 'usage', 'implicitenumeratorenumsbeginstopiteration', 'rescueiterationfiber', 'directfiberblock', 'additional', 'finish', 'datasetsequel', 'result', 'databaseerrorfiber', 'connection', 'multiple', 'adapterstreamingseparate', 'examplefiber', 'tradeoff', 'numbergreater', 'number', 'allowedcheckout', 'fiber', 'connection', 'fiber', 'checkdeadlock', 'fiber', 'automaticalready']",{'thread': 100}
"['method', 'visibility', 'issue', 'adaptermethod', 'publicaccident', 'includedchangemodel', 'privatemethod', 'visibility', 'original', 'alias', 'definingvisibility']",{'issue': 100}
"['sqlite', 'primary', 'option', 'integer']",{'integer': 100}
"['issue', 'plugin', 'loadingplugin', 'sequel', 'shippedapproach', 'handleadditional', 'memory', 'retentionassociation', 'control', 'explicitlyalternative', 'datasetsimilar', 'activerecord', 'strict', 'featurerequires', 'activerecord', 'configuration', 'featureforbid', 'basis', 'datasetplugin', 'sequel', 'identifycould', 'loadingpossible', 'pluginquery', 'application', 'issueplugin', 'resultquery', 'application', 'result', 'exception', 'raisedplugin', 'enablecertainperformance']",{'issue': 100}
"['issue', 'minitest', 'deprecationminitest', 'forcebreak']",{'issue': 100}
"['safety', 'issue', 'thread', 'singleseparate', 'reader', 'typical', 'writersince', 'reader']","{'issue': 100, 'thread': 100}"
"['ancestor', 'plugin', 'descendant', 'disallow', 'associationassociation', 'incorrect', 'resultraise', 'exception']",{'incorrect': 100}
"['sqlite', 'option', 'integer', 'adapter', 'timeout']",{'integer': 100}
"['metadata', 'constraint', 'database', 'delete', 'table', 'validation', 'issue', 'table', 'prevents']",{'issue': 100}
"['method', 'object', 'procs', 'conversion', 'singleton', 'plainobject', 'singleton', 'method', 'plainapproach', 'benchmark', 'fastestfaster', 'conversion', 'sqlite', 'integer']",{'integer': 100}
"['safety', 'thread', 'travis', 'jruby']",{'thread': 100}
"['database', 'column', 'sqlite', 'integer', 'sequel', 'bigint', 'copyingsqlite', 'integer', 'supporterror', 'integer', 'result', 'usinglarge', 'contains']",{'integer': 100}
"['array', 'savepoints', 'update', 'savepointsavepointarray', 'savepoints', 'containshandle', 'specify', 'entryobject', 'management', 'stack', 'savepoint']",{'stack': 100}
"['thread', 'connection', 'access', 'mannerpositive', 'thread', 'documentation', 'connectioninstance']",{'thread': 100}
"['travis', 'concurrent', 'restriction', 'version', 'removeconcurrent']",{'concurrent': 100}
"['concurrent', 'travisconcurrent', 'loaderror', 'addedthough']",{'concurrent': 100}
"['cache', 'plugin', 'column', 'default', 'option', 'value', 'previouslydefault', 'incorrect', 'result', 'behaviorstill']",{'incorrect': 100}
"['mergebranch', 'mwpastore', 'integer', 'sequel']",{'integer': 100}
"['sequel', 'integer', 'inline']",{'integer': 100}
"['behavior', 'operator', 'expression', 'inversion', 'incorrect', 'resultinvertinginversion', 'invertquery', 'inversionboolean', 'arity', 'operatorright']",{'incorrect': 100}
"['documentation', 'safety', 'issue', 'plugin', 'thread']","{'issue': 100, 'thread': 100}"
"['object', 'plugin', 'multiple', 'result', 'distinct', 'happensduplicate', 'handleprevious', 'incorrect', 'resultobject', 'certain', 'eager', 'result', 'skippingmethod', 'object']",{'incorrect': 100}
"['issue', 'frozen', 'string', 'literal']",{'issue': 100}
"['issue', 'local']",{'issue': 100}
"['connection', 'avoiddeadlock', 'connection', 'issuedisconnect', 'database', 'issue', 'option', 'implementarray', 'store', 'connectionmethod', 'disconnect', 'checkrequires', 'disconnect', 'regularmutex', 'occurs', 'usingrelatedmethod', 'ensuremaximum', 'number', 'connection', 'assumethread', 'connectionblock', 'previouslyotherwise', 'connection', 'timeout']",{'issue': 100}
"['safety', 'thread', 'support', 'separate', 'store', 'avoidtimerinstead', 'delayrandom', 'float', 'behavioralways', 'integer']","{'thread': 100, 'integer': 100}"
"['integer', 'treatingamongdefault', 'integerenvironment', 'variableintegration', 'bitwise', 'postgresqlbigintcheck']",{'integer': 100}
"['integer', 'appropriatelyraise', 'error', 'postgresqlbigint']",{'integer': 100}
"['serial', 'column', 'identity', 'identity', 'column', 'implementprimary', 'issue', 'various', 'previous', 'goingapproach', 'serial', 'usingprimary', 'sequence', 'grant', 'usagetable', 'grant', 'insert', 'handledserial', 'column', 'default', 'valuerelatedcreate', 'share', 'tablesequence', 'column', 'identity', 'alteralter', 'sequence', 'columnsequence', 'autogeneratedissue', 'serial', 'default', 'identity', 'usingcause', 'changerecent', 'testingidentity', 'support', 'option', 'columncause', 'problem', 'significantapplication', 'backwards', 'smallpeople', 'thing', 'compatibilitycontinue', 'serial', 'postgresqlmethod', 'force', 'serial', 'default', 'identityprimary']",{'issue': 100}
"['mutex', 'thread', 'possible', 'consideredcould', 'migrator', 'different', 'databasedifferentlonger', 'private', 'removereturn', 'behavior', 'changeobject', 'migration', 'classbackwards', 'populateincompatible', 'variable', 'instance', 'modifiesmigration', 'store', 'constant', 'class']",{'thread': 100}
"['sensitive', 'issue', 'postgres', 'value', 'adapter']","{'Sensitive': 100, 'issue': 100}"
"['caughtissue', 'thread', 'default']",{'thread': 100}
"['mysql', 'datasetplaceholder', 'check', 'order', 'connection', 'mysql', 'adapterquery', 'placeholder', 'number', 'connectionmethod', 'generation', 'datasetconnection', 'checkedentire', 'generationjeremyevans']",{'generation': 100}
"['postgres', 'warning', 'adapter', 'avoidrollback', 'behavior', 'sequelfailure', 'rollback', 'actuallycause', 'closerollback', 'warns', 'issue', 'postgresqlmethod', 'postgres', 'supportwhether', 'connection', 'transactionreturn', 'connection', 'outsideconnection', 'outsidehesistentregard', 'client', 'serverthink', 'status']",{'issue': 100}
"['conversion', 'smallint', 'mysql', 'integer']",{'integer': 100}
"['jruby', 'buffer', 'writetocopy', 'lengthoriginal', 'length', 'input', 'passedreturn', 'character', 'singlewould', 'actual', 'server']","{'buffer': 100, 'length': 100}"
"['mutex', 'thread', 'connectionpool', 'usingcaller']",{'thread': 100}
"['registration', 'plugin', 'thread', 'serialization', 'format']",{'thread': 100}
"['identifier', 'database', 'injection', 'schema', 'security']","{'injection': 100, 'Security': 100}"
"['safety', 'thread']",{'thread': 100}
"['earlierlongerstate', 'message', 'deprecation', 'update', 'update', 'blacklist', 'securitywithout', 'deprecation']",{'blacklist': 100}
"['direct', 'table', 'separate', 'usingsince', 'issue', 'couple', 'alias', 'optionuncoverassurance', 'additional', 'behavior']",{'issue': 100}
"['tinytds', 'incorrect', 'adapter', 'comment']",{'incorrect': 100}
"['safety', 'issue', 'thread', 'postgres', 'adapterdeprecates', 'postgres', 'usingpostgresql', 'minor', 'optimization', 'adapterallocate']","{'issue': 100, 'thread': 100}"
"['thread', 'adapterwithout', 'adapterthread', 'autoid', 'dataset']",{'thread': 100}
"['subclass', 'table', 'alias', 'option', 'incorrect', 'insertinghierarchyemployee', 'classpluginemployee', 'manager', 'classseparate', 'manager', 'insert', 'tablealias', 'option', 'insertprimary', 'class', 'check']",{'incorrect': 100}
"['function', 'quote', 'unlessmethod', 'block', 'deprecation', 'virtual', 'support', 'functionstart', 'function', 'breakfunction', 'thing', 'incorrect', 'function', 'unlessexplicitlyprevious', 'behaviorfunction', 'likely', 'functionsensitive']",{'incorrect': 100}
"['support', 'deprecation', 'issue', 'sequel', 'deprecationanyone', 'stucksequel', 'problem']",{'issue': 100}
"['subquery', 'support', 'datasets', 'issue', 'subclass', 'column', 'alias', 'option', 'wrapping', 'ambiguousmodel', 'datasets', 'issue', 'joinedmodel', 'problem', 'column', 'sequel', 'ambiguoussimpler', 'workaroundsdatabase', 'query', 'optimize']",{'issue': 100}
"['issue', 'warning', 'deprecationplugin', 'finder']",{'issue': 100}
"['custom', 'plugin', 'context', 'validatingsomewhat', 'similar', 'featuremodel', 'model', 'validate', 'sequel', 'anotheroverridden', 'designedinstance', 'validation', 'variable', 'contextcallingotherwise', 'approach', 'frozen', 'nicermethod', 'validation', 'custommultiple', 'thread', 'context']",{'thread': 100}
"['schema', 'option', 'integer', 'actual', 'usingdatabase', 'leastdatabase', 'bigint', 'actualbigserial', 'specify', 'columntranslate', 'generic', 'bignum', 'specifyingdatabase', 'option', 'actual', 'usingbignum', 'integer', 'sequelinstead', 'bignum']",{'integer': 100}
"['safety', 'issue', 'thread', 'plugin', 'thread', 'modifies', 'associationseparate']","{'issue': 100, 'thread': 100}"
"['reflection', 'associationruntime', 'information', 'definition', 'classdefinedeverytime', 'behavior', 'issue', 'sequel', 'reflection', 'associationlookup', 'option', 'class', 'associationclass', 'thread', 'lookupmutex', 'association', 'mutex', 'indirection', 'reflection', 'association', 'simplemethod', 'specifyingassociation', 'option', 'allowsbetter', 'performance', 'thingmethod', 'retrieval', 'speed', 'association', 'smalldatasets']","{'issue': 100, 'thread': 100}"
"['class', 'levelsafety', 'thread', 'issue']","{'thread': 100, 'issue': 100}"
"['adapteroperates', 'database', 'freezinglonger', 'changearray', 'approach', 'basic', 'internaldatastructures', 'access', 'statementmethod', 'threaddatabase', 'cache', 'instance', 'instance', 'exists', 'ensuremethod', 'return', 'connection', 'instance', 'production', 'instancesafety', 'thread', 'issue', 'modifyexternal', 'override', 'database']","{'thread': 100, 'issue': 100}"
"['thread', 'postgres']",{'thread': 100}
"['modification', 'thread']",{'thread': 100}
"['incrementor', 'thread', 'autoid', 'information', 'insteadinstance']",{'thread': 100}
"['documentation', 'issue', 'dataset', 'update']",{'issue': 100}
"['model', 'specifies', 'object', 'serverstatement', 'issue']",{'issue': 100}
"['utfmb', 'innodb', 'limitation', 'default', 'migrator', 'mysql', 'timestamp', 'length', 'engine', 'charset']",{'length': 100}
"['primary', 'column', 'sqlite', 'schema', 'information', 'integer', 'differentavoids', 'override', 'strategy']",{'integer': 100}
"['datasets', 'setting', 'columnsince', 'clone', 'cache', 'dataset', 'modifiedclone', 'thread', 'creator', 'usingthread']",{'thread': 100}
"['support', 'falseseveral', 'clone', 'dataset', 'module', 'modifyobject', 'additional', 'extendcloneimplementation', 'simplifies', 'clone', 'instance', 'thread', 'previouslyimplementation', 'variable', 'current', 'instance', 'store', 'updatemodify', 'variable', 'column', 'instance']",{'thread': 100}
"['fixnum', 'custom', 'reference', 'trigger', 'warning', 'fixnum', 'avoidmethod', 'reference', 'integer', 'fixnummodify', 'fixnum', 'constant', 'reference']",{'integer': 100}
"['figure', 'issue', 'table']",{'issue': 100}
"['safety', 'issue', 'thread', 'threadsafety', 'implementation']","{'issue': 100, 'thread': 100}"
"['database', 'thread']",{'thread': 100}
"['rollback', 'plugin', 'issue', 'memory', 'largemodel', 'instance', 'single']",{'issue': 100}
"['generation', 'support', 'column', 'table', 'schema', 'mysql']",{'generation': 100}
"['model', 'rollback', 'method', 'database', 'instance', 'overriddendefault', 'previous', 'leastbenchmarkingfaster', 'createsperformance', 'decreasethink', 'falsebetteradvantage', 'transactioncommit', 'rollbackperformance', 'transaction', 'issue', 'default', 'multipleevery', 'object', 'memory', 'closure', 'transactionmodel', 'rollback', 'switch', 'model', 'usingdatabase', 'levelbreak', 'backward', 'compatibilityreturn', 'insteaddefault', 'value', 'settinginstead', 'overridden', 'treatingfalse']",{'issue': 100}
"['sqlite', 'option', 'support', 'columnsqlite', 'column', 'ignoredcolumn', 'option', 'incorrect', 'result', 'usingattempt', 'sqlite', 'error', 'syntaxeasier']",{'incorrect': 100}
"['refactor', 'disconnect', 'connectionprivate', 'connectionpool', 'methoddefault', 'block', 'driver', 'underlyingmodifyextensionrelatedloadingthread', 'overwriteextension', 'multiplemethod', 'thread']",{'thread': 100}
"['support', 'operator', 'argument', 'string', 'integer', 'validation', 'support', 'constraintbasic', 'inequality', 'string', 'validation', 'integerpossible', 'argument']",{'integer': 100}
"['support', 'bignum', 'integer', 'genericfixnum', 'alias', 'bignumbignumbignumchange', 'bignum', 'meaningchange', 'integer', 'reference', 'wouldreference', 'integer', 'startbackwardswithout', 'break', 'constantapproach', 'sequel', 'bignum', 'genericanother', 'classmethod', 'bignum', 'addinghandle', 'unfortunatelythough', 'approach', 'createssymbol', 'bignum', 'treatedsymbol', 'treatedanyone', 'specific', 'backwards', 'compatibleanyone', 'benefit', 'doubtthinkaffect', 'changeversion', 'sequel', 'modifygeneric', 'bignum']",{'integer': 100}
"['derby', 'issue', 'frozen', 'string', 'literal']",{'issue': 100}
"['database', 'issue', 'jruby', 'frozen', 'string', 'literal', 'postgresql']",{'issue': 100}
"['issue', 'frozen', 'string', 'jruby']",{'issue': 100}
"['condition', 'support', 'preconnectoriginal', 'thread', 'patchcould', 'modify', 'connection', 'changeseparate']",{'thread': 100}
"['thread', 'connection', 'preconnect', 'option']",{'thread': 100}
"['issue', 'template']",{'issue': 100}
"['vulnerability', 'injection', 'inadvertent', 'filter', 'string', 'input', 'plainmethod', 'vulnerability', 'sequel', 'generalalert', 'raising', 'string', 'error', 'plainsomethingdefaultextension', 'usage', 'recommendsecurity']",{'injection': 100}
"['issue', 'plugin', 'injection']","{'issue': 100, 'injection': 100}"
"['memory', 'avoidpeople', 'issue', 'mistake', 'smile', 'sequel', 'followup', 'jeremyevans']",{'issue': 100}
"['issue', 'database']",{'issue': 100}
"['issue', 'update', 'adapter', 'frozen', 'string', 'oracle', 'ibmdb']",{'issue': 100}
"['safety', 'thread', 'mentionlonger', 'sequel']",{'thread': 100}
"['method', 'support', 'sensitive', 'mssql', 'schema', 'server']",{'Sensitive': 100}
"['issue', 'oraclecould', 'dataset']",{'issue': 100}
"['query', 'issue', 'subadapter', 'subadapterssubadapter', 'query', 'issuedquery', 'convertor', 'woulddefault', 'setup']",{'issue': 100}
"['issue', 'workarounds', 'update', 'minitest']",{'issue': 100}
"['thread', 'status']",{'thread': 100}
"['sqlite', 'autoincrement', 'restoreschemasqlite', 'problemautoincrement', 'place', 'sqlite', 'integer', 'autoincrement', 'sqlitesqlite', 'primary', 'reuse', 'removingchange', 'thing', 'schema', 'modification']",{'integer': 100}
"['issue', 'changelog', 'update']",{'issue': 100}
"['primary', 'integer', 'composite']",{'integer': 100}
"['primary', 'fdbsqlschema', 'information', 'fdbsqlserial', 'column', 'whetherprimary', 'behavior', 'default', 'integer']",{'integer': 100}
"['primary', 'integer', 'oracle', 'incrementingvalue', 'trigger', 'oracleparse', 'information', 'oracle', 'possiblenumber', 'default', 'integer', 'setting']",{'integer': 100}
"['schema', 'information', 'primary', 'columnimplementation', 'common', 'adaptersqlite', 'actuallythough', 'primary', 'integer']",{'integer': 100}
"['number', 'database', 'preconnect', 'connection', 'option', 'maximumdatabase', 'connectingdatabase', 'latencypreconnect', 'wouldnumber', 'database', 'connection', 'maximum', 'number', 'createsconnectionpossible', 'queue', 'usingarray', 'thread', 'option', 'simpleconnection', 'consistency', 'testingalready', 'return', 'methodsingle', 'option', 'publicmethod', 'introduce', 'conditiondatabase', 'making', 'option']",{'thread': 100}
"['empty', 'regression', 'sqlite', 'returnedinstead', 'instance', 'getbytes', 'return', 'lengthwasnull', 'check', 'catch', 'sqlite', 'returnempty', 'karoldetailissue', 'activerecord', 'jruby', 'adaptersqlite', 'xerial', 'issue']",{'issue': 100}
"['sqlite', 'parsingsqlite', 'string', 'usingconversiondetail', 'followingissue', 'activerecord', 'jruby', 'adaptersqlite', 'xerial', 'issue']",{'issue': 100}
"['query', 'fdbsql', 'logic', 'automatic', 'retrydatabase', 'previous', 'adapterseems', 'tableremoval', 'additional', 'trigger', 'relatedstale', 'preparedaffect', 'issue', 'production', 'environment', 'issuingconcurrent']",{'issue': 100}
"['fdbsql', 'disconnect', 'issue']",{'issue': 100}
"['filter', 'numeric', 'expression', 'string', 'allowslater', 'literalizationcreate', 'allowsplaceholder', 'issue', 'usingstringobjectobject', 'directlyobject']",{'issue': 100}
"['issue', 'examplesyntax', 'example', 'validissue']",{'issue': 100}
"['association', 'removeobject', 'association', 'arraydelete', 'creatingarray', 'issue', 'google']",{'issue': 100}
"['primary', 'issue', 'plugin', 'validation', 'composite', 'associationmodel', 'primary', 'foreign', 'previous', 'resultedcould', 'value', 'objectprimary', 'simple', 'compositeprimary']",{'issue': 100}
"['basic', 'issue', 'grammar', 'associationcommit', 'gferguson']",{'issue': 100}
"['deadlock', 'sqlstate', 'postgresqldeadlock', 'sequel', 'error', 'databaseerrorinstead', 'sequel', 'raiseddeadlock', 'sqlstate']",{'deadlock': 100}
"['issue', 'constructor', 'commits', 'minorclone', 'constructor', 'overridesinceoverride', 'plugins', 'updateinstead']",{'issue': 100}
"['model', 'recursive', 'mutex', 'issue', 'jruby', 'dataset', 'sequel', 'usingalready', 'modelmodel', 'reasondefault']",{'issue': 100}
"['support', 'database', 'concurrent', 'option', 'refresh']",{'concurrent': 100}
"['instruction', 'update', 'readmesimilar', 'issue', 'sequel', 'sstephenson', 'beginner', 'instruction', 'install', 'project', 'readme']",{'issue': 100}
"['massive', 'array', 'parser', 'speedup', 'postgresqlarray', 'parser', 'refactors', 'postgresqlsplit', 'array', 'input', 'multibyteprocess', 'character', 'parser', 'refactorsrecursion', 'stack', 'reorder', 'condition', 'reduceinlines', 'simple', 'thing', 'methodspeedarray', 'single', 'withinversion', 'sequel', 'license', 'postgres', 'extensionrefactor', 'thinksimilarity', 'postgres', 'sequel']",{'stack': 100}
"['column', 'varchar', 'array', 'valuearray', 'precision', 'integer', 'doublebreak', 'thing', 'double', 'previouslydatabase', 'retrievaloption', 'supportarray', 'option', 'registeringreuse', 'database']",{'integer': 100}
"['object', 'plugin', 'presence', 'foreign', 'presence', 'wouldobject', 'parent', 'validationparent', 'object', 'available', 'foreign', 'valueobject', 'parent', 'savedforeign', 'parent', 'objectdummy', 'primary', 'value', 'validation', 'issue']",{'issue': 100}
"['eager', 'offset', 'respect', 'value', 'incorrect']",{'incorrect': 100}
"['security', 'function']",{'Security': 100}
"['support', 'transaction', 'thread']",{'thread': 100}
"['tinytds', 'support', 'procedure', 'generalizeinstead', 'dataset', 'adapter', 'genericsymbol', 'return', 'datasets', 'specificsymbol', 'mssql', 'adapterconnect', 'necessary', 'modificationoutput', 'possibility', 'injection', 'variable', 'quotingvariable', 'consistent']",{'injection': 100}
"['issue', 'changelog', 'number', 'reference']",{'issue': 100}
"['executecolumn', 'reference', 'table', 'integer', 'alteroperation', 'separate', 'splitforeign', 'constraintquery']",{'integer': 100}
"['model', 'datasets', 'plugin', 'people', 'datasets', 'issue', 'columnmodel', 'reason', 'column', 'table', 'overridingdatasets', 'occurs', 'selection', 'default', 'sequelsince', 'dataset', 'selection', 'default', 'sensedefault', 'return', 'sequel', 'record', 'value', 'adapterorder', 'previous', 'joinedmodel', 'column', 'tableusage', 'common', 'result', 'columnvalue', 'columnmodel', 'insteaddefault', 'activerecord', 'tablemodel', 'plugin', 'column', 'sequel', 'resultactiverecord', 'tablemodel', 'column', 'tablecolumn', 'tablegeneral', 'model', 'column', 'tablecolumn']",{'issue': 100}
"['block', 'deletes', 'constraint', 'issue', 'tablehappen', 'delete', 'wouldconstraint', 'validation', 'wouldsetup', 'constraintinformation', 'plugin', 'reflection']",{'issue': 100}
"['initial', 'sybase', 'sqlanywheredatatypes', 'default', 'smallint', 'sequel', 'adapter', 'boolean', 'sqlanywheresince', 'native', 'overridden', 'boolean', 'sqlanywheredatabase', 'method', 'dataset', 'leveldatabase', 'overridesequel', 'falsefalseovverride', 'specific', 'adapterintegrationforeign', 'uniqueness', 'sqlanywhere', 'implicitlywithout', 'constraint', 'constraintintegrationarray', 'information', 'foreign', 'parseinnodb', 'index', 'unique', 'integer', 'engineinnodb', 'index', 'unique', 'integer', 'engineforeign', 'uniqueness', 'foreign', 'composite', 'uniquenessuniqueness', 'foreign', 'exists', 'constraintintegrationconstraint', 'unique', 'foreign', 'unnamedinteger', 'engine', 'innodbfalse', 'integer', 'engine', 'innodbforeign', 'uniqueness', 'column', 'table', 'foreign', 'removesince', 'sqlanywhere', 'columnunless', 'constraint', 'column']",{'integer': 100}
"['initial', 'sybase', 'sqlanywheredatatypes', 'default', 'smallint', 'sequel', 'adapter', 'boolean', 'sqlanywheresince', 'native', 'overridden', 'boolean', 'sqlanywheredatabase', 'method', 'dataset', 'leveldatabase', 'overridesequel', 'falsefalseovverride', 'specific', 'adapterintegrationforeign', 'uniqueness', 'sqlanywhere', 'implicitlywithout', 'constraint', 'constraintintegrationarray', 'information', 'foreign', 'parseinnodb', 'index', 'unique', 'integer', 'engineinnodb', 'index', 'unique', 'integer', 'engineforeign', 'uniqueness', 'foreign', 'composite', 'uniquenessuniqueness', 'foreign', 'exists', 'constraintintegrationconstraint', 'unique', 'foreign', 'unnamedinteger', 'engine', 'innodbfalse', 'integer', 'engine', 'innodbforeign', 'uniqueness', 'column', 'table', 'foreign', 'removesince', 'sqlanywhere', 'columnunless', 'constraint', 'column']",{'integer': 100}
"['primary', 'parse', 'sqlite', 'compositesqlite', 'output', 'pragma', 'changedprimary', 'integer', 'composite']",{'integer': 100}
"['eager', 'offsetraiseddatabase', 'supportoffset', 'incorrect', 'result']",{'incorrect': 100}
"['security', 'method']",{'Security': 100}
"['issue', 'dataset', 'expression', 'alias', 'possibleattack', 'database', 'denial', 'service', 'possible', 'removealready', 'alias', 'inputsecurity', 'delete']",{'issue': 100}
"['stack', 'connection', 'queue', 'defaultoption', 'stackprevious']",{'stack': 100}
"['table', 'separatelytimestamp', 'table', 'existancesince', 'separate', 'knowledge', 'table', 'migrator', 'integer']",{'integer': 100}
"['thread', 'sequel', 'attempt', 'thread', 'manuallyappears', 'threadmanual', 'sequel']",{'thread': 100}
"['model', 'method', 'deprecate', 'plugin', 'blacklist', 'security', 'basedfuture', 'column', 'setter', 'blacklist', 'security']","{'blacklist': 100, 'Security': 100}"
"['thread', 'statement', 'preparecould', 'statement', 'preparecalledsince', 'thread', 'local', 'workingclone']",{'thread': 100}
"['migration', 'check', 'iterate', 'false', 'integer']",{'integer': 100}
"['valid', 'columndatabase', 'query', 'integer', 'error', 'uniquenessdefeat', 'column', 'purpose', 'integer', 'check', 'validate', 'uniqueness', 'skippingmodel', 'object', 'behavior', 'changeuniqueness', 'error', 'entryvalidation']",{'integer': 100}
"['query', 'issue', 'database', 'plugin']",{'issue': 100}
"['plugin', 'corner', 'handleknown', 'corner', 'handledefault', 'enableperformance', 'substantial', 'breakingadvantage', 'pluginsmodel', 'generation']",{'generation': 100}
"['security', 'dataset', 'issue']","{'Security': 100, 'issue': 100}"
"['warning', 'methodinstance', 'unintializedsequel', 'issue', 'value', 'uninitializedinstance', 'usage']",{'issue': 100}
"['documentation', 'issue']",{'issue': 100}
"['security', 'guideoverview', 'basic', 'issue']","{'Security': 100, 'issue': 100}"
"['decimal', 'column', 'float', 'integer', 'strictregard', 'float', 'sequel', 'integer', 'strictmethod', 'float', 'integerstrict', 'decimal', 'validity', 'strictmethod', 'decimal', 'float', 'value', 'strictfaster', 'value', 'invalid', 'input', 'determinesfloat', 'loose', 'looser', 'updateplugin', 'float', 'behavior', 'decimal', 'loose', 'integer', 'strictsettingrefactor']",{'integer': 100}
"['option', 'float', 'allowuseful', 'integer', 'mostlysince', 'sleep', 'testingsecond']",{'integer': 100}
"['issue', 'documentation']",{'issue': 100}
"['vulnerability', 'addresslibrary', 'vulnerable', 'object', 'denial', 'service', 'unsafeupgrade', 'option', 'usingnewer', 'optionlibrary', 'vulnerablebehavior', 'sequelextension', 'plugins', 'sequellibraryextensionextensionplugin', 'serializationpluginanalysis', 'impactextension', 'performanceparse', 'reason', 'array', 'integer', 'postgresqlcommit', 'behavior', 'arbitrary', 'database', 'objectobject', 'previous', 'dependedmodel', 'return', 'woulddesign', 'mistakemethod', 'class', 'addedextra', 'substitutemethod', 'arbitrary', 'association', 'previous', 'behavior', 'spitereturn', 'previous', 'behavior']","{'vulnerable': 100, 'integer': 100}"
"['exception', 'sequel', 'deadlock', 'support', 'buildseparate', 'exception', 'classbeneficial', 'prone', 'serializationdatabase', 'sequel', 'support', 'testingissue']",{'deadlock': 100}
"['database', 'thread']",{'thread': 100}
"['number', 'columnfilter', 'number', 'columnissue', 'simplifies', 'ambiguous', 'greatlynumber', 'columnnegative', 'speed', 'slightquery', 'column', 'requirequery', 'subqueries', 'mitigatedsubquery', 'issue', 'limit', 'causewindow', 'support', 'microsoft', 'reason', 'subqueriesplenty', 'support', 'strategy', 'adaptersince']",{'issue': 100}
"['column', 'booleans', 'mysql', 'adapter', 'tinyint', 'treatingcolumn', 'tinyintinstead', 'integer']",{'integer': 100}
"['rollback', 'exception', 'attempt', 'occurs', 'committingbelieve', 'rollback', 'database', 'automaticallysqlite', 'appearattempt', 'rollback', 'failedconstraint', 'issue']",{'issue': 100}
"['mutex', 'recursive', 'greatlyrecursive', 'mutex', 'result', 'concurrency', 'reducesrequires', 'validation', 'connectionvalidation']",{'concurren': 90}
"['deeceb', 'mergeissue', 'mssql', 'munkyboy', 'foreignissue', 'determinismforeign', 'composite', 'handlecolumn', 'incorrect', 'resultalways', 'column', 'entryorder', 'foreign', 'alwayssince', 'determinismresult']",{'incorrect': 100}
"['minor', 'safety', 'database', 'thread', 'issue', 'schema']","{'thread': 100, 'issue': 100}"
"['bignum', 'integer', 'access']",{'integer': 100}
"['length', 'character', 'access']",{'length': 100}
"['expression', 'insensitive', 'support', 'accesssensitive', 'accesssensitive']",{'Sensitive': 90}
"['access', 'adapterraise', 'exception', 'integer', 'symbolinteger']",{'integer': 100}
"['plugin', 'optimizesince', 'number', 'lookup', 'closurealready', 'reflectionmethod', 'lookup', 'value', 'outsideexcess', 'separate', 'associationright', 'singular', 'combination', 'compositecommit', 'decent', 'optimize', 'conversion', 'integer']",{'integer': 100}
"['safety', 'issue', 'thread', 'potential', 'postgresqlgeneral', 'previous', 'similar', 'changerequire', 'postgres', 'adapter', 'database', 'thread', 'multipleattempt', 'update']","{'issue': 100, 'thread': 100}"
"['dataset', 'mysql', 'adapter', 'basis', 'settingmethod', 'differentdiffers', 'mysql', 'override', 'datasetmethod', 'makingmethod', 'mysql', 'fieldmysql', 'whereasarity', 'differentoverride', 'mysqlmethodfieldsuperinteger', 'force', 'castingsettingboolean', 'force', 'castingsettingprocs', 'conversion', 'handledmysql', 'tinyint', 'flexible', 'adapterboolean', 'column', 'tinyintoverride', 'mysqlmethodoverride', 'mysql', 'flexibleboolean', 'integer', 'defaultdefaultalways', 'adapterdefineboolean', 'mysql', 'enable', 'tinyintalready', 'oversight', 'guess']",{'integer': 100}
"['filter', 'uniqueness', 'option', 'customalready', 'blockmodel', 'uniqueness', 'subsetactive', 'uniqueness', 'necessary', 'actualdatabase', 'insensitive', 'uniqueness', 'validationsensitiveinstead', 'option', 'defaultinsensitive', 'uniqueness', 'custom', 'uniqueness', 'validationexclusion', 'postgresql']",{'Sensitive': 90}
"['mergecleanup', 'issue']",{'issue': 100}
"['check', 'constraint', 'column', 'integer']",{'integer': 100}
"['eccee', 'mergeforeign', 'explicit', 'integerdefaultspecify', 'explicitlydatabase', 'changedefault', 'integer', 'lookingoverride', 'adaptercleanup', 'dedesite', 'reflect']",{'integer': 100}
"['primary', 'integer', 'example']",{'integer': 100}
"['rename', 'issue', 'looser', 'bundler']",{'issue': 100}
"['rename', 'reader', 'issue', 'boolean', 'bundler']",{'issue': 100}
"['method', 'rename', 'issue', 'bundlerbundlermethod', 'bundlerusage', 'display', 'bundlerissue']",{'issue': 100}
"['digit', 'integer', 'value', 'unsignedregard', 'integer', 'column', 'signedbigint', 'target']",{'integer': 100}
"['description', 'incorrect']",{'incorrect': 100}
"['stale', 'connection', 'queue', 'option', 'chance', 'reduceinstead', 'sequel', 'stack', 'queuearray', 'fasterarray', 'chance', 'increase', 'connection', 'matterdefault', 'possible', 'versionstack', 'specificdesire']",{'stack': 100}
"['implementation', 'transaction', 'safety', 'issue', 'thread', 'adapter']","{'issue': 100, 'thread': 100}"
"['implementation', 'transaction', 'safety', 'issue', 'thread', 'database', 'possiblethread', 'actualsafety', 'jruby']","{'issue': 100, 'thread': 100}"
"['implementation', 'safety', 'issue', 'thread', 'database']","{'issue': 100, 'thread': 100}"
"['implementation', 'safety', 'issue', 'thread', 'database']","{'issue': 100, 'thread': 100}"
"['implementation', 'safety', 'issue', 'thread', 'database', 'schema']","{'issue': 100, 'thread': 100}"
"['basic', 'safety', 'thread', 'sequel', 'document']",{'thread': 100}
"['implementation', 'safety', 'issue', 'thread', 'plugin']","{'issue': 100, 'thread': 100}"
"['implementation', 'statement', 'safety', 'issue', 'thread']","{'issue': 100, 'thread': 100}"
"['implementation', 'safety', 'issue', 'thread', 'plugin']","{'issue': 100, 'thread': 100}"
"['implementation', 'safety', 'issue', 'thread', 'plugin', 'possibleimplementation', 'association', 'valueexternal', 'backwards', 'incompatible']","{'issue': 100, 'thread': 100}"
"['implementions', 'safety', 'issue', 'thread', 'possible', 'associationbelieve', 'safety', 'issue', 'thread', 'happenattempt', 'changemutex', 'synchronizemodern', 'versionthread', 'private', 'multiplemethod', 'subhash', 'access', 'reflectionentire', 'synchronize', 'access', 'reflection', 'refers', 'thingissue']","{'issue': 100, 'thread': 100}"
"['implementation', 'safety', 'issue', 'thread', 'subclass', 'plugin']","{'issue': 100, 'thread': 100}"
"['class', 'safety', 'issue', 'thread', 'database', 'object', 'database', 'object', 'instance', 'sequelmodel', 'anonymous', 'sequel', 'usingmodel', 'sequel', 'entryolder', 'version', 'jrubyissue', 'version', 'jruby', 'construct', 'database', 'object', 'sequel', 'simple', 'protectcommit', 'accessstructure', 'mutable', 'globalprotectsimilar', 'safety', 'thread', 'possible', 'cornerdifficultdiscover']","{'issue': 100, 'thread': 100}"
"['future', 'variable', 'jruby', 'instance', 'assigncould', 'equal', 'jrubyobject', 'modify', 'sequel', 'connectionnative', 'connectionsequel', 'jrubyobject', 'proxy', 'manuallyobject', 'connectionsince', 'object', 'proxy', 'performancedatabase', 'switch', 'single', 'usingmutex', 'safety', 'thread', 'connection']",{'thread': 100}
"['sqlite', 'bignum', 'integer', 'bigint', 'genericchose', 'sqlite', 'bignum', 'clearlonger', 'descriptionhandle', 'current', 'adapterissue']",{'integer': 100}
"['issue', 'database', 'dataset', 'neveranother', 'activerecord', 'featureobject', 'patterncreate', 'issue', 'dataset', 'nullify', 'datasetextends', 'dataset', 'corner', 'adapterstandard']",{'issue': 100}
"['model', 'typecast', 'support', 'schema', 'parsingwithout', 'column', 'assumes', 'parser', 'schema', 'integerraise', 'array', 'integer', 'errorarray', 'integer', 'convertarray', 'automatic', 'limitingnative']",{'integer': 100}
"['numeric', 'array', 'string', 'literalizingunlike', 'postgresqlmulti', 'numeric', 'dimensional', 'string', 'varchar', 'dimensional', 'integer', 'singleparser', 'activerecord', 'postgresmulti', 'array', 'dimensional', 'stringobvious', 'corner', 'regexpparser', 'float', 'postgres', 'parser', 'javascriptparserbelieve', 'arbitrary', 'decimal', 'supportprecisioninstead', 'literalizationsince', 'array', 'sequel', 'postgres', 'registeringprocs', 'conversion', 'array', 'pgarray', 'pgarray', 'stringarray', 'pgarray', 'delegateclassarray', 'instance', 'sequelarray', 'pgarray', 'extensionhandle', 'schema', 'model', 'levelprobablysupport', 'current', 'array', 'native', 'postgres', 'changeprocs', 'future', 'native', 'postgresminor']",{'integer': 100}
"['postgres', 'minornumeric', 'integer', 'column', 'number']",{'integer': 100}
"['method', 'yield', 'available', 'connectioncommand', 'connectionmutex', 'yieldingmethod', 'recursiveoperate', 'thread', 'connection', 'resultmethod']",{'thread': 100}
"['people', 'multiplethought', 'connection', 'slightgiven', 'transforms', 'actual', 'server', 'shardmethod', 'server', 'shardmethod', 'different', 'server', 'definedshard', 'default', 'array', 'thread', 'localdefault', 'stack']","{'thread': 100, 'stack': 100}"
"['column', 'sqlite', 'float', 'integer', 'value', 'columnclass', 'column', 'value', 'storageclass', 'float', 'integer', 'storagesubjectconvertstore', 'sqlite', 'value', 'integer', 'booleanrecommends', 'value', 'integer', 'storageinteger', 'converteddatetime', 'store', 'integer', 'storagesqltime', 'datetimesince', 'sqlite', 'booleanssqlite', 'store', 'database', 'settingboolean', 'value', 'usingnative', 'sqlite', 'integer', 'adapterbooleansdefault', 'versionbooleans', 'desireddefaultcustom', 'procs', 'conversion', 'sqlite', 'adaptermodifiedfloat']",{'integer': 100}
"['derby', 'issue', 'aggressive', 'derbyrefactor', 'checkdefault']",{'issue': 100}
"['permission', 'column', 'table', 'handlepotential', 'error', 'reducefaster', 'permissionquite', 'tablepermission', 'tablestill', 'falserescue', 'standarderrorpossible']",{'permission': 100}
"['issue', 'permission', 'default', 'critical', 'sequelraise', 'default', 'errorprovide', 'ignore', 'error']","{'issue': 100, 'permission': 100}"
"['table', 'reference', 'sqlite', 'foreign', 'emulation', 'emulation', 'tablereplace', 'support', 'turning', 'sqlite', 'transactionrequire', 'table', 'command', 'emulation', 'alternegative', 'foreign', 'handlingforeign', 'necessarydefault', 'support', 'turnedthanks', 'issue', 'peterse', 'yorick']",{'issue': 100}
"['insensitive', 'ensure', 'operator', 'collationoperates', 'database', 'order', 'column', 'ensurenecessary', 'specify', 'insensitive', 'mannerinsensitive']",{'Sensitive': 90}
"['sensitive', 'sqlite', 'microsoft', 'insensitive', 'ilike', 'serversqlite', 'microsoft', 'sequel', 'behave', 'serversensitive', 'ilikecorrect', 'support', 'check', 'integrationsupportmicrosoftsensitive', 'collate', 'clauseargument']",{'Sensitive': 90}
"['model', 'speed', 'object', 'instantiationmodel', 'method', 'closureoverride', 'class', 'issue', 'plugin', 'causeearlier', 'dataset', 'pointmethod', 'classoverride', 'plugins']",{'issue': 100}
"['insensitive', 'value']",{'Sensitive': 90}
"['support', 'transaction', 'generic', 'subadapters', 'savepointobject', 'savepointsimple', 'savepoints', 'unnamedstack', 'stack', 'entry']",{'stack': 100}
"['refactor', 'corner', 'internals', 'transactiondatastructure', 'transaction', 'internalbasis', 'thread', 'transactionseparate', 'threadtransactionhappen', 'usingdifferent', 'connection', 'transactiontransaction', 'level', 'local', 'causesavepoints', 'problem', 'database', 'object', 'separate', 'usingsimultaneouslymostlysupport', 'transaction', 'connection', 'support', 'transaction', 'connectionallows', 'savepointthread', 'localfuture', 'expansion', 'transactionprettyarray', 'tranactions', 'thread', 'changingdatabase']",{'thread': 100}
"['integer', 'number', 'oraclehorrible', 'scaleinteger', 'scaletimestamp']",{'integer': 100}
"['subadapter', 'schema', 'oracleinstead', 'integer', 'parse', 'columndatetime']",{'integer': 100}
"['integration', 'oraclerequires', 'recursive', 'column', 'oraclemethod', 'datasetexplicit', 'column', 'changemethod', 'return', 'habit', 'oraclevalue', 'integer', 'bigdecimalvalue', 'bigdecimal', 'specificidentity', 'integer']",{'integer': 100}
"['people', 'press', 'thread', 'production', 'sequel']",{'thread': 100}
"['issue', 'limit', 'subqueries', 'offset', 'usinglimit', 'mysqlquery', 'subquery', 'nestedsupport', 'emulate', 'mssql', 'offset', 'subquery', 'singlefirst', 'subquery', 'offset', 'supportmssql', 'module']",{'issue': 100}
"['check', 'issue', 'column', 'dataset', 'falseemulate', 'column', 'tableoffset', 'emulation', 'cleaneager', 'limit', 'strategy']",{'issue': 100}
"['minor', 'statement', 'issue', 'ibmdb', 'autocommitfails', 'statement']",{'issue': 100}
"['insert', 'speed', 'integer', 'return', 'translation']",{'integer': 100}
"['primary', 'quote', 'database', 'issue', 'table', 'composite', 'dummy', 'ibmdb']",{'issue': 100}
"['issue', 'typecast', 'timezone', 'thing', 'similarregard', 'sequel', 'timezoneobject', 'changeapplication', 'provideobject', 'alwaysdifferentresult', 'fractionalissue', 'datetime', 'objectreturn', 'datetime']",{'issue': 100}
"['issue', 'postgres', 'adapterhappen', 'block', 'ensure', 'raisedexception']",{'issue': 100}
"['primary', 'typecast', 'plugin', 'column', 'value', 'integer', 'providedarray', 'string', 'oftenissue']",{'integer': 100}
"['model', 'making', 'statementrequires', 'designedbasic', 'statement', 'issue', 'security', 'implicitlydefault', 'present', 'column', 'table', 'subsetdefault', 'column', 'statementstatement', 'insert', 'updateprimary', 'column', 'wouldattack', 'statement', 'denial', 'servicepossible', 'columnalwaysdefault', 'insert', 'default', 'databasedefault', 'sequel', 'columninsert']","{'issue': 100, 'Security': 100}"
"['thread', 'transaction']",{'thread': 100}
"['thread', 'rubinius', 'transactionhandle', 'thread', 'jrubypossiblethread', 'neverdefault', 'thread', 'process', 'terminatesthink', 'somethingtaken', 'coderrrdanger', 'beware', 'transaction', 'activerecord', 'threadkillsqlite', 'subadapter', 'rubinius', 'dataobjectsthread', 'tinytds', 'adapter']",{'thread': 100}
"['switch', 'github', 'issue', 'google', 'tracker']",{'issue': 100}
"['simpleinstead', 'incorrect', 'behaviornumeric', 'switch', 'integer', 'usingtimestamp', 'migration']","{'incorrect': 100, 'integer': 100}"
"['issue', 'changelog', 'sqlite']",{'issue': 100}
"['manual', 'adaptersupport', 'internal', 'sqlite', 'translationswitch', 'sqlite', 'system', 'adapterthough', 'mysql', 'similar', 'postgresqlinstead', 'string', 'integer', 'usingbackwards', 'timestamp', 'sequel', 'compatibilityepoch', 'field', 'datetime', 'integer', 'singlethink', 'thing', 'integer', 'complicatedanyone']",{'integer': 100}
"['minor', 'issue', 'postgres', 'adapter']",{'issue': 100}
"['standard', 'primary', 'foreign', 'identity', 'composite', 'associationwould', 'composite', 'inspectcould', 'object', 'incorrect', 'association', 'checkinstead', 'class', 'currentmodel', 'common', 'matter', 'sharemodel', 'separate', 'matterchangelog', 'update']",{'incorrect': 100}
"['issue', 'datetimetimestamps', 'plugin', 'pending', 'integration']",{'issue': 100}
"['driver', 'serverspecifies', 'metadata', 'getcolumns', 'incorrect', 'resultcolumnthrow', 'usingavoids', 'column', 'getobjectforum', 'thread', 'reference', 'sqldataaccess']","{'incorrect': 100, 'thread': 100}"
"['sqlite', 'primary', 'plugin', 'integerprimary', 'integer', 'returnprimary', 'insert', 'pluginstandard', 'primary', 'check', 'entryinsertsuper', 'sequel']",{'integer': 100}
"['class', 'issue', 'variable', 'anonymous', 'warning']",{'issue': 100}
"['patch', 'cleanup', 'issue', 'plugin', 'nateware']",{'issue': 100}
"['insensitive', 'migration']",{'Sensitive': 90}
"['migration', 'migrator', 'timestampedcommit', 'migrator', 'integermigrator', 'splitsubclassmaintains', 'migrator', 'applysubclass', 'migration', 'basedmigration', 'cornertimestamp', 'migration', 'migration', 'systemraise', 'sequel', 'exceptiontimestamp', 'specific', 'migratingmigrate', 'migrationtimestamp', 'target', 'table', 'formatmigrationformattarget', 'style', 'integer']",{'integer': 100}
"['support', 'number', 'provider', 'updatedappearsthough', 'integer', 'number', 'insteadquery', 'number', 'subadapter', 'mssql', 'secondbelieve', 'explicit', 'connection', 'providerdefault', 'connection', 'providerfailure', 'reduces', 'suite', 'unhandledsqlncli']",{'integer': 100}
"['number', 'numeric', 'decimal', 'column', 'integer', 'column', 'number', 'oraclenumericissue', 'numeric', 'decimal', 'columncolumn', 'integersince', 'support', 'decimal', 'large', 'senseinstead', 'integer', 'columnoverride', 'genericdatabase', 'adapterinstead', 'mssql', 'adapter', 'option', 'behavior', 'scaleapproach', 'refactor', 'supportbigdecimal', 'discoverednumeric', 'column', 'provideelement', 'database', 'option', 'scalesince', 'integer', 'columnstandard', 'postgresqlprovide', 'option', 'operatesdecimal', 'integer', 'field']",{'integer': 100}
"['resultset', 'metadataresultset', 'metadata', 'close', 'issue', 'database', 'cursor', 'error']",{'issue': 100}
"['support', 'database', 'pragma', 'thread', 'option', 'sequel', 'previouslysupport', 'thread', 'sqlite', 'pragmas', 'settingmethod', 'database', 'thread', 'thread', 'option', 'supportoption', 'pragmasthread', 'connectionmodification', 'native', 'connection', 'sqlite', 'adaptersqlite', 'modification', 'pragmaobject', 'connection', 'statementconnectionamount', 'enable', 'pragmaspragma', 'fallout', 'unlessorder', 'suite', 'changeinteritance', 'class', 'plugin', 'table', 'droppingdisable', 'specificallyoption', 'falsebreak', 'backwards', 'allowsgreater', 'consistency']",{'thread': 100}
"['database', 'pragma', 'available', 'sqlite', 'modifies', 'accessorpragma', 'modification', 'operationreason', 'thread', 'sqlite', 'group', 'intersectionmodification', 'connectiondatabase', 'option', 'insidethread', 'option', 'callingsimple']",{'thread': 100}
"['check', 'dumper', 'schema', 'mysql', 'integer', 'adapter', 'boolean', 'tinyint']",{'integer': 100}
"['primary', 'issue']",{'issue': 100}
"['issue', 'string']",{'issue': 100}
"['internal', 'reentrantcertain', 'thread', 'result', 'requiringrequire', 'mutex', 'thread', 'alreadyhappen', 'sequelsimilar', 'transaction', 'design', 'connection', 'reentrancyyield', 'thread']",{'thread': 100}
"['major', 'thread', 'connection', 'changecommit', 'changeconnectionpool', 'sequel', 'single', 'classhierarchy', 'combination', 'thread', 'sequel', 'singlestandard', 'supportingcommit', 'purpose', 'peopledefault', 'connectionpenalty', 'functionality', 'option', 'serverdefault', 'connection', 'additiondefault', 'contains', 'connectionschedule', 'option', 'serverdatabase', 'emptyadditional', 'afterwardanother', 'connection', 'changeexception', 'standarderror', 'runtimeerrorsalready', 'adapter', 'turnedthinkremoval', 'changeblock', 'disconnection', 'accessorsinitialize', 'argument', 'connectionpoolspecifiedoptionconnectionlonger', 'insteadreturn', 'subclass', 'optionlonger', 'sequel', 'constantcommit', 'sequeldriver', 'thread', 'adapter', 'operatemethod', 'couple', 'module', 'sequel', 'introducesthread', 'versionstandard', 'thread', 'version', 'requirepossible', 'error', 'changeplugin', 'custompossible', 'examplemutex', 'thread', 'sequelextension', 'plugins', 'requirecommit', 'smallquery', 'empty', 'connection', 'string', 'parameter', 'insteadlonger', 'option', 'passedpresent', 'additional', 'database', 'optionoriginal', 'passedinitializeversion', 'database', 'default']",{'thread': 100}
"['issue', 'statement', 'performanceperformance', 'statement', 'cache', 'versionpossible', 'aroundthanks', 'susumurequires', 'custom', 'adapter', 'smallstatement', 'native']",{'issue': 100}
"['sensitive', 'database']",{'Sensitive': 100}
"['plugin', 'default', 'option', 'break', 'backwards', 'compatibilityoctober', 'default', 'validation', 'generalizes', 'supportdefault', 'override', 'global', 'levelsequel', 'format', 'pluginsmessage', 'incorrect', 'format', 'mergebasis', 'override', 'classmodel', 'album', 'sequel', 'classpluginmessage', 'incorrect', 'formatprivateremove', 'constantmethod', 'instance', 'private', 'removechangeinstance', 'privatethough', 'methoddefault', 'consumer']",{'incorrect': 100}
"['associationissue', 'attribute', 'object', 'field', 'modifycould', 'disassociate', 'allowdifferent', 'associate', 'record', 'currentsecurity', 'present', 'issue', 'likelyhappen', 'associationdefault', 'primary', 'fieldvulnerability']",{'issue': 100}
"['refactor', 'module', 'timezone', 'supportthread', 'allowsdefault', 'override', 'timezone', 'globalthread', 'applicationtimezones', 'request', 'executedatabase', 'example', 'commonstore', 'application', 'alwaystimezone', 'currentthreadextension', 'designedextensionmethodoverride', 'sequelmethod', 'checktimezone', 'thread', 'local', 'relatedtimezone', 'thread', 'default', 'localglobaldefault', 'special', 'globalthread', 'timezone', 'localinstead', 'thread', 'value', 'localorder', 'support', 'module', 'sequelextends', 'sequel', 'timezonesextension', 'namedtimezonesextends', 'moduleextends', 'extensionmethod', 'private', 'addedimplementation', 'allowextension']",{'thread': 100}
"['float', 'integer', 'float', 'integerstrict', 'looserdatabase', 'extendmodule', 'sequel', 'loadingsequel']",{'integer': 100}
"['method', 'argument', 'additionalmethod', 'column', 'update', 'amongst', 'exampleclassvaluepatch', 'group', 'thread', 'sequel', 'afeea']",{'thread': 100}
"['thread', 'procedure', 'procedure', 'thread', 'procedure', 'thread', 'procedure', 'argument', 'result', 'support', 'database', 'adapter', 'mysql', 'planningutils', 'adapter']",{'thread': 100}
"['connection', 'string', 'specify', 'section', 'connectiondatabase', 'postgresdatabase', 'value', 'compatibility', 'false', 'single', 'settingdatabase', 'typecastingdetermine', 'default', 'sequel', 'significantspecify', 'thread', 'neededthink', 'settingcloser', 'behavior']",{'thread': 100}
"['increase', 'performance', 'native', 'select', 'mysql', 'adapternative', 'optimizes', 'inner', 'mysql', 'adapterredundant', 'eliminatesseparate', 'integer', 'increase']",{'integer': 100}
"['polymorphic', 'issue']",{'issue': 100}
"['dataset', 'integer', 'check']",{'integer': 100}
"['variable', 'initialization', 'sequel', 'adapter', 'modify', 'removemethod', 'adapter', 'resetmethod', 'statement', 'specificsafety', 'thread', 'issuenewer']",{'thread': 100}
"['unlikely', 'class', 'validationdefault', 'subclass', 'stomp', 'thread', 'ensurebackwards', 'minor', 'compatibilitymethod', 'class', 'validation', 'levelsince', 'block']",{'thread': 100}
"['issue', 'firebird']",{'issue': 100}
"['connectionthanks', 'track', 'sequel', 'connection', 'similar', 'thread', 'wouldmethod', 'reason', 'connectionreleasedalways', 'ensure', 'apparentlyrequest', 'thread', 'checkrelease', 'approach', 'threadright', 'thread', 'connectionaround', 'clean', 'expectmodest', 'situation', 'single', 'changehappen', 'multithreadedtrack', 'connection', 'countimpact', 'performancefuture', 'simplifiesblock', 'block', 'connectionrelease', 'connection', 'changemutex']",{'thread': 100}
"['thread', 'connection', 'connectionpool']",{'thread': 100}
"['issue', 'model']",{'issue': 100}
"['issue', 'index', 'parsingbroken', 'adaptermethod', 'index', 'mysql', 'adaptermethod', 'sqlite', 'index', 'adapterprimary', 'indexmodify', 'adapter']",{'issue': 100}
"['constant', 'plugin', 'variable', 'environment', 'associationassociation', 'sequelmemory', 'usage', 'removemodel', 'plugin', 'validation', 'classassociationcommitcould', 'association', 'pluginthink', 'namespace', 'changeworth', 'model', 'certain', 'association', 'allowsclassmodel', 'association', 'sequel', 'requiremodel', 'association', 'sequelcommit', 'issue', 'probablyremoval', 'transform', 'transformschange', 'willingforgetmethod', 'class', 'order', 'issue', 'validationaddedplugin', 'class']",{'issue': 100}
"['dataset', 'exists', 'optionmethod', 'numerous', 'option', 'seriousdatasets', 'clone', 'option', 'forcingmethod', 'dataset', 'option', 'reason', 'option', 'passedimplementation', 'expose']",{'expose': 100}
"['import', 'deprecate', 'integer', 'dataset']",{'integer': 100}
"['allowcastingschema', 'specify', 'database', 'class', 'specificobject', 'changehandlingextract', 'function', 'similarfunction', 'futureaddition', 'string', 'integer']",{'integer': 100}
"['minor', 'style', 'issue', 'changelog', 'procedure', 'update', 'mysql']",{'issue': 100}
"['string', 'invaliddatabase', 'rescue', 'argumenterrors', 'wouldcommit', 'float', 'integer', 'changechange', 'rescue', 'error', 'reraise']",{'integer': 100}
"['issue', 'sqlite', 'support', 'smallcommit', 'sqlite', 'checkalready', 'temporary', 'tabledefault', 'quote', 'stringquote']",{'issue': 100}
"['incorrect', 'readme']",{'incorrect': 100}
"['issue', 'example']",{'issue': 100}
"['support', 'class', 'database', 'schema', 'specific', 'translationdatabase', 'requestaccept', 'aheadsupportstringintegerfixnumbignumfloatbigdecimaldatetimenumerictrueclassfalseclassfixnum', 'columnstringspecify', 'string', 'symbol', 'classsupport', 'adapter', 'postgresqldefaultdatabase', 'override', 'description', 'columnmethod', 'schema', 'modification', 'meaning', 'compatibilitysince', 'string', 'sequel', 'insidekernel', 'instance', 'private', 'previouslyreason', 'compatibilityalready', 'string', 'syntaxcreate', 'string', 'float', 'integer', 'returnraisedcommit', 'expansion', 'integrationgeneric', 'sequel', 'testingdatabase', 'sqlite', 'failsvalue', 'support', 'mysql', 'leastsubadapter', 'usingfails', 'reason', 'column', 'timestamp', 'value', 'embeddedcommit', 'native', 'update', 'sqlite', 'adapterprecision', 'double', 'columncommit', 'conversion', 'support', 'javasqlbigdecimal', 'javamath']",{'integer': 100}
"['subselects', 'placeholder', 'support', 'statement', 'statement', 'preparedplaceholder', 'issue', 'dataset', 'preparedstatement', 'issue', 'statementcommitargument', 'dataset', 'preparefirst', 'private', 'dataset', 'subselectnecessary', 'magicsupport', 'requiredinstance', 'argument', 'mapperarray', 'usingsimpler', 'mappinggenerallonger']",{'issue': 100}
"['procedure', 'mysql', 'adaptercommit', 'database', 'support', 'similar', 'statement', 'similar', 'callabledatabase', 'dataset', 'levelfirst', 'param', 'tabletablefirst', 'fourthmysql', 'support', 'adapterdatabase', 'expose', 'support', 'database', 'procedure', 'preparedimplementation', 'statement', 'datasetexecute', 'clone', 'dataset', 'overridingfunction', 'option', 'relateddatabase', 'request', 'dataset', 'multiple', 'adapterrequire', 'procedure', 'issue', 'fixedstatement', 'mysql', 'multiple', 'wouldmessage', 'error', 'command', 'causesupport', 'recoverable', 'mysql', 'adapterattempt', 'mysql', 'adapter', 'connectingsocket', 'mysql', 'adapter']","{'expose': 100, 'issue': 100}"
"['string', 'interval', 'integer']",{'integer': 100}
"['column', 'dataset', 'information', 'option', 'modify', 'modifiesharmless', 'workaroundclone', 'dataset', 'acceptdifferent', 'problemdesign', 'issue', 'column', 'place', 'causefewer', 'issue', 'design', 'column', 'section', 'ensurecolumn', 'dataset', 'previous', 'column']",{'issue': 100}
"['generation', 'schema', 'foreign', 'mysql', 'composite']",{'generation': 100}
"['issue', 'connection']",{'issue': 100}
"['issue', 'postgres', 'jrubyallow', 'smallstill', 'jruby', 'hopefullydatabase', 'datasetdatabase', 'initialize', 'specific', 'postgresql', 'pickingcommit', 'postgrespostgresqlcommit', 'database', 'handletimestamp', 'javasql', 'literalization']",{'issue': 100}
"['model', 'method', 'typecast', 'class', 'default', 'instance', 'value', 'integer', 'value', 'sequelempty', 'express', 'field', 'string', 'integergiven', 'option', 'developmentstrict', 'display', 'featuremessage', 'error', 'behavior', 'sequelnormal', 'bettermodifiableinstance', 'levelsequel', 'falsefalseartistfalse']",{'integer': 100}
"['postgres', 'unbreak', 'setting', 'postgresqlbyteas', 'string', 'incorrect', 'especiallypostgres', 'support']",{'incorrect': 100}
"['stringmethods', 'support', 'insensitive', 'patternextension', 'postgresql', 'insensitive', 'ilike', 'mysql', 'possiblyfilter', 'particular', 'blocklessdefault', 'customize', 'syntaxdatabase', 'supportoption', 'supportstringmethodsdefault', 'insensitive', 'mysql', 'matchdefault', 'refactor', 'patternsupport', 'regexp', 'sqlite', 'insensitiveascii', 'ilike', 'leastraise', 'regexp', 'sqlite', 'error', 'patternalter', 'refactor', 'enable', 'patternschema']",{'Sensitive': 90}
"['documentation', 'finalsince', 'issue', 'inflector', 'alias', 'removeinflector', 'sequel', 'expecteddifferent', 'module', 'somethingarray', 'renamearraydatabase', 'return', 'fetch']",{'issue': 100}
"['value', 'mysql', 'integer', 'boolean']",{'integer': 100}
"['quote', 'major', 'identifier', 'force', 'explicittable', 'identifier', 'unlessspace', 'column', 'embeddedoverlap', 'select', 'keywordssensitive', 'columnnameidentifier', 'requiredatabase', 'globaldataset', 'levelglobalsequeldatabasedatasettableincludes', 'identifier', 'check', 'specificdatabase', 'excepteither', 'column', 'quotingidentifier', 'double', 'quotingidentifier', 'adapterstandard', 'double', 'assumingtable', 'optional', 'extrachange', 'aliasedartist', 'albumartistartist', 'albumartistinvaliddesign', 'preventgiven', 'sequel', 'tableregular', 'columnprovide', 'table', 'alias', 'explicit', 'sensefallout', 'issue', 'smallmethod', 'private', 'datasetdataset', 'mergedalias', 'datasetquote', 'identifier', 'override', 'quotingmethod', 'return', 'adaptersqlite', 'mysql', 'adapter', 'versiondatasetinside', 'space', 'symbol', 'qualifyingaliasingexample', 'identifier', 'number', 'optional', 'table', 'index', 'alias', 'basedoptional', 'subselect', 'table', 'alwaysinstead', 'dataset', 'table', 'single', 'simpleoption', 'singleargument', 'column', 'tablereturn']",{'issue': 100}
"['array', 'single', 'returnfirst', 'likelyfilter', 'block', 'ignoresarray', 'block', 'integerblock', 'record', 'integer', 'limitedblock', 'argument', 'integerfilterargument', 'single', 'returnfirst', 'reverse', 'block', 'argumentpowerfulrecord', 'limit', 'dataset']",{'integer': 100}
"['thanks', 'limit', 'dataset', 'offset', 'integer']",{'integer': 100}
"['issue', 'compatibility', 'shepelev']",{'issue': 100}
"['pointless', 'incorrect', 'comment']",{'incorrect': 100}
"['generation', 'support', 'adapter', 'default', 'schema', 'value', 'specific', 'literalization']",{'generation': 100}
"['implementation', 'thread', 'worker', 'sequel', 'asynchronous']",{'thread': 100}
"['sensitive', 'regexps', 'mysql']",{'Sensitive': 100}
"['generation', 'statement', 'generate', 'table', 'schema', 'separate', 'index']",{'generation': 100}
"['reconnect', 'issue', 'mysql']",{'issue': 100}
