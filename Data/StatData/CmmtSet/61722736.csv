message,fuzzy
"['stack', 'frame', 'method', 'revertreverts', 'commitkotlin']",{'stack': 100}
"['implementation', 'emitall', 'oncompletionprevent', 'cancellation', 'helpful', 'deadlock', 'potential']",{'deadlock': 100}
"['debugger', 'metadata', 'manifest', 'kotlinx', 'kotlin', 'coroutines', 'issue', 'artifactjavaagent', 'manual', 'specification', 'aware', 'kotlinx', 'coroutines', 'simplifies']",{'issue': 100}
"['exception', 'stream', 'reactiverxobservable', 'fixedignoringmanner', 'exception', 'fatal', 'special', 'treatedfollow', 'reactive', 'requirementsubscriber', 'specification', 'stream', 'methodsubscriber', 'onerror', 'someplace', 'rxobservable', 'fixedclose', 'publisher', 'oncomplete', 'signallingcancellation', 'stream', 'thoughissue', 'kotlin']",{'fatal': 100}
"['artificial', 'frame', 'stack', 'display', 'functionissue', 'kotlin']",{'stack': 100}
"['element', 'restore', 'parent', 'context', 'thread', 'context', 'thread', 'solves', 'problemanother', 'contextsuspend', 'performance', 'resume', 'coroutines', 'impact', 'undispatchedelement', 'approach', 'marker', 'order', 'linear', 'context', 'special', 'contains', 'poison', 'alternative', 'lookup', 'coroutines', 'coroutine', 'context', 'elizarov', 'romanvsevolod', 'qwwdfsad']",{'thread': 100}
"['proguard', 'felds', 'incorrect', 'volatile', 'shrinkingproguard', 'felds', 'incorrect', 'volatile', 'shrinkingproguard', 'modify', 'affectrange', 'library']",{'incorrect': 100}
"['cancellation', 'repair', 'future', 'corner', 'propagation', 'coroutines', 'listenablecancellation', 'repair', 'future', 'corner', 'propagation', 'coroutines', 'listenablecancellation', 'coroutine', 'refactors', 'infrastructuredescriptive', 'exception', 'trace', 'stack', 'thrown', 'includesreturncorner', 'warning', 'suppresses']",{'stack': 100}
"['clarify', 'safety', 'thread', 'sharedflow', 'methodclarify', 'safety', 'thread', 'sharedflow', 'methodoverride', 'attach', 'appropriateclarify', 'safety', 'mutablestate', 'thread', 'confusion', 'sense', 'safety', 'thread', 'relevant']",{'thread': 100}
"['subscriber', 'emitter', 'cancellation', 'scenario', 'concurrent', 'problematic', 'specificsubscriber', 'emitter', 'concurrent', 'stress']",{'concurrent': 100}
"['potential', 'asflow', 'crash', 'extensionlouis']",{'crash': 100}
"['reworkimprove', 'emitter', 'coroutine', 'performance', 'rework', 'operator', 'accidental', 'numberselect', 'pessimistic', 'performanceimplementation', 'android', 'issue', 'crossinlinescombine', 'surprising', 'sequential', 'scenario', 'result', 'fairerimprove', 'recovery', 'stacktrace', 'operator', 'flowonupdate']",{'issue': 100}
"['introduce', 'sharedflow', 'operatorintroduce', 'sharedflow', 'operatorchange', 'summaryimplement', 'stateflowonxxx', 'clarifiedstrategy', 'bufferoverflowsharein', 'statein', 'operator', 'strategyerror', 'stateflowprecise', 'operator', 'cancellableprecise', 'operatorassharedflow', 'clarifiedfuture', 'notice', 'deprecationconstructor', 'function', 'channeloperator', 'buffersharein', 'statein', 'upstream', 'overflow', 'strategy', 'buffersharein', 'statein', 'upstream', 'efficient', 'flowonconflate', 'strategy', 'buffer', 'default', 'migration', 'operator', 'reactiveparams', 'whilesubscribedibraheem', 'travis', 'wyatt']","{'overflow': 100, 'buffer': 100}"
"['problematic', 'android', 'dispatcher', 'destroyedprevent', 'atomic', 'nature', 'channeltypical', 'creates', 'issue', 'probleminternalinternalcancellation', 'atomicresume', 'flowon', 'ensuresrenamedtrack', 'introducedbetter', 'documentationproper', 'channellouis', 'authoredvsevolod', 'qwwdfsad']",{'issue': 100}
"['native', 'refactor', 'source', 'concurrent', 'introduce', 'native', 'source', 'concurrentnative', 'apple', 'nativedarwin', 'source', 'nativeothernative', 'variant', 'launchedchecker', 'memory', 'mainnoexit', 'entry', 'defaultmainbackground', 'entry', 'worker', 'special', 'background', 'backgroundtestbuild', 'improvementactive', 'style', 'modernizeversion', 'extract', 'runnergoogle', 'reference', 'redundant', 'android']",{'concurrent': 100}
"['timeout', 'increase', 'thread']",{'thread': 100}
"['thread', 'support', 'function', 'thread', 'support', 'function', 'blockingimplementation', 'issuejiaoxiaodong', 'signedjiaoxiaodong']",{'thread': 100}
"['experimental', 'annotation', 'operator', 'channelexperimental', 'operatorexperimental', 'annotation', 'flowon', 'buffer', 'includingexperimental']",{'buffer': 100}
"['github', 'issue']",{'issue': 100}
"['takingaccount', 'operation', 'pointerlinearizable', 'backwards', 'helpdelete', 'methodcorrectprev', 'correctprev', 'methodreduce', 'concurrent', 'overridden', 'classremovefist', 'operation', 'ensuresinterfere', 'cachereduces', 'implementation', 'operationfaster', 'timing']",{'concurrent': 100}
"['check', 'supportversion', 'robolectric', 'supportrobolectric', 'issue', 'accordingsupportevery', 'version', 'setting', 'comment', 'unclear', 'check', 'method', 'changedverification', 'innermost', 'happenedseparate', 'javafximprove', 'error', 'javafx', 'environment', 'transition', 'driver', 'headless', 'initializationlogic', 'initializationwould', 'exception', 'failedstate', 'javafx', 'wouldsystem', 'unavailable', 'internalvalid', 'differentiation', 'failedallows', 'exception', 'rethrow', 'boldlyconfident', 'relevantintegration', 'elizarov', 'roman']",{'issue': 100}
"['happenfollowingblock', 'passediteration', 'repeat', 'selecthappens', 'blockthread', 'passedsimultaneouslythread', 'anomalouslythread', 'repeatexecutingusual', 'exceptionfails', 'javarx', 'exceptionrxjava', 'error', 'different', 'reactivex', 'handlingthread', 'handlerdefaultcoroutine', 'context', 'thread', 'execution', 'ensuresblock']",{'thread': 100}
"['execution', 'account', 'context', 'reactor', 'injection', 'asflow', 'subscription', 'reactive', 'trackedimplementation', 'request']",{'injection': 100}
"['element', 'arraychannel', 'linearizability', 'queue', 'buffer']",{'buffer': 100}
"['progress', 'attempt', 'blocksuccessful', 'buffersize', 'invariant', 'capacityproblem', 'exposequeue', 'prevention', 'ability', 'middle', 'order', 'blockingchangesubmit', 'worker', 'blockingcompensate', 'worker', 'enforcinf', 'thread', 'invariant', 'blockingworker', 'reason', 'attempt', 'blockingglobal', 'middle', 'queue', 'insteadglobal', 'queue', 'conditionalworker', 'excessive', 'stack', 'thread']","{'thread': 100, 'stack': 100}"
"['stack', 'shorten', 'resumepulledsince', 'coroutinesmethod', 'visibledebugger', 'framesimplification', 'jobsupportparameter', 'method']",{'stack': 100}
"['select', 'expressiononsend', 'clause', 'onreceive', 'channelleave', 'throworiginal', 'channelstress', 'channelselect', 'sequential', 'atomic', 'basedsequential', 'operation', 'deadlock']",{'deadlock': 100}
"['concurrent', 'stress', 'semaphore', 'mutex']",{'concurrent': 100}
"['robustusage', 'incorrect', 'idiom', 'notify']",{'incorrect': 100}
"['attempt', 'state', 'followingacquirerregardless', 'resumedqueue', 'incorrect', 'permitmutex', 'ownership', 'acquirer', 'claimqueue', 'thread', 'succeedsmutex', 'entity', 'resumedimplementation', 'semaphorefollowsdenotes', 'length', 'logical', 'absolute', 'thread', 'valuethread', 'returnsemaphore', 'permiterror', 'wakerbreak', 'invariantcancellation', 'detects', 'presence', 'queue', 'empty', 'transferpermit', 'semaphore', 'acquisitionthread', 'alreadybound', 'resume']","{'incorrect': 100, 'thread': 100, 'length': 100}"
"['buffer', 'increase', 'default']",{'buffer': 100}
"['manner', 'arraychannel', 'demand', 'buffermanner', 'arraychannel', 'demand', 'bufferrationaleserious', 'scenario', 'footprint', 'suspension', 'operator', 'various', 'buffer']",{'buffer': 100}
"['element', 'cancellation', 'concurrent', 'check', 'mergeimplementation', 'upstream', 'detail', 'behaviour', 'launch', 'valuehappens', 'approachable', 'upstream', 'element', 'sends', 'model', 'overhead', 'suspension', 'coroutines', 'negligible', 'mental', 'channel']",{'concurrent': 100}
"['channelflow', 'flowproduce', 'cancellation', 'concurrent', 'behaviour', 'partial', 'operator']",{'concurrent': 100}
"['error', 'scopeless', 'exception', 'coroutine', 'fatal', 'context', 'cleanup', 'reactive']",{'fatal': 100}
"['fatal', 'rxobservable', 'deadlock']","{'fatal': 100, 'deadlock': 100}"
"['debugger', 'timeout', 'debug', 'increase', 'unfortunate', 'thread', 'unmute', 'timing', 'shutdown']",{'thread': 100}
"['various', 'decouple', 'operator', 'bufferintroduce', 'operator', 'bufferoperator', 'bufferchannel', 'operator', 'adjacent', 'createintroduce', 'marker', 'buffer', 'default', 'channel']",{'buffer': 100}
"['state', 'concurrency', 'mutable', 'practice', 'guideexample', 'concurrency', 'special', 'neededleast']",{'concurren': 90}
"['benchmark', 'weakness', 'expose', 'number']",{'expose': 100}
"['overflow', 'numerical']",{'overflow': 100}
"['minor', 'readme', 'issue']",{'issue': 100}
"['todos', 'cleanup', 'styleexplicit', 'style', 'kotlin', 'library', 'issue', 'visibilityclass', 'place', 'atomicfu', 'version', 'annotationtodos', 'overflow', 'clamp', 'header', 'licensepackage']","{'issue': 100, 'overflow': 100}"
"['flatmap', 'rework', 'relateddeprecate', 'flatmap', 'feedbackversion', 'sequential', 'concurrent', 'introduce', 'flatmapconcat', 'flatmapmergesequence', 'flattenconcat', 'flattenmerge', 'concat', 'rename']",{'concurrent': 100}
"['insecure', 'certificate']",{'insecure': 100}
"['stack', 'recovery', 'trace']",{'stack': 100}
"['tomillis', 'duration', 'overflow', 'check', 'operator']",{'overflow': 100}
"['agent', 'debug', 'complexity', 'quadratic', 'stack']",{'stack': 100}
"['thread', 'documentation', 'local', 'clarify']",{'thread': 100}
"['completable', 'concurrency', 'behaviorintegration', 'module', 'guava', 'kotlinx', 'coroutinesbuilder', 'concurrency', 'honorinside', 'builder', 'failure', 'childbuilder', 'parent', 'canceltypical', 'usage', 'parent', 'handler', 'canceluncaughtchange', 'internalsincebuilder', 'exception', 'parameter', 'additionaldistinguish', 'parentnever', 'logic', 'cancelcancellation', 'parent', 'parent', 'context']",{'concurren': 90}
"['exception', 'thread', 'saftey']",{'thread': 100}
"['update', 'argument', 'reference', 'issue', 'issue', 'relevant']",{'issue': 100}
"['stacktrace', 'coroutines', 'agentcoroutine', 'state', 'thread', 'transitedmetadata', 'retrieve', 'thread', 'stacktrace', 'coroutines']",{'thread': 100}
"['worker', 'scheduler', 'check', 'thread']",{'thread': 100}
"['print', 'handler', 'exception', 'trace', 'stack', 'default']",{'stack': 100}
"['update', 'coroutines', 'guideupdateevent', 'dispatch', 'javascript', 'thread']",{'thread': 100}
"['dispatcher', 'integration', 'reuse', 'eventloop', 'unconfineddispatcher', 'integration', 'reuse', 'eventloop', 'unconfinedevent', 'register', 'blockednative', 'local', 'consolidates', 'thread', 'handlingclass', 'local', 'custom', 'thread', 'event', 'class', 'restorekotlinx', 'custom']",{'thread': 100}
"['debug', 'improvementdebug', 'improvementmethod', 'corresponding', 'printhierarchy', 'simplify', 'introduce', 'printjob', 'scope', 'renameremove', 'favorcrash', 'android', 'issue', 'runcatchingaddress']",{'issue': 100}
"['exceptionseems', 'problem', 'satisfactorycancellationfailure', 'process', 'corresponding', 'concurrent', 'backgroundcancellation', 'attempt', 'failure', 'distinguishesanyone', 'failure', 'burden', 'various', 'await', 'separate', 'neededclasshidden', 'deprecatedalways', 'block']",{'concurrent': 100}
"['queue', 'local', 'starvation', 'mechanism', 'woken', 'thread']",{'thread': 100}
"['disposeshown', 'issue', 'problemhappens']",{'issue': 100}
"['consistent', 'exception', 'constructor', 'state', 'thread']",{'thread': 100}
"['fixedmulti', 'version', 'single', 'consumer', 'pasteproblem', 'detailcheck', 'devexperts', 'issue']",{'issue': 100}
"['runnable', 'concurrency', 'state', 'expression']",{'concurren': 90}
"['androidx', 'workaround', 'toolchain', 'issue', 'dispatproguard', 'androidx', 'update', 'workaround', 'documentation', 'resource', 'issue']",{'issue': 100}
"['event', 'dispatch', 'thread', 'local']",{'thread': 100}
"['thread', 'event', 'rework', 'local']",{'thread': 100}
"['supertypes', 'kotlin', 'workaround', 'jetbrains', 'internal', 'issue']",{'issue': 100}
"['discoverable', 'object', 'thread', 'dispatcher', 'serviceloaderimplementation', 'opening', 'multiplatform', 'future', 'dispatchedstart', 'workaround', 'coroutines', 'android']",{'thread': 100}
"['event', 'thread', 'necessary', 'unpark']",{'thread': 100}
"['thread', 'shutdown']",{'thread': 100}
"['internalnicer', 'stack']",{'stack': 100}
"['refactor', 'animationmodel', 'concurrency', 'refinement']",{'concurren': 90}
"['explicit', 'concurrency']",{'concurren': 90}
"['crash', 'child', 'withtimeout', 'coroutine', 'child', 'withtimeout', 'workingdifferent', 'dispatcherhigher', 'separate', 'reproduces', 'stress', 'problemprobability']",{'crash': 100}
"['reactive', 'module', 'concurrency']",{'concurren': 90}
"['update', 'concurrency', 'coroutines', 'compatibility', 'binarycommonpool', 'select', 'experimental', 'expression', 'channel']",{'concurren': 90}
"['implementation', 'concurrency', 'structuredextension', 'broadcast', 'actor', 'coroutinescopedeprecate', 'coroutine', 'builder', 'currentscope', 'coroutinescope', 'manipulation', 'interfacecoroutinescope']",{'concurren': 90}
"['termination', 'dispatcher', 'thread']",{'thread': 100}
"['implementation', 'contextdiscussion', 'issue']",{'issue': 100}
"['sensitive', 'threaddebug', 'thread', 'usingreflects', 'thread', 'currentlycorrespond', 'intrinsicsupdate', 'coroutine', 'properlyintrinsics', 'namedupdate', 'update', 'context', 'various', 'withcontext', 'testbase', 'error', 'reportingrethrow', 'attempt', 'coroutine', 'recursive']","{'Sensitive': 100, 'thread': 100}"
"['publicapitest', 'generation', 'fixedcompilekotlin', 'generate']",{'generation': 100}
"['unpark', 'cancellation', 'coroutine', 'thread', 'completion']",{'thread': 100}
"['update', 'thread', 'maintainconsistency', 'array', 'parktimens', 'yield']",{'thread': 100}
"['management', 'concurrency']",{'concurren': 90}
"['state', 'single', 'blockingworker', 'increase', 'intrusive', 'performance', 'stack', 'support', 'queue', 'replaceglobal', 'scott', 'michael', 'support', 'queue', 'available', 'token', 'queue', 'blockingtermination', 'effort', 'thread', 'ditchreset']","{'stack': 100, 'thread': 100}"
"['scheduler', 'introduce', 'dynamic', 'support', 'utilize', 'scheduler', 'thread', 'worker', 'local', 'process', 'termination', 'token', 'external', 'conceptrationale', 'global', 'starvation', 'queueworker', 'termination', 'protocol']",{'thread': 100}
"['improvement', 'concurrency']",{'concurren': 90}
"['orderopenjdk', 'longest', 'master', 'class', 'release', 'mirror', 'share', 'concurrent', 'thread', 'document']","{'concurrent': 100, 'thread': 100}"
"['changelog', 'incorrect', 'information']",{'incorrect': 100}
"['readint', 'buffer', 'reading']",{'buffer': 100}
"['extra', 'jobnode', 'concurrent', 'object', 'improvement', 'defensive', 'allocation', 'awaitall']",{'concurrent': 100}
"['failure', 'concurrency', 'spurious']",{'concurren': 90}
"['optimize', 'allocation', 'buffer', 'memory']",{'buffer': 100}
"['version', 'generation', 'jekyll']",{'generation': 100}
"['defaultexecutor', 'thread', 'shutdown', 'startup']",{'thread': 100}
"['release', 'buffer', 'guaranteedrelease', 'preparation', 'cancelimportant', 'release', 'buffer', 'borrowedsuccessful', 'operation', 'preparationreason']",{'buffer': 100}
"['release', 'buffer', 'channel', 'revertreverts']",{'buffer': 100}
"['release', 'buffer', 'channel']",{'buffer': 100}
"['script', 'generation']",{'generation': 100}
"['thread', 'failuredifferent', 'thread', 'utils']",{'thread': 100}
"['common', 'issueeitherdispatcher', 'combination', 'propagation', 'parent', 'preventingpublic', 'class', 'resultrelease', 'thread', 'close', 'method']",{'thread': 100}
"['propagation', 'coroutines', 'logic', 'coroutine', 'crashbecomes', 'cancellation', 'reason', 'exceptioncancellation', 'original', 'reasonlonger', 'reportcoroutine', 'crash', 'consumingcancellation']",{'crash': 100}
"['integer', 'overflow']","{'integer': 100, 'overflow': 100}"
"['usage', 'verifyingoriginal', 'buffer']",{'buffer': 100}
"['generation', 'module']",{'generation': 100}
"['error', 'buffer', 'close', 'channel']",{'buffer': 100}
"['detail', 'thread']",{'thread': 100}
"['separate', 'trace', 'stack', 'extract', 'method']",{'stack': 100}
"['support', 'content', 'buffer', 'channel']",{'buffer': 100}
"['intra', 'thread', 'interference', 'coroutine', 'thread']",{'thread': 100}
"['effort', 'thread']",{'thread': 100}
"['additional', 'check', 'thread']",{'thread': 100}
"['manager', 'security', 'prohibits', 'reading']",{'Security': 100}
"['cancellation', 'concurrency', 'ornull', 'withtimeout', 'spurious']",{'concurren': 90}
"['repositorybintray', 'issue', 'jcenter']",{'issue': 100}
"['concurrency', 'state', 'mutable', 'section', 'benchmark']",{'concurren': 90}
"['state', 'concurrency', 'mutable', 'couple', 'section', 'example']",{'concurren': 90}
"['state', 'concurrency', 'mutable', 'section']",{'concurren': 90}
"['concurrent', 'operation', 'stress']",{'concurrent': 100}
"['incorrect', 'catch', 'potential', 'operator', 'compile', 'level', 'problem']",{'incorrect': 100}
"['timeout', 'thread', 'delay', 'scheduler']",{'thread': 100}
