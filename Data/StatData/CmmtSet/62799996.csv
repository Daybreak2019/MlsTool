message,fuzzy
"['mergedholbach', 'request', 'mergetemplate', 'issue']",{'issue': 100}
"['mergetemplate', 'dholbach', 'issue', 'request', 'updatetemplate', 'update', 'issue']",{'issue': 100}
"['update', 'fluxcloudjustinbarrick', 'justinbarrick', 'development', 'fluxcloud', 'issue']",{'issue': 100}
"['fcadd', 'mergefluxcd', 'request', 'filter', 'mergefilter', 'decryption']",{'encryption': 90}
"['cacdb', 'mergemitigation', 'issue', 'request', 'ordovicia', 'mergeerror', 'resource', 'return']",{'issue': 100}
"['chartdefault', 'generation', 'optionprovide', 'example', 'externalmount', 'extraenv', 'extravolumes', 'beydals', 'hidde', 'hiddeco']",{'generation': 100}
"['mergefluxcd', 'panic', 'issue', 'request', 'mergedirectory']",{'issue': 100}
"['mergefluxcd', 'error', 'chart', 'issue', 'request', 'mergemanifest', 'error']",{'issue': 100}
"['patch', 'jaydelandparameter', 'incorrect']",{'incorrect': 100}
"['manifest', 'generation']",{'generation': 100}
"['changeset', 'generation', 'manifest', 'outsideconsider', 'daemon', 'target', 'resource', 'generation', 'kubernetes', 'manifestchange', 'target', 'getchangeset', 'identifies', 'commitsmanifest', 'resource', 'generation']",{'generation': 100}
"['mergefluxcd', 'issue', 'request']",{'issue': 100}
"['mergesysdevguru', 'hostname', 'error', 'issue', 'invalid', 'request', 'hostname', 'error']",{'issue': 100}
"['expose', 'image', 'registry', 'chart']",{'expose': 100}
"['mergetemplate', 'phillebaba', 'issue', 'request', 'mergestart', 'template', 'issue']",{'issue': 100}
"['context', 'securitycomment', 'review', 'context', 'security', 'relateddefault', 'chart', 'valuedefault']",{'Security': 100}
"['fdedae', 'mergemessage', 'error', 'dinosk', 'issue', 'fluxctl', 'request', 'mergemessage', 'error', 'fluxctl']",{'issue': 100}
"['registry', 'distinguish', 'error', 'cachederror', 'extra', 'withoutdebuggingfluxcd', 'issuecomment', 'issue']",{'issue': 100}
"['version', 'upgradeconfiguration', 'storeversion', 'issue', 'kubernetes']",{'issue': 100}
"['optionswitch', 'decryption', 'startingdaemonpaulfarver']",{'encryption': 90}
"['decryption', 'loadingdecrypt', 'includeloadedpaulfarver']",{'encryption': 90}
"['cdecc', 'abbdfe', 'mergepatchfile', 'application', 'request', 'opremiomanifest', 'generation']",{'generation': 100}
"['manifest', 'generation', 'patchfilefluxcd', 'problem', 'introducedenable', 'manifest', 'generation']",{'generation': 100}
"['opremiomanifest', 'generation']",{'generation': 100}
"['manifest', 'generation']",{'generation': 100}
"['mergegeneration', 'request', 'opremio', 'manifestmanifest', 'generation']",{'generation': 100}
"['manifest', 'generation']",{'generation': 100}
"['aadedesebikul', 'generation', 'request', 'manifestmanifest', 'generation']",{'generation': 100}
"['manifest', 'generation']",{'generation': 100}
"['dispatch', 'generation', 'update', 'configfilecontrol', 'generation', 'respectmanifest', 'updatedirectory', 'operation', 'config', 'dispatch', 'whetherbelongs', 'detaildelegate', 'method', 'updatedconfig', 'method']",{'generation': 100}
"['fluxcd', 'error', 'metric', 'issue']",{'issue': 100}
"['dbeffa', 'cbdca', 'mergefluxcd', 'namespaces', 'issue', 'request', 'mergeworkload', 'restore', 'namespaces']",{'issue': 100}
"['cycle', 'generational', 'request', 'mergegenerational']",{'generation': 91}
"['install', 'template', 'fluxctlfilesystem', 'binaryinstallfilesystem', 'generatessince', 'double', 'program', 'generatingmanifest', 'examplegeneration', 'problem', 'upset', 'anythingsince', 'generation', 'regenerate', 'possibleelsewhere', 'introduce', 'differencepainful', 'detection', 'check', 'fluxctl', 'example', 'generate', 'installdepend', 'program', 'commitdepend', 'project', 'install']",{'generation': 100}
"['mergemanifest', 'generation', 'namespace', 'experimentalnamespace', 'generation', 'manifest', 'garbage']",{'generation': 100}
"['manifest', 'generation']",{'generation': 100}
"['permission', 'error', 'chart', 'parameter']",{'permission': 100}
"['mergeainmosni', 'generation', 'chart', 'request', 'manifestmanifest', 'generation']",{'generation': 100}
"['helmrelease', 'tryingerror', 'validation', 'resultintegerdefinition', 'validation', 'scheme', 'containedformat', 'integer']",{'integer': 100}
"['cloudsdk', 'google', 'issue', 'request', 'weaveworksgoogle', 'cloud']",{'issue': 100}
"['whitelist', 'label', 'decorator', 'registry', 'cacheimage', 'inheritance', 'account', 'labelimage', 'label', 'timestampsimage', 'issue', 'startedimage', 'timestamp', 'pickedtimestamp', 'prioritizedability', 'structure', 'commits', 'imagerepositorycache', 'returneddecorator', 'replacesfield', 'image', 'timestamp', 'createdat', 'specifiedimage', 'canonical']",{'issue': 100}
"['mergecloudsdk', 'google', 'issue', 'request', 'weaveworksgoogle', 'cloud']",{'issue': 100}
"['clone', 'checkout', 'local', 'fetch', 'forcefetch', 'updatewithout', 'force', 'optiontrack', 'clobber', 'error', 'fetch', 'force', 'cloneforward', 'clone', 'mirrorchangedocumentation', 'master', 'relnotesweaveworks', 'issue']",{'issue': 100}
"['mergeweaveworks', 'request', 'chartcontext', 'security']",{'Security': 100}
"['context', 'security']",{'Security': 100}
"['eedde', 'mergeenhancement', 'request', 'weaveworks', 'context', 'configure', 'security']",{'Security': 100}
"['context', 'configure', 'securityrecent', 'manifest', 'exampleminikube', 'chart', 'issue', 'ensure', 'memcachedissue', 'kubernetes']",{'issue': 100}
"['incorporate', 'setting', 'people', 'issue', 'configure', 'kubernetes', 'certainndots', 'valueweaveworks', 'issuecomment', 'issue']",{'issue': 100}
"['manifest', 'generation']",{'generation': 100}
"['mergeguide', 'dholbach', 'contrib', 'request', 'update', 'issue']",{'issue': 100}
"['edfaa', 'mergemerge', 'threadsafety', 'issue', 'request', 'weaveworksreadfrom']",{'issue': 100}
"['buffer', 'mutex', 'regression']",{'buffer': 100}
"['mergelabel', 'dholbach', 'issue', 'request', 'mergeissue', 'template', 'label']",{'issue': 100}
"['issue', 'template', 'labeleditor', 'template', 'issue', 'tryingappears', 'square', 'label', 'bracket', 'listingcommunity', 'slack', 'master', 'kubernetesholbach', 'daniel']",{'issue': 100}
"['mergedholbach', 'request', 'template', 'issue']",{'issue': 100}
"['issue', 'request', 'template', 'issue']",{'issue': 100}
"['template', 'issue']",{'issue': 100}
"['mergerefresh', 'memcache', 'issue', 'request', 'weaveworksrefresh', 'server', 'memcache']",{'issue': 100}
"['metadata', 'error', 'defang', 'secondfluxd', 'error', 'fatal', 'argumentservice', 'metadata', 'reachgeneral', 'approximation', 'accessfailure']",{'fatal': 100}
"['mergesentinel', 'scope', 'issue', 'request', 'weaveworks', 'clusteradmit', 'cluster', 'resourceids']",{'issue': 100}
"['error', 'silence', 'access', 'kubernetes', 'libraryhandle', 'error', 'kubernetes', 'librarycustom', 'opportunitytolerable', 'silence', 'selectivelyfluxd', 'certain', 'whethersolution', 'error', 'kubernetesproper', 'error', 'changenewinformer', 'client', 'tolerable', 'track', 'accesserror', 'permission']",{'permission': 100}
"['revision', 'desambiguaterepositorybranchsyncinginstancecaller', 'ambiguous', 'revision', 'filename', 'component', 'fatal', 'argumentarchive', 'weave', 'cuatzsright', 'ambiguity', 'place']",{'fatal': 100}
"['package', 'binarychange', 'breakingweaveworks', 'therein', 'issue', 'linkyappears', 'operatortiller', 'commitcluster', 'tiller']",{'issue': 100}
"['eddfcproblem', 'report', 'issue', 'request', 'weaveworkskubeyaml', 'source', 'error']",{'issue': 100}
"['extra', 'execgitcmd', 'thread', 'paramorder']",{'thread': 100}
"['timer', 'stack', 'request', 'mergelonger', 'delete', 'resource']",{'stack': 100}
"['present', 'stack', 'wholesince', 'sensitive', 'syncingthink', 'detectiongarbage', 'check']","{'stack': 100, 'Sensitive': 100}"
"['cluster', 'stack']",{'stack': 100}
"['checksum', 'annotate', 'label', 'stack']",{'stack': 100}
"['mergebehavior', 'insecure', 'timer', 'request', 'check', 'insecure']",{'insecure': 100}
"['credential', 'allowverification', 'insecure', 'acceptcredential']",{'insecure': 100}
"['registry', 'meaning', 'insecurechange', 'insecure', 'meaning', 'registry', 'matchinsecure', 'considers', 'relativelyvalidsecure', 'credential', 'littleinsecure', 'default']",{'insecure': 100}
"['check', 'insecure']",{'insecure': 100}
"['issue', 'creation', 'secretmental']",{'issue': 100}
"['issue', 'request', 'weaveworksnative']",{'issue': 100}
"['queryconflict', 'resolvefluxd', 'mimic', 'netgo', 'prioritize', 'queryissue', 'golangsince', 'glibc', 'alpineargue', 'maintainerdocker', 'gliderlabs', 'issuecomment', 'issue', 'alpine']",{'issue': 100}
"['check', 'chart', 'issue', 'request', 'weaveworksexists', 'check']",{'issue': 100}
"['issue', 'request']",{'issue': 100}
"['sampleweaveworks', 'issue', 'reference']",{'issue': 100}
"['cebeamerge', 'chart', 'issue', 'request', 'weaveworks', 'externalrepos', 'chart', 'release', 'version', 'support']",{'issue': 100}
"['release', 'container', 'eventservice', 'weaveworks', 'issue']",{'issue': 100}
"['mergelistservices', 'error', 'issue', 'request', 'weaveworksreturn', 'error', 'listservices']",{'issue': 100}
"['issue', 'request', 'chart', 'dependency', 'update']",{'issue': 100}
"['progress', 'partition', 'rollout', 'statefulset', 'updateequal', 'available', 'readydepends', 'partitionrevision', 'currentready', 'checkweaveworks', 'issue']",{'issue': 100}
"['buffer', 'notify', 'space', 'caller', 'block', 'buffer', 'sufficient', 'ensure', 'signal', 'packagesignal', 'notify']",{'buffer': 100}
"['origin', 'branchrelease', 'masterchangelog', 'entrycherry', 'release', 'pickedbranchrelease', 'originchangelog', 'updatedholbach', 'request', 'mergepodcontroller', 'encapsulation', 'issue', 'request', 'weaveworksrequest', 'alanjcastonguay']",{'issue': 100}
"['issue', 'request', 'weaveworks', 'includeerror', 'parseref', 'string']",{'issue': 100}
"['documentation', 'annotation', 'exampleweaveworks', 'issue']",{'issue': 100}
"['service', 'status', 'provideprovide', 'statefulsetrollout', 'numberdeployment', 'slice', 'error', 'controllerweaveworks', 'issue']",{'issue': 100}
"['encapsulation', 'issue', 'request', 'weaveworksimage', 'initcontainers', 'fetch']",{'issue': 100}
"['suggestion', 'status', 'fluxctlclosecreate', 'status', 'fluxctlright', 'false', 'issue', 'confusingholbach', 'daniel']",{'issue': 100}
"['issue', 'filter', 'request', 'weaveworks']",{'issue': 100}
"['encapsulation', 'issue', 'request', 'weaveworksimage', 'initcontainers', 'fetch']",{'issue': 100}
"['mergedholbach', 'request', 'issue', 'contributor']",{'issue': 100}
"['issue', 'contributor']",{'issue': 100}
"['issue', 'request', 'weaveworksinitcontainer', 'verification', 'release']",{'issue': 100}
"['mergeexclude', 'container', 'workload', 'issue', 'request', 'weaveworks', 'udpatesexclude', 'container', 'workload', 'release']",{'issue': 100}
"['gitlab', 'permission', 'maintainer']",{'permission': 100}
"['issue', 'request', 'weaveworksargument', 'multiple', 'support']",{'issue': 100}
"['mergemerge', 'issue', 'request', 'weaveworksmention', 'readme', 'issue']",{'issue': 100}
"['individual', 'namespaces', 'givennamespaces', 'scenario', 'namespaces', 'permission', 'common', 'listingwhitelist']",{'permission': 100}
"['issue', 'request', 'weaveworksimage', 'serviceaccounts']",{'issue': 100}
"['mergemerge', 'issue', 'release', 'request', 'weaveworks', 'forcedocumentation', 'force']",{'issue': 100}
"['mergemerge', 'issue', 'release', 'request', 'weaveworks', 'forcecontainer', 'manual', 'image', 'filter', 'release', 'force']",{'issue': 100}
"['issue', 'colon', 'request', 'weaveworksresource', 'colon', 'component']",{'issue': 100}
"['issue', 'request']",{'issue': 100}
"['mergewindow', 'image', 'issue', 'request', 'weaveworksimage']",{'issue': 100}
"['mergemerge', 'annotation', 'issue', 'policy', 'request', 'weaveworksboolean', 'check', 'policy']",{'issue': 100}
"['issue', 'request', 'weaveworks', 'automationexplicit', 'concise', 'automation']",{'issue': 100}
"['mergemerge', 'interactive', 'issue', 'release', 'request', 'weaveworksrelease', 'interactive']",{'issue': 100}
"['reload', 'config', 'issue', 'request', 'weaveworksimage', 'request', 'default']",{'issue': 100}
"['mergejustinbarrick', 'request', 'instance', 'kubernetes', 'supporthorror', 'similar', 'nodeport', 'expose']",{'expose': 100}
"['issue', 'release', 'request', 'weaveworkscontainer', 'resource', 'format', 'release', 'update']",{'issue': 100}
"['issue', 'request', 'weaveworksallow', 'resource']",{'issue': 100}
"['issue', 'request', 'weaveworks', 'supportimage']",{'issue': 100}
"['mergemerge', 'failure', 'issue', 'request', 'weaveworksinformation']",{'issue': 100}
"['issue', 'request', 'weaveworkstimeouts', 'careful', 'print', 'failure', 'fluxctl', 'advice']",{'issue': 100}
"['mergeeasier', 'mount', 'sshconf', 'issue', 'request']",{'issue': 100}
"['issue', 'request']",{'issue': 100}
"['assigningotherwise', 'crash']",{'crash': 100}
"['issue', 'request', 'weaveworksmessage', 'friendly', 'parse', 'return', 'yamls']",{'issue': 100}
"['mergepflags', 'parse', 'issue', 'request', 'weaveworks', 'properlyreport']",{'issue': 100}
"['deedd', 'mergeverification', 'failure', 'issue', 'request', 'weaveworksmultidocs']",{'issue': 100}
"['issue', 'request', 'weaveworkscontainer']",{'issue': 100}
"['aefdbncabatoff', 'chart', 'issue', 'request']",{'issue': 100}
"['mergemerge', 'statefulset', 'issue', 'request', 'statefulset', 'status']",{'issue': 100}
"['deploy', 'issue', 'request', 'weaveworksencounter']",{'issue': 100}
"['mergemerge', 'issue', 'request', 'weaveworks', 'clusterreport', 'event', 'resource']",{'issue': 100}
"['mergemerge', 'issue', 'request', 'weaveworks', 'clusterrelease', 'accurate', 'commits', 'event']",{'issue': 100}
"['bbcdc', 'mergemerge', 'issue', 'request', 'weaveworks', 'clusterbreak', 'event', 'dependency', 'package']",{'issue': 100}
"['reinstate', 'issue', 'request', 'control', 'reinstate', 'interval']",{'issue': 100}
"['issue', 'request', 'weaveworksshutdown']",{'issue': 100}
"['mergemerge', 'issue', 'volume', 'request', 'weaveworksvolume', 'separate', 'tmpfs', 'generate']",{'issue': 100}
"['bdaffoperator', 'clone', 'issue', 'request', 'weaveworks', 'masteroperator', 'clone', 'issue', 'master']",{'issue': 100}
"['mergemerge', 'event', 'issue', 'request', 'weaveworkslogevent']",{'issue': 100}
"['failure', 'issue', 'request', 'weaveworksfailure']",{'issue': 100}
"['ddfcb', 'mergeweaveworks', 'request', 'mergeerrorf', 'incorrect']",{'incorrect': 100}
"['issue', 'request', 'weaveworksauthentication', 'registry', 'basic', 'support']",{'issue': 100}
"['issue', 'request', 'cache', 'error', 'detail']",{'issue': 100}
"['abcbd', 'mergemerge', 'issue', 'request', 'weaveworksmulti']",{'issue': 100}
"['issue', 'request', 'weaveworksexact', 'credential', 'image']",{'issue': 100}
"['batch', 'issue', 'request', 'weaveworksvalpha', 'vbeta', 'kubernetes', 'batch']",{'issue': 100}
"['mergemerge', 'cronjob', 'issue', 'request', 'weaveworksseparate']",{'issue': 100}
"['issue', 'request', 'weaveworksresource']",{'issue': 100}
"['resourcealone', 'scanner', 'buffer']",{'buffer': 100}
"['issue', 'request', 'weaveworksreport']",{'issue': 100}
"['check', 'issue', 'request']",{'issue': 100}
"['issue', 'request', 'weaveworksimage', 'canonical']",{'issue': 100}
"['issue', 'request', 'shorthand', 'parse', 'dockerhub', 'image']",{'issue': 100}
"['queue', 'metric', 'length', 'duration']",{'length': 100}
"['registry', 'connectionswamp', 'memcache', 'connection', 'thread']",{'thread': 100}
"['memcache', 'generation']",{'generation': 100}
"['parameter', 'request', 'weaveworksparameter', 'option', 'expose']",{'expose': 100}
"['parameter', 'option', 'expose']",{'expose': 100}
"['issue', 'request', 'weaveworksstate', 'release', 'error']",{'issue': 100}
"['resource', 'ignoreexpect', 'annotation', 'issue', 'manifest', 'clusterindicate', 'thing', 'resource']",{'issue': 100}
"['revert', 'expose']",{'expose': 100}
"['mergeignore', 'addons', 'issue', 'request', 'weaveworksfilter', 'manager']",{'issue': 100}
"['cbffeba', 'mergeoutput', 'issue', 'release', 'request', 'weaveworksrelease']",{'issue': 100}
"['mergemerge', 'issue', 'request', 'weaveworks', 'stderr', 'includeerror', 'output']",{'issue': 100}
"['issue', 'request', 'weaveworkserror']",{'issue': 100}
"['concurrent', 'limit']",{'concurrent': 100}
"['crash', 'stale']",{'crash': 100}
"['fluxd', 'metric', 'expose', 'fluxsvc']",{'expose': 100}
"['issue', 'request', 'weaveworks', 'libraryimage', 'library']",{'issue': 100}
"['terminal', 'crypto', 'fetch']",{'crypto': 100}
"['eaeec', 'feccfimage', 'issue', 'request', 'weaveworksrelease', 'fluxctl', 'update', 'option']",{'issue': 100}
"['period', 'issue', 'request', 'weaveworks', 'updateperiod', 'default', 'update']",{'issue': 100}
"['concurrent', 'idiomatic']",{'concurrent': 100}
"['panic', 'issue', 'request', 'weaveworksregistry', 'wrapper', 'error']",{'issue': 100}
