message,fuzzy
"['specific', 'exception', 'issue', 'predicate', 'controller', 'retryinclusive', 'event', 'processor', 'logic', 'retrypbelgundi']",{'issue': 100}
"['scaledown', 'segment', 'traffic', 'steady', 'issue', 'targetreport', 'method', 'cacheatharva']",{'issue': 100}
"['warning', 'javadoc', 'issue', 'paramsharma']",{'issue': 100}
"['ranjan', 'shiveshcount', 'issue', 'batch']",{'issue': 100}
"['issue', 'eventwriterjavadocs']",{'issue': 100}
"['stream', 'issue', 'controller', 'controller', 'pravega', 'streamtags']",{'issue': 100}
"['issue', 'queue', 'state', 'container', 'fatal', 'leavinggracia', 'andreipaduroiu', 'andrei', 'paduroiu']","{'issue': 100, 'fatal': 100}"
"['issue', 'server', 'refactoringhealth', 'factor', 'consumable', 'driving', 'integration', 'hryniowski', 'colingracia', 'hryniowski', 'colin']",{'issue': 100}
"['speedup', 'issue', 'kotlasaicharan', 'saicharan']",{'issue': 100}
"['framework', 'health', 'issue', 'checkhealth', 'project', 'check', 'functionality', 'pravega', 'createshealth', 'client', 'check', 'hryniowski', 'colingracia', 'andreipaduroiu', 'andrei', 'paduroiu']",{'issue': 100}
"['upgrade', 'issue', 'bookkeeperupgrade', 'bookkeeper', 'pravegagracia']",{'issue': 100}
"['readergroup', 'property', 'issue']",{'issue': 100}
"['various', 'issue', 'fluentrotation', 'script', 'fluent', 'active', 'option', 'runningoption', 'fluentalpine', 'repository', 'fluent', 'option', 'hryniowski', 'colingracia']",{'issue': 100}
"['sporadic', 'issue']",{'issue': 100}
"['transaction', 'issue', 'gettxn', 'ensureensure', 'transaction']",{'issue': 100}
"['storage', 'openread', 'issue', 'andreipaduroiu', 'andrei', 'paduroiu']",{'issue': 100}
"['potential', 'issue', 'attributeconcurrent', 'storegracia']",{'issue': 100}
"['recursive', 'readergroups', 'issue', 'deletescope', 'deleteforcedelete', 'setting', 'readergroups', 'scope', 'table', 'option', 'present', 'value', 'deletescope']",{'issue': 100}
"['segmentstore', 'ledger', 'issue', 'fence', 'bookkeeperlog', 'initialization', 'ledger', 'andrei', 'paduroiu']",{'issue': 100}
"['processing', 'issue', 'request', 'controller', 'tracingimprove', 'store', 'segment', 'request', 'controller', 'generate', 'ranjan', 'shivesh']",{'issue': 100}
"['document', 'internals', 'restapi', 'issue', 'controller', 'updatecapability', 'document', 'support', 'internals', 'restapi', 'detail', 'controller', 'ranjan', 'shivesh']",{'issue': 100}
"['configuration', 'stream', 'issue', 'autoscaleenforces', 'different', 'segment', 'scale', 'policy', 'minimum', 'applies', 'stream', 'number', 'ranjan', 'shivesh']",{'issue': 100}
"['shutdown', 'force', 'segment', 'exception', 'issue', 'containerreplaces']",{'issue': 100}
"['exception', 'issue', 'abort', 'modify', 'handlingcommit', 'default', 'error', 'specific', 'client', 'exception', 'thrown', 'transaction', 'abort', 'handlingatharva']",{'issue': 100}
"['indexer', 'segmentstore', 'operation', 'issue', 'deadlock', 'writer', 'andrei', 'paduroiugracia']","{'issue': 100, 'deadlock': 100}"
"['segmentstore', 'issue', 'metadata', 'markedreturn', 'segment', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'controller', 'kotlasaicharan', 'saicharan']",{'issue': 100}
"['issue', 'brokenvarious']",{'issue': 100}
"['issue', 'block', 'cacheblock', 'cachejoshi']",{'issue': 100}
"['issue', 'getreadergroupensure', 'getreadergroup', 'readergroupindicates', 'reader', 'ensure']",{'issue': 100}
"['checkpoint', 'issue', 'emptycheckpoint', 'checkargument', 'clause', 'goingwenqi']",{'issue': 100}
"['default', 'issue', 'monthpolicy', 'medvedevigorek', 'medvedev']",{'issue': 100}
"['issue', 'certificate', 'renewrenew', 'medvedevigorek', 'medvedev']",{'issue': 100}
"['issue', 'systemjournalsnapshot', 'creates', 'systemjournal', 'periodicallyjoshi']",{'issue': 100}
"['issue', 'stylergracia']",{'issue': 100}
"['issue', 'actioncommit', 'action', 'previous', 'version', 'release', 'codecov', 'detection', 'sincederek']",{'issue': 100}
"['testpodimage', 'system', 'property', 'issue', 'withinenvironment', 'testpodimage', 'system', 'property', 'hryniowski', 'colin']",{'issue': 100}
"['wrong', 'artifact', 'issue', 'numbercommit', 'wrong', 'artifact', 'tkaitchuck', 'kaitchuck']",{'issue': 100}
"['github', 'action', 'issue', 'upload', 'alwaysgithub', 'artifact', 'action', 'event', 'uploads']",{'issue': 100}
"['issue', 'system', 'subsetcollection', 'stdout', 'system', 'fluentbit', 'service', 'cluster', 'ability', 'kubernetes', 'hryniowski', 'colin']",{'issue': 100}
"['catch', 'assert', 'issue', 'exceptioncatch', 'concat', 'check', 'exception', 'jayant', 'joshi', 'sachingracia']",{'issue': 100}
"['issue', 'enableoption', 'enablejoshi']",{'issue': 100}
"['admin', 'reconcile', 'bookkeeper', 'command', 'issue', 'pravegaadmin', 'reconcile', 'command', 'ledger', 'convenience', 'pravega', 'logic', 'exposegracia']",{'issue': 100}
"['issue', 'verification', 'speed']",{'issue': 100}
"['segmentstore', 'table', 'issue', 'rollover', 'metadata', 'compaction', 'rollover', 'metadata', 'compaction', 'andrei', 'paduroiu']",{'issue': 100}
"['configuration', 'issue', 'pravega', 'version', 'configuration', 'andreipaduroiu', 'andrei', 'paduroiu']",{'issue': 100}
"['metric', 'issue', 'minor', 'improvementmetric', 'minorjoshi']",{'issue': 100}
"['client', 'issue', 'connection', 'controller', 'callback']",{'issue': 100}
"['external', 'theme', 'issue', 'reorgrearranges', 'layout', 'formattingderek']",{'issue': 100}
"['stringbuffer', 'issue', 'usingstringbuilder', 'tkaitchuck', 'kaitchuck']",{'issue': 100}
"['increase', 'standalone', 'issue', 'timeoutincrease', 'mitigate', 'readergroup', 'timeout', 'issue', 'creation']",{'issue': 100}
"['aggressive', 'issue', 'epoch', 'compute', 'stream', 'mergespbelgundi']",{'issue': 100}
"['level', 'issue', 'controller', 'evaluatechange', 'guideline', 'level', 'various', 'controller', 'evaluatepbelgundi']",{'issue': 100}
"['stream', 'transaction', 'issue', 'confirmstream', 'transaction', 'fahey', 'claudio']",{'issue': 100}
"['sporadic', 'issue', 'failuregracia']",{'issue': 100}
"['retention', 'issue', 'systemgradle', 'deployment', 'systemdefault', 'script', 'standard', 'setup', 'persist', 'fluent', 'storageclass', 'hryniowski', 'colin']",{'issue': 100}
"['metadata', 'issue', 'buffer', 'cachemetadata', 'buffer', 'cachejoshi']","{'issue': 100, 'buffer': 100}"
"['segment', 'issue', 'waitingprevent', 'segment']",{'issue': 100}
"['issue', 'update', 'headerchange', 'reflect', 'header', 'copyright', 'updatecheckstyle', 'validate', 'update', 'flavio', 'junqueira']",{'issue': 100}
"['segment', 'segmentstore', 'issue', 'table', 'semaphore', 'construct', 'credit', 'number', 'async', 'queue', 'demand', 'connectionindex', 'storagewriter', 'block', 'sortedkeyindex', 'andrei', 'paduroiu']",{'issue': 100}
"['report', 'issue', 'causereport', 'comment', 'issue', 'flavio', 'junqueira']",{'issue': 100}
"['mkdocs', 'script', 'enable', 'issue', 'pluginmkdocs', 'gradle', 'documentation', 'plugin', 'generate', 'medvedevigorek', 'medvedev']",{'issue': 100}
"['issue', 'stats', 'readindexcacheissue', 'stats', 'readindexcachejoshi']",{'issue': 100}
"['sporadic', 'issue', 'failuregracia']",{'issue': 100}
"['segmentstore', 'issue', 'thread', 'callback', 'segmentkeycache', 'deadlock', 'andrei', 'paduroiugracia']","{'issue': 100, 'thread': 100, 'deadlock': 100}"
"['issue', 'pravega', 'ensure', 'standalone', 'pravega', 'ensure', 'standalone']",{'issue': 100}
"['insert', 'segmentstore', 'issue', 'essential', 'utilization', 'cachedefault', 'cachemanager', 'insert', 'exceeds', 'client', 'limit', 'segmentkeycache', 'maximum', 'instruct', 'essential', 'utilization', 'entry', 'cachestorage', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'replyprocessor', 'rawclienthappens', 'rawclientwenqi']",{'issue': 100}
"['segmentstore', 'recovery', 'issue', 'stability', 'containerprevent', 'backpressure', 'operation', 'outstanding', 'limit', 'maximum', 'number', 'value', 'throttler', 'operationlogthough', 'previous', 'inactive', 'process', 'index', 'recovery', 'instance', 'limit', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'streammetrics', 'hryniowski', 'colin']",{'issue': 100}
"['issue', 'futurefuture', 'andreipaduroiu', 'andrei', 'paduroiu']",{'issue': 100}
"['limit', 'issue', 'ranjan', 'shiveshchangeidentification', 'stream', 'satisfies', 'streamcut', 'logicsubscriber', 'lowerbound', 'issue', 'streamcut', 'subscriber']",{'issue': 100}
"['segmentstore', 'issue', 'storagewriter', 'storage', 'segment', 'error', 'operation', 'initialization', 'storagewriter', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'operation', 'removeoperation', 'removejoshi']",{'issue': 100}
"['issue', 'closecloseserializer', 'staticjoshi']",{'issue': 100}
"['issue', 'config', 'system', 'customconfigs']",{'issue': 100}
"['issue', 'speedflushtostorage', 'multiple', 'container']",{'issue': 100}
"['issue', 'noise', 'controllernoise']",{'issue': 100}
"['issue', 'systemsupport', 'system', 'configurablewenqi']",{'issue': 100}
"['integration', 'issue', 'segment', 'exists', 'durable', 'metadata', 'containersignedgracia']",{'issue': 100}
"['event', 'object', 'contains', 'issue', 'number', 'writerstate', 'event', 'object', 'contains', 'number', 'writerstate', 'tkaitchuck', 'kaitchuck']",{'issue': 100}
"['requesttags', 'client', 'issue', 'pravega', 'ensurerequesttags', 'client', 'controller', 'ensure', 'propagatedsegment', 'correlate', 'request', 'ensure', 'tkaitchuck', 'kaitchuck']",{'issue': 100}
"['issue', 'entry', 'evictentry', 'andreipaduroiu', 'andrei', 'paduroiu']",{'issue': 100}
"['index', 'issue', 'block', 'virtual', 'entrypersistent', 'custom', 'sparse', 'indexjoshi', 'andreipaduroiu', 'andrei', 'paduroiu']",{'issue': 100}
"['parameter', 'issue', 'controller', 'generationremove', 'controller', 'predicate', 'generation', 'parampbelgundi']","{'issue': 100, 'generation': 100}"
"['issue', 'flakycurator', 'flakiness', 'flakypbelgundi']",{'issue': 100}
"['wrong', 'configuration', 'system', 'journal', 'issue', 'directory']",{'issue': 100}
"['readme', 'example', 'issue', 'pravega', 'admin', 'section', 'readme', 'example', 'usage', 'pravega']",{'issue': 100}
"['template', 'issue', 'enableintroduces', 'template', 'request', 'andreipaduroiu', 'andrei', 'paduroiu']",{'issue': 100}
"['sporadic', 'issue', 'failure', 'systemprevent', 'reader', 'check', 'system', 'timeout']",{'issue': 100}
"['sporadic', 'issue', 'failureshutdown', 'thread', 'reader', 'ensureattail', 'ensure', 'assertion']","{'issue': 100, 'thread': 100}"
"['zookeeper', 'readergroup', 'issue', 'failover', 'reader', 'ranjan', 'shivesh']",{'issue': 100}
"['segment', 'segmentstore', 'issue', 'reconnection', 'ensure', 'writerlogic', 'segment', 'reconnection', 'tkaitchuck', 'kaitchuck']",{'issue': 100}
"['sporadic', 'issue', 'processing', 'process', 'whole', 'simulate', 'pause', 'bookie', 'resume', 'failure']",{'issue': 100}
"['table', 'stream', 'issue', 'ranjan', 'shiveshchange', 'descriptionexist', 'createempty', 'scope', 'table']",{'issue': 100}
"['conditional', 'issue', 'append', 'idempotentretry', 'exception', 'allowsdouble', 'assumption', 'check', 'reader', 'group']",{'issue': 100}
"['javadoc', 'issue', 'license', 'distribution', 'noticejavadoc', 'modifies', 'license', 'bundle', 'distribution', 'medvedevigorek', 'medvedev']",{'issue': 100}
"['sporadic', 'issue']",{'issue': 100}
"['wrong', 'issue', 'configsecond']",{'issue': 100}
"['issue', 'attemptensure']",{'issue': 100}
"['appends', 'segmentstore', 'order', 'conditional', 'issue', 'validationvalidation', 'order', 'andrei', 'paduroiu']",{'issue': 100}
"['conditional', 'issue', 'append', 'ensureensure']",{'issue': 100}
"['claimownership', 'length', 'check', 'chunk', 'issue', 'appendclaimownership', 'length', 'check', 'chunk', 'appendjoshi', 'andreipaduroiu', 'andrei', 'paduroiu']","{'length': 100, 'issue': 100}"
"['authours', 'issue', 'pravega', 'inlcude', 'notice', 'updatenotice', 'update', 'guideline', 'author', 'medvedevigorek', 'medvedev']",{'issue': 100}
"['issue', 'failure']",{'issue': 100}
"['bugfix', 'segment', 'segmentstore', 'conditional', 'issue', 'table', 'compaction', 'occurs', 'position', 'conditional', 'jayant', 'joshi', 'sachin']",{'issue': 100}
"['responds', 'segmentstore', 'issue', 'ensure', 'wirecommand', 'keepaliveresponds', 'message', 'segmentstore', 'ensure', 'andreipaduroiu', 'andrei', 'paduroiu']",{'issue': 100}
"['possible', 'issue', 'threadforce', 'memorymutable', 'volatilejoshi']",{'issue': 100}
"['condition', 'issue', 'recreate', 'readergroup', 'controller', 'idempotentpbelgundi']",{'issue': 100}
"['controller', 'issue', 'improvement', 'loggingpbelgundi']",{'issue': 100}
"['excessive', 'segmentstore', 'eviction', 'issue', 'memory', 'configuration', 'attribute', 'metadatacleaner', 'respect', 'value', 'andrei', 'paduroiu']",{'issue': 100}
"['overload', 'issue', 'single', 'createsinitial', 'addition', 'header', 'range', 'compliantimplementation', 'append', 'andreipaduroiu', 'andrei', 'paduroiu']",{'issue': 100}
"['metric', 'standalone', 'issue', 'confignecessary', 'metric', 'field', 'config', 'configuration', 'class', 'standalone']",{'issue': 100}
"['standalone', 'issue', 'speedstandalone', 'speedshutdown', 'configurable', 'value', 'standalone', 'timeoutsunnecessary', 'internal', 'standalone', 'updatesegment', 'setting', 'property', 'standalone', 'update', 'junit', 'update', 'timeoutsreduces', 'andrei', 'paduroiu']",{'issue': 100}
"['folder', 'reformats', 'issue', 'rollover', 'kotlasaicharan', 'saicharan']",{'issue': 100}
"['metadata', 'version', 'attempt', 'issue', 'mismatch', 'possible', 'deletion', 'failureversion', 'possible', 'mismatch', 'metadata', 'deletion', 'failurejoshi']",{'issue': 100}
"['controller', 'behaviour', 'issue', 'retryimprove', 'network', 'glitchcontroller', 'writer', 'retry']",{'issue': 100}
"['extendeds', 'segmentstore', 'issue', 'subclass', 'memory', 'smock', 'sjerseyclient', 'override', 'conjunction', 'sclientmock', 'method', 'actual', 'iterator', 'andrei', 'paduroiugracia']",{'issue': 100}
"['issue', 'closeclosejoshi', 'andreipaduroiu', 'andrei', 'paduroiu']",{'issue': 100}
"['return', 'issue']",{'issue': 100}
"['issue', 'client', 'speedshutdown', 'thread', 'timeout', 'splitsince', 'counterpart', 'inherit', 'andrei', 'paduroiu']","{'issue': 100, 'thread': 100}"
"['image', 'bookkeeper', 'issue', 'docker', 'bookkeeper', 'install', 'pravega', 'koltsov', 'andreygracia']",{'issue': 100}
"['wrong', 'calculation', 'outstanding', 'issue', 'connection', 'calculation', 'client', 'connection', 'batch', 'append', 'multiple', 'multiplexedgracia']",{'issue': 100}
"['ensure', 'issue', 'runningensure']",{'issue': 100}
"['issue', 'integeroverflow', 'readoperation', 'error', 'integerjoshi']",{'issue': 100}
"['snapshot', 'issue', 'buildsnapshot']",{'issue': 100}
"['issue', 'flakyflakyensure', 'dynamicrestapi']",{'issue': 100}
"['controller', 'issue', 'flakey', 'amongsporadic', 'ranjan', 'shivesh']",{'issue': 100}
"['increase', 'execution', 'transaction', 'issue', 'lease', 'range', 'ranjan', 'shivesh']",{'issue': 100}
"['version', 'master', 'issue', 'branchjoshi']",{'issue': 100}
"['group', 'client', 'issue', 'reader', 'subscriberconsistent', 'unsubscription', 'necessary', 'subscription', 'operation', 'readergroup', 'controller']",{'issue': 100}
"['badge', 'issue']",{'issue': 100}
"['attail', 'integration', 'issue', 'checkattail', 'readtest', 'assertion']",{'issue': 100}
"['issue', 'flakyblockpbelgundi']",{'issue': 100}
"['permission', 'operation', 'readergroup', 'issue', 'controller', 'permission', 'readergroup', 'operation', 'permission', 'ensure']","{'permission': 100, 'issue': 100}"
"['documentation', 'refine', 'security', 'issue', 'clusterdocument', 'minor', 'material', 'generation', 'revise', 'descriptionimproves']","{'Security': 100, 'issue': 100, 'generation': 100}"
"['issue', 'client', 'loggingwenqi', 'signedgracia']",{'issue': 100}
"['store', 'segment', 'issue', 'flakystore', 'segment', 'various', 'fixing', 'futureshutdown', 'handler', 'deadlock', 'error', 'initiate', 'manner', 'async', 'unaccount', 'effect', 'certain', 'segment', 'parent', 'readresult', 'concurrency', 'source', 'service', 'startup', 'andrei', 'paduroiu']","{'issue': 100, 'deadlock': 100, 'concurren': 90}"
"['configuration', 'issue', 'subscriber', 'changingchange', 'configuration', 'subscription', 'config', 'readergroup', 'stream', 'subscriber', 'false', 'config', 'readergroup', 'multiple', 'subscriber', 'stayingpbelgundi']",{'issue': 100}
"['message', 'issue', 'message', 'incorrectgracia']",{'issue': 100}
"['support', 'issue', 'streamcuts', 'controllerstore', 'empty', 'identify', 'check']",{'issue': 100}
"['final', 'kvtable', 'check', 'issue', 'incorrect', 'value', 'deletion', 'cachestore', 'final', 'fetch', 'kvtable', 'check', 'deletion', 'state', 'actualgracia']","{'issue': 100, 'incorrect': 100}"
"['issue', 'actioncheckstyle', 'coverage', 'spotbugs', 'buildderek', 'andreipaduroiu', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'deprecate', 'favor', 'appropriatedeprecate']",{'issue': 100}
"['issue', 'controller', 'reader', 'group', 'update', 'deletelifecycle', 'management', 'readergroup', 'manage', 'controller', 'generationpbelgundi']",{'issue': 100}
"['client', 'stream', 'issue', 'delegation', 'accesswrite', 'corresponding', 'internal', 'client', 'stream', 'delegation', 'watermark']",{'issue': 100}
"['redundant', 'issue', 'request', 'batchclientrequest']",{'issue': 100}
"['collection', 'issue', 'robust', 'garbagerobust', 'collection', 'delete', 'garbagejoshi']",{'issue': 100}
"['reovery', 'issue', 'resource', 'implementationinstead', 'thread', 'command']","{'issue': 100, 'thread': 100}"
"['issue', 'branchmaster', 'integration', 'descriptiondifferent', 'storage', 'iterator', 'segment', 'listingintroduction', 'logic', 'recovery', 'registerintegration', 'recovery', 'segmentcommand', 'execution']",{'issue': 100}
"['admin', 'function', 'security', 'pravega']",{'Security': 100}
"['element', 'order', 'limit', 'transaction', 'issuetransaction', 'issue', 'ranjan', 'shivesh']",{'issue': 100}
"['utility', 'clusterwrapper', 'issue', 'enhancement', 'integrationinitialize', 'usage', 'controller', 'enhance', 'clusterwrapper']",{'issue': 100}
"['chunk', 'issue', 'handlesnapshot', 'failure', 'skippingjoshi']",{'issue': 100}
"['exception', 'issue', 'connection', 'incase', 'ensurethrow', 'exception', 'connection', 'incase']",{'issue': 100}
"['sequential', 'issue', 'parallelallow', 'sequential', 'operation', 'paralleljoshi', 'andreipaduroiu', 'andrei', 'paduroiu']",{'issue': 100}
"['storage', 'segmentstore', 'issue', 'number', 'reducingbtree', 'andrei', 'paduroiu']",{'issue': 100}
"['efficient', 'eviction', 'issue', 'implementation', 'guava', 'index', 'auxiliary', 'structure']",{'issue': 100}
"['version', 'bookkeeper', 'issue', 'upgrade', 'stableversion', 'bookkeeper', 'dockerfile', 'pravega']",{'issue': 100}
"['permission', 'issue', 'rshardachange', 'descriptionresource', 'string', 'parent', 'scope', 'operation', 'creation', 'table', 'value', 'modify']","{'permission': 100, 'issue': 100}"
"['upgrade', 'issue', 'jacksonsecurity', 'address', 'update', 'kotlasaicharan', 'saicharan']",{'issue': 100}
"['cacerts', 'openjdk', 'image', 'issue', 'addingcacerts', 'openjdk', 'system', 'truststore', 'installs']",{'issue': 100}
"['issue', 'serializers', 'intrinsicbufferview', 'serialization', 'bytebuffer', 'frequent', 'serializers', 'putshort', 'andrei', 'paduroiugracia']",{'issue': 100}
"['gradle', 'script', 'image', 'specific', 'bookkeeper', 'system', 'issue', 'accommodate', 'adaptbookkeeper', 'operator', 'paramanishakj']",{'issue': 100}
"['consumption', 'stream', 'issue', 'subscriber', 'retentionremove', 'policy', 'consumption', 'stream', 'subscriber', 'retention', 'publishedspace', 'retention', 'limitpbelgundi']",{'issue': 100}
"['stream', 'issue', 'delegation', 'watermark', 'client', 'delegation']",{'issue': 100}
"['issue', 'bytebuf', 'conditional', 'addingwenqi', 'andreipaduroiu', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'cluster']",{'issue': 100}
"['issue', 'credential', 'interface']",{'issue': 100}
"['exception', 'segmentstore', 'issue', 'loggingerror', 'andrei', 'paduroiu']",{'issue': 100}
"['reader', 'lastcheckpoint', 'issue', 'streamcut', 'updatetruncation', 'consumption', 'stream', 'controller', 'retentionpbelgundi']",{'issue': 100}
"['issue', 'truncate', 'offsetstart', 'truncate', 'offsetjoshi']",{'issue': 100}
"['project', 'reuse', 'security', 'issue', 'registry', 'organizationgradle', 'handler', 'module', 'client', 'controller', 'class', 'reusablehandler', 'modifies', 'plugins', 'interface', 'dependency', 'controller', 'plugin']","{'Security': 100, 'issue': 100}"
"['segmentstore', 'issue', 'storagewriter', 'durablelogstorage', 'memory', 'durablelogefficient', 'internals', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'connection', 'ensure', 'writer', 'client', 'connection', 'pravega', 'ensure', 'writer', 'future', 'returnedconnectivity', 'client', 'incase', 'ensure']",{'issue': 100}
"['vulnerability', 'order', 'client', 'security', 'issue', 'upgrade', 'addressversion', 'client', 'maven']","{'Security': 100, 'issue': 100}"
"['consumption', 'issue', 'controller', 'generation', 'retentionstale', 'field', 'executes', 'client', 'controller', 'ensure', 'generation', 'value', 'subscriber', 'updatepbelgundi']","{'issue': 100, 'generation': 100}"
"['issue', 'controller', 'ranjan', 'shivesh']",{'issue': 100}
"['consumption', 'policy', 'issue', 'implementation', 'ranjan', 'shiveshchange', 'descriptionimplement', 'primarilyconsolidates', 'computes', 'stream', 'applies', 'metadata', 'subscriber', 'computation', 'store', 'segment', 'logic', 'stream', 'validation', 'metadata', 'update']",{'issue': 100}
"['segmentstore', 'issue', 'standalonestore', 'segment', 'support', 'verification', 'client', 'client', 'endpoint', 'controller', 'hostnamewenqi']",{'issue': 100}
"['issue', 'permissionpermission', 'delegation', 'tokendefault', 'internal', 'permission', 'statesynchronizerconfigurationpermission', 'determines', 'resource', 'formatauthorize', 'reader', 'group', 'writeswatermarkrepresent', 'class', 'creates', 'accessmodifiesimplementation', 'accessobtain']","{'issue': 100, 'permission': 100}"
"['bookkeeper', 'client', 'issue', 'entry', 'cacheforce', 'store', 'segment', 'resolution', 'mechanism', 'bookkeeper', 'client', 'defensive', 'containergracia']",{'issue': 100}
"['issue', 'junits', 'flakyjunit']",{'issue': 100}
"['synchronous', 'issue', 'asyncchunkstorage', 'synchronous', 'transaction']",{'issue': 100}
"['issue', 'updateupdatederek', 'mooreroadmap', 'release', 'internalderek', 'moorebullet', 'section', 'future', 'nestedderek', 'issue', 'consumption', 'retentionderek', 'moorewriter', 'idempotent', 'issuederek', 'mooreclient', 'native', 'phase', 'pythonderek']",{'issue': 100}
"['segmentstore', 'operation', 'level', 'issue', 'adjustable', 'prioritysegment', 'abilityprioritize', 'segment', 'segmentsegment', 'system', 'metadata', 'containerstorage', 'segment', 'system', 'andrei', 'paduroiu']",{'issue': 100}
"['controller', 'issue', 'subscriber', 'removestream', 'update', 'subscriber', 'removepbelgundi']",{'issue': 100}
"['equal', 'optimization', 'issue', 'common', 'project', 'andrei', 'paduroiu']",{'issue': 100}
"['snapshot', 'stage', 'issue']",{'issue': 100}
"['controller', 'issue', 'project', 'system', 'controller', 'referenceinstead', 'enable', 'version', 'system', 'controller']",{'issue': 100}
"['segmentstore', 'issue', 'segment', 'parent', 'situation', 'deadlock', 'andrei', 'paduroiu']","{'issue': 100, 'deadlock': 100}"
"['pravega', 'issue', 'credential', 'parsingcredential', 'parse', 'modify']",{'issue': 100}
"['resource', 'format', 'issue', 'credential', 'update', 'handlingsplit', 'modifies', 'credential', 'character']",{'issue': 100}
"['stream', 'checkpoint', 'issue', 'reader', 'group', 'silent', 'stream', 'checkpoint']",{'issue': 100}
"['spotbugsdisable', 'report', 'generation']",{'generation': 100}
"['segmentstore', 'issue', 'storage', 'andrei', 'paduroiu']",{'issue': 100}
"['segmentstore', 'infinite', 'issue', 'possible', 'fixedinfinite', 'contains', 'operation', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'batch', 'single', 'ranjan', 'shivesh']",{'issue': 100}
"['repository', 'issue', 'different', 'interactive', 'admin', 'pravega', 'functionalitygracia']",{'issue': 100}
"['issue', 'protobuf', 'versionprotobuf', 'versionresult', 'reflective', 'warning']",{'issue': 100}
"['client', 'issue', 'connection', 'ensuresocket', 'client', 'terminates', 'connection']",{'issue': 100}
"['transaction', 'issue', 'ensure', 'referencereference']",{'issue': 100}
"['system', 'deployment', 'issue', 'pravega', 'operator', 'system', 'operator', 'pravega']",{'issue': 100}
"['segmentstore', 'issue', 'setting', 'upstream', 'andrei', 'paduroiu']",{'issue': 100}
"['compatibility', 'issue', 'possible', 'potentiallyplatform', 'specific', 'directory', 'target', 'proper', 'withincatch', 'procedure', 'block']",{'issue': 100}
"['limit', 'transaction', 'issue', 'number', 'ranjan', 'shivesh']",{'issue': 100}
"['stream', 'issue', 'ensureensure', 'stream']",{'issue': 100}
"['exception', 'issue', 'message', 'ranjan', 'shiveshchange', 'descriptiondespite', 'stream', 'streamcut', 'method', 'truncate', 'producingpurpose', 'changereason', 'previous', 'message', 'record', 'truncation', 'short', 'newrecord', 'streamcut', 'intent', 'truncation', 'message', 'streamcutverify']",{'issue': 100}
"['script', 'parameter', 'system', 'property', 'issue', 'script', 'parameter', 'system', 'property']",{'issue': 100}
"['segmentstore', 'stats', 'index', 'issue', 'concurrency', 'fixedsummary', 'tkaitchuck', 'kaitchuck']","{'issue': 100, 'concurren': 90}"
"['deletestreams', 'stream', 'issue', 'ranjan', 'shivesh']",{'issue': 100}
"['snapshot', 'revert', 'stage', 'issue']",{'issue': 100}
"['ensure', 'issue', 'terminationensure', 'shutdown']",{'issue': 100}
"['store', 'segment', 'issue', 'integration', 'visiblestore', 'segment']",{'issue': 100}
"['segmentstore', 'issue', 'segment', 'enablingresult', 'segment', 'client', 'andrei', 'paduroiu']",{'issue': 100}
"['ability', 'issue', 'systemability']",{'issue': 100}
"['stream', 'scope', 'issue']",{'issue': 100}
"['script', 'check', 'issue']",{'issue': 100}
"['native', 'netty', 'issue', 'dependency', 'epolltransport', 'native', 'netty']",{'issue': 100}
"['segment', 'segmentstore', 'issue', 'table', 'default', 'readresult', 'interface', 'buffer', 'behavior', 'ability', 'cache', 'jayant', 'joshi', 'sachin']","{'issue': 100, 'buffer': 100}"
"['metric', 'issue', 'misconfigsdefault', 'segmentstore', 'config', 'issue', 'controller', 'source', 'propagation', 'jayant', 'joshi', 'sachin']",{'issue': 100}
"['partition', 'issue', 'creation', 'integrationpartitioncount', 'precondition', 'checkpbelgundi']",{'issue': 100}
"['metric', 'manager', 'issue', 'cacheinstead', 'metric', 'instance', 'field', 'staticregistry', 'meter', 'andreipaduroiu', 'andrei', 'paduroiu']",{'issue': 100}
"['snapshot', 'stage', 'issue', 'releasesnapshot', 'stage']",{'issue': 100}
"['tablesegment', 'issue', 'andrei', 'paduroiu']",{'issue': 100}
"['external', 'validate', 'internal', 'stream', 'issueexternal', 'internal', 'length']",{'length': 100}
"['issue', 'version', 'modifyversion']",{'issue': 100}
"['scope', 'length', 'check', 'stream', 'issue', 'characterscope', 'length', 'check', 'limit', 'stream', 'characteratharva', 'joshi']","{'length': 100, 'issue': 100}"
"['issue', 'appendappendsetup']",{'issue': 100}
"['segmentstore', 'chunk', 'issue', 'header', 'storage', 'segment', 'generic', 'contentremove', 'segment', 'truncation', 'making', 'chunk', 'header', 'flavio', 'junqueira']",{'issue': 100}
"['sanitize', 'metadata', 'issue', 'loggingsantize', 'metadata']",{'issue': 100}
"['target', 'issue', 'patchderek']",{'issue': 100}
"['internal', 'stream', 'issue', 'space', 'reclaim', 'event', 'position', 'stream', 'controller', 'ranjan', 'shivesh']",{'issue': 100}
"['point', 'issue', 'scheme', 'pravega', 'reference', 'website', 'modifyreference', 'website']",{'issue': 100}
"['condition', 'segmentstore', 'issue', 'index', 'eviction', 'situation', 'target', 'entry', 'evicts', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'cachemanagercachemanager', 'metric', 'complete', 'track', 'timer']",{'issue': 100}
"['issue', 'failsissuepbelgundi']",{'issue': 100}
"['ranjan', 'shiveshchange', 'descriptionreplace', 'consistency', 'implementation', 'cachepurpose', 'changestore', 'record', 'mutable', 'value', 'result', 'problem', 'function', 'optimize', 'check', 'consistency', 'invocation', 'concurrent']",{'concurrent': 100}
"['calculation', 'issue', 'client', 'batchreverts', 'calculation', 'appendsinbatchmultiple', 'problem', 'latencythroughput', 'segmentgracia']",{'issue': 100}
"['issue', 'buildbuildjoshi']",{'issue': 100}
"['upgrade', 'issue', 'nettyversion', 'client', 'netty']",{'issue': 100}
"['requisite', 'zookeeper', 'bookkeeper', 'issue', 'documentation', 'updateversion', 'reference', 'andreipaduroiu', 'andrei', 'paduroiu']",{'issue': 100}
"['enhancement', 'standalone', 'issue', 'separate', 'stdout', 'information', 'visibility', 'destinationhighlight', 'increase', 'config', 'detail', 'visibility']",{'issue': 100}
"['generation', 'logic', 'issuegeneration']",{'generation': 100}
"['segment', 'pointer', 'segmentstore', 'index', 'issue', 'attribute', 'fixedinitialize', 'btreeindex', 'fixedstore', 'segment', 'logback', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'storage', 'simplifiedstorage', 'simplifiedjoshi', 'andreipaduroiu', 'andrei', 'paduroiu']",{'issue': 100}
"['ensure', 'thrown', 'issue', 'connectionensure', 'thrown']",{'issue': 100}
"['policy', 'system', 'issue', 'integration', 'ranjan', 'shiveshchange', 'policy', 'system', 'integration', 'retentionpurpose', 'changedefault', 'frequency', 'value', 'integration', 'retentionintegration']",{'issue': 100}
"['issue', 'controller', 'retentionindicate', 'periodic', 'stream', 'level', 'retention', 'statuspbelgundi']",{'issue': 100}
"['client', 'issue']",{'issue': 100}
"['store', 'segment', 'timeout', 'issue', 'request', 'controllerstore', 'segment', 'timeout', 'request', 'ranjan', 'shivesh']",{'issue': 100}
"['version', 'iteration', 'issue', 'table', 'entry', 'offsetposition', 'iteration', 'tablesegmentapproach', 'iterator', 'position', 'tableentries', 'exists']",{'issue': 100}
"['config', 'issue', 'retentiongranularity']",{'issue': 100}
"['removal', 'segment', 'conditional', 'issue', 'table', 'update', 'offsetremovetablekeys', 'conditional', 'logic', 'update', 'andreipaduroiu', 'andrei', 'tkaitchuck', 'kaitchuck']",{'issue': 100}
"['issue', 'configurationconfiguration', 'template']",{'issue': 100}
"['issue', 'interactiveinitial', 'interactive', 'support', 'stream', 'pravega', 'andrei', 'paduroiu']",{'issue': 100}
"['javadoc', 'issue', 'source', 'javadoc', 'source', 'ensure', 'medvedevigorek', 'medvedev']",{'issue': 100}
"['limit', 'issue', 'value', 'maximum', 'value', 'family', 'keyvaluetablevalue', 'family', 'lengthexceeds', 'andrei', 'paduroiu']",{'issue': 100}
"['exception', 'issue']",{'issue': 100}
"['streamhelpers', 'check', 'readall', 'issue', 'target', 'paramstreamhelpers', 'check', 'readall', 'stream', 'precondition', 'paramderek']",{'issue': 100}
"['segment', 'segmentstore', 'issue', 'table', 'bufferviewsbufferview', 'inbound', 'number', 'tablestore', 'value', 'outboundbufferview', 'implementationchange', 'hasharray', 'redundantnumber', 'method', 'andrei', 'paduroiugracia']",{'issue': 100}
"['compatibility', 'strategy', 'resolution', 'configuration', 'property', 'issue', 'backward', 'modifystrategy', 'legacy', 'property']",{'issue': 100}
"['segment', 'recovery', 'parallel', 'issue', 'control', 'containerstart', 'recovery', 'number', 'control', 'containergracia']",{'issue': 100}
"['reflect', 'configuration', 'property', 'issue', 'documentation', 'updatereflect', 'configuration', 'property', 'documentation']",{'issue': 100}
"['scale', 'issue', 'processor', 'instantiate', 'andreipaduroiu', 'andrei', 'paduroiu']",{'issue': 100}
"['upgrade', 'issue', 'nettyupgrade', 'version', 'nettyenrico', 'eolivelli', 'olivelligracia', 'andreipaduroiu', 'andrei']",{'issue': 100}
"['transaction', 'issue', 'updatesegment', 'transaction', 'updatekevinhan']",{'issue': 100}
"['configuration', 'system', 'property', 'issue', 'erroneousproperty', 'configuration', 'system']",{'issue': 100}
"['issue', 'release', 'resource', 'nettyensure', 'release', 'nettyenrico', 'eolivelli', 'olivelli']",{'issue': 100}
"['issue', 'uniform', 'consistent', 'configurationacross', 'configuration', 'modifiesbackward', 'support']",{'issue': 100}
"['reader', 'computation', 'issue', 'internal', 'costly', 'compute', 'cycle', 'reader', 'manage', 'minimizinggracia']",{'issue': 100}
"['project', 'issue', 'explicit', 'dependencygradle', 'dependency', 'pravega', 'implementation', 'referenceenrico', 'eolivelli', 'olivelli']",{'issue': 100}
"['stream', 'issue', 'handlingstream']",{'issue': 100}
"['enable', 'segment', 'segmentstore', 'issue', 'controller', 'table', 'table', 'compaction', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'notice', 'updatenotice', 'update', 'flavio', 'junqueira']",{'issue': 100}
"['output', 'selftester', 'issue', 'latency', 'totalperformance', 'print', 'latency']",{'issue': 100}
"['streaminfo', 'issue']",{'issue': 100}
"['upgrade', 'issue', 'bookkeeperupgrade', 'image', 'docker', 'bookkeeperreplaces', 'writehandle', 'usage', 'ledgerhandlebasedenrico', 'eolivelli', 'olivelli']",{'issue': 100}
"['issue', 'pravega', 'buildupgradespotbugsmockitojacocoenrico', 'eolivelli', 'olivelli']",{'issue': 100}
"['javadoc', 'issue', 'pravega', 'buildoption', 'configuration', 'eolivelli', 'olivellienrico', 'andreipaduroiu', 'andrei', 'tkaitchuck', 'kaitchuck']",{'issue': 100}
"['fetch', 'issue', 'controllergiven', 'fetch', 'controller', 'segmentensure']",{'issue': 100}
"['upgrade', 'issue', 'lomboklombok', 'issue', 'pravega', 'buildupgrade', 'lombokannotation', 'adapts', 'lombok', 'wither', 'annodationenrico', 'eolivelli', 'olivelli']",{'issue': 100}
"['hello', 'issue', 'reply', 'flushhello', 'flushgracia']",{'issue': 100}
"['bugfix', 'thrown', 'transaction', 'issue', 'ensure', 'stateensure']",{'issue': 100}
"['object', 'issue', 'library']",{'issue': 100}
"['event', 'exception', 'throttle', 'issue', 'releasethrottle', 'release']",{'issue': 100}
"['application', 'issue', 'official', 'integration', 'entryenrico', 'eolivelli', 'olivelli']",{'issue': 100}
"['appends', 'expiration', 'token', 'issue', 'delegation', 'honorprevent', 'token', 'expiry', 'authenticates', 'client', 'andreipaduroiu', 'andrei', 'paduroiu']",{'issue': 100}
"['truncation', 'issue', 'system', 'bytestreamsystem']",{'issue': 100}
"['truncation', 'issue']",{'issue': 100}
"['issue', 'buffer', 'appenddecoderstore', 'segment', 'buffer', 'source', 'target', 'ingestion', 'andrei', 'paduroiu']","{'issue': 100, 'buffer': 100}"
"['issue', 'batchclient', 'ensure', 'partial', 'responseempty', 'bytebuffer', 'partial', 'response']",{'issue': 100}
"['input', 'startexception', 'wasteful', 'compute', 'stream', 'workflow', 'issue', 'ranjan', 'shiveshgracia']",{'issue': 100}
"['bucket', 'stream', 'issue', 'watermark', 'reference', 'deletionremove', 'bucket', 'stream', 'watermark', 'ranjan', 'shivesh']",{'issue': 100}
"['documentation', 'issue', 'watermarkdiscussion', 'flink', 'example', 'section', 'rewritereformats', 'documentlowertimebound', 'consistent', 'uppertimebounddefinition', 'refines', 'flavio', 'junqueira']",{'issue': 100}
"['bugfix', 'issue', 'serializationensure', 'serialization', 'tobytes']",{'issue': 100}
"['inputstreams', 'segmentstore', 'issue', 'bufferviewsreturn', 'result', 'bufferview', 'extra', 'implementation', 'method', 'unnecessary', 'bytebuffer', 'payload', 'memory', 'sends', 'andrei', 'paduroiugracia']",{'issue': 100}
"['documentation', 'issue', 'perry', 'goldstein']",{'issue': 100}
"['issue', 'client', 'reduceusage', 'attempt']",{'issue': 100}
"['segment', 'revert', 'recovery', 'parallel', 'issue', 'control', 'containerreverts', 'commitgracia']",{'issue': 100}
"['revert', 'issue', 'serializationreverts']",{'issue': 100}
"['bookkeeperlog', 'issue', 'reconciliationreconcile', 'metadata', 'andrei', 'paduroiu']",{'issue': 100}
"['secret', 'issue', 'volume', 'internal', 'certificate', 'order', 'trust', 'pravega', 'installationscript', 'location', 'certificate', 'secret', 'volume']",{'issue': 100}
"['segmentstore', 'issue', 'andrei', 'paduroiu']",{'issue': 100}
"['segmentstore', 'issue', 'deadlock', 'condition', 'cachemanager', 'mutex', 'concurrent', 'serialize', 'request', 'cleanup', 'clean', 'backoff', 'retry', 'andrei', 'paduroiu']","{'issue': 100, 'deadlock': 100, 'concurrent': 100}"
"['issue', 'serializationensure', 'serialization', 'tobytes']",{'issue': 100}
"['issue', 'version', 'dependencyversion']",{'issue': 100}
"['artifact', 'issue', 'binary', 'licenseinclude', 'notice', 'binary', 'medvedevigorek', 'medvedev']",{'issue': 100}
"['issue', 'buffer', 'configuredenables', 'reader']","{'issue': 100, 'buffer': 100}"
"['thrown', 'issue', 'indefinitelygracia', 'andreipaduroiu', 'andrei', 'paduroiu']",{'issue': 100}
"['truststore', 'issue', 'addeddefault', 'segmentstore', 'certificate', 'initialization']",{'issue': 100}
"['segment', 'recovery', 'parallel', 'issue', 'control', 'containerenforces', 'sequential', 'recovery', 'multiple', 'containergracia']",{'issue': 100}
"['failure', 'unknownhost', 'store', 'helper', 'issue', 'request', 'table', 'update', 'ranjan', 'shivesh']",{'issue': 100}
"['kuberentes', 'version', 'client', 'issue', 'updateclient', 'kubernetes', 'versionreflect', 'method']",{'issue': 100}
"['issue', 'controllercommit']",{'issue': 100}
"['assert', 'issue']",{'issue': 100}
"['enable', 'configuration', 'runtime', 'issue', 'reload']",{'issue': 100}
"['small', 'segment', 'issue', 'source', 'usinginstead', 'segment', 'complete', 'multi', 'source', 'append', 'targetsegment', 'multi', 'source', 'upload']",{'issue': 100}
"['empty', 'segmentstore', 'infinite', 'issue', 'storagewriter', 'possible', 'fixedempty', 'andrei', 'paduroiugracia']",{'issue': 100}
"['corruption', 'segment', 'segmentstore', 'index', 'issue', 'concurrent', 'cachesegment', 'corrupt', 'eviction', 'concurrent', 'andrei', 'paduroiugracia']","{'issue': 100, 'concurrent': 100}"
"['transaction', 'issue', 'deadline', 'exception', 'simplify', 'controller', 'relatedensure', 'response']",{'issue': 100}
"['whole', 'client', 'issue', 'inputstream', 'rollingstorage', 'consumesprevent', 'reading', 'sends', 'storage', 'whole', 'client', 'adapter', 'inputstream', 'system', 'simulate', 'invalidrange', 'behaviorjoshi']",{'issue': 100}
"['segmentstore', 'index', 'issue', 'concurrent', 'fixedsecond', 'storage', 'memory', 'potential', 'override', 'request', 'append', 'andrei', 'paduroiu']","{'issue': 100, 'concurrent': 100}"
"['snapshot', 'issue', 'andrei', 'paduroiu']",{'issue': 100}
"['extendeds', 'issue', 'problem', 'prefix', 'check', 'listobjectjoshi']",{'issue': 100}
"['segmentstore', 'index', 'issue', 'concurrent', 'fixedstorage', 'memory', 'potential', 'override', 'request', 'append', 'andrei', 'paduroiu']","{'issue': 100, 'concurrent': 100}"
"['style', 'config', 'client', 'construction', 'issue', 'usingstyle', 'config', 'client']",{'issue': 100}
"['issue', 'unsafethrow']",{'issue': 100}
"['memory', 'segmentstore', 'frame', 'issue', 'allocationcomposite', 'allocates', 'memory', 'efficient', 'dataframe', 'buffer', 'single', 'andrei', 'paduroiu']","{'issue': 100, 'buffer': 100}"
"['early', 'issue', 'reader', 'response']",{'issue': 100}
"['segmentstore', 'manager', 'issue', 'cachecachemanager', 'cachestatus', 'meaningful', 'calculate', 'generation', 'fixedcachemanager', 'refresh', 'excessive', 'client', 'andrei', 'paduroiu']","{'issue': 100, 'generation': 100}"
"['segmentstore', 'issue', 'unable', 'persist', 'pointer', 'segment', 'andrei', 'paduroiu']",{'issue': 100}
"['extendeds', 'issue', 'configextendeds', 'prefix', 'config', 'adapter']",{'issue': 100}
"['default', 'issue', 'digestoption', 'configuration', 'bookkeeper', 'digestdefault', 'bookkeeper']",{'issue': 100}
"['metric', 'eviction', 'issue', 'cacheminute', 'metric', 'timeout', 'eviction']",{'issue': 100}
"['module', 'doclint', 'issue', 'enablingdoclint', 'sebastian', 'bibin']",{'issue': 100}
"['error', 'issue', 'javadoc', 'reduceerror', 'issue', 'javadoc', 'reduceerror', 'javadoc', 'sebastian', 'bibin']",{'issue': 100}
"['healthcheck', 'issue']",{'issue': 100}
"['level', 'issue', 'adjustlower', 'level']",{'issue': 100}
"['active', 'transaction', 'issue', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'replacesubsegment', 'slice']",{'issue': 100}
"['segment', 'issue', 'reader', 'partial', 'responsesecond', 'store', 'segment', 'confirmation', 'current', 'resends', 'stream', 'request', 'offsetevent', 'reader', 'resends', 'stream', 'complete', 'request', 'frame', 'ensure', 'tkaitchuck', 'kaitchuck']",{'issue': 100}
"['issue', 'javadocmethod', 'sebastian', 'bibin']",{'issue': 100}
"['stream', 'transaction', 'issue', 'abort', 'ranjan', 'shivesh']",{'issue': 100}
"['client', 'stream', 'issue', 'ranjan', 'shivesh']",{'issue': 100}
"['shutdown', 'failover', 'event', 'readergroups', 'issue', 'controller', 'processor', 'event', 'segment', 'swarm', 'system', 'workflow', 'issue', 'docker', 'controller', 'processor', 'ranjan', 'shiveshgracia']",{'issue': 100}
"['version', 'bookkeeper', 'issue', 'upgrade', 'server']",{'issue': 100}
"['checkstyle', 'copyright', 'issue', 'enforcevalidate', 'configuration', 'statement', 'checkstyle', 'license', 'flavio', 'junqueira']",{'issue': 100}
"['issue', 'header', 'license', 'copyrightcopyright', 'statement', 'flavio', 'junqueira']",{'issue': 100}
"['upgrade', 'issue', 'bookeeperupgrade', 'bookeeper']",{'issue': 100}
"['limit', 'readerid', 'issue']",{'issue': 100}
"['channel', 'slack', 'token', 'information', 'issue', 'updateemail', 'slack', 'notification', 'enable', 'stale', 'travis', 'pravega', 'flavio', 'junqueira']",{'issue': 100}
"['error', 'issue', 'entry', 'warns', 'metric', 'error', 'exception', 'class', 'andrei', 'paduroiu']",{'issue': 100}
"['segment', 'segmentstore', 'issue', 'attributebtreeindex', 'segment', 'pointer', 'parent', 'attributelogic', 'attribute', 'class', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'client', 'javadocjavadocs']",{'issue': 100}
"['segmentstore', 'issue', 'throttler', 'flight', 'cachethrottler', 'fetch', 'operation', 'queue', 'utilization', 'nears', 'andrei', 'paduroiu']",{'issue': 100}
"['metric', 'segmentstore', 'issue', 'storagewriter', 'andrei', 'paduroiu']",{'issue': 100}
"['client', 'issue']",{'issue': 100}
"['metric', 'issue', 'recovery', 'containermetric', 'recovery', 'track']",{'issue': 100}
"['segmentstore', 'index', 'issue', 'concurrency', 'append', 'eviction', 'append', 'possible', 'method', 'andrei', 'paduroiu']","{'issue': 100, 'concurren': 90}"
"['reading', 'ledger', 'issue', 'batch', 'entrysegment', 'recovery', 'ledger', 'container', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'availableensure', 'metric']",{'issue': 100}
"['bookiefailover', 'issue', 'sporadic', 'failuremitigate', 'event', 'restart', 'assertion', 'retry', 'timeout', 'bookie']",{'issue': 100}
"['rebalance', 'issue', 'controller', 'processor', 'ranjan', 'shivesh']",{'issue': 100}
"['channel', 'termination', 'client', 'issue', 'controller', 'logicthread', 'setting', 'exception', 'ensurejunitfinal']",{'issue': 100}
"['segment', 'reader', 'readergroup', 'issue']",{'issue': 100}
"['segment', 'check', 'scale', 'minimum', 'stream', 'issue', 'ensure']",{'issue': 100}
"['workflow', 'issue', 'watermark', 'ranjan', 'shivesh']",{'issue': 100}
"['metric', 'transaction', 'issue', 'performancemetric']",{'issue': 100}
"['swarm', 'system', 'issue', 'docker', 'failurecollision', 'swarm', 'system']",{'issue': 100}
"['issue', 'tokentoken', 'segment']",{'issue': 100}
"['client', 'issue', 'ranjan', 'shivesh']",{'issue': 100}
"['excessive', 'segmentstore', 'eviction', 'issue', 'cacheeligible', 'pressure', 'cachemanager', 'andrei', 'paduroiu']",{'issue': 100}
"['segmentstore', 'issue', 'extra', 'throttler', 'andrei', 'paduroiu']",{'issue': 100}
"['deadline', 'issue', 'ranjan', 'shivesh']",{'issue': 100}
"['direct', 'segment', 'memory', 'issue', 'cachedirect', 'segment', 'memory', 'integrates', 'block', 'implementation', 'creates', 'cacheremove', 'inmemorycache', 'rocksdb', 'implementation', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'handlehandle']",{'issue': 100}
"['increase', 'issue', 'maximum', 'eventincrease', 'event', 'limitcommand', 'increase']",{'issue': 100}
"['netty', 'issue', 'flushavoids', 'netty']",{'issue': 100}
"['error', 'appendprocessor', 'issue', 'fixingappends', 'message', 'error', 'appendprocessor', 'client', 'andrei', 'paduroiu']",{'issue': 100}
"['token', 'exception', 'reset', 'issue']",{'issue': 100}
"['issue', 'bookkeeper', 'throttlingprevent', 'store', 'segment', 'mechanism', 'bookkeeper', 'andrei', 'paduroiu']",{'issue': 100}
"['transaction', 'issue', 'multiplemultiple', 'attempt']",{'issue': 100}
"['transaction', 'issue', 'ranjan', 'shivesh']",{'issue': 100}
"['client', 'issue', 'delegation', 'ensure', 'retriesstore', 'segment', 'token', 'error', 'client', 'reauthorization', 'request', 'delegation']",{'issue': 100}
"['additional', 'issue', 'interface', 'pravega', 'ranjan', 'shivesh']",{'issue': 100}
"['segmentstore', 'issue', 'segment', 'memory', 'andrei', 'paduroiu']",{'issue': 100}
"['method', 'issue', 'manipulation', 'optimizekurilov']",{'issue': 100}
"['synchronizer', 'exception', 'issue', 'state', 'truncate', 'ensure']",{'issue': 100}
"['transaction', 'issue', 'batch', 'notewritermark', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'controlleravoid', 'controller', 'thread', 'splitdifferent', 'event']","{'issue': 100, 'thread': 100}"
"['issue', 'check', 'assertion', 'check', 'concurrent', 'andrei', 'paduroiu']","{'issue': 100, 'concurrent': 100}"
"['adapter', 'issue', 'storage', 'segment', 'payload', 'system', 'functionality', 'stillproperty', 'config', 'layernecessary', 'config', 'storageloader', 'factory']",{'issue': 100}
"['issue', 'handlingimprove', 'internal', 'distinguish', 'exception', 'authorization', 'interface']",{'issue': 100}
"['workload', 'store', 'segment', 'issue', 'sporadic', 'moderaterevert', 'config', 'setting', 'rocksdb', 'parallelism', 'partialgracia']",{'issue': 100}
"['default', 'store', 'issue', 'pravega', 'tabledefault', 'store', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'eventloopthread', 'segment', 'processing']",{'issue': 100}
"['ensure', 'issue', 'backward', 'compatabilityensure', 'backward']",{'issue': 100}
"['token', 'field', 'issue', 'delegation', 'exclude', 'method', 'generatedtoken', 'field', 'delegation', 'exclude', 'method']",{'issue': 100}
"['truncation', 'segmentstore', 'issue', 'storagewriter', 'asynctruncation', 'complete', 'storagewriter', 'andrei', 'paduroiu']",{'issue': 100}
"['different', 'store', 'segment', 'restart', 'zookeeper', 'issue', 'handlecurator', 'store', 'segment', 'zookeeper', 'client', 'factory', 'ensure', 'version', 'zookeeper', 'contains', 'important', 'library', 'upgrade', 'hostname', 'retrygracia']",{'issue': 100}
"['image', 'issue', 'updatesaxena']",{'issue': 100}
"['system', 'issue', 'autoscale', 'fixedsaxena']",{'issue': 100}
"['ensure', 'issue', 'updateensure']",{'issue': 100}
"['token', 'automatic', 'renewal', 'issue', 'delegationtoken', 'introduces']",{'issue': 100}
"['spotbug', 'warning', 'javadoc', 'check', 'issue', 'lombok', 'generationgradle', 'generatejavadoc', 'custom']",{'issue': 100}
"['stream', 'issue', 'ranjan', 'shivesh']",{'issue': 100}
"['transport', 'epoll', 'issue', 'pravega', 'ensuretransport', 'epoll', 'client', 'native', 'pravega']",{'issue': 100}
"['issue', 'openjdk', 'brokenopenjdk', 'ignore', 'oraclejdk']",{'issue': 100}
"['issue', 'connectiondefault', 'connection', 'append']",{'issue': 100}
"['travis', 'issue', 'openjdk', 'buildtravis', 'andrei', 'paduroiu']",{'issue': 100}
"['metric', 'issue', 'client', 'enableenable', 'client', 'implementation']",{'issue': 100}
"['mitigate', 'segment', 'stream', 'issue', 'latencyshorter', 'timeout', 'readergracia']",{'issue': 100}
"['client', 'netty', 'issue', 'lombok', 'dependencyensure', 'dependency', 'client', 'lombokremove', 'netty', 'controller', 'dependency']",{'issue': 100}
"['segment', 'segmentstore', 'issue', 'concurrency', 'assignment', 'fixedreport', 'segment', 'continuous', 'invocation', 'nonexistent', 'andrei', 'paduroiu']","{'issue': 100, 'concurren': 90}"
"['issue', 'fixingnever', 'ranjan', 'shivesh']",{'issue': 100}
"['client', 'system', 'truststore', 'issue', 'specifiedtruststore', 'client']",{'issue': 100}
"['workload', 'increase', 'client', 'issue', 'batch', 'throughput', 'orientedincrease', 'performance', 'client', 'batch', 'throughput', 'orientedgracia']",{'issue': 100}
"['dependency', 'issue', 'update', 'versiondocker', 'clientobject', 'clientspotbugsannotation', 'spotbugsguavajerseyclient', 'marathonjersey', 'swagger']",{'issue': 100}
"['segmentstore', 'swarm', 'scale', 'issue', 'dockerconsistent', 'store', 'segment', 'image', 'currentatharva', 'joshi']",{'issue': 100}
"['issue', 'watermark', 'writerprevious', 'watermark', 'simplifiesevent', 'tuple', 'client', 'issue', 'revision', 'watermark', 'ranjan', 'shivesh']",{'issue': 100}
"['segmentstore', 'issue', 'segment', 'rollingabsolute', 'segment', 'setting', 'chunk', 'andrei', 'paduroiu']",{'issue': 100}
"['writer', 'issue', 'ranjan', 'shivesh']",{'issue': 100}
"['writerid', 'issue', 'controllerimpl', 'ranjan', 'shivesh']",{'issue': 100}
"['message', 'segmentstore', 'error', 'issue', 'replaceifequalsmessage', 'error', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'controllerdocumentation', 'generate']",{'issue': 100}
"['issue', 'startstandalone', 'enableensure', 'gradle']",{'issue': 100}
"['closable', 'issue']",{'issue': 100}
"['security', 'standalone', 'issue', 'information', 'security']","{'Security': 100, 'issue': 100}"
"['issue', 'watermarkingsupport', 'ranjan', 'shivesh']",{'issue': 100}
"['bugfix', 'ingestion', 'segmentstore', 'pipeline', 'issue', 'starvation', 'possible', 'throttlinginduce', 'everyfrequent', 'eviction', 'ability', 'delay', 'cache', 'utilization', 'sinceenable', 'pipeline', 'ingestion', 'andrei', 'paduroiu']",{'issue': 100}
"['configuration', 'security', 'issue', 'documentation', 'updateenvironment']","{'Security': 100, 'issue': 100}"
"['storeexception', 'submission', 'workflow', 'issue', 'writeconflictexception', 'thrown', 'unwrapsstore', 'table', 'retriesresult', 'conflict', 'exception', 'thrown', 'updateexception', 'store', 'callerevent', 'processing', 'workflow', 'encounter', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'stall', 'controller', 'processor', 'sessionawaits', 'issue', 'stall', 'ranjan', 'shivesh']",{'issue': 100}
"['propagates', 'issue']",{'issue': 100}
"['store', 'segment', 'divergent', 'configuration', 'support', 'issue', 'controllerstore', 'segment', 'support']",{'issue': 100}
"['multiple', 'issue', 'retryfetch', 'multiple', 'update']",{'issue': 100}
"['static', 'issue', 'password']",{'issue': 100}
"['issue', 'recreation', 'readergroupremove', 'segment', 'hardcodingsealedsegment']",{'issue': 100}
"['system', 'level', 'issue', 'swarm', 'client', 'system', 'level', 'docker', 'debuganishakj']",{'issue': 100}
"['issue', 'operator', 'systemclusterrole', 'enable', 'system', 'pravega']",{'issue': 100}
"['image', 'zookeeper', 'system', 'issue', 'configurableimage', 'zookeeper', 'parameter', 'system', 'configurableanishakj']",{'issue': 100}
"['additional', 'issue', 'delegation', 'token', 'statement', 'scenario', 'delegation', 'controller']",{'issue': 100}
"['store', 'segment', 'refresh', 'certificate', 'issue', 'reloadstore', 'segment', 'configuration', 'certificate', 'reload', 'determines']",{'issue': 100}
"['calculation', 'issue', 'pending', 'netty', 'connection', 'maintainingmunegowda']",{'issue': 100}
"['metric', 'lookup', 'system', 'issue', 'metric', 'system', 'lookup', 'property']",{'issue': 100}
"['common', 'shorter', 'segmentstore', 'issue', 'controllercommon', 'check', 'system', 'property']",{'issue': 100}
"['checkstyle', 'issue', 'enablecheckstyle', 'wander', 'tison']",{'issue': 100}
"['appends', 'segmentstore', 'bytebuf', 'issue', 'usingbufferview', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'connection', 'writer', 'improvementappends', 'channel', 'performance', 'current', 'netty']",{'issue': 100}
"['checkpoint', 'issue', 'cancelingprevents']",{'issue': 100}
"['store', 'external', 'segment', 'endpoint', 'issue', 'store', 'external', 'segment', 'annotation', 'hostname', 'address', 'publishedpbelgundi']",{'issue': 100}
"['exception', 'stream', 'issue', 'meaningful', 'exception', 'meaningful', 'ranjan', 'shivesh']",{'issue': 100}
"['return', 'operation', 'stream', 'issue', 'controller', 'authorizedoperation', 'issue', 'controller']",{'issue': 100}
"['excess', 'issue', 'andrei', 'paduroiu']",{'issue': 100}
"['exception', 'stream', 'issue', 'creation', 'concurrent', 'chancerather', 'ranjan', 'shivesh']","{'issue': 100, 'concurrent': 100}"
"['completionstage', 'issue', 'creationreduces', 'fillbuffer', 'creation']",{'issue': 100}
"['segmentstore', 'management', 'issue', 'tweak', 'backlog', 'debug', 'delaycommit', 'backlog', 'delay', 'throttlingbegin', 'utilization', 'delay', 'target', 'cachebegin', 'configuration', 'defines', 'manager', 'utilization', 'throttler', 'value', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'docker', 'pravega', 'buildcreates', 'docker', 'pravega']",{'issue': 100}
"['close', 'sends', 'message', 'issue', 'buffer', 'ensureclose', 'sends', 'message', 'ensures']","{'issue': 100, 'buffer': 100}"
"['alive', 'client', 'issue']",{'issue': 100}
"['issue', 'removeremove', 'usage', 'compilation']",{'issue': 100}
"['parameter', 'issue', 'ensure', 'parameter', 'ensure', 'validation']",{'issue': 100}
"['segment', 'segmentstore', 'recovery', 'operation', 'issue', 'partial', 'containerwould', 'durablelog', 'operation', 'andrei', 'paduroiu']",{'issue': 100}
"['event', 'issue', 'connection']",{'issue': 100}
"['issue', 'backlog', 'throttlerincrease', 'total', 'throttle', 'aggressive', 'backlog', 'throttlercommit', 'exceeds', 'queuecount', 'threshold', 'delayreason', 'throttlingcommit', 'store', 'segment', 'memory', 'metric', 'record', 'andrei', 'paduroiu']",{'issue': 100}
"['gradle', 'issue', 'upgrade', 'plugin', 'protobufupgrade', 'plugin', 'gradle', 'flavio', 'junqueira']",{'issue': 100}
"['metric', 'counter', 'merges', 'issue', 'gaugecounter']",{'issue': 100}
"['balancer', 'external', 'endpoint', 'issue', 'hostname', 'availablebalancer', 'retrieves', 'external']",{'issue': 100}
"['stacktrace', 'issue', 'connectionreduces', 'exceptional', 'connection', 'stacktracegracia']",{'issue': 100}
"['issue', 'header', 'license', 'header', 'paragraph', 'flavio', 'junqueira']",{'issue': 100}
"['bookkeeperlog', 'issue', 'andrei', 'paduroiu']",{'issue': 100}
"['zookeeper', 'index', 'issue', 'zookeeper', 'occasionzkorderedstore', 'fetch', 'ensures', 'transaction', 'ranjan', 'shivesh']",{'issue': 100}
"['store', 'segment', 'issue', 'usage', 'controller', 'rawclientusage', 'issue', 'ranjan', 'shivesh']",{'issue': 100}
"['store', 'scope', 'stream', 'issue', 'streamsinscope', 'znodechange', 'streamsinscope', 'store', 'scope', 'streamsinscope', 'ranjan', 'shivesh']",{'issue': 100}
"['segment', 'segmentstore', 'issue', 'segment', 'section', 'andrei', 'paduroiu']",{'issue': 100}
"['swarm', 'system', 'issue', 'docker', 'pravega', 'observedincrease', 'store', 'segment', 'instance', 'system', 'timeout', 'transaction']",{'issue': 100}
"['default', 'channel', 'performance', 'water', 'netty', 'issue', 'connection', 'update', 'improvementdefault', 'store', 'segment', 'number', 'connection', 'watermark', 'updatemunegowda']",{'issue': 100}
"['transactional', 'system', 'throttle', 'issue', 'writerintroduces', 'transactional', 'system', 'throttle', 'regular', 'writergracia']",{'issue': 100}
"['issue', 'trace', 'andrei', 'paduroiu']",{'issue': 100}
"['segment', 'parent', 'counter', 'issue', 'segment', 'parent', 'counter', 'transaction', 'deletemetric', 'activity', 'level']",{'issue': 100}
"['security', 'dependency', 'implementation']",{'Security': 100}
"['issue', 'underestimatedsecond', 'computes', 'ranjan', 'shivesh']",{'issue': 100}
"['segmentstore', 'issue', 'eviction', 'cachesegment', 'segmentoffset', 'entrylength', 'entry', 'evicts', 'andrei', 'paduroiu']",{'issue': 100}
"['expiry', 'issue', 'token', 'delegationdelegation', 'introduces', 'expiration', 'configuration', 'property', 'controller', 'determines', 'futureimplementation', 'refactors', 'interfacetoken', 'creation', 'class', 'jsonwebtoken', 'centralizestoken', 'expiration', 'client', 'verifies', 'class', 'behavior', 'integration', 'serverpermission', 'processing', 'resourceexception', 'client', 'handlinggradle']",{'issue': 100}
"['external', 'issue', 'script', 'accessensures', 'configuration']",{'issue': 100}
"['segmentstore', 'issue', 'verbosityreduces', 'andrei', 'paduroiu']",{'issue': 100}
"['collection', 'issue', 'batch', 'ranjan', 'shivesh']",{'issue': 100}
"['segmenthelper', 'issue', 'simplify', 'implementation', 'rawclientreplace', 'controller', 'rawclient', 'praveagnodeuriadapt']",{'issue': 100}
"['issue', 'inflight', 'ensure', 'writer', 'resentsegment', 'ensures', 'inflight']",{'issue': 100}
"['sporadic', 'issue', 'failure', 'buildtransaction', 'increase', 'lease', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'system', 'loggingsuppressingimprove', 'thread']","{'issue': 100, 'thread': 100}"
"['error', 'client', 'issue', 'credential', 'extractingprevent', 'environment', 'error', 'check', 'client', 'credential']",{'issue': 100}
"['invoke', 'empty', 'issue', 'value', 'ensure', 'method', 'ranjan', 'shivesh']",{'issue': 100}
"['check', 'dowhile', 'requestsweeper', 'issue', 'incorrectwhereby', 'requestsweeper', 'check', 'incorrectinfinite', 'number', 'entity', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'insidefirst']",{'issue': 100}
"['exception', 'issue', 'controller', 'handlingreachable', 'event', 'thrown', 'ensures', 'retransmit', 'inflight', 'controller', 'pravega', 'successor']",{'issue': 100}
"['internal', 'issue', 'communication', 'standalone', 'failureinternal', 'communication', 'condition', 'standalone']",{'issue': 100}
"['exception', 'issue', 'severityacquire', 'message', 'metadata', 'severitystack', 'exception', 'print', 'flavio', 'junqueira']",{'issue': 100}
"['segmentstore', 'issue', 'exception', 'assignment', 'future', 'metadatastoresegment', 'andrei', 'paduroiu']",{'issue': 100}
"['index', 'issue', 'andrei', 'paduroiu']",{'issue': 100}
"['resource', 'config', 'system', 'issue', 'valuevalue', 'configoption', 'deletesjoshi']",{'issue': 100}
"['issue', 'class', 'segmentimprove', 'segment', 'flavio', 'junqueira']",{'issue': 100}
"['object', 'issue', 'gauge', 'handlingfunction', 'atomicreference', 'order', 'point', 'gauge']",{'issue': 100}
"['bugfix', 'segment', 'issue', 'reconnectprevent', 'connection', 'writer']",{'issue': 100}
"['exception', 'issue', 'segment', 'incorrectinstead', 'segment', 'concat', 'exception', 'thrown', 'source', 'alwaysjoshi']",{'issue': 100}
"['swarm', 'system', 'docker', 'issue', 'sporadic', 'failureproblem', 'swarm', 'bookkeeper', 'system', 'scale', 'docker', 'sporadic', 'servicegracia']",{'issue': 100}
"['issue', 'client', 'issue', 'batch', 'pravega']",{'issue': 100}
"['error', 'issue', 'spotbugs', 'spotbugsremove', 'warning', 'javadoc', 'client']",{'issue': 100}
"['transaction', 'issue', 'ensureensure', 'transaction', 'client']",{'issue': 100}
"['issue', 'controller', 'implementation', 'controller']",{'issue': 100}
"['readergroup', 'issue', 'streamcut', 'validation', 'update', 'processing', 'stream', 'streamcuts', 'ensure', 'validation', 'handlegenerate']",{'issue': 100}
"['segment', 'segmentstore', 'issue', 'attribute', 'andrei', 'paduroiu']",{'issue': 100}
"['sporadic', 'issue', 'fixedsporadic']",{'issue': 100}
"['segmentstore', 'issue', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'connection', 'pravega', 'sectionincludedsection']",{'issue': 100}
"['issue', 'fixingexception', 'container', 'indicative', 'andrei', 'paduroiu']",{'issue': 100}
"['multicontroller', 'swarm', 'system', 'docker', 'issue', 'failuremulticontroller', 'issueanishakj']",{'issue': 100}
"['increase', 'client', 'limit', 'issue', 'throttlingincrease', 'factor', 'client', 'limit']",{'issue': 100}
"['issue', 'severity', 'reducecorrect', 'level', 'appendprocessor']",{'issue': 100}
"['issue', 'threadcondition']",{'issue': 100}
"['frequency', 'issue', 'loggingprogress', 'segment', 'andrei', 'paduroiu']",{'issue': 100}
"['exception', 'issue', 'handlingnetty', 'exception', 'callback']",{'issue': 100}
"['default', 'issue', 'update', 'materialkeystore', 'certificate', 'detail', 'issue', 'entry', 'servercertificate', 'config', 'remote', 'localhost', 'subject', 'address', 'field', 'generic', 'client', 'multiple', 'server', 'entrystandard']",{'issue': 100}
"['restart', 'graceful', 'issue', 'controller', 'eventprocessorsreader']",{'issue': 100}
"['issue', 'storagewriter', 'attributefollowedcauserequest', 'invalidprevent', 'progress', 'andrei', 'paduroiu']",{'issue': 100}
"['stack', 'suppression', 'issue']","{'stack': 100, 'issue': 100}"
"['informs', 'transaction', 'issue', 'pingtxnstatusincludes', 'transaction']",{'issue': 100}
"['segment', 'empty', 'segmentstore', 'issue', 'deletesegment', 'empty', 'andrei', 'paduroiu']",{'issue': 100}
"['sporadic', 'issue']",{'issue': 100}
"['issue', 'segment', 'successor', 'release']",{'issue': 100}
"['instance', 'issue', 'controller', 'update', 'containerinitialize', 'initial', 'store', 'zkhost', 'segment', 'field', 'value', 'ranjan', 'shivesh']",{'issue': 100}
"['grgit', 'invoke', 'repository', 'issue']",{'issue': 100}
"['migration', 'issue']",{'issue': 100}
"['standalone', 'issue', 'reliabilitycluster', 'standalone', 'improvecatch', 'likely', 'regressionblock']",{'issue': 100}
"['document', 'issue', 'updatejoshi']",{'issue': 100}
"['issue', 'session', 'connection', 'establishedfirst', 'session', 'connection']",{'issue': 100}
"['storage', 'refresh', 'segmentstore', 'issue', 'andrei', 'paduroiu']",{'issue': 100}
"['rocksdb', 'issue', 'directallow', 'rocksdb', 'directgracia']",{'issue': 100}
"['version', 'master', 'issue', 'pravega', 'updatesnapshot', 'version', 'master', 'pravega', 'flavio', 'junqueira']",{'issue': 100}
"['sporadic', 'issue', 'failurecompletes', 'ranjan', 'shivesh']",{'issue': 100}
"['docker', 'issue', 'swarm', 'failurechange', 'segmentstoreremove', 'mount', 'false', 'index', 'bookkeeper']",{'issue': 100}
"['metric', 'issue', 'duplication', 'removedcontext', 'metric', 'segmentstore', 'contains', 'controller']",{'issue': 100}
"['schema', 'segment', 'scope', 'system', 'issue', 'tablesegment', 'scope', 'stream', 'optional', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'assertionassertequals', 'assertion', 'flavio', 'junqueira']",{'issue': 100}
"['segment', 'segmentstore', 'issue', 'table', 'compactionimplement', 'table', 'compaction', 'segmentdefines', 'table', 'attribute', 'compaction', 'segmentchange', 'compaction', 'andrei', 'paduroiu']",{'issue': 100}
"['config', 'parameter', 'security', 'issue', 'documentation', 'updateconfiguration', 'parameter', 'security', 'documentation', 'updatereflect']","{'Security': 100, 'issue': 100}"
"['issue', 'documentationguide']",{'issue': 100}
"['sporadic', 'issue', 'failure', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'session', 'renamereference', 'rename']",{'issue': 100}
"['format', 'document', 'issue', 'docker']",{'issue': 100}
"['issue', 'failsparenthesis', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'documentation', 'kubernetesupdate', 'kubernetesinclusion', 'kubernetes']",{'issue': 100}
"['issue', 'connection', 'connection', 'pravega', 'reader']",{'issue': 100}
"['store', 'issue', 'controller', 'metadataenables', 'stream', 'controller', 'pravega', 'ranjan', 'shivesh']",{'issue': 100}
"['metric', 'issue', 'dimensionmicrometer', 'offerdimensional']",{'issue': 100}
"['issue', 'configurationsetup', 'issue', 'controllerconfiguration']",{'issue': 100}
"['checkstyle', 'issue', 'notice', 'updatecoypright', 'notice', 'state', 'contributedcheckstyle', 'flavio', 'junqueira']",{'issue': 100}
"['sporadic', 'issue', 'failure', 'ranjan', 'shivesh']",{'issue': 100}
"['sporadic', 'issue', 'failureissuetimeoutservice', 'ranjan', 'shivesh']",{'issue': 100}
"['security', 'issue', 'credential', 'entry', 'removeclientconfig', 'issueconfiguration', 'store', 'controller', 'segmentsecurity', 'sensitive', 'configuration', 'includingsecurity']","{'Security': 100, 'issue': 100, 'Sensitive': 100}"
"['segment', 'memory', 'helper', 'management', 'issue', 'connection', 'footprint', 'improvementstore', 'connection', 'segment', 'managesrefactors', 'store', 'ranjan', 'shivesh']",{'issue': 100}
"['version', 'document', 'bookkeeper', 'number', 'issue', 'manualversion', 'document', 'bookkeeper', 'number', 'manualhyperlink']",{'issue': 100}
"['sequential', 'order', 'transaction', 'issue', 'guaranteecommit', 'sequential', 'order', 'ensures', 'ranjan', 'shivesh']",{'issue': 100}
"['compose', 'config', 'issue', 'docker', 'updatecompose', 'docker', 'expose', 'controllerbookkeeper', 'containercompose', 'information', 'deployment', 'docker']","{'issue': 100, 'expose': 100}"
"['store', 'memory', 'stream', 'issue', 'controller', 'footprint', 'improvementstore', 'memory', 'multiple', 'usage', 'controller', 'redundant', 'metadata', 'ranjan', 'shivesh']",{'issue': 100}
"['large', 'issue', 'number', 'controller', 'ranjan', 'shivesh']",{'issue': 100}
"['expiration', 'metric', 'issue', 'controller', 'sessionexpiration', 'metric', 'zookeeper', 'track', 'creates', 'sessiongracia']",{'issue': 100}
"['version', 'document', 'issue', 'number', 'hyperlinkversion', 'number', 'hyperlinkreader', 'documentation', 'basicdocumentation']",{'issue': 100}
"['checkreadyreplaces', 'writer', 'illegalstateinconsistent', 'issue', 'usagecommit', 'abort', 'ranjan', 'shivesh']",{'issue': 100}
"['environment', 'definition', 'variable', 'compose', 'configuration', 'zookeeper', 'issue', 'docker', 'controller', 'serviceenvironment', 'variable', 'compose', 'configuration', 'zookeeper', 'docker', 'controller']",{'issue': 100}
"['completion', 'check', 'workflow', 'issue', 'tighter', 'statesporadic', 'system', 'updatefails', 'statedeclare', 'workflow', 'stricter', 'checkcomplete', 'ranjan', 'shivesh']",{'issue': 100}
"['ensure', 'issue', 'versionreadtable', 'version']",{'issue': 100}
"['issue', 'assertion', 'incorrectgreater', 'ranjan', 'shivesh']",{'issue': 100}
"['gradle', 'property', 'issue', 'cleanconditional', 'setting', 'making', 'flavio', 'junqueira']",{'issue': 100}
"['separate', 'issue', 'scalability', 'separate', 'scalability', 'metadata', 'ranjan', 'shivesh']",{'issue': 100}
"['permission', 'issue', 'operation', 'permission', 'followingscale', 'check', 'statussegmentvalid', 'segmentstream', 'validtransactionstate']","{'permission': 100, 'issue': 100}"
"['stale', 'issue', 'connection', 'sparsecommand', 'rename', 'protocol', 'flushflush']",{'issue': 100}
"['issue', 'ensure']",{'issue': 100}
"['issue', 'verificationensures', 'multiple', 'setupappend']",{'issue': 100}
"['invoke', 'issue', 'truncate', 'compactinvoke', 'truncate']",{'issue': 100}
"['stale', 'issue', 'refactors', 'validate', 'ranjan', 'shivesh']",{'issue': 100}
"['serialization', 'issue', 'cluster', 'container', 'containerserialization', 'nativeinstead', 'zookeeper', 'zkhoststore', 'nodecache', 'ranjan', 'shivesh']",{'issue': 100}
"['complete', 'issue', 'withcompletion', 'future', 'regressionrecent', 'ranjan', 'shivesh']",{'issue': 100}
"['segment', 'segmentstore', 'addition', 'issue', 'tableperformance', 'selftest', 'segment', 'table', 'abilityconditional', 'updateconditional', 'andrei', 'paduroiu']",{'issue': 100}
"['abstract', 'fairness', 'issue', 'processor', 'progress', 'processing', 'defers', 'controller', 'processor', 'incomplete', 'metadata', 'ranjan', 'shivesh']",{'issue': 100}
"['metric', 'micrometer', 'issue', 'pravega', 'migrationdimensional', 'micrometer', 'implementationsecond']",{'issue': 100}
"['metric', 'revert', 'micrometer', 'issue', 'migrationreverts', 'flavio', 'junqueira']",{'issue': 100}
"['metric', 'migration', 'issue', 'micrometermetric', 'dimensional', 'support', 'micrometer']",{'issue': 100}
"['issue', 'connection', 'wirecommandseparate', 'field', 'distinguish', 'request', 'request', 'number', 'connection', 'significant', 'logic', 'appropriate', 'session', 'sequencedifferent', 'segment', 'conditional', 'request', 'number', 'multiple', 'useful', 'session', 'sequence']",{'issue': 100}
"['restart', 'system', 'issue', 'pravega', 'monitorreason', 'corresponding', 'restart', 'system', 'pravega']",{'issue': 100}
"['image', 'system', 'issue', 'docker', 'configurableimage', 'zookeeper', 'bookkeeper', 'docker', 'pravega', 'ability', 'configuresubresource', 'zookeeper', 'pravega']",{'issue': 100}
"['segmentstore', 'issue', 'kubernetesreplaces', 'return', 'empty', 'string', 'invalid', 'process', 'value', 'refactors', 'external']",{'issue': 100}
"['active', 'number', 'issue', 'increasingincrease', 'number', 'segment', 'increase', 'number', 'segmentsegment', 'memory', 'minute', 'andrei', 'paduroiu']",{'issue': 100}
"['comparision', 'issue', 'check', 'segmentcomparison', 'check', 'segment']",{'issue': 100}
"['metric', 'issue', 'config', 'controllerprefixmetric', 'value', 'andrei', 'paduroiu']",{'issue': 100}
"['authorization', 'issue', 'enhancement', 'modelresource', 'string', 'modifies', 'followparent', 'scope', 'resource', 'createresource', 'parent', 'scope', 'streamparent', 'scope', 'resource', 'deleteresource', 'scope', 'stream', 'update', 'deleteresult', 'filter', 'resource', 'scope', 'object', 'authorizedresult', 'filter', 'resource', 'object', 'scope', 'stream', 'authorizedresource', 'consolidates', 'string', 'logicauthorization', 'method']",{'issue': 100}
"['shutdown', 'process', 'issue', 'controllershutdown', 'class', 'service', 'controllershutdown', 'sends', 'clustermanager', 'ranjan', 'shivesh']",{'issue': 100}
"['subversion', 'openjdk', 'alpine', 'issue', 'alwaysenvironment', 'version', 'runtime', 'docker', 'pravega', 'mismatch']",{'issue': 100}
"['reader', 'issue']",{'issue': 100}
"['zookeeper', 'recovery', 'issue', 'controller', 'sessionclose', 'input', 'zookeeper', 'client', 'parameter', 'usingcurator', 'configuration', 'zookeeper', 'request', 'incorrectgracia']",{'issue': 100}
"['transactional', 'transaction', 'issue', 'fixedtransactional', 'transaction']",{'issue': 100}
"['version', 'fetch', 'issue', 'update', 'collector', 'garbageinstance', 'update', 'controller', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'standardize', 'controller', 'configapproach', 'segment', 'configuration', 'controllerretires', 'usage', 'andrei', 'paduroiu']",{'issue': 100}
"['error', 'issue', 'connectivity', 'externaladditional', 'ignores', 'pravega', 'address', 'firstwenqi']",{'issue': 100}
"['return', 'bucket', 'issue', 'number', 'positivenegative', 'ranjan', 'shivesh']",{'issue': 100}
"['metric', 'table', 'issue', 'segmentmetric', 'table', 'operation', 'andrei', 'paduroiu']",{'issue': 100}
"['image', 'bookkeeper', 'issue', 'official', 'updatewenqi', 'signedmoreno']",{'issue': 100}
"['document', 'security', 'issue']","{'Security': 100, 'issue': 100}"
"['documentation', 'issue', 'issue', 'fixeddocumentation', 'controllerdocumentation', 'authorization', 'pravega', 'securitydocumentation', 'pravega']",{'issue': 100}
"['document', 'synchronizer', 'issue', 'stateminor']",{'issue': 100}
"['warning', 'issue', 'javadocdocument', 'warning', 'javadoc', 'pravega', 'cleanorder']",{'issue': 100}
"['configuration', 'issue']",{'issue': 100}
"['enable', 'segmenthelper', 'issue', 'entrytablestore', 'entryiterator']",{'issue': 100}
"['pravega', 'issue', 'version', 'buildensures']",{'issue': 100}
"['javadocs', 'stage', 'issue', 'travisstage', 'configuration', 'travis', 'flavio', 'junqueira']",{'issue': 100}
"['tablestore', 'issue', 'wirecommands', 'keyiteratoriterator', 'protocol']",{'issue': 100}
"['issue', 'logginggracia']",{'issue': 100}
"['store', 'segment', 'metric', 'stats', 'issue', 'autoscalemetric', 'logic', 'reportingappendprocessorreorder', 'sequencemetric', 'report', 'andrei', 'paduroiu']",{'issue': 100}
"['segmentstore', 'warning', 'javadoc', 'issue']",{'issue': 100}
"['system', 'issue', 'controller', 'scalability', 'metadatastream', 'creates', 'segment', 'ranjan', 'shivesh']",{'issue': 100}
"['segmentstore', 'issue', 'creation', 'segmentcause', 'andrei', 'paduroiu']",{'issue': 100}
"['serialization', 'event', 'issue', 'controllerimplementation', 'interface', 'andrei', 'paduroiu']",{'issue': 100}
"['warning', 'issue', 'javadocjavadocs', 'issuejavadocs', 'error', 'import', 'lomboksuppresses']",{'issue': 100}
"['compatibility', 'glibc', 'install', 'issue', 'library', 'programcompatible', 'alpine', 'support', 'package', 'gcompat', 'building', 'docker', 'alwaysmoreno']",{'issue': 100}
"['timeout', 'issue']",{'issue': 100}
"['overflow', 'stack', 'error', 'okhttp', 'issue', 'kubernetesensures']","{'overflow': 100, 'stack': 100, 'issue': 100}"
"['segmentstore', 'issue', 'attribute', 'tabletable', 'attribute', 'organizes', 'segmentcount', 'track', 'calculate', 'fragmentation', 'entry', 'andrei', 'paduroiu']",{'issue': 100}
"['spurious', 'issue', 'stacktraces', 'kubernetesstack', 'ensures', 'spurious', 'retry', 'traceacross', 'ensures', 'retries', 'preservedcomplete', 'download']",{'issue': 100}
"['issuesimplifies', 'threadunifies', 'scaletyperenamesresource', 'thread', 'andrei', 'paduroiu']",{'thread': 100}
"['issue', 'certificate', 'failure', 'truststores', 'keystores', 'sample']",{'issue': 100}
"['issue', 'bootstrap', 'cluster', 'standalone']",{'issue': 100}
"['infrastructure', 'processing', 'periodic', 'issue', 'controller', 'background', 'generalizebucket', 'periodic', 'notion', 'controller', 'worker', 'distribution', 'backgroundothers', 'different', 'bucket', 'instance', 'ownership', 'stream', 'subset', 'controller', 'competes', 'availablestore', 'relevant', 'service', 'ranjan', 'shivesh']",{'issue': 100}
"['wrong', 'swarm', 'issue', 'docker', 'pravega', 'target']",{'issue': 100}
"['principal', 'issue', 'implementation', 'unixprincipaloracle', 'testauthhandler', 'class', 'disadvantage', 'implementation', 'issue', 'modularization', 'implementation']",{'issue': 100}
"['issue', 'assertionsplit', 'client', 'check', 'sanity']",{'issue': 100}
"['tablestore', 'issue', 'enableenables', 'ensure', 'tablestoretablestore', 'controller']",{'issue': 100}
"['segmentstore', 'issue', 'andrei', 'paduroiu']",{'issue': 100}
"['upgrade', 'issue', 'dependencydependencybookkeepernettynettyboringsslguavacommonsioobject', 'clienthadoopjerseyprotobug', 'protocoldocker', 'clientcurator', 'apachespotbugsimage', 'docker', 'bookkeeper', 'updateversionversion', 'argument', 'process', 'image', 'docker', 'tarballs', 'checkdeprecation', 'updatereplace', 'setzkservers', 'javadoc', 'bookkeeper', 'multiple', 'bookkeeper', 'insteadreplace', 'netty', 'controller', 'server']",{'issue': 100}
"['badge', 'issue', 'updatebadge', 'readme', 'flavio', 'junqueira']",{'issue': 100}
"['correctness', 'event', 'check', 'issue', 'sequencegracia']",{'issue': 100}
"['store', 'segmentstore', 'table', 'issue', 'metadataswitch', 'storage', 'segment', 'component', 'table', 'metadata', 'container', 'permanentsegment', 'metadata', 'retires', 'andrei', 'paduroiu']",{'issue': 100}
"['bytecode', 'issue', 'targetedforce', 'version', 'setting', 'project', 'source', 'target', 'evaluationenrico', 'eolivelli', 'olivelli']",{'issue': 100}
"['operation', 'client', 'netty', 'issue', 'insidesendasync', 'switch', 'order', 'sendasync', 'netty', 'segmenthelper', 'eventloops', 'rawclient', 'insideenrico', 'eolivelli', 'olivelli']",{'issue': 100}
"['document', 'issue', 'reviewdocumentation']",{'issue': 100}
"['variable', 'issue', 'class']",{'issue': 100}
"['issue', 'client', 'dependency', 'reducereduce', 'scope', 'netty', 'dependency']",{'issue': 100}
"['implementation', 'issue', 'tablestore', 'protocolstore', 'protocol']",{'issue': 100}
"['static', 'issueproblem', 'overwrite', 'appendprocessor', 'static', 'leakage', 'concurrency']",{'concurren': 90}
"['possible', 'issue', 'dependencychange', 'annotation', 'compile', 'dependency']",{'issue': 100}
"['failure', 'issue', 'listener', 'controller', 'znodes', 'createsgracia']",{'issue': 100}
"['streamcut', 'issue']",{'issue': 100}
"['image', 'issue', 'changedgracia']",{'issue': 100}
"['return', 'storage', 'issue', 'segmenthandlereturn', 'writeeliminate', 'subsequent', 'redundantjoshi']",{'issue': 100}
"['issue', 'controller', 'diagramdocument', 'controller', 'diagram', 'addedformat', 'controller', 'content']",{'issue': 100}
"['segment', 'metric', 'transaction', 'issue', 'updatesegment', 'parent', 'metric']",{'issue': 100}
"['segmentstore', 'issue', 'segment', 'pinnedsegment', 'certain', 'memory', 'internal', 'externalsegment', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'order', 'initialization']",{'issue': 100}
"['metadata', 'issue', 'store', 'storage', 'segment', 'memory', 'agnostic', 'abstraction', 'metadata', 'creates', 'metadatastoresegment', 'consolidates', 'persists', 'implementation', 'metadata', 'state', 'storagewriter', 'creates', 'entry', 'state', 'metadatastoremetadata', 'segment', 'instructs', 'active', 'storagewriter', 'possible', 'update', 'andrei', 'paduroiu']",{'issue': 100}
"['default', 'increase', 'issue', 'storagedefault', 'increase', 'storage', 'threadjoshi']",{'issue': 100}
"['issue', 'delete', 'emptycontain', 'actual', 'delete']",{'issue': 100}
"['check', 'checkstyle', 'issue', 'spaceensure', 'space', 'checkspace']",{'issue': 100}
"['segmentstore', 'issue', 'callback', 'trackerfinal', 'wiggle', 'andrei', 'paduroiu']",{'issue': 100}
"['gradle', 'daemon', 'absolute', 'checkstyle', 'issue', 'usingabsolute', 'order', 'referenrico', 'eolivelli', 'olivelli']",{'issue': 100}
"['issue', 'spotbugs', 'check', 'redundantenrico', 'eolivelli', 'olivelli']",{'issue': 100}
"['segmentstore', 'issue', 'execution', 'serializeability', 'getnext', 'order', 'andrei', 'paduroiu']",{'issue': 100}
"['stream', 'replay', 'issue', 'oldercreation', 'compareensures', 'replay', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'clientruntimealways']",{'issue': 100}
"['javac', 'crash', 'issue', 'getter', 'lombok', 'usingcompilation', 'errorgetter', 'lombokenrico', 'eolivelli', 'olivelli']","{'crash': 100, 'issue': 100}"
"['enable', 'configuration', 'docker', 'issue', 'private', 'registry', 'system', 'property', 'docker', 'private', 'registryversion', 'image', 'bookkeeper', 'system', 'ensures', 'docker']",{'issue': 100}
"['issue', 'check', 'precondition', 'invalidensures', 'precondition', 'check', 'insideendoffset', 'check']",{'issue': 100}
"['system', 'issue', 'eliminatesimplifies', 'framework', 'systempublish', 'uploadartifact', 'eliminatingimage', 'docker', 'operator']",{'issue': 100}
"['complete', 'issue', 'backgroundclient', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'framework', 'systemensures', 'version', 'operator', 'pravegaincrease']",{'issue': 100}
"['segmentstore', 'issue', 'andrei', 'paduroiu']",{'issue': 100}
"['store', 'segment', 'iterator', 'tablesegment', 'issue', 'entryimplement', 'table', 'entry', 'segmentallow', 'entry', 'andrei', 'paduroiu']",{'issue': 100}
"['prefix', 'metric', 'issue', 'hostname', 'envvarenvironment', 'hostname', 'metric', 'variablereverts', 'value', 'flavio', 'junqueira']",{'issue': 100}
"['issue', 'speediteration']",{'issue': 100}
"['document', 'issue']",{'issue': 100}
"['default', 'prefix', 'metric', 'issue', 'hostnamedefault', 'metricsprefix', 'property', 'value', 'initializesbetter', 'cluster', 'representsmetric', 'prefixgracia']",{'issue': 100}
"['issue', 'eventprevents']",{'issue': 100}
"['document', 'issue', 'store', 'store', 'diagram', 'segmentminor']",{'issue': 100}
"['issue', 'check', 'spotbugs', 'enableenables', 'check', 'spotbugs', 'aggressiveeffort', 'analysisdifferent', 'filter', 'removeincludes', 'confidence', 'filter', 'experimentalarose']",{'issue': 100}
"['report', 'issue', 'produceproduce']",{'issue': 100}
"['issue', 'defaultingprevent', 'scheme']",{'issue': 100}
"['jenkins', 'issue', 'environment', 'failureproblem']",{'issue': 100}
"['segment', 'segmentstore', 'issue', 'implementation', 'tablestore', 'segment', 'front', 'tablesegment', 'tableconditional', 'multi', 'unconditional', 'single', 'entryupdateconditional', 'multi', 'unconditional', 'singleremovemulti', 'lookupcontainer', 'lastoffset', 'tablebucket', 'cacheconditional', 'validate', 'quick', 'combinationhashmaps', 'segment', 'andrei', 'paduroiu']",{'issue': 100}
"['shutdown', 'issue', 'controller', 'sessionchangecurator', 'retry', 'sleepexpiration', 'session', 'retry', 'ranjan', 'shivesh']",{'issue': 100}
"['system', 'issue', 'deploy', 'kubernetes', 'frameworkensures']",{'issue': 100}
"['warning', 'thrown', 'spurious', 'issue', 'ensurethrown', 'ensures', 'spurious']",{'issue': 100}
"['degree', 'issue', 'swarm', 'replicationcompose', 'reflect', 'replication', 'flavio', 'junqueira']",{'issue': 100}
"['issue', 'kubernetes', 'kubernetes', 'insteadmoreno']",{'issue': 100}
"['zookeeper', 'system', 'issue', 'deploy', 'kubernetes', 'frameworkzookeper', 'ensures']",{'issue': 100}
"['scope', 'issue', 'listscopeslistscopes', 'scope', 'flavio', 'junqueira']",{'issue': 100}
"['metric', 'issue', 'improves', 'monitoringsegment', 'pravegametric', 'encapsulates', 'logic', 'reportinggracia']",{'issue': 100}
"['image', 'docker', 'issue', 'pravega', 'updatemoreno']",{'issue': 100}
"['document', 'issue', 'review', 'reader', 'writernumber', 'blockdocument', 'replaces', 'appropriateperforms']",{'issue': 100}
"['writer', 'table', 'issue', 'processorimplement', 'async', 'background', 'indexerwriterprocessor', 'attachedprocess', 'storagewriter', 'segmentlifecycle', 'writerprocessor', 'entry', 'tablechange', 'segment', 'update', 'removalapplies', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'diagram', 'diagramstore', 'segmentstore', 'segmentstore']",{'issue': 100}
"['issue', 'client', 'refactorseparate', 'refactors', 'client']",{'issue': 100}
"['upgrade', 'issue', 'order', 'supportupgrade', 'jacocoupgrade', 'mockitoupgrade', 'lombokenrico', 'eolivelli', 'olivelli']",{'issue': 100}
"['ambiguous', 'javac', 'issue', 'assertthrowsorder', 'exception', 'detail', 'rename', 'method', 'assertthrowsenrico', 'eolivelli', 'olivelli']",{'issue': 100}
"['overwritten', 'issue', 'script', 'flavio', 'junqueira']",{'issue': 100}
"['warning', 'issue', 'javadocgradle', 'javadocs', 'warning', 'error', 'classpath', 'javadocjar']",{'issue': 100}
"['prefix', 'issue', 'statsdgracia']",{'issue': 100}
"['concept', 'document', 'issue', 'review', 'pravegaconcept', 'policy']",{'issue': 100}
"['store', 'segment', 'index', 'issue', 'enhancementunifies', 'btreeindex', 'method', 'singlepageentry', 'method', 'instanceentry', 'treatvalue', 'andrei', 'paduroiu']",{'issue': 100}
"['docker', 'issue', 'kubernetes', 'entrypointobtain', 'runninginsideensures', 'container', 'block', 'runningmoreno']",{'issue': 100}
"['environment', 'external', 'issue', 'address', 'advertise', 'kubernetesrefactors', 'script', 'enable', 'external', 'docker', 'updatemoreno']",{'issue': 100}
"['segment', 'segmentstore', 'attribute', 'btree', 'issue', 'compaction', 'btree', 'class', 'andrei', 'paduroiu']",{'issue': 100}
"['store', 'iterator', 'segment', 'issue', 'attributelexicographic', 'segment', 'iterate', 'subset', 'abilitysegment', 'iteration', 'value', 'metadata', 'attribute', 'executesdefault', 'lexicographic', 'bitwise', 'btree', 'comparator', 'andrei', 'paduroiu']",{'issue': 100}
"['incremental', 'store', 'segment', 'issue', 'compactionimplementation', 'incremental', 'enhancessmallest', 'attribute', 'truncate', 'andrei', 'paduroiu']",{'issue': 100}
"['switch', 'issue', 'spotbugssuccessor', 'findbugs', 'switchreplaces', 'findbugs', 'minor', 'spotbugsenrico', 'eolivelli', 'olivelli']",{'issue': 100}
"['issue', 'usage', 'class', 'newinstance', 'sinceinstead', 'newinstance', 'class', 'getconstructorenrico', 'eolivelli', 'olivelli']",{'issue': 100}
"['issue', 'method', 'finalizefinalize', 'javaseenrico', 'eolivelli', 'olivelli']",{'issue': 100}
"['issue', 'libraryimplementationannotationenrico', 'eolivelli', 'olivelli']",{'issue': 100}
"['issue', 'swarm', 'systeminstead', 'check', 'netstat', 'service', 'runningcommand', 'available', 'image', 'netstatmoreno']",{'issue': 100}
"['bugfix', 'checkpoint', 'issue', 'outstandingcheckpoint']",{'issue': 100}
"['issue', 'swarm', 'dockerconfiguration', 'parametergracia']",{'issue': 100}
"['additional', 'issue', 'controller', 'scalability', 'metadatastream', 'metadata', 'large', 'operationepoch', 'chunk', 'number', 'shardseries', 'segment', 'ranjan', 'shivesh']",{'issue': 100}
"['snapshot', 'version', 'master', 'issue', 'pravega', 'flavio', 'junqueira']",{'issue': 100}
"['issue', 'client', 'systemfunctionality', 'basic', 'check', 'systemgracia']",{'issue': 100}
"['issue', 'zkstreamtestzkstreamtest']",{'issue': 100}
"['issue', 'orientedstream']",{'issue': 100}
"['exception', 'keyfile', 'issue', 'throwempty', 'setting', 'propertyarvindkandhare']",{'issue': 100}
"['issue', 'retriessegment', 'operation', 'failure', 'retriesgracia']",{'issue': 100}
"['reader', 'issue', 'update']",{'issue': 100}
"['format', 'document', 'issue', 'controller']",{'issue': 100}
"['alpine', 'image', 'docker', 'issue', 'pravega', 'updatereplaces', 'image', 'bookkeeper', 'docker', 'openjdk', 'alpinesystem', 'installreduces', 'image', 'docker', 'pravegareduces', 'image', 'docker', 'bookkeeperentrypoints', 'docker', 'pipefail', 'immediatelycommandappends', 'entrypoint']",{'issue': 100}
"['stream', 'issue', 'controller', 'scalability', 'metadatareplaces', 'metadata', 'structuremetadata', 'store', 'update', 'correspondingstore', 'stream', 'business', 'logicimplementation', 'algorithm', 'ranjan', 'shivesh']",{'issue': 100}
"['security', 'pravega', 'sectionclientsecurity', 'authorization', 'pravegasecurity', 'pravegasecurity']",{'Security': 100}
"['version', 'document', 'issue', 'number', 'version']",{'issue': 100}
"['update', 'issue', 'content', 'segmentminor', 'edits']",{'issue': 100}
"['store', 'version', 'support', 'stream', 'issue', 'concurrency', 'processor', 'metadata', 'expose', 'generalizedstore', 'stream', 'interface', 'metadata', 'exposeversion', 'processing', 'generic', 'metadatarecord', 'processing', 'metadata', 'object', 'updateoptimistic', 'ranjan', 'shivesh']","{'issue': 100, 'concurren': 90, 'expose': 100}"
"['readergroup', 'issue']",{'issue': 100}
"['precision', 'readergroup', 'issue', 'streamcutsenables', 'obtainstreamcut']",{'issue': 100}
"['implementation', 'issue', 'storage', 'storage', 'factory', 'contrib', 'storageimplementation', 'storagefactory', 'classpatharvindkandhare']",{'issue': 100}
"['metric', 'issue', 'updatecorrectsmetric', 'reflect', 'update']",{'issue': 100}
"['process', 'issue', 'request', 'tracemechanism', 'idempotent', 'operation', 'tracestore', 'segment', 'client', 'system', 'request', 'generate', 'propagatedstore', 'segment', 'search', 'observe', 'request', 'activity', 'controller', 'ability', 'developergracia']",{'issue': 100}
"['netty', 'issue', 'dependencydependency']",{'issue': 100}
"['issue', 'interface', 'configuration', 'introduces', 'setting', 'serverarvindkandhare']",{'issue': 100}
"['equivalent', 'issue', 'exception', 'logicgracia']",{'issue': 100}
"['issue', 'connection', 'encryption', 'enablestore', 'enable', 'segment', 'zookeeper', 'encryption', 'interaction', 'zookeeper', 'connection', 'controller']","{'issue': 100, 'encryption': 100}"
"['document', 'security', 'issue', 'pravega']","{'Security': 100, 'issue': 100}"
"['segmentstore', 'issue', 'dependent', 'processor', 'concurrentparticular', 'andrei', 'paduroiu']",{'issue': 100}
"['openjdk', 'image', 'docker', 'issue', 'updateimage', 'docker', 'issue', 'update', 'flavio', 'junqueira']",{'issue': 100}
"['getstreaminfo', 'issue', 'streammanager', 'getstreaminfo', 'streamname', 'enabledeprecate', 'getstreaminfo']",{'issue': 100}
"['security', 'issue']","{'Security': 100, 'issue': 100}"
"['direct', 'segment', 'issue', 'accessability', 'segment', 'operation', 'request', 'especiallyshort', 'segmentoperation', 'andrei', 'paduroiu']",{'issue': 100}
"['image', 'zookeeper', 'docker', 'issue', 'dependency', 'updateimage', 'zookeeper', 'docker', 'dependency', 'updateofficial', 'jplock', 'alpha', 'zookeepermoreno']",{'issue': 100}
"['table', 'issue', 'contract', 'serverdefinition', 'contract', 'tablestore', 'segmentclient', 'andrei', 'paduroiu']",{'issue': 100}
"['compose', 'docker', 'issue', 'documentation', 'updatepoint', 'mehdi', 'mazarmi']",{'issue': 100}
"['default', 'issue', 'settingbringingarvindkandhare']",{'issue': 100}
"['segment', 'segmentstore', 'issue', 'containerability', 'attachdirect', 'andrei', 'paduroiu']",{'issue': 100}
"['metric', 'issue', 'format', 'normalizeprefix', 'common', 'enable', 'metric', 'component', 'store', 'segment', 'metric', 'component', 'specific', 'level', 'flavio', 'junqueira']",{'issue': 100}
"['outstanding', 'checkpoint', 'issue', 'waitingreturn', 'result']",{'issue': 100}
"['outstanding', 'limit', 'readergroup', 'checkpoint', 'issue', 'limit', 'option', 'checkpoint', 'request', 'configurable', 'reader']",{'issue': 100}
"['readnextevent', 'checkpoint', 'issue', 'delayreadnextevent', 'position', 'checkpoint', 'future', 'returnedcomplete', 'application']",{'issue': 100}
"['issue', 'fixingerror']",{'issue': 100}
"['issue', 'fixingerror']",{'issue': 100}
"['issue', 'fixingerror']",{'issue': 100}
"['issue', 'textual', 'enable', 'representationenables', 'textual', 'representationstreamcut']",{'issue': 100}
"['issue', 'reviewerror', 'issue']",{'issue': 100}
"['issue', 'builtmerge', 'failure', 'ranjan', 'shivesh']",{'issue': 100}
"['stream', 'validation', 'issue', 'controllerstream', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'system', 'refactorsystem', 'refactorbetter', 'abstract', 'specific', 'encapsulation', 'redundant', 'methodinitialization', 'service', 'minor', 'comment']",{'issue': 100}
"['stack', 'server', 'error', 'client', 'issue', 'reply', 'tracestack', 'client', 'pravega', 'server', 'request', 'activityinstance', 'attach', 'controller', 'pravega', 'serverstack', 'internal', 'client', 'server', 'tracesecurity', 'behaviorswitch', 'configurationgracia']","{'stack': 100, 'issue': 100}"
"['segment', 'issue', 'segmentsmaller', 'length']","{'issue': 100, 'length': 100}"
"['getstreamnames', 'readergroup', 'stream', 'issue', 'ensure', 'returnedreadergroup', 'ensures', 'stream']",{'issue': 100}
"['stream', 'duplicative', 'issue', 'logic', 'offsetremove', 'duplicate', 'stream']",{'issue': 100}
"['token', 'document', 'issue', 'delegation', 'creation', 'refactorcontext', 'delegationtoken', 'document', 'creation', 'ensure', 'effectarvindkandhare']",{'issue': 100}
"['check', 'security', 'issue', 'listscopesensures', 'scope']","{'Security': 100, 'issue': 100}"
"['stream', 'issue', 'creationstream', 'controller', 'entitygiven', 'number', 'segmentcollision', 'segment', 'deletedimplementationsegment', 'responsibledeletestream', 'stream', 'number', 'operationnumber', 'createstream', 'number', 'segment', 'startingsegment', 'createsegmentgracia']",{'issue': 100}
"['replacement', 'issue', 'range', 'ensure', 'routingstreamsegments', 'assert', 'ensures', 'range', 'streamsegments']",{'issue': 100}
"['issue', 'streamcuts', 'allowsvalue', 'checkpoint', 'processedreaderintegration', 'verifygracia']",{'issue': 100}
"['issue', 'resilienceexception', 'suppresses']",{'issue': 100}
"['availability', 'check', 'stream', 'issue', 'locallyinternal', 'availability']",{'issue': 100}
"['rocksdb', 'issue', 'settingadequate', 'memory', 'instance', 'configuration', 'specific', 'parameter', 'usage', 'readcachesizemb', 'pravega', 'effect', 'turning', 'andrei', 'paduroiu']",{'issue': 100}
"['health', 'check', 'system', 'issue', 'docker', 'framework', 'servicehealth', 'docker', 'swarm', 'checklistens', 'traffic', 'runningcommand', 'container']",{'issue': 100}
"['fetch', 'issue', 'abort', 'invocation', 'redundant', 'successorremove', 'fetch', 'abort', 'invocation', 'redundant', 'successorabort']",{'issue': 100}
"['different', 'template', 'issue', 'section', 'template', 'section', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'standalone', 'pravega', 'ability', 'standalone', 'pravega', 'andrei', 'paduroiu']",{'issue': 100}
"['store', 'transaction', 'issue', 'ranjan', 'shivesh']",{'issue': 100}
"['check', 'merges', 'issue', 'preconditionsanity', 'segment', 'check', 'controller']",{'issue': 100}
"['sporadic', 'issue', 'failurerecovery', 'interval', 'sleep', 'failover']",{'issue': 100}
"['sporadic', 'issue', 'separate', 'stats', 'logger', 'testgauge', 'gauge', 'dynamicrefactors', 'utils']",{'issue': 100}
"['wrong', 'issue']",{'issue': 100}
"['authorization', 'issue', 'standardize', 'headerauthhandler', 'value', 'updatebasic', 'update', 'encodinginterceptor', 'authorization', 'single', 'header', 'metadata', 'updateeronwright']",{'issue': 100}
"['error', 'issue', 'formattingbullet', 'everywhere', 'point', 'formatrender', 'image', 'controller', 'servicedesign', 'synchronizer', 'corrects', 'reader', 'group', 'statemetric', 'section']",{'issue': 100}
"['truncation', 'issue', 'controller', 'offsetdefault', 'segment', 'sends', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'check', 'segment']",{'issue': 100}
"['result', 'issue']",{'issue': 100}
"['issue', 'buffer', 'bytebuffer', 'output', 'class', 'implementation', 'andrei', 'paduroiu']","{'issue': 100, 'buffer': 100}"
"['segmentstore', 'issue', 'segment', 'mergestore', 'segment', 'segment', 'empty', 'operation', 'source', 'enhancement', 'requestingsegment', 'source', 'enhancement', 'andrei', 'paduroiu']",{'issue': 100}
"['segmentstore', 'optimization', 'retrieval', 'issue', 'pertainingbother', 'complexity', 'retry', 'cachebother', 'return', 'invoke', 'segment', 'empty', 'collection', 'thread', 'index', 'retrieve', 'lookup', 'schedule', 'asynchronous', 'right', 'cycle', 'metadata', 'attribute', 'andrei', 'paduroiu']","{'issue': 100, 'thread': 100}"
"['bookie', 'issue', 'system', 'failoverwrite', 'scenario', 'system', 'bookie', 'arvind', 'kandhare']",{'issue': 100}
"['issue', 'ensure', 'orderer', 'selectsissegmentready', 'renamesprevent', 'segment', 'hencesuccessorreturnreturn', 'issegmentready']",{'issue': 100}
"['refresh', 'delegationtoken', 'truncation', 'issue', 'metadataclientdelegationtoken', 'ensures', 'metadatareason', 'longetivity', 'whethertoken', 'segment', 'extract', 'scenario', 'delegation', 'andrei', 'paduroiu']",{'issue': 100}
"['client', 'latency', 'issue', 'halve', 'batch', 'adjusts', 'batch', 'server', 'increase', 'client', 'ensures', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'optimize', 'buffer', 'fillingallow', 'buffer', 'response', 'availableissue', 'serveravoid', 'request', 'class', 'empty', 'result', 'multiple', 'capacity', 'client', 'buffer', 'andrei', 'paduroiu']","{'issue': 100, 'buffer': 100}"
"['stream', 'scope', 'issue', 'systemmanagement', 'scope', 'check', 'system', 'operation', 'stream', 'creation']",{'issue': 100}
"['issue', 'order', 'system', 'eventverify', 'order', 'changedgracia']",{'issue': 100}
"['default', 'value', 'issue', 'changingvalue', 'changingarvindkandhare']",{'issue': 100}
"['issue', 'release']",{'issue': 100}
"['sample', 'issue', 'modification', 'pravega', 'updateupdate', 'reorg', 'samplereference', 'slack', 'channelsynchronizer', 'stream', 'controller']",{'issue': 100}
"['exception', 'issue', 'header', 'polluteascii', 'interceptcall', 'check', 'headerarvindkandhare']",{'issue': 100}
"['sporadic', 'issue', 'failureprocessingstart', 'ranjan', 'shivesh']",{'issue': 100}
"['client', 'issue', 'ensure', 'responsehandle', 'ensures', 'nosuchsegment', 'segmentwriterresponse', 'setting']",{'issue': 100}
"['different', 'event', 'processing', 'fairness', 'introduce', 'stream', 'issue', 'ranjan', 'shivesh']",{'issue': 100}
"['segmentstore', 'issue', 'andrei', 'paduroiu']",{'issue': 100}
"['metric', 'issue', 'segmentmetric', 'value', 'counter', 'increaserather']",{'issue': 100}
"['bugfix', 'segmentstore', 'issue', 'failover', 'containerstore', 'segmentwould', 'andrei', 'paduroiu']",{'issue': 100}
"['parameter', 'timeout', 'transaction', 'issue', 'documentationtimeout', 'transaction', 'parameter', 'descriptiondetail', 'timeout', 'flavio', 'junqueira']",{'issue': 100}
"['inconsistent', 'epoch', 'transition', 'scale', 'issue', 'firsttransition', 'epoch', 'checkepoch', 'migratedbecomes', 'manual', 'scale', 'migratedcondition', 'equal', 'epoch', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'nosuchsegment', 'truncationensures', 'writeevent', 'fetch', 'segmentsuccessor', 'truncation', 'stream', 'deletedflight', 'event', 'ensures', 'successorensures', 'future']",{'issue': 100}
"['segment', 'empty', 'segmentstore', 'issue', 'futurewouldtrigger', 'segment', 'futureindex', 'entry', 'segmentincludes', 'segment', 'sporadic', 'failure', 'andrei', 'paduroiu']",{'issue': 100}
"['scale', 'issue', 'ranjan', 'shivesh']",{'issue': 100}
"['transaction', 'issue', 'rollingimplement', 'transaction', 'ranjan', 'shivesh']",{'issue': 100}
"['default', 'increase', 'issue', 'bufferdefault', 'reader', 'increase']",{'issue': 100}
"['primary', 'segment', 'transaction', 'issue', 'scheme', 'secondarysegment', 'client', 'interaction', 'scheme', 'updatestore', 'controller', 'segment', 'protocolstore', 'controller', 'segment', 'manageschange', 'number', 'segment', 'integersecondary', 'primary', 'composedepoch', 'primary', 'segmenttransaction', 'class', 'firstprimary', 'duplicate', 'segment', 'sharesecondary', 'reflects', 'segment', 'ranjan', 'shivesh']",{'issue': 100}
"['reset', 'issue', 'reset', 'state', 'ranjan', 'shivesh']",{'issue': 100}
"['random', 'transaction', 'issue', 'scheme', 'opposedimplement', 'transaction', 'schemeepoch', 'transaction', 'createdencode', 'epochtransaction', 'remaindertransaction', 'ranjan', 'shivesh']",{'issue': 100}
"['stream', 'issue', 'number']",{'issue': 100}
"['segmentstore', 'issue', 'attribute', 'method', 'andrei', 'paduroiu']",{'issue': 100}
"['segmentstore', 'issue', 'variouswhereby', 'segment', 'deletedmetadata', 'issuewhereby', 'incorrectlythrowsnapshot', 'createsnapshot', 'update', 'segment', 'andrei', 'paduroiu']",{'issue': 100}
"['junits', 'readershutdown', 'validate', 'issue', 'offsetvalidate', 'junit', 'readershutdown', 'scenariosegment', 'reader']",{'issue': 100}
"['argument', 'input', 'issue', 'scalingpolicy', 'preconditioninput', 'check', 'parameter', 'scalingpolicy', 'instantiatenumsegments', 'number', 'check', 'segmentreportedfactor', 'scale', 'scalefactor', 'scale', 'parametertarget', 'value', 'targetrate', 'systemworkload', 'scale', 'causeproblem', 'properlygracia']",{'issue': 100}
"['issue', 'streamcuts', 'systemimplement', 'streamcuts', 'systemsystemgracia']",{'issue': 100}
"['issue', 'sequence', 'eventreceives', 'eventensures']",{'issue': 100}
"['issue', 'removinghandle', 'ensures', 'ownedsegments', 'removereaderhandle']",{'issue': 100}
"['applicable', 'issue', 'ensure', 'method']",{'issue': 100}
"['issue', 'varioussynchronization', 'number', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'loggingrelation', 'andrei', 'paduroiu']",{'issue': 100}
"['charset', 'issue', 'variabledefault', 'calculate', 'varies', 'charset', 'andrei', 'paduroiu']",{'issue': 100}
"['segment', 'segmentstore', 'issue', 'multipleswallowexception', 'thrown', 'recovery', 'readindexnever', 'operation', 'action', 'mergesituation', 'segment', 'source', 'emptycompletemerge', 'readindexsegment', 'exception', 'sourcebeginmerge', 'emptyaction', 'segment', 'counterpart', 'empty', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'serializationchange']",{'issue': 100}
"['segmentstore', 'issue', 'integrationintegration', 'creates', 'store', 'fence', 'instance', 'runningoperation', 'attribute', 'rocksdb', 'extract', 'andrei', 'paduroiu']",{'issue': 100}
"['snapshot', 'artifact', 'issue', 'travis', 'optimizedsnapshot', 'publish', 'optimize', 'issue', 'travis', 'buildsnapshot', 'stage', 'check']",{'issue': 100}
"['issue', 'system', 'client', 'batchcorrectness', 'segment', 'parallel', 'stream', 'issue', 'number', 'batchclient']",{'issue': 100}
"['excessive', 'segmentstore', 'issue', 'situationresult', 'continuous', 'invocation', 'writeprocessorprevent', 'situation', 'writeprocessor', 'andrei', 'paduroiu']",{'issue': 100}
"['format', 'documentation', 'issue', 'snippet', 'colorimprove', 'documentation', 'format', 'snippet', 'color']",{'issue': 100}
"['snapshot', 'publish', 'jcenter', 'issue', 'pravegasnapshot', 'support', 'jcenter', 'repository', 'pravega']",{'issue': 100}
"['store', 'segment', 'system', 'issue', 'credential', 'controller', 'fetchingstore', 'segment', 'system', 'credential', 'andrei', 'paduroiu']",{'issue': 100}
"['config', 'classpath', 'pluginlib', 'issue', 'pickup', 'pluginensure', 'pluginlib', 'pluginconfigarvindkandhare']",{'issue': 100}
"['issue', 'renameowner', 'rename', 'resolvedcurrent', 'determinedarvindkandhare']",{'issue': 100}
"['issue', 'hdfsstorage', 'public', 'check', 'exception', 'making', 'hdfsstorage', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'controller', 'ensure', 'alwaysensure']",{'issue': 100}
"['segmentstore', 'issue', 'attributesegmentsetview', 'creates', 'andrei', 'paduroiu']",{'issue': 100}
"['unknown', 'status', 'exception', 'issue', 'returnedmessage', 'error', 'exception', 'appropriateauthentication', 'methodarvindkandhare']",{'issue': 100}
"['controller', 'metadata', 'issue', 'integratedeserialize']",{'issue': 100}
"['segmentstore', 'issue', 'value', 'attribute', 'cachewould', 'value', 'conditionalensures', 'value', 'andrei', 'paduroiu']",{'issue': 100}
"['ensure', 'issue', 'getsegmentinfo', 'propagatesensure', 'issue', 'getsegmentinfo', 'propagates']",{'issue': 100}
"['default', 'issue', 'specifydefault', 'issue', 'specify']",{'issue': 100}
"['issue', 'writer', 'flushcomplete', 'segment', 'flushthrowflush']",{'issue': 100}
"['multicontroller', 'client', 'system', 'issue', 'controller', 'cleanup', 'usingreturn', 'createscreatescopearound', 'issue', 'formerplace', 'ensure', 'creation', 'scope']",{'issue': 100}
"['segmentstore', 'timeout', 'issue', 'sporadic', 'fixedincrease', 'expiration', 'andrei', 'paduroiu']",{'issue': 100}
"['truncation', 'system', 'stream', 'issue', 'integrationimplement', 'integration', 'systemstream']",{'issue': 100}
"['store', 'segment', 'scale', 'issue', 'request', 'range', 'mismatch', 'metadatarather', 'value', 'double', 'potential']",{'issue': 100}
"['event', 'assert', 'period', 'issue', 'retentionasserts']",{'issue': 100}
"['issue', 'deadlocksimplifies', 'scheme']",{'issue': 100}
"['setting', 'issue', 'scheme', 'config', 'scheme', 'autoscaler', 'andrei', 'paduroiu']",{'issue': 100}
"['return', 'streamcut', 'stream', 'issue', 'batchclient', 'ensuresegment', 'streamcut', 'batchclient', 'ensure', 'update']",{'issue': 100}
"['multicontroller', 'issue', 'systemcreates', 'method', 'servicecreate', 'docker', 'parameter', 'marathonalready', 'modifiesdifferent', 'multicontroller', 'instance', 'controller', 'createsdocker', 'deployingmulticontroller', 'creates']",{'issue': 100}
"['issue', 'failuretimeout', 'increase', 'constantglobal', 'parameter', 'timeout', 'andrei', 'paduroiu']",{'issue': 100}
"['segmentstore', 'issue', 'attribute', 'deletedeletes', 'attribute', 'longerdetects', 'segmentcreate', 'andrei', 'paduroiu']",{'issue': 100}
"['documentation', 'issue', 'ranjan', 'shivesh']",{'issue': 100}
"['equal', 'issue', 'enableequal', 'enableimplementation']",{'issue': 100}
"['clientconfig', 'issue', 'credential', 'serializationclientconfig', 'credential', 'serializationeronwright']",{'issue': 100}
"['segmentstore', 'issue', 'attribute', 'extendedknown', 'attribute', 'renamesattribute', 'dynamic', 'extendedattribute', 'segmentstate', 'limitshadow', 'segment', 'loadedcheckpointedattribute', 'memory', 'metadata', 'value', 'andrei', 'paduroiu']",{'issue': 100}
"['compiler', 'issue', 'workaroundinference', 'generic', 'information']",{'issue': 100}
"['bugfix', 'issue', 'batchclient', 'ensure', 'handleensure']",{'issue': 100}
"['increase', 'issue', 'timeouttimeout', 'andrei', 'paduroiu']",{'issue': 100}
"['segment', 'segmentstore', 'issue', 'truncaterollingstorage', 'possiblesegment', 'andrei', 'paduroiu']",{'issue': 100}
"['bugfix', 'issue', 'append', 'conditionalinternallevel', 'clientconditional']",{'issue': 100}
"['outstanding', 'issue', 'response', 'flushsegment', 'outstanding', 'response']",{'issue': 100}
"['maximum', 'issue', 'controller', 'value', 'config', 'client', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'deleteobjectsimplement', 'deleteobjects', 'functionarvindkandhare']",{'issue': 100}
"['variable', 'operation', 'issue', 'controller', 'table', 'update', 'querysegment', 'index', 'history', 'table', 'updateoptimal', 'index', 'queryserialization', 'ranjan', 'shivesh']",{'issue': 100}
"['getstreaminfo', 'issue', 'enableenables', 'getstreaminfo', 'batchclientreturn']",{'issue': 100}
"['warning', 'client', 'issue', 'credential']",{'issue': 100}
"['enable', 'system', 'issue', 'updatemodifies', 'system', 'command']",{'issue': 100}
"['config', 'system', 'issue', 'standaloneconfig', 'security']","{'issue': 100, 'Security': 100}"
"['processing', 'readergroup', 'issue', 'usingenables', 'readergroupspecifiedenables', 'processing', 'subset', 'boundedstream']",{'issue': 100}
"['option', 'issue', 'standalone', 'debugarvindkandhare']",{'issue': 100}
"['timeout', 'issue', 'intermittentperform', 'ranjan', 'shivesh']",{'issue': 100}
"['separate', 'issue', 'returnsignature', 'authenticate', 'method', 'modifiesauthexception', 'return', 'appropriatearvindkandhare']",{'issue': 100}
"['issue', 'update', 'dependency', 'boringssleronwright']",{'issue': 100}
"['process', 'segmentstore', 'error', 'issue', 'fatal', 'ensure', 'startup', 'servershutdown', 'process', 'segmentstore', 'graceful', 'startup', 'andrei', 'paduroiu']","{'issue': 100, 'fatal': 100}"
"['issue', 'configarvindkandhare']",{'issue': 100}
"['issue', 'throwhandlestoretransaction', 'removethrown', 'ranjan', 'shivesh']",{'issue': 100}
"['version', 'bookkeeper', 'system', 'issue', 'integration', 'serverdocker', 'current', 'version', 'fetch', 'versionchange']",{'issue': 100}
"['exception', 'stream', 'transaction', 'issue', 'ranjan', 'shivesh']",{'issue': 100}
"['initial', 'issue', 'number', 'notification', 'segment', 'listener']",{'issue': 100}
"['bugfix', 'return', 'scope', 'stream', 'issue', 'ensurechange', 'segmentrangegetscopename', 'getscope', 'consistentstreamensures', 'scope']",{'issue': 100}
"['readergroup', 'issue', 'batchclient', 'documentation']",{'issue': 100}
"['complete', 'stream', 'transaction', 'issue', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'removemaguire']",{'issue': 100}
"['checkpoint', 'issue']",{'issue': 100}
"['debug', 'issue', 'reader', 'debug', 'group']",{'issue': 100}
"['project', 'issue']",{'issue': 100}
"['warning', 'issue']",{'issue': 100}
"['mkdocs', 'plugin', 'issue', 'enablemkdocs', 'plugin', 'generate']",{'issue': 100}
"['issue', 'readergroupreadergroupimpl']",{'issue': 100}
"['issue', 'credentialarvindkandhare']",{'issue': 100}
"['readtest', 'issue', 'integration', 'failure', 'intermittentlystore', 'segment', 'earlierreturn', 'store', 'readindex', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'acquiresegmentprevent', 'segment', 'reader', 'logicrather']",{'issue': 100}
"['return', 'issue']",{'issue': 100}
"['scale', 'operation', 'issue', 'controller', 'logic', 'barriercapture', 'transientepoch', 'scale', 'operation', 'stream', 'updateoperation', 'current', 'scale', 'check', 'table', 'multiple', 'barrierhistory', 'table', 'update', 'record', 'history', 'partial', 'entryindexcreationepoch', 'segment', 'segment', 'epoch', 'history', 'tablesearch', 'creation', 'binary', 'ranjan', 'shivesh']",{'issue': 100}
"['stream', 'issue', 'streamingreadergroup', 'reset', 'streamcuts', 'startingreset', 'readergroupreader']",{'issue': 100}
"['processing', 'issue', 'boundedenables', 'processing', 'batchclientgetsegments', 'streamsegmentinfo', 'packagegetsegments']",{'issue': 100}
"['sporadic', 'issue', 'failureequal', 'update', 'checkcould', 'ranjan', 'shivesh']",{'issue': 100}
"['segmentstore', 'issue', 'usage', 'unneededunnecessary', 'entire', 'thread', 'extraevery', 'andrei', 'paduroiu']","{'issue': 100, 'thread': 100}"
"['issue', 'backgroundavoids', 'rawclient', 'callingbackground', 'thread']","{'issue': 100, 'thread': 100}"
"['security', 'issue', 'alongarvindkandhare']","{'Security': 100, 'issue': 100}"
"['factor', 'issue', 'client', 'prereqwrapper', 'client', 'connection', 'creates', 'server', 'rawclientrequest']",{'issue': 100}
"['producer', 'segmentstore', 'issue', 'earlierimproves', 'latency', 'writesmaller', 'operation', 'togetherlargerappends', 'andrei', 'paduroiu']",{'issue': 100}
"['capacity', 'segmentstore', 'issue', 'cachelocal', 'throttle', 'request', 'incomingcapacity', 'exceeds', 'cacheconfiguration', 'capacity', 'physical', 'capacity', 'smallercapacity', 'store', 'cachelimit', 'usedcache', 'utilization', 'cacheexceeds', 'introduces', 'delay', 'cacheutilization', 'plateau', 'point', 'maximum', 'valuesecondutilization', 'andrei', 'paduroiu']",{'issue': 100}
"['specific', 'stream', 'issue', 'retentionmetric', 'ranjan', 'shivesh']",{'issue': 100}
"['indentation', 'system', 'issue']",{'issue': 100}
"['store', 'segment', 'issue', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'bookkeeper', 'update', 'versionversion', 'current', 'bookkeeper', 'arvind', 'kandhare']",{'issue': 100}
"['issue', 'usage', 'creation', 'controllerchange', 'clientrelevant', 'client', 'security', 'encryption', 'pravega', 'control', 'changesetup', 'config', 'connection', 'controller', 'class', 'interaction', 'pravega', 'pickedsetup', 'segmentstore', 'config', 'connection', 'class', 'pravega', 'controller', 'pickedchangesapproach', 'authtoken', 'relatedreturn', 'authtoken', 'fetch', 'controllerreturn', 'setup', 'segmentstore', 'client', 'connection', 'pravegachange', 'controllerauthentication', 'custom', 'support', 'pluggableauthentication', 'custom', 'authorization', 'headerauthentication', 'authorization', 'changeauthtoken', 'creationauthorization', 'custom', 'implemenation', 'pluginsegmentstore', 'andrei', 'paduroiu']","{'issue': 100, 'Security': 100, 'encryption': 100}"
"['issue', 'improvementwriteversion', 'getwriteversion', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'store', 'admin', 'segmentcommand', 'interface', 'shellcommand', 'support', 'arbitraryconfig', 'pravegacustom', 'configscommand', 'bookkeeperbookkeeperlog', 'summarydetail', 'bookkeeperlogledger', 'orphan', 'issue', 'bookkeeperlogcommand', 'containerinvasive', 'durablelog', 'recoverycontainer', 'specifiedinput', 'pause', 'selftester', 'updatequick', 'admincluster', 'local', 'andrei', 'paduroiu']",{'issue': 100}
"['streamcut', 'issue']",{'issue': 100}
"['reader', 'coverage', 'issue', 'rebalancereader']",{'issue': 100}
"['issue', 'serializationcreates', 'backward', 'serializationcompatibility', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'docker', 'frameworkexecute', 'support', 'systemscript', 'swarm', 'terraform', 'cluster', 'createsslave', 'instance', 'masterrequireddeploys']",{'issue': 100}
"['reader', 'issue', 'group', 'object', 'serializesthreadsafe', 'checkpointstate', 'convertclass']",{'issue': 100}
"['sporadic', 'issue', 'order', 'operation', 'ensure', 'startup', 'durablelog', 'andrei', 'paduroiu']",{'issue': 100}
"['securebk', 'setting', 'issue', 'honordefault', 'value', 'securebkvalue', 'runbookie', 'andrei', 'paduroiu']",{'issue': 100}
"['ephemeral', 'issue', 'createactuallyephemeral', 'createputifabsent', 'insteadaddingdebug', 'ranjan', 'shivesh']",{'issue': 100}
"['enable', 'segmentstore', 'bookkeeper', 'issue', 'interactiondocker', 'setting', 'config', 'enabletruststores', 'simple', 'sample']",{'issue': 100}
"['issue', 'system', 'retention', 'focus', 'systemfrequency']",{'issue': 100}
"['javadocs', 'issue', 'interface', 'controller', 'flavio', 'junqueira']",{'issue': 100}
"['swarm', 'system', 'issue', 'docker', 'frameworkcomponent', 'swarm', 'various', 'docker', 'servicepravega', 'systemdevelopment', 'support', 'system', 'machine', 'laptop']",{'issue': 100}
"['notification', 'issue', 'update']",{'issue': 100}
"['issue', 'connection', 'reader', 'stallingprevent', 'timeout', 'connection']",{'issue': 100}
"['sporadic', 'issue', 'ranjan', 'shivesh']",{'issue': 100}
"['integration', 'issue']",{'issue': 100}
"['upgrade', 'gradle', 'issue']",{'issue': 100}
"['segmentstore', 'issue', 'offlineonline', 'segment', 'ability', 'offline', 'andrei', 'paduroiu']",{'issue': 100}
"['segmentstore', 'appendprocessor', 'minor', 'issue', 'cleanupremovecontain', 'appendprocessor', 'exception', 'andrei', 'paduroiu']",{'issue': 100}
"['segment', 'segmentstore', 'issue', 'number', 'limit', 'defines', 'attributeenforces', 'segment', 'operation', 'limit', 'attribute', 'updateeffect', 'operation', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'controller', 'processor', 'ranjan', 'shivesh']",{'issue': 100}
"['storage', 'segment', 'thread', 'segmentstore', 'issueimplement', 'segment', 'andrei', 'paduroiu']",{'thread': 100}
"['store', 'segment', 'empty', 'recovery', 'ledger', 'issue', 'cleaningledger', 'track', 'statusremove', 'bookkeperlog', 'empty', 'ledger', 'metadataledger', 'deletes', 'andrei', 'paduroiu']",{'issue': 100}
"['javadoc', 'parameter', 'endingoffset', 'issue', 'batchclientsegmentinfo', 'javadocsendingoffset']",{'issue': 100}
"['rocksdb', 'issue', 'failuretemporary', 'rocksdb', 'class', 'directory']",{'issue': 100}
"['timeout', 'issue', 'bookkeeper', 'andrei', 'paduroiu']",{'issue': 100}
"['specific', 'recreate', 'stream', 'reset', 'issue', 'value', 'originalmetric', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'redundant', 'reference']",{'issue': 100}
"['exception', 'issue', 'incase', 'ensure', 'reconnectensure']",{'issue': 100}
"['jersey', 'issue', 'controller', 'dependency']",{'issue': 100}
"['scenario', 'issue', 'andrei', 'paduroiu']",{'issue': 100}
"['ensure', 'issue']",{'issue': 100}
"['system', 'transaction', 'issue', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'client', 'event', 'client', 'internal', 'client']",{'issue': 100}
"['segmentstore', 'attempt', 'transaction', 'issue', 'transaction', 'issue', 'request', 'andrei', 'paduroiu']",{'issue': 100}
"['common', 'thread', 'storage', 'segmentstore', 'issuecommon', 'thread', 'segmentstore', 'independentstorage', 'operation', 'syncstorage', 'essentiallystorage', 'intensive', 'operation', 'adapternetty', 'bookkepeercomponent', 'segmentstore', 'durablelog', 'andrei', 'paduroiu']",{'thread': 100}
"['expiry', 'instance', 'issue', 'controller', 'sessionshutdown', 'component', 'graceful', 'performs', 'sessionexecutor', 'process', 'restart', 'ranjan', 'shivesh']",{'issue': 100}
"['segmentstore', 'segmentchunks', 'transaction', 'issue', 'number', 'mergesunseal', 'segment', 'functionality', 'abilityupstream', 'layer', 'storageimplement', 'unsealunseals', 'segment', 'chunk', 'header', 'rollingstorage', 'futureinstead', 'chunk', 'merges', 'andrei', 'paduroiu']",{'issue': 100}
"['segmentstore', 'recovery', 'issue', 'storagewriter', 'handlewould', 'andrei', 'paduroiu']",{'issue': 100}
"['compute', 'unread', 'issue', 'basedsegment', 'computes', 'successful', 'unreadbytes']",{'issue': 100}
"['increase', 'resource', 'bookkeeper', 'issue', 'resource', 'bookkeeper', 'ensures']",{'issue': 100}
"['issue', 'policy', 'retentionstream', 'retention', 'configuration', 'check', 'policy', 'stream', 'retention', 'update', 'whetherremove', 'previous', 'bucket', 'configuration', 'ranjan', 'shivesh']",{'issue': 100}
"['scalingpolicy', 'issue', 'javadocs', 'disjunction', 'clarifies', 'conjunctiontarget', 'clarifies', 'segmentexplains', 'flavio', 'junqueira']",{'issue': 100}
"['issue', 'rename', 'rename', 'eventpointer']",{'issue': 100}
"['duplicate', 'check', 'system', 'issue', 'addingwritten', 'event', 'capturerecord', 'report', 'ranjan', 'shivesh']",{'issue': 100}
"['ensure', 'issue', 'reading', 'eventcontinues', 'ensures', 'method']",{'issue': 100}
"['issue', 'systemoperation', 'conflict', 'stream', 'logic', 'retry', 'anotherscale', 'typicallysegment', 'scale', 'operation', 'verifies', 'client', 'exception', 'stream', 'ranjan', 'shivesh']",{'issue': 100}
"['outstanding', 'issue', 'request', 'cancelclose', 'outstanding', 'ensures', 'request']",{'issue': 100}
"['rocksdb', 'issue', 'updateeronwright']",{'issue': 100}
"['issue', 'connection']",{'issue': 100}
"['ensure', 'issue', 'order', 'appendensures', 'appendguarantee']",{'issue': 100}
"['initial', 'execution', 'parameter', 'period', 'maximum', 'issue', 'leasecontroller', 'maximum', 'execution', 'removeinitial', 'execution', 'ranjan', 'shivesh']",{'issue': 100}
"['level', 'issue', 'controller', 'loggingimprove', 'level', 'controller', 'ranjan', 'shivesh']",{'issue': 100}
"['ensure', 'issue', 'rollover', 'compressedensures']",{'issue': 100}
"['policy', 'issue', 'class', 'retentionjavadocs', 'public', 'static', 'retentionpolicy', 'class', 'scalingpolicyspecific', 'renames', 'retentionpolicy', 'class', 'flavio', 'junqueira']",{'issue': 100}
"['retryable', 'issue', 'request', 'abort', 'retrycommit', 'retryable', 'situation', 'abort', 'retriesconcurrent', 'zookeeper', 'ranjan', 'shivesh']",{'issue': 100}
"['sandbox', 'mesos', 'issue', 'pravega', 'ensuresandbox', 'mesos', 'ensures', 'check', 'service']",{'issue': 100}
"['issue', 'system', 'flavio', 'junqueira']",{'issue': 100}
"['pointer', 'eventpointer', 'issue', 'ensure', 'method']",{'issue': 100}
"['empty', 'scope', 'issue', 'directory', 'deletestream', 'scope', 'deletingprocess', 'scope', 'deletedscope', 'request', 'deletionintroduces', 'check', 'exists', 'stream', 'interface', 'ranjan', 'shivesh']",{'issue': 100}
"['alive', 'client', 'issue', 'internallysends', 'alive', 'client', 'issue', 'enable', 'periodic', 'client', 'pingtransaction', 'keepalives', 'transaction', 'lease', 'pravega']",{'issue': 100}
"['workflow', 'issue', 'controller', 'metadata', 'retentionimplement', 'policy', 'workflow', 'controller', 'bucketizes', 'stream', 'controlleravailable', 'instance', 'instance', 'controller', 'acquires', 'responsiblestream', 'workflow', 'ranjan', 'shivesh']",{'issue': 100}
"['error', 'template', 'issue', 'preconditionmessage', 'error']",{'issue': 100}
"['bugfix', 'health', 'additional', 'check', 'timeout', 'issue', 'failoverimage', 'mesos', 'ensures', 'docker', 'increase', 'resource']",{'issue': 100}
"['warning', 'issue', 'compiler', 'intellij', 'number', 'various', 'usingincludelevel', 'field', 'class', 'variable', 'field', 'local', 'level', 'field', 'level', 'guard', 'class', 'andrei', 'paduroiu']",{'issue': 100}
"['segmentstore', 'issue', 'readonlystart', 'segmentstore', 'andrei', 'paduroiu']",{'issue': 100}
"['issue', 'bookkeeper', 'updateversion', 'image', 'docker', 'updatebookkeeperversion', 'zookeeper', 'bookkeeper', 'update', 'container', 'sincebookkeeperhigher', 'version', 'level', 'number', 'containeranytime', 'version', 'wouldbookkeeper', 'server', 'versionzookeeper', 'versionjonny', 'flavio', 'junqueira']",{'issue': 100}
"['bookkeeper', 'marathon', 'healthcheck', 'issue', 'ensurehealth', 'setting', 'bookkeeper', 'check']",{'issue': 100}
"['netty', 'issue', 'connection', 'cleanup', 'ensure', 'statehappens', 'ensures', 'connection']",{'issue': 100}
"['compatible', 'version', 'system', 'marathon', 'issue', 'ensure', 'frameworkensure']",{'issue': 100}
"['segment', 'reader', 'issue', 'ensure', 'aquiresreader', 'ensures']",{'issue': 100}
"['bookie', 'issue', 'integrationbookie', 'number', 'reduces', 'integration', 'sincepoint', 'andrei', 'paduroiu']",{'issue': 100}
"['publish', 'maven', 'convention', 'issue', 'central', 'maven', 'javadocjar', 'property', 'archivetasksignature', 'artifactjonny']",{'issue': 100}
"['issue', 'batchbatch', 'client']",{'issue': 100}
"['integration', 'issue', 'resource', 'cleanensures', 'threadpools']",{'issue': 100}
"['event', 'client', 'issue', 'range', 'event', 'client', 'check', 'number', 'sanity', 'client', 'level', 'issue', 'validationvalidate', 'clientissue', 'review', 'length', 'client', 'check', 'responsevalidation', 'range', 'eventcheckstyle', 'issue', 'errortimeout', 'methodlength', 'checkmoment', 'compatible', 'attempt', 'backwardsinstead', 'length', 'check', 'flavio', 'junqueiracompilation', 'error', 'flavio', 'junqueira']","{'issue': 100, 'length': 100}"
"['sporadic', 'issue', 'failurestart', 'ranjan', 'shivesh']",{'issue': 100}
"['truncation', 'stream', 'workflow', 'issue', 'controllerimplement', 'processing', 'truncation', 'stream', 'workflow', 'stream', 'corresponds', 'metadatasegment', 'contains', 'information', 'compute', 'ranjan', 'shivesh']",{'issue': 100}
"['conduct', 'issue', 'update']",{'issue': 100}
"['backoff', 'issue', 'retry', 'bookkeeperlogbookkeeperlog', 'writeprocessor', 'backoff', 'update', 'retryencounterinstead', 'standard', 'mechanism', 'policy', 'update', 'retrywrite', 'action', 'attempt', 'discount', 'rollover', 'failure', 'sinceinstead', 'bookkeeperlog', 'netty', 'bookie', 'realistic', 'interface', 'andrei', 'paduroiu']",{'issue': 100}
"['bugfix', 'bookkeeperlog', 'issue', 'rollover', 'failurerespect', 'andrei', 'paduroiu']",{'issue': 100}
"['checkpoint', 'issue', 'flavio', 'junqueira']",{'issue': 100}
"['segmentstore', 'bookkeeper', 'issue', 'concurrencywrite', 'andrei', 'paduroiu']",{'issue': 100}
"['truncation', 'issue', 'segmentpublic', 'offsetimplement', 'processedsegmentstore', 'operation', 'mannerexecution', 'getstartoffset', 'updatetruncation', 'truncate', 'containhandle', 'index', 'update', 'truncationbecomes', 'store', 'segment', 'truncation', 'segmentstate', 'inactive', 'offsetmetadata', 'andrei', 'paduroiu']",{'issue': 100}
"['sporadic', 'issue', 'failure', 'buildexception', 'session', 'connectivity', 'throwexpiry', 'increase', 'ranjan', 'shivesh']",{'issue': 100}
"['issue', 'getter', 'flavio', 'junqueira']",{'issue': 100}
"['checkpoint', 'issue', 'automaticenables', 'checkpoint']",{'issue': 100}
"['notification', 'issue', 'segment', 'eventnotification', 'segment', 'event']",{'issue': 100}
"['upgrade', 'issue', 'dependencylatest', 'update', 'dependency']",{'issue': 100}
"['sporadic', 'issue', 'failure', 'buildupdatestream', 'processing', 'order', 'ranjan', 'shivesh']",{'issue': 100}
"['overload', 'issue', 'hdfsstoragewrong', 'previous', 'entire', 'length', 'overload', 'writeoperation', 'buffer', 'inputstream', 'andrei', 'paduroiu']","{'issue': 100, 'length': 100, 'buffer': 100}"
"['infrastructure', 'event', 'stream', 'workflow', 'issue', 'processor', 'updateevent', 'stream', 'workflow', 'request', 'processor', 'different', 'mechanism', 'scale', 'earlierevent', 'ranjan', 'shivesh']",{'issue': 100}
"['optimization', 'segmentstore', 'issue', 'getsegmentinfochange', 'segment', 'memory', 'metadata', 'returnedsegment', 'andrei', 'paduroiu']",{'issue': 100}
"['transaction', 'issue']",{'issue': 100}
"['storage', 'config', 'issue', 'namespacenamespace', 'creatingarvindkandhare']",{'issue': 100}
"['exception', 'stream', 'issue', 'writersends', 'segment', 'exists', 'connectionexception']",{'issue': 100}
"['error', 'option', 'issue', 'handlingfollowingonerroravoid']",{'issue': 100}
"['issue', 'javadocchange', 'javadoc', 'reflect', 'actualflorian']",{'issue': 100}
"['system', 'transaction', 'issue', 'system', 'failoverscalingperforms', 'failoversegmentstore', 'failovercontroller', 'failoversegmentstore', 'controller', 'veerubhotla', 'prabha']",{'issue': 100}
"['handler', 'event', 'request', 'issue', 'processor', 'visitor', 'implementation', 'patternevent', 'processing', 'processor', 'visitor']",{'issue': 100}
"['close', 'client', 'issue', 'connection', 'controllertransport', 'close', 'resource', 'ensures']",{'issue': 100}
"['issue', 'invalidensure', 'precondition', 'check']",{'issue': 100}
"['issue', 'system', 'checkpointingsystem']",{'issue': 100}
"['startup', 'issue', 'level', 'configurationconfiguration', 'store', 'controller', 'configuration', 'client']",{'issue': 100}
"['version', 'standardize', 'issue', 'apache']",{'issue': 100}
"['error', 'system', 'issue', 'failover', 'reader', 'writerassert', 'error', 'exception', 'failover', 'reader', 'writer']",{'issue': 100}
"['metric', 'issue', 'store', 'metric', 'segmentstore', 'operation', 'addedbookkeeperlatency', 'writequeue', 'latency', 'bookkeeperlog', 'includingqueue', 'various', 'usefulgeneration', 'total', 'cache']",{'issue': 100}
"['issue', 'optimize', 'runinexecutorreuse']",{'issue': 100}
"['metric', 'issue', 'configurationenable', 'metric', 'singlenode']",{'issue': 100}
"['counter', 'issue', 'ability', 'metric', 'counter', 'frozen', 'gauge', 'ensure', 'dynamic', 'updatesegment', 'frozen', 'stream', 'gauge']",{'issue': 100}
"['filesystem', 'system', 'deployment', 'issue', 'store', 'segment', 'configs', 'isilon', 'segmentstore', 'configuration', 'applicable', 'marathon']",{'issue': 100}
"['zookeeper', 'issue', 'pravega', 'standalone', 'initializesdirectory', 'temporarymethod', 'initialization']",{'issue': 100}
"['issue', 'controller', 'scheme']",{'issue': 100}
"['snapshot', 'version', 'issue', 'pravegachange', 'pravegaversion']",{'issue': 100}
"['segmentstore', 'issue', 'creation', 'incomplete', 'abilityrecover', 'createsegment', 'ability', 'incompleteexist', 'state', 'segment', 'subsequentreturn', 'success', 'attempt', 'createsegment', 'stateexist', 'state', 'exists', 'segmentcreatesegment', 'state', 'subsequentreturnsegment', 'valid', 'state']",{'issue': 100}
"['issue', 'writerflight', 'close', 'sends', 'segment', 'request']",{'issue': 100}
"['system', 'issue', 'controllerfailovertest', 'problem', 'check', 'controller']",{'issue': 100}
"['processing', 'issue', 'serialize', 'streamabstract', 'handler']",{'issue': 100}
"['scale', 'issue', 'controllerstartscale']",{'issue': 100}
"['issue', 'normalincrease', 'message', 'appendprocessor', 'usefulness', 'reduces']",{'issue': 100}
"['accurate', 'issue', 'readme']",{'issue': 100}
"['different', 'stale', 'instance', 'issue', 'controller', 'abort', 'fence', 'renewal', 'lease']",{'issue': 100}
"['error', 'logic', 'issue', 'handlingthrown', 'ensures', 'exception']",{'issue': 100}
"['assert', 'issue', 'statementassert', 'error', 'statement', 'corrects', 'referencereader']",{'issue': 100}
"['issue', 'avoidclient']",{'issue': 100}
"['issue', 'service', 'pravega', 'ensure', 'statuscompletes', 'ensures']",{'issue': 100}
"['backoffsecs', 'segmentstore', 'configuration', 'system', 'deployment', 'issue', 'configure', 'removeoption', 'large', 'setting']",{'issue': 100}
"['epoch', 'completion', 'scale', 'issue', 'deleterather', 'table', 'entry', 'segment', 'scale', 'table', 'segment']",{'issue': 100}
"['completion', 'order', 'verification', 'issue', 'writer']",{'issue': 100}
"['error', 'getsuccessors', 'issue', 'present', 'value', 'sporadicsegment', 'ensures', 'creation', 'alwaysgreater', 'previousprevious', 'segment', 'scale', 'table', 'ensures', 'creation', 'logichelper', 'successor', 'fetch', 'getsuccessors', 'history', 'ensures', 'stream', 'controller', 'firstthencompose', 'segment']",{'issue': 100}
"['controllerimpl', 'system', 'executor', 'issue', 'serviceexclusive', 'executor', 'controller', 'implementation']",{'issue': 100}
"['small', 'issue', 'hdfsstorage', 'close', 'storagestream', 'instance', 'hdfsstorage', 'disablesacross', 'process', 'class', 'usingshuts', 'instance', 'close', 'releasingdisable', 'option', 'replacement', 'accordingprevent', 'exact', 'cluster', 'recommendedcreatefilecreateemptyfile', 'renames', 'multi', 'creation', 'atomiccreateresult', 'process', 'multiplesinceparticular', 'instance', 'simple', 'track', 'usingcreate']",{'issue': 100}
"['issue', 'entry', 'cachesegment', 'event', 'scale']",{'issue': 100}
"['exception', 'issue']",{'issue': 100}
"['configuration', 'client', 'retry', 'issue', 'controller', 'failover', 'updateremove', 'client', 'system', 'controller', 'retryattempty', 'additional', 'number', 'reduces', 'writertrigger', 'writer', 'total']",{'issue': 100}
"['issue', 'predicate']",{'issue': 100}
"['store', 'segment', 'transaction', 'issue', 'abort', 'idempotentstore', 'segment', 'nosuchsegment']",{'issue': 100}
"['issue', 'closeclientfactory', 'close', 'internallythread', 'exception', 'reader', 'writer', 'stoppingreduces']",{'issue': 100}
"['deletion', 'segment', 'segmentstore', 'issue', 'flush', 'metadata', 'readindex']",{'issue': 100}
"['issueaddingcheckstyle', 'issue', 'fixedremove']",{'issue': 100}
"['reading', 'issue', 'robustexception', 'preventscorrect', 'assertion']",{'issue': 100}
"['thread', 'operation', 'issue', 'controller', 'ensure', 'availableexecutor', 'client']","{'thread': 100, 'issue': 100}"
"['processing', 'scale', 'level', 'issue', 'improvedlevel', 'scale']",{'issue': 100}
"['client', 'issue', 'controller', 'retrieswrapper', 'client', 'controller', 'retryexception', 'transport', 'layer', 'controller']",{'issue': 100}
"['issue', 'updateconnector', 'updatevarious', 'update', 'installationupdate']",{'issue': 100}
"['increase', 'executor', 'issue', 'future', 'serviceexecutor', 'increase', 'servicewriter', 'number', 'future', 'arbitrary']",{'issue': 100}
"['nameutilstest', 'utility', 'issue']",{'issue': 100}
"['stream', 'period', 'issue']",{'issue': 100}
"['bugfix', 'metadata', 'segmentstore', 'transaction', 'issue', 'orphanchange', 'active', 'transaction', 'number']",{'issue': 100}
"['issue', 'header', 'license']",{'issue': 100}
"['external', 'selftest', 'client', 'issue', 'pravega', 'usingentire', 'selftest', 'segmentstore', 'addition', 'pravega', 'targetoverviewproducer', 'segment', 'operation', 'createproducer', 'random', 'event', 'number', 'originator', 'generate', 'sequencerandom', 'event', 'validate', 'consumer', 'order', 'verification', 'stream', 'address', 'quality', 'corruptedreport', 'performance', 'stats', 'check', 'instant', 'various', 'overall', 'throughput', 'truncateable', 'memory', 'segmentstore', 'instantiatessegmentstore', 'instant', 'operation', 'clientfactory', 'append', 'instantiatesperformance', 'client', 'check', 'mainlyinstantiates', 'client', 'operation', 'append', 'singleconnects', 'external', 'segmentstore', 'controller', 'pravega', 'clusteroutofprocess', 'local', 'number', 'pravega', 'cluster', 'createsappends', 'custom', 'factor', 'process', 'instance', 'bookkeeper', 'replication', 'bookie', 'stream', 'number', 'gradle', 'command']",{'issue': 100}
"['segment', 'thread', 'retransmission', 'issue', 'backgroundthread', 'event', 'retransmission', 'connection']","{'thread': 100, 'issue': 100}"
"['scale', 'system', 'issue', 'sporadic', 'failure', 'timeouts', 'statebreak', 'operation', 'scale', 'complete', 'ensures']",{'issue': 100}
"['authentication', 'issue', 'update', 'system']",{'issue': 100}
"['jenkins', 'issue', 'address', 'subsequentinvoke', 'request', 'piggyback', 'thrown', 'exception', 'happeneddifferent', 'segment', 'previous', 'issue', 'usingsegmentrather', 'originalimplementation', 'condition']",{'issue': 100}
"['system', 'issue', 'appropriate', 'timeoutstimeout']",{'issue': 100}
"['scale', 'operation', 'minor', 'issue', 'controller']",{'issue': 100}
"['eventprocessor', 'issue', 'sporadic', 'failure']",{'issue': 100}
"['segmentstore', 'dataframes', 'reuse', 'issue', 'buffer', 'physicalevery', 'dataframe', 'bookkeeper', 'attempt', 'point', 'situation', 'stillbuilt', 'dataframes', 'track', 'lengthreturn', 'segment', 'array', 'dataframes', 'physical', 'alreadyallocate', 'dataframe', 'track', 'physical', 'offset', 'insidebuffer', 'dataframe', 'length', 'space', 'average', 'availablewrite', 'chancerather', 'dataframe', 'consecutive', 'buffer', 'sincewaste']","{'issue': 100, 'buffer': 100, 'length': 100}"
"['client', 'issue', 'asynchronous', 'logic', 'background', 'reconnectcondition', 'describedmaintain', 'thread', 'exponential', 'asynchronous', 'connection', 'backoff', 'logic', 'reconnect']","{'issue': 100, 'thread': 100}"
"['slack', 'issue', 'credential', 'travis']",{'issue': 100}
"['identical', 'traffic', 'segment', 'double', 'minute', 'scale', 'recreate', 'issue', 'controller', 'range', 'target']",{'issue': 100}
"['bugfix', 'segmentstore', 'order', 'issue', 'possiblewrite', 'event', 'segmentstore', 'possible', 'receiveddifferent', 'mercy', 'invocation', 'predictable', 'receivedreturn', 'durablelog', 'operationlog', 'result', 'simplification']",{'issue': 100}
"['segmentstore', 'issue', 'public', 'address', 'shellsegmentstore', 'setting']",{'issue': 100}
"['bugfix', 'segmentstore', 'issue', 'infiniteasync', 'infinite', 'bookkeeperlog', 'attempt']",{'issue': 100}
"['issue', 'system', 'failoverfailover', 'issue', 'followingchecktxnstatus', 'ensure', 'logic', 'retry', 'modifyhandle', 'state', 'stillensure', 'delayensurecatch', 'blockwriter', 'increase', 'retry', 'attemptclose', 'exception', 'ensure', 'method']",{'issue': 100}
"['issue', 'connection', 'failure', 'flushlogic', 'background', 'reconnect', 'flushscope', 'callback', 'reduces', 'retries']",{'issue': 100}
"['default', 'installer', 'region', 'issue', 'pravega', 'delete']",{'issue': 100}
"['idempotent', 'issue', 'segment']",{'issue': 100}
"['installer', 'issue', 'update', 'pravegadeploys', 'github', 'master', 'pravegalatest', 'update', 'installation']",{'issue': 100}
"['sporadic', 'issue', 'failure', 'buildreplaces']",{'issue': 100}
"['bugfix', 'netty', 'issue', 'connection', 'ensure', 'retriessetup', 'attempt', 'netty', 'ensures', 'connectionadditional', 'caller', 'ensureshandle']",{'issue': 100}
"['consistency', 'checkpoint', 'issue', 'enforceinconsistent', 'condition', 'result']",{'issue': 100}
"['count', 'transaction', 'issue', 'comparison', 'statuswrite']",{'issue': 100}
"['issue', 'systemsystem', 'exception', 'failover', 'reader']",{'issue': 100}
"['issue', 'lease']",{'issue': 100}
"['writer', 'issue', 'refactorrefactors', 'writer', 'usage']",{'issue': 100}
"['implementation', 'issue', 'filesystem', 'treatallows', 'translatesexception']",{'issue': 100}
"['increase', 'scale', 'system', 'issue', 'sleep', 'sleep', 'failover', 'container']",{'issue': 100}
"['store', 'message', 'error', 'exception', 'issue', 'storeexception', 'error', 'information', 'description']",{'issue': 100}
"['scale', 'issue', 'manual', 'responsestartscale', 'manual', 'expose', 'scalestart', 'responds']","{'issue': 100, 'expose': 100}"
"['error', 'exception', 'level', 'issue']",{'issue': 100}
"['client', 'timeout', 'issue', 'keepaliveincrease', 'minute', 'keepalives', 'timeout', 'keepalive', 'earlierpermissible', 'limit', 'server']",{'issue': 100}
"['netty', 'jersey', 'issue', 'dependencyremove', 'unnecessary', 'pingtest', 'netty', 'jersey', 'update']",{'issue': 100}
"['default', 'configuration', 'issue', 'eventwriter', 'updatedefault', 'backoff', 'writer', 'updatesystem']",{'issue': 100}
"['bugfix', 'issue', 'error', 'clear', 'connection', 'opportunity', 'retriesdifferent', 'store', 'segment', 'failover']",{'issue': 100}
"['netty', 'jersey', 'issue', 'containerreplaces', 'truncation', 'netty', 'large', 'jersey', 'issue', 'container']",{'issue': 100}
"['sufficient', 'segment', 'failovers', 'issue', 'sleep', 'writer', 'containerincrease', 'store', 'segment', 'tolerate', 'current', 'sleep', 'failover']",{'issue': 100}
"['cluster', 'listener', 'issue', 'abstractionfailoversweeper', 'defines', 'agnostic', 'controller', 'clustersweep', 'ready', 'sweeper', 'various', 'schedule', 'backgroundreceive', 'notification']",{'issue': 100}
"['production', 'system', 'deployment', 'issue', 'followenvironment', 'script', 'configuration', 'variableproductiondefault', 'override', 'system']",{'issue': 100}
"['failure', 'error', 'issue', 'pravega', 'reader', 'update', 'handlingclose', 'error', 'ensures', 'connection', 'incase', 'connection', 'pravega']",{'issue': 100}
"['enable', 'support', 'issue', 'controller', 'keepaliveupgrade', 'version', 'keepalivetransport', 'minute']",{'issue': 100}
"['failure', 'resolution', 'client', 'issue', 'controller', 'retrynetwork', 'resolution', 'update', 'retry', 'nameresolverdetect', 'resolution', 'regular', 'performs', 'address']",{'issue': 100}
"['store', 'scale', 'check', 'issue', 'hammer', 'manualreduces', 'check', 'stream', 'performsdifferent']",{'issue': 100}
"['segmentstore', 'issue', 'fixedcould']",{'issue': 100}
"['anonymous', 'supplier', 'issue']",{'issue': 100}
"['metric', 'issue', 'filesystemimplement', 'metric', 'filesystem', 'implementation']",{'issue': 100}
"['spurious', 'issue', 'readindexwould', 'report']",{'issue': 100}
"['issue', 'controllerdifferent', 'sweeper', 'listener', 'controller', 'clusterdefine', 'issue', 'method', 'sweeperinitial', 'sweep', 'strayhandle', 'notification', 'sweep', 'failurecomponent', 'sweepernotification', 'complete', 'drain', 'queuecomplete']",{'issue': 100}
"['segmentstore', 'issue', 'exception', 'general', 'failure']",{'issue': 100}
"['improper', 'calculation']",{'improper': 100}
"['scale', 'scenario', 'issue', 'followingsetup', 'instance', 'store', 'reader', 'writerwriter', 'increase', 'scalingperform', 'scale', 'operation', 'failoverstore', 'segment', 'failovercontroller', 'failoverstore', 'controller', 'segment', 'previous', 'event', 'failover', 'ensure', 'value']",{'issue': 100}
"['implementation', 'issue', 'extendedenables', 'option', 'storageimplementation', 'interface', 'storage', 'extendedintegration', 'extendingcommon', 'consolidates', 'system']",{'issue': 100}
"['segmentstore', 'issue', 'sporadic', 'registration', 'containercould', 'containerregistration', 'request', 'internal', 'callback', 'registration', 'possible', 'containerresult', 'shuts', 'callback', 'possiblenever']",{'issue': 100}
"['scope', 'client', 'issue', 'scope', 'client', 'ensures', 'right', 'factory', 'usingstream']",{'issue': 100}
"['issue', 'marathonchange']",{'issue': 100}
"['timeout', 'issue', 'session', 'configurabletimeout', 'sessiondefault', 'value', 'session', 'timeout']",{'issue': 100}
"['scope', 'issue', 'activeactivetxroot', 'definition', 'corrects']",{'issue': 100}
"['issue', 'txnnotfoundownership', 'ignores', 'txnsweeper']",{'issue': 100}
"['async', 'issue', 'retriesrather', 'caller', 'threadpool', 'request']",{'issue': 100}
"['specific', 'exception', 'issue', 'interface', 'cluster', 'modifyreturn', 'specific', 'exception', 'interface', 'cluster', 'modify']",{'issue': 100}
"['state', 'issue', 'updatestream', 'idempotent', 'updateconfiguration', 'state', 'update', 'updatestreamcover', 'setting', 'crash', 'scenario']","{'issue': 100, 'crash': 100}"
"['issue', 'retry', 'parameterretry', 'parameter']",{'issue': 100}
"['findbugs', 'issue', 'annotate', 'lombokfindbugs', 'annotate', 'lombok']",{'issue': 100}
"['thread', 'segmentstore', 'issue', 'number', 'containerreturn', 'introduces', 'servicehelpers', 'serviceabstract', 'mechanism', 'block', 'servicewherever', 'servicehelpersreplaces', 'retiresentire', 'thread', 'blockappropriate', 'quorum', 'ensemblewould', 'value', 'default']","{'thread': 100, 'issue': 100}"
"['threadpool', 'issue', 'internalthread', 'event', 'internal', 'scenario', 'stream', 'writer', 'retriessegment', 'sealedsegment', 'client', 'performs', 'retriesclient', 'scenariocontroller', 'check', 'segmentsegment', 'refreshes', 'current', 'active', 'createsresends', 'unack', 'eventremove', 'thread', 'eventwriter']","{'issue': 100, 'thread': 100}"
"['master', 'error', 'checkstyle', 'issue']",{'issue': 100}
"['internal', 'stream', 'issue', 'creation', 'controller', 'discovers', 'createstreamfollowingreturn', 'creation', 'successful', 'streamexistsprevious', 'complete', 'creation', 'originalreturn', 'different', 'store', 'streamexists']",{'issue': 100}
"['unreadbytes', 'ability', 'issue', 'calculatemetric', 'method', 'unreadbytesremain', 'member', 'unread']",{'issue': 100}
"['framework', 'transaction', 'issue', 'operationtransaction', 'operation', 'managementabort', 'transaction', 'request', 'frameworktransaction', 'class', 'tasktestsindex', 'transaction', 'track', 'controller', 'separate', 'classtransaction', 'indexmanage', 'transaction', 'method', 'updatehostindex', 'failover']",{'issue': 100}
"['segmentstore', 'issue', 'storagewriter', 'sporadic', 'failure', 'readindexrecovery', 'proper', 'checkcallsite', 'readdirect', 'bubblehandleignore']",{'issue': 100}
"['issue', 'segment']",{'issue': 100}
"['segment', 'input', 'scale', 'check', 'issue', 'range', 'sanity', 'ensuresegment', 'input', 'scale', 'check', 'sanity', 'ensure', 'range']",{'issue': 100}
"['sporadic', 'issue']",{'issue': 100}
"['scenario', 'transaction', 'issue', 'failoversimple', 'followingsetup', 'instancewrite', 'event', 'transaction', 'reader', 'failoverfailovercontroller', 'failovercontroller', 'previous', 'event', 'failover', 'ensure', 'value']",{'issue': 100}
"['retryable', 'issue', 'trait', 'allowedtrait', 'reintroduceexception', 'trait']",{'issue': 100}
"['issue', 'updatesystem', 'zookeeper', 'update', 'version']",{'issue': 100}
"['exception', 'stream', 'issue', 'request', 'writerchange', 'instance', 'stream', 'metadatacaller', 'stream', 'request']",{'issue': 100}
"['issue', 'basedimplement', 'posixwrite', 'idempotent', 'offset', 'writessingle', 'segment']",{'issue': 100}
"['implementation', 'issue', 'operation', 'scaleimplement', 'epoch', 'operation', 'stream', 'manner']",{'issue': 100}
"['issue', 'setting']",{'issue': 100}
"['issue', 'store', 'segment', 'eventenable', 'eventpipedrotation']",{'issue': 100}
"['segmentstore', 'issue', 'fixedwouldvalue', 'transaction', 'current', 'segment']",{'issue': 100}
"['scenario', 'multi', 'issue', 'failover', 'reader', 'writersystem', 'followingsetup', 'failoverfailovercontroller', 'failovercontroller', 'previous', 'event', 'failover', 'ensure', 'value']",{'issue': 100}
"['multiple', 'issue', 'eventquick', 'succession', 'event', 'timeout', 'multiplefresh', 'cluster', 'rebalance', 'multi', 'handlestart']",{'issue': 100}
"['unittest', 'segmentstore', 'issue', 'issue', 'fixeddouble', 'attempt', 'number', 'decrementedfewer', 'operation']",{'issue': 100}
"['error', 'segmentstore', 'issue', 'handlingbookkeeperlogrecover', 'bookkeeper', 'ledger', 'appliedpreservedunknown', 'fetch', 'detects', 'failure', 'retryable', 'maximum', 'number', 'failure', 'permanentwrite', 'retriesinstead', 'obscure', 'cancelledshuttingstore', 'segmentfailure', 'shuts', 'durabledatalogreasonwrite', 'order', 'brutal', 'container', 'momentcomplex', 'support', 'orderinstead', 'obscure', 'operation']",{'issue': 100}
"['issue', 'usage']",{'issue': 100}
"['issue', 'temporal', 'dependency', 'removedtemporal', 'dependency', 'intermittentlytemporal', 'redundant', 'dependency', 'behaviortemporal', 'redundant', 'dependency']",{'issue': 100}
"['container', 'ownership', 'issue', 'delaysegment', 'processing', 'zookeeper', 'ownership', 'assignment', 'delay', 'container', 'monitorprocess', 'zookeeper', 'ownership']",{'issue': 100}
"['setting', 'point', 'bookie', 'issue', 'entryallow', 'bookie', 'setting', 'autorecovery']",{'issue': 100}
"['consistent', 'terminology', 'issue', 'updatestream', 'alterstreamconsistent']",{'issue': 100}
"['duplicate', 'issue', 'segmentcould', 'duplicate', 'current', 'operation', 'unique', 'number']",{'issue': 100}
"['issue', 'pravegametric', 'prefix', 'pravegaanyone', 'followingprefix', 'storage', 'metric', 'standardize', 'regardless']",{'issue': 100}
"['async', 'segmentstore', 'issue', 'writesstore', 'segment', 'parallelwrite', 'finish', 'request', 'alwaysdescriptionchange', 'major']",{'issue': 100}
"['issue', 'convenience', 'reader', 'method', 'deletereader', 'method', 'convenence', 'delete']",{'issue': 100}
"['folder', 'issue']",{'issue': 100}
"['return', 'issue', 'scalereturn', 'store', 'event', 'scale', 'stream']",{'issue': 100}
"['store', 'epoch', 'support', 'stream', 'transaction', 'issue', 'metadata', 'updatestore', 'support', 'stream', 'interface', 'metadataabstract', 'integerabstract', 'getlatestepoch', 'integerabstract', 'getactiveepoch', 'integermethod', 'updatezkstream', 'additional', 'parametercommit', 'sealtransaction', 'modifies', 'abort']",{'issue': 100}
"['issue', 'standalone', 'runtime', 'conflict', 'jersey']",{'issue': 100}
"['gradle', 'parallel', 'conflict', 'issue', 'fixingstart', 'method', 'parallelcause', 'conflict', 'sequence', 'scanningstart', 'index', 'clash', 'probability']",{'issue': 100}
"['controller', 'issue', 'threaddifferent', 'thread', 'controller', 'single']","{'issue': 100, 'thread': 100}"
"['classpath', 'issue', 'runningstart', 'classpath', 'extra', 'creates', 'purelygradle', 'browse', 'example', 'issue']",{'issue': 100}
"['coverage', 'issue']",{'issue': 100}
"['bugfix', 'store', 'segment', 'marker', 'stream', 'revision', 'offsetsupport', 'markercompaction', 'store', 'markerconnects', 'internal', 'track', 'expose', 'update', 'advantage']",{'expose': 100}
"['exclude', 'issue', 'transitive', 'dependencyexclude', 'update', 'version', 'library']",{'issue': 100}
"['segment', 'client', 'issue', 'attribute', 'accesscompatible', 'format', 'command', 'server', 'value', 'expose', 'client']","{'issue': 100, 'expose': 100}"
"['segmentids', 'segmentstore', 'issue', 'lifetime', 'sticky', 'containerbecomes', 'segmentid', 'subsequent', 'segmentids', 'segmentstore', 'activation', 'value', 'attribute', 'segmentstate']",{'issue': 100}
"['track', 'issue', 'attribute', 'eventappends', 'update', 'advantagewriterid', 'connectionid']",{'issue': 100}
"['exception', 'issue', 'handleprevent', 'segment', 'writer', 'retries']",{'issue': 100}
"['connector', 'flink', 'issue', 'delayrefreshinitial', 'reader', 'allocation', 'delay', 'randominitial', 'allocation', 'delay']",{'issue': 100}
"['exception', 'issue', 'trace']",{'issue': 100}
"['timeout', 'issue']",{'issue': 100}
"['issue', 'renamepackagename', 'structure', 'directory']",{'issue': 100}
"['segmentstore', 'issue', 'attribute']",{'issue': 100}
"['segmentstore', 'issue', 'durablelog', 'introduces', 'rightcollect', 'storage', 'current', 'operation', 'stateserializes', 'recovery', 'segment', 'metadata', 'operation', 'segmentsmaller', 'footprint']",{'issue': 100}
"['metric', 'issue', 'updatemetric', 'updatefeedbackcommit']",{'issue': 100}
"['deployment', 'issue', 'pravegaquick', 'support', 'pravega']",{'issue': 100}
"['event', 'client', 'issue', 'incorrect', 'batchedappends', 'commandencoder', 'number']","{'issue': 100, 'incorrect': 100}"
"['swarm', 'issue']",{'issue': 100}
"['restructure', 'issue', 'projectavoid', 'project', 'restructures', 'groupcorrect', 'producerename', 'summaryserver', 'controllersegmentstore', 'controllertestcommon', 'commonartifact', 'output', 'project', 'accordinglyserver', 'controller', 'pravegasegmentstore', 'service', 'controller', 'pravegatestcommon', 'common', 'pravega']",{'issue': 100}
"['infinite', 'issue']",{'issue': 100}
"['issue', 'yammeryammer', 'pravega']",{'issue': 100}
"['futureread', 'order', 'return', 'storage', 'segment', 'storagelength', 'issue', 'writer', 'storageread', 'offset', 'update', 'readindex']",{'issue': 100}
"['roadmap', 'issue', 'documentroadmap']",{'issue': 100}
"['script', 'cluster', 'bookkeeper', 'config', 'issue', 'pravega', 'reference', 'startup']",{'issue': 100}
"['image', 'bookkeeper', 'issue', 'pravega']",{'issue': 100}
"['clear', 'issue', 'prereqs']",{'issue': 100}
"['ledger', 'issue', 'namespacedefault', 'parameter', 'ledger', 'valuedefault', 'parameter', 'zkclient', 'ledger', 'namespace', 'value']",{'issue': 100}
"['issue', 'swarm', 'dockerinside', 'helper', 'compose', 'docker', 'pravega', 'documentation']",{'issue': 100}
"['issue', 'javadoc', 'javadocimport', 'organizecontroller', 'revert', 'changeimportsubpackage', 'stream', 'adminimportimportuseless', 'removemissingjavadocs', 'everywherestale', 'removejavadoc', 'cleanupreduce', 'scope', 'public', 'interface', 'method', 'polutejavadocs', 'documentation', 'public', 'genjavadocs', 'target', 'generatemarker', 'paragraphhandle', 'commentbayar', 'request']",{'issue': 100}
"['issue', 'support']",{'issue': 100}
"['consistent', 'external', 'policy', 'issue', 'interface', 'policy', 'creatstream', 'interface', 'updatestream', 'retentionconsistentconfig', 'retention']",{'issue': 100}
"['argument', 'singlenode', 'issue']",{'issue': 100}
"['compose', 'issue', 'dockersegmentstore', 'minor', 'docker', 'issue', 'cluster', 'zknamespace', 'developerledger', 'bookkeeperpossible', 'docker', 'segmentstore']",{'issue': 100}
"['issue', 'docker', 'documentation']",{'issue': 100}
"['liststreams', 'issue', 'failure', 'jerseytest', 'ensure', 'server', 'overhead', 'client', 'async']",{'issue': 100}
"['concurrent', 'transaction', 'issue', 'computationtraffic', 'issue', 'concurrent']","{'concurrent': 100, 'issue': 100}"
"['segmentstore', 'issue', 'cleanup', 'startupresult', 'component', 'failure', 'service']",{'issue': 100}
"['ensure', 'issue', 'block', 'flushcorrect']",{'issue': 100}
"['install', 'issue', 'documentationinitial', 'documentation', 'deployment', 'packagingdocumentation', 'readme', 'readme', 'building', 'information', 'example', 'client', 'section', 'releasedownload', 'quickstart', 'distribution']",{'issue': 100}
"['issue', 'protocolestablish', 'hello', 'protocol']",{'issue': 100}
"['issue', 'failure', 'intermittent']",{'issue': 100}
"['issue', 'header', 'licenselicense', 'header', 'pravega', 'source']",{'issue': 100}
"['tight', 'issue', 'timer', 'fetchupdates']",{'issue': 100}
"['abort', 'issue', 'idempotentcommit', 'abort', 'issue', 'comment', 'removedchange']",{'issue': 100}
"['issue', 'bookkeeperreplaces', 'distributedlog', 'bookkeeper']",{'issue': 100}
"['event', 'retransmit', 'issue', 'inflight', 'reconnectretransmit', 'inflight', 'async', 'writer', 'reconnect']",{'issue': 100}
"['singlenode', 'issue']",{'issue': 100}
"['event', 'processing', 'scale', 'issue', 'processor', 'usingevent', 'processing', 'scale', 'implementation']",{'issue': 100}
"['issue', 'client', 'getsuccessorschange', 'event', 'ackfuture', 'flushthread', 'caller', 'retry', 'flushchange', 'incorperateclient', 'getsuccessors', 'refreshcould', 'replacement', 'order', 'restorewhitespacejavadocfindbugs', 'inflight', 'condition']",{'issue': 100}
"['metric', 'restructure', 'issue', 'failure', 'travis', 'buildcomment', 'addressingchange']",{'issue': 100}
"['error', 'issue', 'client', 'javadoc']",{'issue': 100}
"['issue', 'controller', 'moduleissue', 'controller', 'failure', 'intermittentreview', 'comment']",{'issue': 100}
"['reader', 'issue', 'computes', 'candidate']",{'issue': 100}
"['hdfsurl', 'issue', 'update', 'systemtests']",{'issue': 100}
"['issue', 'controller', 'publisheddefault', 'issue', 'controller', 'publishedcatch', 'exception', 'specificconfig', 'config', 'class']",{'issue': 100}
"['system', 'restructure', 'issue', 'testcommon', 'systemtests', 'systemintegration']",{'issue': 100}
"['return', 'issue', 'segment', 'getsuccessorschange', 'controller']",{'issue': 100}
"['stats', 'scale', 'issue', 'reload', 'collector']",{'issue': 100}
"['common', 'issue']",{'issue': 100}
"['client', 'issue', 'controller', 'serverstack', 'exception', 'controller']",{'issue': 100}
"['merges', 'issue']",{'issue': 100}
"['issue', 'improvement']",{'issue': 100}
"['event', 'checkpoint', 'issue', 'processor', 'eventprocessorcheckpointer', 'store', 'positionevent', 'stream', 'writer', 'selfwriter']",{'issue': 100}
"['package', 'prefix', 'issue', 'renamepackage', 'renameprepare', 'prefix']",{'issue': 100}
"['issue', 'transitive', 'dependency']",{'issue': 100}
"['shutdown', 'issue', 'containerstart', 'serialize', 'operation', 'issue', 'update', 'failure', 'container']",{'issue': 100}
"['increase', 'issue']",{'issue': 100}
"['segmentstore', 'issue', 'varioustrigger', 'index', 'callback', 'metadata', 'segment', 'flushwould', 'concurrent', 'fixedstoragereader', 'attempt', 'storage', 'chance', 'recovery', 'check', 'request', 'storagewriter', 'fixednever', 'transaction', 'storagewriter']","{'issue': 100, 'concurrent': 100}"
"['issue', 'reader', 'offline']",{'issue': 100}
"['pravegaversion', 'issue', 'label']",{'issue': 100}
"['value', 'issue', 'presentinstead', 'segment', 'record', 'specific', 'historyrecord', 'index', 'check', 'incorrect', 'idempotent']","{'issue': 100, 'incorrect': 100}"
"['connector', 'project', 'flink', 'issue']",{'issue': 100}
"['issue', 'failure', 'intermittent']",{'issue': 100}
"['argument', 'exception', 'multi', 'issue', 'illegal', 'controllercreatestream', 'failover']",{'issue': 100}
"['scaleservice', 'issue']",{'issue': 100}
"['multi', 'issue', 'complete', 'ignores', 'controller']",{'issue': 100}
"['issue', 'controller', 'system', 'abort', 'making', 'statuscheckstylereview', 'comment']",{'issue': 100}
"['timeout', 'issue']",{'issue': 100}
"['instance', 'support', 'system', 'issue', 'controller', 'instance', 'system', 'controller', 'accessible', 'client', 'controller', 'controller', 'terminatecompile']",{'issue': 100}
"['stream', 'transaction', 'issue']",{'issue': 100}
"['issue', 'abort', 'status']",{'issue': 100}
"['segmentstore', 'issue', 'inmemorystorage', 'hdfsstorage']",{'issue': 100}
"['issue', 'system']",{'issue': 100}
"['issue', 'controller', 'system', 'failoversetup', 'static', 'instance', 'controller']",{'issue': 100}
"['javadocs', 'issue']",{'issue': 100}
"['epoch', 'issue', 'containerepoch', 'issue', 'implementation', 'constraint', 'inmemorystorage']",{'issue': 100}
"['instance', 'support', 'issue', 'controller', 'multipleplugin', 'support']",{'issue': 100}
"['jenkins', 'issue', 'failureshutdown', 'requesthandlers', 'sequenceadmin', 'random', 'setting', 'server']",{'issue': 100}
"['operation', 'order', 'scale', 'issue']",{'issue': 100}
"['store', 'segment', 'publish', 'issue', 'address']",{'issue': 100}
"['segmentstore', 'chain', 'issue', 'usingstorage', 'abstraction', 'segmenthandle', 'cachestate', 'callsitesincrease', 'concept', 'successful', 'recovery', 'containerdifferent', 'persist', 'instance', 'current', 'containerepoch', 'durabledatalog', 'lowerinstance', 'support', 'order', 'storagethroughout', 'applies', 'immutable', 'lifetime', 'containerinitialize', 'segment']",{'issue': 100}
"['bugfix', 'concurrent', 'segmentstoreconcurrent', 'factoryinitialize', 'storage', 'instance']",{'concurrent': 100}
"['internal', 'stream', 'issue', 'liststreams']",{'issue': 100}
"['issue', 'controller']",{'issue': 100}
"['segmentstore', 'issue', 'segmenthandlesstorage', 'specific', 'information', 'abstraction', 'segmenthandle', 'state', 'callsitespreferable', 'order', 'method', 'initialize', 'storage', 'segment', 'openwrite', 'instance', 'applies', 'container', 'epoch', 'support', 'immutable', 'lifetime']",{'issue': 100}
"['debug', 'issue', 'framework']",{'issue': 100}
"['issue', 'systemissue', 'system']",{'issue': 100}
"['check', 'timeout', 'issue', 'valuecheck', 'timeout']",{'issue': 100}
"['level', 'issue']",{'issue': 100}
"['exception', 'thrown', 'exception', 'thrown', 'retryable', 'issue', 'connection', 'pravega', 'failurecommentinitialize', 'setuprenamingpredicate', 'eventprocessors', 'retry', 'changingfailure', 'buildassertequals']",{'issue': 100}
"['metric', 'jadhav', 'request', 'issue', 'abhijeetmetric']",{'issue': 100}
"['liststream', 'stream', 'issue']",{'issue': 100}
"['check', 'stream', 'issue']",{'issue': 100}
"['transaction', 'issue', 'controller', 'segment', 'client']",{'issue': 100}
"['warning', 'issue', 'javadoc']",{'issue': 100}
"['socket', 'issue', 'pravega', 'address', 'serverlisteningport']",{'issue': 100}
"['issue', 'request']",{'issue': 100}
"['issue', 'failure', 'intermittentstart', 'everywhere', 'controller', 'waitinghandler']",{'issue': 100}
"['stream', 'manager', 'issue', 'refactorinitial', 'various', 'fixing', 'javadoc', 'indentationcheckstyle', 'warning']",{'issue': 100}
"['issue', 'version', 'pravega', 'master']",{'issue': 100}
"['error', 'client', 'issue', 'controller']",{'issue': 100}
"['serializable', 'issue', 'serializers']",{'issue': 100}
"['segmentstore', 'issue', 'segment', 'activesegment', 'active', 'limit', 'segment', 'limit', 'reject', 'metadataforce', 'segment', 'active', 'cleanup', 'separate', 'component', 'operation', 'interface', 'cleanup', 'possible', 'attribute']",{'issue': 100}
"['connector', 'flink', 'issue', 'dependency', 'cleaninghighlight', 'artifact', 'version', 'dependency', 'scala', 'generatedlogback', 'dependency', 'version', 'flink', 'conflict']",{'issue': 100}
"['process', 'issue', 'simplify', 'controller']",{'issue': 100}
"['singlenode', 'project', 'issue', 'dependency']",{'issue': 100}
"['singlenode', 'issue', 'pravega', 'clusterimplement', 'singlenode', 'pravegacluster', 'hostports', 'controllerportsissuedependencyguava', 'dependency', 'upgrade', 'fixedpossible', 'single', 'coupledifferent', 'process', 'server', 'dofirstisinprocdl', 'cluster', 'startinginstance', 'contoller', 'pravega', 'runningmultiple', 'instance', 'pravegaissue', 'generatedbuilder', 'controllerports', 'ability', 'hostports']",{'issue': 100}
"['segmentmetadata', 'segmentstore', 'issue', 'eviction']",{'issue': 100}
"['metric', 'issue', 'yammer', 'reporterprovide', 'metric', 'reporter']",{'issue': 100}
"['system', 'transaction', 'issue', 'reader', 'group']",{'issue': 100}
"['policy', 'issue', 'update', 'retention']",{'issue': 100}
"['error', 'issue', 'config', 'pravega']",{'issue': 100}
"['reponse', 'client', 'marathon', 'issue', 'metronome', 'retry']",{'issue': 100}
"['transactional', 'issue', 'scale']",{'issue': 100}
"['metric', 'servicestarter', 'initialization', 'incorrect']",{'incorrect': 100}
"['component', 'segmentstore', 'configuration', 'issue', 'improvement']",{'issue': 100}
"['issue', 'interface', 'retention']",{'issue': 100}
"['issue', 'system', 'autoscale']",{'issue': 100}
"['issue', 'systemissue', 'system']",{'issue': 100}
"['enable', 'metric', 'transition', 'configuration', 'issue', 'proxymetric', 'couplegeneral', 'polishingreference', 'unnecessary', 'removedunnecessary', 'removedacross', 'persists', 'metric', 'initialization', 'anothermetric', 'level', 'indirection', 'anothermetric', 'failuretransition', 'provider', 'addingcheckstyle', 'commentmetric']",{'issue': 100}
"['initialization', 'issue', 'controller', 'processor']",{'issue': 100}
"['manager', 'issue', 'deletescope', 'support', 'streamanager', 'delete']",{'issue': 100}
"['gradle', 'issue', 'improvinggradle']",{'issue': 100}
"['project', 'docker', 'issue', 'plugin']",{'issue': 100}
"['deletestream', 'issue']",{'issue': 100}
"['manual', 'issue']",{'issue': 100}
"['distributedlog', 'segmentstore', 'issue', 'client']",{'issue': 100}
"['concurrency', 'segmentstore', 'storage']",{'concurren': 90}
"['stream', 'issue', 'controller', 'delete']",{'issue': 100}
"['issue', 'controller', 'system']",{'issue': 100}
"['segmentstore', 'issue', 'pravega', 'memorysegmentstore', 'pravega', 'configurableconfigurable', 'docker', 'pravegachange', 'removingindentation', 'adjustingchange', 'deployment', 'making']",{'issue': 100}
"['catch', 'module', 'metric', 'exception', 'issue', 'insidecatch', 'panic', 'register', 'metric', 'block', 'logic']",{'issue': 100}
"['image', 'bookie', 'docker', 'issue', 'directoryprepare', 'image', 'mesos', 'mount', 'bookie', 'persistent', 'docker', 'volume', 'directory']",{'issue': 100}
"['issue', 'flink']",{'issue': 100}
"['bookie', 'issue', 'pravega']",{'issue': 100}
"['reader', 'issue']",{'issue': 100}
"['mergejiazhai', 'request', 'issue', 'mergeplatform', 'metric']",{'issue': 100}
"['afbcdd', 'mergemaster', 'issue']",{'issue': 100}
"['issue', 'config', 'location']",{'issue': 100}
"['default', 'issue', 'service', 'deletedefault', 'service']",{'issue': 100}
"['scope', 'client', 'issue', 'pravega', 'delete']",{'issue': 100}
"['addition', 'issue', 'getscopegetscope', 'internalgetscopegetscope', 'changedchangechangefeedbackfeedbackfeedback']",{'issue': 100}
"['thrift', 'issue']",{'issue': 100}
"['additional', 'issue', 'dependency']",{'issue': 100}
"['client', 'project', 'issue', 'controller']",{'issue': 100}
"['separate', 'system', 'imageversion', 'property', 'issue', 'addingseparate', 'system', 'imageversion', 'property', 'addingcomment']",{'issue': 100}
"['segmentstore', 'config', 'reference', 'issue', 'variable', 'config', 'extract', 'componentconfig', 'valuemetric', 'setting', 'environment']",{'issue': 100}
"['issue', 'configurableproperty', 'making', 'system', 'parameter']",{'issue': 100}
"['artifact', 'version', 'systemtests', 'issue', 'fixingartifact', 'version', 'system', 'issue', 'fixingcomment']",{'issue': 100}
"['timeout', 'transaction', 'issue', 'heartbeat']",{'issue': 100}
"['sample', 'deployment', 'issue', 'pravega', 'framework']",{'issue': 100}
"['scalefeature', 'scalecontractprocess', 'fetch', 'scale', 'stream', 'request', 'controller', 'pravega', 'instance', 'scalerequestsegment', 'controller', 'pravega', 'servernotification', 'message', 'policy', 'pravega', 'server', 'updateresponse', 'server', 'pravegachange', 'complete', 'request', 'retryable', 'requestreaderperiodic', 'thread', 'scheduledhandler', 'request', 'processing', 'scale', 'retryable', 'class', 'scheduling', 'retriesbootstapper', 'handler', 'stream', 'request', 'class', 'stall', 'controller', 'service', 'background', 'different', 'store', 'chattiness', 'scale', 'operation', 'exception', 'request', 'controller', 'update', 'retriesscale', 'active', 'conflict', 'creation', 'request', 'block', 'periodic', 'costly', 'stream', 'transaction', 'sweepcurator', 'inbackground', 'thread', 'processing', 'unblock', 'register', 'stats', 'implementation', 'statsrecordercreatesegmentsealsegmentappendstore', 'segment', 'computes', 'stats', 'specific', 'classnotification', 'createsegment', 'listens', 'sealsegment', 'entryentrypoints', 'processing', 'request', 'append', 'performscomputation', 'performance', 'costly', 'check', 'concurrency', 'approximatestore', 'compute', 'exponential', 'class', 'process', 'stats', 'request', 'segment', 'parent', 'transaction', 'merges', 'commitsreport', 'update', 'sincesegment', 'process', 'stats', 'requestscale', 'policy', 'whetherregister', 'aggregate', 'request', 'streamsegment', 'lifecycle', 'everytime', 'monitor', 'store', 'traffic', 'event', 'interesting', 'stats', 'notifies', 'receiveddecision', 'corresponding', 'stats', 'scale', 'request']","{'thread': 100, 'concurren': 90}"
"['javadoc', 'issue', 'update', 'readnextevent']",{'issue': 100}
"['noclassdeffound', 'issue']",{'issue': 100}
"['issue', 'platform']",{'issue': 100}
"['bugfix', 'member', 'static', 'issue']",{'issue': 100}
"['default', 'increase', 'issue', 'sleep', 'value', 'retrydefault', 'increase', 'issue', 'sleep', 'value']",{'issue': 100}
"['segment', 'metric', 'stream', 'issue', 'controller']",{'issue': 100}
"['issue', 'logback', 'enableissue', 'logback', 'enablegradle']",{'issue': 100}
"['issue', 'controller', 'pravega', 'deletescope', 'createscope']",{'issue': 100}
"['issue', 'usage', 'clustername']",{'issue': 100}
"['tolerate', 'issue']",{'issue': 100}
"['distributedlog', 'segmentstore', 'issue', 'pravega', 'namespace', 'container']",{'issue': 100}
"['segmentstore', 'issue', 'attribute']",{'issue': 100}
"['issue', 'interface']",{'issue': 100}
"['store', 'storage', 'segment', 'issue', 'attribute']",{'issue': 100}
"['swagger', 'issue', 'generate', 'serverswagger', 'server', 'generatedgenerate', 'swagger', 'server']",{'issue': 100}
"['atleast', 'flink', 'issue', 'pravega', 'semantics', 'writer']",{'issue': 100}
"['warning', 'issue', 'javadoc']",{'issue': 100}
"['issue', 'attribute', 'segment']",{'issue': 100}
"['copyright', 'issue', 'headermessage', 'header']",{'issue': 100}
"['mergejiazhai', 'request', 'issue', 'mergemetric', 'issue']",{'issue': 100}
"['reference', 'issue', 'event', 'supportreference', 'issue', 'event', 'supportjavadoc', 'addingvisibility', 'object', 'primitive', 'changedcompilation', 'rebase', 'issue', 'fixedlocal', 'length', 'multiple', 'integrationcheckstyle']","{'issue': 100, 'length': 100}"
"['variable', 'system', 'issue', 'environement', 'valuechange', 'configchange']",{'issue': 100}
"['eventreaderimpl', 'segmentreader', 'issue', 'renameeventreaderimpl', 'issue', 'renamesegmentreader', 'renamingcompilation']",{'issue': 100}
"['validation', 'object', 'issue', 'requestobject', 'request', 'annotation', 'notnullrequestcompletedfuture']",{'issue': 100}
"['thread', 'segmentstore', 'operation', 'issue', 'processor', 'common', 'thread', 'light', 'thread', 'support', 'balance']","{'thread': 100, 'issue': 100}"
"['metric', 'issue', 'throughput', 'latency', 'subtaskmetric', 'definition', 'interaction']",{'issue': 100}
"['ececef', 'mergemaster', 'readergroup', 'emccode', 'issue', 'pravega']",{'issue': 100}
"['mergemetric', 'jiazhai', 'request', 'mergemetric', 'issue', 'yammer', 'reporter']",{'issue': 100}
"['issue', 'consolidation', 'futurehelpers', 'functionality', 'existent', 'alreadygroup']",{'issue': 100}
"['mergemetric', 'jiazhai', 'request', 'mergemetric', 'meter', 'issue']",{'issue': 100}
"['cluster', 'issue', 'pravega', 'namespace']",{'issue': 100}
"['guardedby', 'threadsafe', 'class', 'concurrency']",{'concurren': 90}
"['treemap', 'segmentstore', 'issue', 'sortedindex', 'implementation', 'avltreeindexforce', 'invoke', 'object', 'sortedindex', 'avltreeindex']",{'issue': 100}
"['metric', 'guava', 'issue', 'dynamic', 'cache']",{'issue': 100}
"['issue', 'reorganize']",{'issue': 100}
"['statistic', 'issue']",{'issue': 100}
"['issue', 'index', 'startoffset', 'readindexinstead', 'linkedlist', 'class', 'exclusive', 'whole', 'operation', 'readindex', 'aggregate', 'cache', 'issue', 'storagewriter', 'single', 'source', 'writer', 'obsoleteremote', 'master', 'origin', 'branchlonger', 'createcachekey', 'removedmetadatahelpers', 'logtesthelpersremote', 'master', 'origin', 'cacheaccess', 'sortedindex', 'implementation', 'laterstart', 'entry', 'index', 'getfloor', 'support', 'memory', 'index', 'point', 'readindexentry', 'organization', 'cache', 'segment', 'entry', 'usage', 'cacheindexentry', 'store']",{'issue': 100}
"['route', 'index', 'issue', 'access', 'cacheinstead', 'linkedlist', 'class', 'exclusive', 'whole', 'operation', 'readindex', 'aggregate', 'cache', 'issue', 'storagewriter', 'single', 'source', 'writer', 'obsoleteremote', 'master', 'origin', 'branchlonger', 'createcachekey', 'removedmetadatahelpers', 'logtesthelpersremote', 'master', 'origin', 'cacheaccess']",{'issue': 100}
"['queue', 'issue', 'linkedlist', 'class']",{'issue': 100}
"['mergebayarsaikhan', 'guideline', 'emccode', 'requestcontributor', 'issue', 'guideline']",{'issue': 100}
"['issue', 'improvement', 'readindexinitial', 'adapter', 'store', 'addingremote', 'selftest', 'master', 'origin', 'report', 'purpose', 'protocol', 'client', 'selftester', 'pravega', 'append', 'separate', 'rollback', 'threadpool', 'entire', 'thread', 'small', 'result', 'congruent', 'single', 'batch', 'multiple', 'method', 'entry', 'returnedsmall', 'drawback', 'different', 'performance', 'previous', 'memory', 'contiguous', 'coalesce', 'readindexentry', 'ability', 'entire', 'readresultentry', 'contentassumption', 'readtest', 'making', 'emccode', 'pravega', 'notify', 'point', 'static', 'method', 'processor', 'extra', 'awaitterminatedremote', 'master', 'origin', 'premature', 'cleanupstorecoverage', 'accessfeedbackalignment', 'length', 'storage', 'simplifiedintellij', 'order', 'importfeedbackalignment', 'length', 'storage', 'simplifiedintellij', 'order', 'importremoval', 'index', 'block', 'possible', 'appropriate', 'previous', 'scope', 'valid', 'state']","{'issue': 100, 'thread': 100, 'length': 100}"
"['issue', 'image', 'workflow']",{'issue': 100}
"['exampleinitial', 'report', 'metric', 'support', 'generic', 'issue', 'implementation', 'yammer']",{'issue': 100}
"['small', 'thread', 'sporadic', 'future', 'sporadic', 'writer', 'sporadic', 'writer']",{'thread': 100}
"['sporadic', 'issue', 'failurefailure', 'sporadic', 'threadpools', 'sincecommit', 'adequate', 'increase', 'threadpoolsfixedsmall', 'thread', 'composition', 'class', 'fixedthread', 'timeout']","{'issue': 100, 'thread': 100}"
"['parameter', 'command', 'credential', 'docker', 'issuereplaces', 'parameter', 'command', 'issue', 'credential', 'docker']",{'issue': 100}
"['issue', 'transactionchange']",{'issue': 100}
"['segmentstore', 'pravega', 'external', 'thread', 'factor', 'check', 'future', 'delete', 'corruption', 'segment', 'length']","{'thread': 100, 'length': 100}"
"['issue', 'failure', 'intermittent']",{'issue': 100}
"['writer', 'interfacegroup', 'issue', 'consumer', 'interfacewriterevent', 'rename', 'eventreturn', 'eventread', 'consumerapireplace', 'pointer', 'eventeventrouterremove', 'eventpolicy', 'retentionwriterevent', 'rename', 'transactiongetvalue', 'rename', 'geteventmulti', 'consumergroups', 'streamplane', 'clientmanager', 'operation', 'control', 'streammanagertransaction', 'abortedrename', 'clientmanager', 'clientfactorysequence', 'consumergroup', 'startingtime', 'configgroup', 'consumer', 'revisionwriter', 'idempotentpublish', 'writeevent', 'renameproducer', 'renamerebalancerutilschange', 'static', 'constructor', 'sequence']",{'issue': 100}
"['sealsegment', 'support', 'sealsegment', 'support', 'issue']",{'issue': 100}
"['memoryissuereturn', 'memory', 'making', 'inmemorystorage', 'bufferstore', 'thread', 'selftester', 'testerprone', 'class', 'memory']",{'thread': 100}
"['group', 'consumer', 'interfaceconsumer', 'refinement', 'various', 'issue', 'interface']",{'issue': 100}
"['praveganever', 'manager', 'certain', 'invalid', 'offset', 'readindexwritten', 'segment', 'parent', 'transaction', 'offsettransaction', 'segmentinside', 'problem', 'wrong', 'storage', 'parent', 'transaction', 'issue', 'range', 'expose', 'adjustment', 'offset', 'segment', 'parent', 'portion', 'contains', 'caller', 'readresultentry', 'invokes', 'request', 'requestcontent', 'sincerecoverable', 'weird', 'caller', 'exception', 'retrydetect', 'result', 'parent', 'redirect', 'eligible', 'logic', 'entry', 'failuremanagement', 'index', 'general', 'cache', 'manager', 'cacheindex', 'stats', 'index', 'generation', 'entry', 'cachewriter', 'improvementstorage', 'iteration', 'operation', 'writer', 'opposeddefault', 'thread', 'making', 'async', 'callback', 'usingcatch', 'default', 'operation', 'large', 'volume', 'situation', 'writerselftest', 'improvementstorage', 'catchup', 'consumer', 'sincecould', 'validation', 'storeproducer', 'segment']","{'issue': 100, 'expose': 100, 'generation': 100, 'thread': 100}"
"['latency', 'selftestselftestproducer', 'consumer', 'append', 'latencycatch', 'stand', 'store', 'servicebuilder', 'threadpool', 'pravega', 'insideexternal', 'cachemanager', 'executor', 'forcingdefault', 'property', 'class', 'value', 'insidesegment', 'storagestore', 'segment', 'thread', 'storage', 'verification', 'inmemorystorage', 'opposedcheckstyle', 'fixedreport', 'thread', 'selftestpartial', 'feedbackpartial', 'feedbacksegmenthandles', 'ownership', 'introduce', 'issue', 'storagewriter', 'timer', 'measurecheckstyle']","{'thread': 100, 'issue': 100}"
"['bugfix', 'segment', 'instance', 'exception', 'manager', 'multiplemanager', 'segmentremove', 'listener', 'issue', 'conditionmethod', 'intialize', 'simplifiedjunit', 'correctedjunitlistener', 'delay', 'removedchange', 'reviewtimeout', 'increase', 'junitsmessage', 'additionalmockito', 'olimt', 'issuereview', 'commentthenaccept', 'thenrun', 'complete', 'junit', 'modifymessage']",{'issue': 100}
"['private', 'thread']",{'thread': 100}
"['emccode', 'request', 'monitordefault', 'segment', 'setup', 'local', 'issue']",{'issue': 100}
"['segment', 'manager', 'issue', 'integrationstart', 'error', 'multi', 'issue', 'pravega', 'integration', 'service', 'handlingchange', 'junit', 'check', 'information']",{'issue': 100}
"['gradle', 'issue']",{'issue': 100}
"['parent', 'index', 'transaction', 'cleanup', 'segmentids', 'concise', 'problem', 'concurrent', 'readindex']",{'concurrent': 100}
"['ebecb', 'mergeinitialize', 'timeout', 'request', 'mergeinitialize', 'timeout', 'issue', 'servicebuilder']",{'issue': 100}
"['initialize', 'timeout', 'issue', 'servicebuilder']",{'issue': 100}
"['scopedqualifiedname', 'issue', 'rename', 'scopedname']",{'issue': 100}
"['different', 'segment', 'recovery', 'scenario', 'inmemorystorage', 'reacquire', 'simulates', 'ability', 'owner', 'expose', 'recovery', 'storagewriter', 'owner']",{'expose': 100}
"['qualifiedname', 'issue', 'rename', 'scopedname']",{'issue': 100}
"['emccode', 'rocksdb', 'requestrocksdb', 'making', 'rocksdbdefault', 'folder', 'setting', 'database', 'rocksdb', 'comparable', 'inmemorycache', 'fsync', 'durable', 'rocksdb', 'implementation', 'startup', 'clear', 'native', 'database', 'rocksdb', 'choice', 'expose', 'cachenormal', 'store', 'removal', 'segment', 'different', 'process', 'management', 'memory', 'object', 'index', 'rocksdb', 'bonus', 'respect', 'entry', 'cheap', 'readindex']",{'expose': 100}
"['mergeemccode', 'request', 'mergesegment', 'support', 'append', 'pravega', 'ability', 'offset', 'introducingchangeargument', 'extra', 'offsetsegment', 'current', 'length', 'segment', 'operation', 'regular', 'append', 'offsetchange', 'additionalupper', 'store', 'segment', 'ultimate', 'monotonicity', 'service', 'append', 'reject', 'defense']",{'length': 100}
"['emccode', 'request', 'eetesttester', 'nitial', 'pravegaappends', 'producer', 'consumer', 'generates', 'number', 'deterministic', 'creates', 'verifies', 'append', 'header', 'generatedincludes', 'storage', 'laterselftest', 'point', 'creates', 'entryproducer', 'entire', 'drive', 'selftest', 'component', 'createsappends', 'segment', 'component', 'length', 'operation', 'generates', 'header', 'deterministic', 'process', 'instance', 'interact', 'current', 'layer', 'communicates', 'pravega', 'abstraction', 'implementation', 'serviceproducer', 'operation', 'applies', 'number', 'storeadaptertransaction', 'storage', 'segment', 'consumer', 'listens', 'append', 'storeadapter', 'verifies', 'buffer', 'updatestage', 'laterstorage', 'limitation', 'error', 'adapter', 'servicerestart', 'recovery', 'commitminorcleanupinstead', 'configuration', 'composition', 'servicebuilder']","{'length': 100, 'buffer': 100}"
"['timeouts', 'thread']",{'thread': 100}
"['issue', 'abstraction', 'storeadapter']",{'issue': 100}
"['emccode', 'request', 'writerunknown', 'recovery', 'storagewriter', 'outcome', 'offsetdetect', 'corruption', 'reconcile', 'unknown', 'operation', 'request', 'storagewriter', 'functionality', 'outcome', 'timeoutscauseunknown', 'outcome', 'corruption', 'anotherdetectioninitial', 'progress', 'storage', 'error', 'operation', 'attempt', 'writer', 'detectionwrite', 'segment', 'storage', 'current', 'operation', 'length', 'ensure', 'occurs', 'segment', 'storage', 'concat', 'exception', 'transaction', 'adapter', 'normal', 'corruption', 'multiple', 'state', 'activelysealstatus', 'segment', 'storage', 'informationinitial', 'performs', 'validationreconcile', 'metadata', 'length', 'storageunrecoverableexecute', 'procedure', 'reconciliationunrecoverable', 'impossible', 'durablelog', 'exceeds', 'operation', 'queue', 'performs', 'reconciliationmatch', 'storage', 'appendpretty', 'entire', 'segment', 'parent', 'length', 'check', 'transaction', 'source', 'verifyverify', 'segmentreconcile', 'operation', 'writer', 'containerprevent', 'different', 'corruption', 'container']",{'length': 100}
"['emccode', 'request', 'storagewriterinitial', 'integration', 'storagewriter', 'implementationprocess', 'attache', 'operation', 'applies', 'acknowledges', 'buffer', 'writeroperation', 'feedback', 'metadatamerges', 'support', 'segmentcurrent', 'storagewriter', 'writer', 'support', 'truncation', 'distributedlog', 'issue', 'class', 'various', 'discoveredimplementation', 'arvind', 'actualunknown', 'operation', 'recovery', 'proper', 'future', 'timeoutspictureexpose', 'number', 'durablelog', 'truncate', 'writer', 'method', 'component', 'input', 'datasource', 'operation', 'readindex', 'storagewriter', 'purpose', 'cachethread', 'datasource', 'internalizes', 'acknowledges', 'async', 'storagewriter', 'future', 'flushappends', 'storage', 'segment']","{'buffer': 100, 'issue': 100}"
"['possible', 'safety', 'thread']",{'thread': 100}
"['possible', 'safety', 'thread']",{'thread': 100}
"['equivalent', 'thread', 'atomicreference', 'cross', 'private', 'likelihood']",{'thread': 100}
"['certain', 'storagereader', 'constraint', 'issue', 'request']",{'issue': 100}
"['length', 'header']",{'length': 100}
"['safety', 'thread']",{'thread': 100}
"['emccode', 'request', 'policy', 'retention', 'cacherecap', 'lifecycle', 'cachememory', 'point', 'failure', 'particular', 'segment', 'local', 'machine', 'container', 'place', 'store', 'cachelimitation', 'major', 'finite', 'current', 'unaware', 'system', 'install', 'service', 'pravega', 'matter', 'machine', 'container', 'cacheevictnever', 'regardless', 'whetherallocate', 'pravega', 'space', 'container', 'cachemechanism', 'contains', 'policy', 'layer', 'rocksdb', 'eviction', 'level', 'track', 'service', 'pravega', 'cache', 'container', 'insiderequestallow', 'periodic', 'input', 'interrogates', 'component', 'manager', 'subscriber', 'total', 'container', 'basis', 'cachemanager', 'discard', 'precise', 'appropriate', 'evict', 'bullet', 'storage', 'information', 'container', 'place', 'cachemanager', 'criterion', 'cachecurrent', 'communicate', 'evict', 'pretty', 'increment', 'queue', 'reference', 'entry', 'recent', 'notifies', 'front', 'total', 'container', 'cachemanager', 'exceeds', 'threshold', 'number', 'generation', 'update', 'cache']",{'generation': 100}
"['integration', 'issue']",{'issue': 100}
"['storage', 'component', 'readonlystorage', 'storagereader', 'issue', 'request', 'group', 'organizes', 'storage', 'index', 'request', 'cache', 'readindex']",{'issue': 100}
"['safety', 'thread']",{'thread': 100}
"['reading', 'thread']",{'thread': 100}
