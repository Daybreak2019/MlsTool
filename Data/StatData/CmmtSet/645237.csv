message,fuzzy
"['issue', 'location']",{'issue': 100}
"['issue', 'behavior']",{'issue': 100}
"['method', 'disallow', 'issue', 'overridden']",{'issue': 100}
"['issue', 'introduction']",{'issue': 100}
"['initial', 'dynamic', 'current', 'point', 'issue']",{'issue': 100}
"['superclass', 'compatible', 'backwards', 'search', 'issue', 'interface', 'class', 'method']",{'issue': 100}
"['number', 'issue', 'deprecation', 'traversablenumber', 'method', 'addedstream', 'compiler', 'interface', 'library', 'scala']",{'issue': 100}
"['initial', 'dynamic', 'current', 'point', 'issue']",{'issue': 100}
"['superclass', 'compatible', 'backwards', 'search', 'issue', 'interface', 'class', 'method']",{'issue': 100}
"['security', 'issue', 'handlebar', 'jetty']","{'Security': 100, 'issue': 100}"
"['matter', 'value', 'object', 'issue']",{'issue': 100}
"['issue', 'template']",{'issue': 100}
"['haste', 'import', 'issue']",{'issue': 100}
"['mergevalid', 'block', 'request', 'samfraser', 'comment', 'extendcodeblock', 'comment', 'extendcode', 'issue']",{'issue': 100}
"['mustache', 'block', 'issue', 'method', 'comment', 'extendcode']",{'issue': 100}
"['mustache', 'block', 'issue', 'method', 'comment', 'extendcode']",{'issue': 100}
"['mustache', 'block', 'issue', 'method', 'comment', 'extendcode']",{'issue': 100}
"['mustache', 'block', 'issue', 'method', 'comment', 'extendcode']",{'issue': 100}
"['incorrect', 'parent']",{'incorrect': 100}
"['issue', 'getmethod', 'method', 'default', 'support']",{'issue': 100}
"['explicit', 'concurrency']",{'concurren': 90}
"['mergemerge', 'master', 'rustyx', 'requestpolymorphic', 'middle', 'issue']",{'issue': 100}
"['mergemerge', 'master', 'request', 'panghyignores', 'writecode', 'issue', 'regex', 'template', 'inversion']",{'issue': 100}
"['ignores', 'writecode', 'issue', 'regex', 'template', 'inversion']",{'issue': 100}
"['upgrade', 'guavaupgrade', 'patch', 'guava', 'compatible', 'update', 'issue', 'detail', 'dependency']",{'issue': 100}
"['issue', 'method', 'guardexceptions']",{'issue': 100}
"['detection', 'issue']",{'issue': 100}
"['initialization', 'twitter', 'concurrency']",{'concurren': 90}
"['concurrent', 'robust', 'template']",{'concurrent': 100}
"['mergemerge', 'nicoulaj', 'request', 'issue']",{'issue': 100}
"['broad', 'object', 'generation']",{'generation': 100}
"['jruby', 'issue', 'guard']",{'issue': 100}
"['simplify', 'issue']",{'issue': 100}
"['notation', 'middle', 'issue']",{'issue': 100}
"['interference', 'thread']",{'thread': 100}
"['concurrency', 'chance']",{'concurren': 90}
"['result', 'issue', 'template', 'function', 'identity']",{'issue': 100}
"['thread', 'boundary']",{'thread': 100}
"['issue', 'incompatible']",{'issue': 100}
"['wrapping', 'issue', 'support']",{'issue': 100}
"['thread', 'writer']",{'thread': 100}
"['issue', 'unexecute', 'partial']",{'issue': 100}
"['builder', 'factory', 'refactor', 'mustache', 'generation']",{'generation': 100}
"['additional', 'issue']",{'issue': 100}
"['thread', 'operation', 'separate', 'parallelize', 'enqueue', 'element']",{'thread': 100}
"['concurrent', 'implementation', 'threadlocals']",{'concurrent': 100}
"['window', 'issue']",{'issue': 100}
"['inconsistent', 'incorrect']",{'incorrect': 100}
"['stack', 'wasnt']",{'stack': 100}
"['concurrent', 'condition']",{'concurrent': 100}
"['mustache', 'expose']",{'expose': 100}
"['thread', 'network', 'example', 'async', 'access', 'length']","{'thread': 100, 'length': 100}"
"['concurrent', 'update', 'readme', 'nature', 'example', 'proof', 'framework']",{'concurrent': 100}
"['concurrent', 'reproduce', 'difficult', 'issue', 'attack', 'concurrency']","{'concurrent': 100, 'issue': 100, 'concurren': 90}"
"['issue', 'indentation']",{'issue': 100}
