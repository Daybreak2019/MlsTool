message,fuzzy
"['mergerequest', 'builder', 'vincentkhttpservice', 'expose']",{'expose': 100}
"['version', 'equalsverifierverifier', 'equal', 'versionbuildingresultversion', 'openjdkfailurefound', 'problem', 'class', 'equalsverifierclass', 'major', 'version', 'unsupportederrormessages', 'equalsverifiermethod', 'equal', 'verifier', 'version', 'issue', 'bumpingissue', 'equalsverifier']",{'issue': 100}
"['httpservice', 'exposelibrary', 'customize', 'configuration', 'expose', 'client', 'builderissue']",{'expose': 100}
"['enable', 'structureddata', 'arraycommit', 'gnosis', 'multisigarray', 'issue']",{'issue': 100}
"['bouncy', 'castleupdate', 'eddsa', 'reset', 'verifier', 'rejectingthrow', 'bcjssevalid', 'reject', 'qtesla', 'verifier', 'wouldverifier', 'header', 'regression', 'versionothername', 'serialisation', 'privatepublic', 'block', 'cshake', 'value', 'string', 'wouldmight', 'unexpected', 'circumstanceadditional', 'qtesla', 'algorithm', 'signaturesupport', 'client', 'bcjssesupport', 'addedsupport', 'addedsupport', 'addedsupport', 'system', 'property', 'bcjssesupport', 'system', 'property', 'bcjssesupport', 'multi', 'releasesupport', 'multi', 'releaseprivatekeyinfo', 'general', 'outputproduce', 'privatekeyinfo', 'property', 'provider', 'versiongiven', 'certpathbuilder', 'certificate', 'target', 'camellia', 'cipher', 'bcjsse', 'suitescheme', 'support', 'onwards', 'bcjsse', 'signatureperformance', 'encoderexpiry', 'pgppublickey', 'sigantures', 'update', 'qtesla', 'private', 'compatibility', 'signature', 'previousupdate', 'urgent', 'bcjsse', 'conform', 'getchannel', 'compatibility', 'sunjsse', 'overridecause', 'exception', 'signaturerequire', 'parameter', 'signaturespis', 'keyspec', 'preferentiallylength', 'cmstypedstream', 'block', 'unecessarycause', 'unexpected', 'length', 'exception', 'valid', 'openbsdbcryptadditional', 'functionalityperformance', 'argonperformance', 'early', 'version', 'session', 'default', 'obfuscation', 'method', 'improves', 'channel', 'significant', 'performance', 'constant', 'inversion', 'modular', 'safegcd', 'variableedward', 'binary', 'custom', 'performance', 'curvesystem', 'credential', 'property', 'complain', 'bcjsse', 'restriction', 'althoughplease', 'refinement', 'support', 'initial', 'composite', 'internetxeckey', 'eddsa', 'support', 'edeckey', 'method', 'interface', 'signature', 'implementingsystem', 'bcpkix', 'support', 'transport', 'intelligent', 'classoptimizationnewhope', 'agreement', 'similar', 'basedsupport', 'clear', 'signaturesystem', 'absentalways', 'result', 'improper', 'cipher', 'string', 'checkopensslpbkdf', 'changeupdate', 'defectmethod', 'utility', 'bigintegers', 'wouldsecret', 'optional', 'reducedhashtree', 'valuepossible', 'synchronization', 'writer', 'bcjsse', 'multiple', 'issueadditional', 'support', 'default', 'property', 'default', 'release', 'system', 'resumption', 'boolean', 'session', 'release', 'server', 'property', 'bcjsse', 'setting', 'enabledfollow', 'provider', 'signature', 'namedcurves', 'bcjsse', 'enforcessupport', 'editing']","{'cipher': 100, 'length': 100, 'improper': 100}"
"['structs', 'support', 'arraystructs', 'abivtestfixture', 'fixture', 'necessary', 'functiondecoderarray', 'structs', 'decoder', 'return', 'length', 'stringstructs', 'returnstructs', 'encoderstructs', 'encoderstruct', 'abitypesimport', 'cleanupspotlessrefactor', 'utilsstructs', 'decoder', 'creation', 'arraystructs', 'arrayimportarray', 'support', 'structs', 'generation', 'wrapperarray', 'support', 'structs', 'function', 'native', 'convertgettypeasstringsupport', 'structs', 'array', 'gettypeasstringstructs', 'array', 'encodercodegen', 'array', 'structs', 'generation', 'wrappercosmeticcosmetic', 'spotlessunnecessary', 'suppress', 'warning', 'removeunnecessary', 'suppress', 'warning', 'removestructs', 'update', 'arraycosmeticarray', 'length', 'dynamicstruct', 'array', 'structs', 'tweak', 'value', 'functiondynamic', 'static', 'arrayencoderstruct', 'static', 'array', 'decoderstruct', 'array', 'encoder', 'dynamic', 'staticsuppress', 'cosmetic', 'warningspotless', 'javadocs']","{'length': 100, 'generation': 100}"
"['wrapper', 'issue', 'classloadingdocker', 'configuration', 'clientspotless']",{'issue': 100}
"['precautionary', 'length', 'calculation']",{'length': 100}
"['issue', 'mutability']",{'issue': 100}
"['operation', 'access', 'update', 'illegal', 'reflectivebcgit', 'issue']",{'issue': 100}
"['generation', 'codegen', 'codegen', 'modulegenerate', 'integrationtestsmall', 'additionalduplication', 'removedappliedfixedcontract', 'package', 'assertion', 'returnunnecessary']",{'generation': 100}
"['chainid', 'issue', 'requiredformattingbugfix', 'explicit', 'issuetravis', 'restartingtravis', 'restartingtravis']",{'issue': 100}
"['generation', 'suppresses']",{'generation': 100}
"['releaseimplementation', 'mechanism', 'extract', 'usingresolution', 'method', 'protectedalgorithm', 'implementation', 'blakeb', 'functioncheckstyle', 'errorsupport', 'primitivecheckstyleconstant', 'generate', 'modifier', 'returnlength', 'dynamic', 'address', 'wrappercheckstylecheckstyleformat', 'consistentlyimport', 'optimizecondition', 'parameter', 'addressparameter', 'extrachange', 'visibility', 'specialization', 'method', 'allowchange', 'visibility', 'decodingnumerictype', 'getterabstract', 'model', 'datatype', 'consistency', 'solidity', 'boolean', 'redundant', 'loadingprimitive', 'support', 'booleancontract', 'support', 'resolver', 'injection', 'classindentation', 'simplifyconstant', 'revert', 'array', 'function', 'signature', 'function', 'method', 'superclass', 'reusedpublic', 'default', 'decoder', 'encoder', 'overridedeployment', 'parameter', 'constructordeployment', 'parameter', 'constructorduplicatebrokencheckstyle', 'errorruntime', 'method', 'exceptioncheckstyle', 'erroroptional', 'constructor', 'contractimplementation', 'mechanism', 'extract', 'usingalgorithm', 'implementation', 'blakeb', 'functioncheckstyle', 'errorsupport', 'primitivechange', 'visibility', 'solidity', 'boolean', 'redundant', 'function', 'method', 'superclass', 'reusedpublic', 'default', 'decoder', 'encoder', 'overridebrokencheckstyle', 'errorruntime', 'method', 'exceptioncheckstyle', 'errorplugins', 'public', 'constructor', 'generatorplugins', 'generate', 'public', 'functionaddress', 'contract', 'length', 'spotless', 'applymethod', 'duplicatedexception', 'declaringparameter', 'constructorchange', 'resolution', 'applycheckstyle', 'comment', 'removeupdate', 'datatypeskirilov', 'ivaylo', 'iikirilov', 'authoredupdatekirilov', 'ivaylo', 'iikirilov', 'authoredupdatekirilov', 'ivaylo', 'iikirilov', 'authoreddecoder', 'comment', 'ethereumparameter', 'field', 'cleanupbound', 'style', 'cleanuparray', 'dimensional', 'multiaddress', 'biginteger', 'accepts', 'value', 'instantiatetypeformattingcatch', 'newline', 'extragreater', 'return', 'arrayimprovement', 'trivialchange', 'minorrewrote', 'withoutsendasync', 'support', 'function', 'withoutperform', 'multiplemethod', 'arrayfunctionwrappedstalestalestaleupdatekirilov', 'ivaylo', 'iikirilov', 'analytics', 'format', 'googlereleaseversion', 'releasespotlessreleasespotless', 'pipelineimplementation', 'mechanism', 'extract', 'usingresolution', 'method', 'protectedalgorithm', 'implementation', 'blakeb', 'functioncheckstyle', 'errorsupport', 'primitivecheckstyleconstant', 'generate', 'modifier', 'returnlength', 'dynamic', 'address', 'wrappercheckstylecheckstyleformat', 'consistentlyimport', 'optimizecondition', 'parameter', 'addressparameter', 'extrachange', 'visibility', 'specialization', 'method', 'allowchange', 'visibility', 'decodingnumerictype', 'getterabstract', 'model', 'datatype', 'consistency', 'solidity', 'boolean', 'redundant', 'loadingprimitive', 'support', 'booleancontract', 'support', 'resolver', 'injection', 'classindentation', 'simplifyconstant', 'revert', 'array', 'function', 'signature', 'function', 'method', 'superclass', 'reusedpublic', 'default', 'decoder', 'encoder', 'overridedeployment', 'parameter', 'constructordeployment', 'parameter', 'constructorduplicatebrokencheckstyle', 'errorimplementation', 'mechanism', 'extract', 'usingalgorithm', 'implementation', 'blakeb', 'functioncheckstyle', 'errorsupport', 'primitivechange', 'visibility', 'solidity', 'boolean', 'redundant', 'function', 'method', 'superclass', 'reusedpublic', 'default', 'decoder', 'encoder', 'overridebrokenruntime', 'method', 'exceptioncheckstyle', 'erroroptional', 'constructor', 'contractcheckstyle', 'errorruntime', 'method', 'exceptioncheckstyle', 'errorplugins', 'public', 'constructor', 'generatorplugins', 'generate', 'public', 'functionaddress', 'contract', 'length', 'spotless', 'applymethod', 'duplicatedexception', 'declaringparameter', 'constructorchange', 'resolution', 'applycheckstyle', 'comment', 'removeupdate', 'datatypeskirilov', 'ivaylo', 'iikirilov', 'authoredupdatekirilov', 'ivaylo', 'iikirilov', 'authoreddecoder', 'comment', 'ethereumparameter', 'field', 'cleanupupdatekirilov', 'ivaylo', 'iikirilov', 'authoredbound', 'mastersupport', 'update', 'primitivetypes', 'versionversion', 'release']","{'injection': 100, 'length': 100}"
"['phasesupport', 'group', 'privacysupport', 'decoder', 'encoderprivatefrom', 'privateforprivacygroupid', 'privatefromprivacygroupidcompletezombie', 'removecoverage', 'improvemethod', 'hashcode', 'getters', 'equalobject', 'response', 'settercheckstyleintegration', 'completecheckstyleintegration', 'packagecontract', 'delete', 'redundantclarify', 'commentfinal', 'class', 'fieldversionchain', 'address', 'retrievingspotless', 'rebasemethod', 'pantheon', 'modulepantheon', 'integrationinject', 'providergeneration', 'expose', 'privacy', 'legacy', 'testingmandatory', 'privatefromexclude', 'construct', 'privatefromrefactor', 'stringintegrationutilscomment', 'addressmethod', 'numericdelegate', 'restrictionthrow', 'jsondeserialize', 'jsonserializecheckstyle', 'comment', 'relatedsuppress', 'warning', 'javadoc']",{'expose': 100}
"['okhttpissuesquare', 'okhttp', 'issue']",{'issue': 100}
"['initial', 'template', 'issue']",{'issue': 100}
"['issue', 'arrayabstract', 'model', 'consistent', 'array', 'static', 'getterabstract', 'array', 'length', 'static', 'check']","{'issue': 100, 'length': 100}"
"['integer', 'round', 'division']",{'integer': 100}
"['mergebugfix', 'request', 'expose']",{'expose': 100}
"['mergeserso', 'request', 'dependent', 'module', 'party', 'integration', 'crypto', 'android']",{'crypto': 100}
"['method', 'expose', 'mnemonicutilsuseful', 'recovery']",{'expose': 100}
"['crypto', 'module', 'fasterxml', 'dependwalletutils', 'bipwalletutils', 'classbelong', 'order', 'client', 'happyintact']",{'crypto': 100}
"['mergeargentlabs', 'request', 'mergeoptional', 'solidity', 'issue']",{'issue': 100}
"['mergeremove', 'request', 'iikirilovsolidity', 'contract', 'generation']",{'generation': 100}
"['mergemnemonic', 'validation', 'request', 'aleksandermnemonic', 'validation', 'generation', 'entropy']","{'generation': 100, 'entropy': 100}"
"['mergeargentlabs', 'request', 'function', 'return', 'issue']",{'issue': 100}
"['override', 'crypto']",{'crypto': 100}
"['mnemonic', 'validation', 'generation', 'entropy']","{'generation': 100, 'entropy': 100}"
"['violation', 'checkstyle', 'generation', 'contract']",{'generation': 100}
"['xaviariasadditional', 'contract', 'expose', 'ethgetlogs', 'behavior']",{'expose': 100}
"['contract', 'wrapper', 'smart', 'update', 'compatibility', 'issue']",{'issue': 100}
"['additional', 'contract', 'expose', 'ethgetlogs', 'behavior']",{'expose': 100}
"['additional', 'contract', 'expose', 'ethgetlogs', 'behavior']",{'expose': 100}
"['support', 'generation']",{'generation': 100}
"['connection', 'issue']",{'issue': 100}
"['length', 'check', 'travis']",{'length': 100}
"['length', 'check', 'travis']",{'length': 100}
"['length', 'check', 'travis']",{'length': 100}
"['visibility', 'getnonce', 'issue']",{'issue': 100}
"['solidity', 'boolean', 'contract', 'smart', 'return', 'issue']",{'issue': 100}
"['jackson', 'databind', 'crypto']",{'crypto': 100}
"['crypto', 'creation']",{'crypto': 100}
"['staticarray', 'length', 'constructor', 'logic', 'ensure', 'invariant']",{'length': 100}
"['static', 'issue']",{'issue': 100}
"['tuple', 'issue']",{'issue': 100}
"['implementation', 'random', 'android', 'issue']",{'issue': 100}
"['integration', 'artifactconsole', 'generation']",{'generation': 100}
"['archive', 'uploads', 'field', 'rawresponse', 'issue']",{'issue': 100}
"['mergerequest', 'okhttp', 'mergeokhttp', 'migration', 'issue']",{'issue': 100}
"['transaction', 'failure', 'occasional', 'issue']",{'issue': 100}
"['async', 'thread', 'transaction']",{'thread': 100}
"['public', 'issue', 'encode']",{'issue': 100}
"['address', 'array', 'prefix', 'encoder', 'issue']",{'issue': 100}
"['mergerequest', 'earizon', 'mergeancient', 'issue', 'event']",{'issue': 100}
"['checkstyle', 'issue']",{'issue': 100}
"['ancient', 'issue', 'event']",{'issue': 100}
"['smart', 'isvalid', 'integration', 'issue']",{'issue': 100}
"['address', 'contract', 'ethcall', 'wrapper', 'smart', 'issue']",{'issue': 100}
"['support', 'transaction', 'block', 'observables', 'enhanceedbehind', 'scene', 'transaction', 'verification', 'smart', 'simpletransaction', 'request', 'issue', 'pending', 'getnonce']",{'issue': 100}
"['generation', 'entry', 'wrapper', 'storage', 'declaration', 'issuedeploy', 'contract', 'parameter', 'function', 'smart', 'value', 'preventsmart', 'smart', 'storage']",{'generation': 100}
"['password', 'issue', 'empty']",{'issue': 100}
"['contract', 'generation', 'update', 'event']",{'generation': 100}
"['multiple', 'return', 'issue', 'valuebuild', 'facilitate', 'class', 'artifact']",{'issue': 100}
"['function', 'value', 'string', 'multiple', 'issue']",{'issue': 100}
"['default', 'issue']",{'issue': 100}
"['account', 'unlock', 'request', 'parity', 'issue']",{'issue': 100}
"['function', 'wrapper', 'integration', 'issue']",{'issue': 100}
"['incorrect', 'length', 'function', 'offset', 'return', 'support', 'artifact', 'additional', 'generatorsolidity']","{'incorrect': 100, 'length': 100}"
"['transaction', 'updatedtransaction', 'rawtransaction', 'crypto', 'class']",{'crypto': 100}
"['support', 'offline', 'transactionoffline', 'integration', 'assertion', 'contractsupport', 'length']",{'length': 100}
"['integration', 'testnet', 'online', 'response', 'issue', 'example', 'integration']",{'issue': 100}
