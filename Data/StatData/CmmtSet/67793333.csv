message,fuzzy
"['store', 'gateway', 'issue', 'stability', 'startstore', 'logic', 'gateway', 'stability', 'marcolinter', 'issuepracucci', 'marcoupdate', 'storegatewaypracucci', 'entry', 'changelogpracucci']",{'issue': 100}
"['group', 'dispatcher', 'limitaggregation', 'expose', 'dispatcher', 'tibrany', 'peteraggregation', 'group', 'expose', 'dispatcher', 'tibrany', 'peteralerttibran', 'pstibrany', 'peteroption', 'alertmanager', 'experimental', 'simplify', 'limittibran', 'pstibrany', 'petermetrictibran', 'pstibrany', 'peter']",{'expose': 100}
"['metric', 'tombstone', 'troubleshootingmetric', 'tombstone', 'troubleshootingtombstone', 'number', 'expose', 'valuetombstone', 'propagatedinstance', 'valuecount', 'tombstone', 'number', 'removedtroubleshoot', 'tombstone', 'state', 'convergedcount', 'simpson', 'steve']",{'expose': 100}
"['query', 'series', 'block', 'ingesters', 'support', 'storagequery', 'reflect', 'series', 'block', 'ingesters', 'support', 'storage', 'updatetyler', 'treid', 'issuetyler', 'treid', 'macbooklinter', 'review', 'changetyler', 'treid', 'macbookupdatetyler', 'treid', 'macbooktyler', 'signedseries', 'limit', 'query', 'changelogtyler', 'signedsuggestion', 'review', 'marco', 'pracuccityler', 'signedcomment', 'review', 'addresstyler', 'signedquery', 'series', 'integration', 'limittyler', 'signedintegrationtyler', 'signedquery', 'series', 'option', 'config', 'limittyler', 'signedupdate', 'review', 'changetyler', 'signedcheck', 'issue', 'error', 'lintertyler', 'signedclean', 'noise', 'whitepracucci', 'treid', 'macbooktyler', 'marco', 'pracucci']",{'issue': 100}
"['batchwrite', 'column', 'query', 'range', 'purger', 'valueerror', 'followingstore', 'column', 'request', 'range', 'error', 'condition', 'delete', 'invalid', 'valuecortexproject', 'cortex', 'issue', 'resolveowski']",{'issue': 100}
"['config', 'expose', 'contentcheck', 'alertmanager', 'template', 'validationvalidation', 'reflection', 'config', 'alertmanagerapikeyfile', 'entry', 'changelogpracucci']",{'expose': 100}
"['concurrency', 'mergequeryableconcurrency', 'mergequeryabletenant', 'warning', 'error', 'aligns', 'extendschristian', 'simonsuggestion', 'review', 'holland', 'michelhollands', 'michelchristian', 'simonsimplify', 'concurrencyresult', 'goroutine', 'background', 'receivingcontext', 'errgroup', 'propagatedocumentation', 'comment', 'improvechristian', 'simonentry', 'changelogchristian', 'simonmaximum', 'concurrency', 'mergequeryable', 'limitmight', 'instance', 'simoncancellation', 'context', 'handlebeneficial', 'context', 'cancellation', 'simoninterface', 'pointer', 'error', 'handlechristian', 'error', 'readability', 'reuse', 'struct', 'queryableparameterchristian', 'holland', 'michelhollands', 'micheljacob']",{'concurren': 90}
"['blockrollout', 'issue', 'veeramachaneni', 'goutham', 'gouthamve']",{'issue': 100}
"['global', 'ingestertibran', 'petercurrent', 'expose', 'ingester', 'limittibran', 'peterrequest', 'inflighttibran', 'peterglobal', 'defaulttibran', 'petercurrent', 'expose', 'ingestiontibran', 'peterexpose', 'inflight', 'numbertibran', 'peterewmarate', 'changetibran', 'peterrename', 'globallimitsrenamegetorcreatetsdb', 'parameter', 'extratibran', 'peterrename', 'block', 'globallimits', 'peterrename', 'block', 'globallimits', 'peterdetail', 'error', 'removetibran', 'petercount', 'series', 'pstibrany', 'peterreviewtibran', 'pstibrany', 'peterforgotten', 'removetibran']",{'expose': 100}
"['pillitteriduration', 'convertprometheus', 'duration', 'common', 'relatedstandard', 'library', 'standard', 'issue', 'representationexamplerepresentation', 'stringrepresentation', 'integercontrastrepresentation', 'stringrepresentation', 'struct', 'update', 'configuration']",{'issue': 100}
"['query', 'issue', 'query', 'issue', 'alvin', 'alvinlinchange', 'alvin', 'alvinlinsetup', 'alvin', 'alvinlinsmall', 'optimization', 'alvin', 'alvinlinanother', 'slice', 'alvin', 'alvinlincomment', 'alvin', 'alvinlinprecise', 'alvin', 'alvinlinnever', 'alwasy', 'slice', 'alvin', 'alvinlinquerier', 'update', 'queryrangepracucci', 'marco', 'pracucci']",{'issue': 100}
"['directory', 'issue', 'alvin', 'alvinlin']",{'issue': 100}
"['blocksconvert', 'timestamp', 'jitterblocksconvert', 'timestamp', 'jitteradjust', 'timestamps', 'tolerance', 'sampleexact', 'align', 'number', 'prometheus', 'option', 'usefulprometheus', 'issue', 'backgroundbryan', 'bjboreham', 'borehamparambryan', 'bjboreham', 'borehamupdate', 'changelogbryan', 'bjboreham', 'borehamduration', 'changebryan', 'bjboreham', 'boreham']",{'issue': 100}
"['issue', 'availableingesters', 'marco', 'pracucci']",{'issue': 100}
"['expose', 'config']",{'expose': 100}
"['encryption', 'recursive', 'context', 'thanos', 'upgradepracucci']",{'encryption': 100}
"['cortexpb', 'access', 'functiontowriterequest', 'slice', 'expose', 'entity', 'alreadyusage', 'encourages', 'timeseriesreuseslice', 'obtainusingbuild', 'package', 'writerequestuseful', 'metric', 'samplepointer', 'struct', 'slice', 'retrievecommit', 'function']",{'expose': 100}
"['encryption', 'block', 'support', 'storage', 'tenantencryption', 'override', 'context', 'entry', 'changelogpracucci', 'unnecessary', 'rolledback', 'changepracucci', 'marcoallow', 'overridepracucci', 'description', 'changelogpracucci', 'entry', 'changelogpracucci']",{'encryption': 100}
"['tenant', 'metric', 'override', 'limittenant', 'metric', 'override', 'targetoverride', 'prometheus', 'metric', 'tenant', 'expose', 'tenant', 'approach']",{'expose': 100}
"['option', 'bucket', 'expose', 'indexpracucci']",{'expose': 100}
"['encryption', 'server', 'support', 'usingencryption', 'server', 'support', 'usingmiguel', 'lucas', 'review', 'refatoredmiguel', 'lucas', 'signedsmall', 'refactormiguel', 'lucas', 'mastermiguel', 'lucas', 'master', 'correctlymiguel', 'lucas', 'signedaddedmiguel', 'lucas', 'signedrefactoredmiguel', 'lucas', 'changelogmiguel', 'lucas', 'signedrefactoredmiguel', 'lucas', 'structmiguel', 'lucas', 'vieira', 'lucas']",{'encryption': 100}
"['validation', 'labelparam', 'request', 'validation', 'label', 'trevor', 'whitney', 'trevorjwhitneyvalidation', 'expose', 'force', 'server', 'distributorservice', 'validation', 'option', 'distributoralways', 'translatevalidation', 'force', 'falserequest', 'trevor', 'whitney', 'trevorjwhitneyservice', 'rename', 'trevor', 'whitney', 'trevorjwhitney']",{'expose': 100}
"['alternative', 'decompression', 'buffer', 'reading', 'validation', 'liberty', 'tovena', 'cyrilframedsnappy', 'tovena', 'cyrilsimplifypracucci', 'feedback', 'marco', 'pracucci']",{'buffer': 100}
"['default', 'alertmanager', 'registerer', 'expose', 'accesstibran']",{'expose': 100}
"['default', 'frontendaddress', 'overridingcortexproject', 'cortex', 'issue', 'resolveowski']",{'issue': 100}
"['memberlist', 'buffer', 'message', 'receiveddisplay', 'admin', 'memberlist', 'buffer', 'client', 'receivedtibran']",{'buffer': 100}
"['client', 'expose', 'optiontibran']",{'expose': 100}
"['upgrade', 'prometheus', 'thanosprometheus', 'upgradedpracucci', 'option', 'buffer', 'configure', 'addedpracucci', 'marcoprometheus', 'upgradedpracucci']",{'buffer': 100}
"['range', 'slice', 'reuse', 'componentparse', 'chunk', 'buffer', 'rangebenchcmpdelta', 'benchmarkallocs', 'delta', 'benchmarkdelta', 'tovena', 'cyril']",{'buffer': 100}
"['setting', 'expose', 'segmentsegment', 'option', 'block', 'config', 'exposedpracucci']",{'expose': 100}
"['expose', 'configexpose', 'configdedupe', 'configmonitor', 'prometheus', 'alertmanager', 'issueupstream', 'config', 'coordinator', 'veeramachaneni', 'goutham', 'gouthamvefeedback', 'veeramachaneni', 'goutham', 'gouthamve']",{'expose': 100}
"['expose', 'metricpracucci']",{'expose': 100}
"['concurrency', 'startuppracucci', 'metric', 'trackingpracucci', 'marcocomment', 'review', 'addressedpracucci', 'marcocomment', 'review', 'addressedpracucci']",{'concurren': 90}
"['request', 'roundtripper', 'bartosz', 'melkorm', 'grzybowskirequest', 'making', 'error', 'bartosz', 'melkorm', 'grzybowskiclose', 'round', 'bartosz', 'melkorm', 'grzybowskirequest', 'bartosz', 'melkorm', 'grzybowskisimplify', 'error', 'bartosz', 'melkorm', 'grzybowskiparse', 'scenario', 'buffer', 'bartosz', 'melkorm', 'grzybowskiclose', 'request', 'bartosz', 'melkorm', 'grzybowskisection', 'maxbodysize', 'bartosz', 'melkorm', 'grzybowskiquerier', 'update', 'bartosz', 'melkorm', 'grzybowskibugfix', 'bartosz', 'melkorm', 'grzybowskiquery', 'assertion', 'params', 'bartosz', 'melkorm', 'option', 'error', 'handlingdefault', 'option', 'controlacceptedrequest', 'error', 'bartosz', 'melkorm', 'grzybowskioption', 'bartosz', 'melkorm', 'description', 'configuration', 'changelog', 'description', 'bartosz', 'melkorm', 'grzybowskibartek', 'bartosz', 'grzybowski']",{'buffer': 100}
"['simplify', 'module', 'querysimplify', 'module', 'queryjacob', 'signedrefactor', 'commentjacob', 'signedrebase', 'importjacob', 'signedroute', 'diagram', 'explanationjacob', 'signedcomment', 'chore', 'addressjacob', 'signedimport', 'rebase', 'issue', 'context', 'packagejacob']",{'issue': 100}
"['component', 'ruler', 'separate', 'rulerapicomponent', 'ruler', 'separate', 'rulerapijacob', 'signedrectify', 'rebase', 'issue', 'feedbackjacob', 'signednewapipracucci', 'marco', 'pracucci']",{'issue': 100}
"['client', 'expose', 'configsclient', 'expose', 'configsjacob', 'signedupdate', 'changelogjacob', 'signeddefault', 'configs', 'value', 'thanosjacob', 'signedcomment', 'fixupjacob']",{'expose': 100}
"['thanoschore', 'upgrade', 'issue', 'introducedjacob', 'signedswitch', 'chore', 'deprecatedjacob', 'signedvendorjacob', 'signedmetric', 'marcodescription', 'metric', 'updatejacob', 'marco', 'pracucci']",{'issue': 100}
"['issue', 'template', 'report', 'issue', 'template', 'report', 'sukhaniissue', 'template', 'blank', 'usingsandeep']",{'issue': 100}
"['blocksconvert', 'series', 'peterseries', 'snappy', 'compression', 'symboltibran', 'peterseries', 'memory', 'number', 'expose', 'batchtibran', 'peterseries', 'block', 'ignore', 'directory', 'countingtibran', 'peterstill', 'snappytibran', 'separate', 'heapify', 'peterheapify', 'enhancereviewtibran']",{'expose': 100}
"['collectingcustomer', 'query', 'issue', 'production', 'simple', 'queryquerier', 'collisionmultiple', 'series', 'counter', 'causedweird', 'return', 'causedtricky', 'debug', 'superinsert', 'lookup', 'benchmark', 'serieslinuxgoarchcortexproject', 'cortex', 'distributorcortexproject', 'cortex', 'distributorcould', 'performancequitelinuxgoarchcortexproject', 'cortex', 'distributorcortexproject', 'cortex', 'distributorcompare', 'hashinglinuxgoarchcortexproject', 'cortex', 'reasonnetworkseveral', 'chunk', 'iterate', 'interface', 'complexworse', 'veeramachaneni', 'goutham', 'gouthamveentry', 'veeramachaneni', 'goutham', 'gouthamvefeedback', 'veeramachaneni', 'goutham', 'gouthamve']",{'issue': 100}
"['active', 'tracktibran', 'active', 'trackseries', 'active', 'checkingtibran', 'active', 'ingestertibran', 'petermodify', 'concurrencytibran', 'atomic', 'rwlock', 'integeroldest', 'atomictibran', 'stripe', 'memory', 'atomic', 'slice', 'integer', 'addressavoid', 'active', 'series', 'address', 'reviewtibran', 'enable', 'addedtibran', 'active', 'series', 'metric', 'peterdefault', 'series', 'timeout', 'peterlonger', 'label', 'update', 'benchmarktibran', 'peterupdate', 'changelogtibran', 'peterseries', 'metric', 'register', 'activetibran', 'peterreview', 'addresstibran']",{'integer': 100}
"['issue', 'support', 'dependencyissue', 'support', 'dependencymanavarr', 'mauricio', 'navarroconfig', 'failingmanavarr', 'mauricio', 'navarroconfig', 'retry', 'failingmanavarr', 'mauricio', 'navarrodescription', 'configmanavarr', 'marco', 'pracuccimanavarr', 'mauricio', 'navarroreview', 'mauricio', 'navarrosimplify', 'marco', 'pracuccimanavarr', 'mauricio', 'navarromessage', 'clarify', 'marco', 'pracuccimanavarr', 'mauricio', 'navarrocomment', 'marco', 'pracuccimanavarr', 'mauricio', 'navarrocomment', 'marco', 'pracuccimanavarr', 'marco', 'pracuccimanavarr', 'mauricio', 'navarromaintain', 'marco', 'pracuccimanavarr', 'mauricio', 'navarromaintain', 'marco', 'pracuccimanavarr', 'marco', 'pracuccimanavarr', 'mauricio', 'navarroreview', 'additional', 'update', 'comment', 'cleanupmanavarr', 'mauricio', 'navarroupdate', 'marco', 'pracuccimanavarr', 'mauricio', 'navarrocircleci', 'rerunmanavarr', 'mauricio', 'navarrointegration', 'rerunmanavarr', 'tibran', 'pstibrany', 'petermanavarr', 'tibran', 'pstibrany', 'petermanavarr', 'mauricio', 'navarrocomment', 'periodmanavarr', 'mauricio', 'navarromanavarr', 'tibran', 'pstibrany', 'petermanavarr', 'mauricio', 'navarroupdate', 'tibran', 'pstibrany', 'petermanavarr', 'mauricio', 'navarromanavarr', 'mauricio', 'manavarr', 'tibran', 'pstibrany', 'peter']",{'issue': 100}
"['message', 'client', 'duplicate', 'addressipaddress', 'context', 'holland', 'michelcontext', 'holland', 'michelforward', 'address', 'holland', 'michelclean', 'holland', 'michelgetsource', 'holland', 'michelalong', 'server', 'holland', 'michelassertion', 'incorrect', 'holland', 'micheldocumentation', 'holland', 'michelwhitespace', 'holland', 'michelupdate', 'holland', 'michelremove', 'struct', 'config', 'holland', 'michelcomment', 'review', 'holland', 'michelupdatepracucci', 'marco', 'pracucci']",{'incorrect': 100}
"['default', 'validation', 'certificate', 'bugfix', 'enable', 'servercertificate', 'validation', 'ensure', 'serverserver', 'configuration', 'verifyvalidation', 'server', 'configurationchristian', 'simonintegration', 'improvecertificate', 'script', 'generation', 'removecontrol', 'replaces', 'golangcertificate', 'server', 'ensureappropriate', 'server', 'talkingchristian', 'simonmount', 'integration', 'volumeoption', 'volume', 'docker', 'contentselinux', 'prevents', 'simonprovide', 'error', 'material', 'commentchristian']",{'generation': 100}
"['backoff', 'expose', 'config', 'dynamodbbackoff', 'expose', 'config']",{'expose': 100}
"['error', 'consistentresult', 'generate', 'function', 'spanloggererror', 'consistentlycallum', 'callumstyan', 'styanerrcheck', 'error', 'exclude', 'spanloggercallum', 'callumstyan', 'styanreviewcallum', 'callumstyan', 'styanreview', 'addresscallum', 'callumstyan', 'styanassign', 'nolint', 'commentattempt', 'incorrect', 'avoidcallum', 'callumstyan', 'styanerrcheck', 'exclude', 'globallypracucci', 'marco', 'pracucci']",{'incorrect': 100}
"['release', 'cherry', 'branchoutcome', 'chunk', 'short', 'series', 'flush', 'droppedseries', 'length', 'insteadoutcome', 'separatenochunkstoflush', 'reportedbryan', 'bryan', 'boreham']",{'length': 100}
"['outcome', 'chunk', 'short', 'series', 'flush', 'droppedseries', 'length', 'insteadoutcome', 'separatenochunkstoflush', 'reportedbryan', 'marco', 'pracucci']",{'length': 100}
"['multiple', 'append', 'space', 'insteadgotjosh', 'josue', 'signedstringslice', 'unifyextension', 'stringslice', 'string', 'similarfavour', 'string', 'stringslice', 'representationdifference', 'sprintf', 'representationgotjosh', 'josue', 'signedrenamelongergotjosh', 'josue', 'signeddiscovery', 'integration', 'alertmanager', 'creategotjosh', 'josue', 'signedexistinggotjosh', 'josue', 'gotjosh', 'josue']",{'Sprintf': 100}
"['multiple', 'append', 'space', 'insteadgotjosh', 'josue', 'signedstringslice', 'unifyextension', 'stringslice', 'string', 'similarfavour', 'string', 'stringslice', 'representationdifference', 'sprintf', 'representationgotjosh', 'josue', 'signedrenamelongergotjosh', 'josue', 'signeddiscovery', 'integration', 'alertmanager', 'creategotjosh', 'josue', 'signedexistinggotjosh', 'josue']",{'Sprintf': 100}
"['expose', 'metric', 'configacross', 'monitor', 'configactive', 'mismatch', 'detect', 'config', 'clusterruntime', 'support', 'startchristian']",{'expose': 100}
"['object', 'memory', 'causedobject', 'pointer', 'memory', 'buffer']",{'buffer': 100}
"['chunk', 'flushingpanic', 'issue', 'demonstratingtibran', 'immediatenoflush', 'returnchunk', 'slice', 'flushuserseries', 'descriptorpointer', 'slice', 'descriptorpanic', 'issue', 'preventseries', 'memory', 'entire', 'immediatetibran', 'metric', 'integrationtibran']",{'issue': 100}
"['prefix', 'generation', 'cacheprefix', 'generation', 'cachesandeep', 'sukhaniupdate', 'changelogsandeep']",{'generation': 100}
"['chunk', 'series', 'issue', 'intersect', 'indexchunk', 'series', 'issue', 'intersect', 'indexcortex', 'bcaffacaedcdbdr', 'cortexproject', 'introducematch', 'matcher', 'query', 'returnempty', 'chunk', 'value', 'download', 'tovena', 'cyril']",{'issue': 100}
"['chunk', 'series', 'issue', 'intersect', 'indexchunk', 'series', 'issue', 'intersect', 'indexcortex', 'bcaffacaedcdbdr', 'cortexproject', 'introducematch', 'matcher', 'query', 'returnempty', 'chunk', 'value', 'download', 'tovena', 'cyril']",{'issue': 100}
"['additional', 'issue', 'veeramachaneni', 'goutham', 'gouthamve']",{'issue': 100}
"['crash', 'ingesteralways', 'checkpoint', 'almostcheckpointthough', 'checkpointenough', 'crash', 'possible', 'entire', 'neverbringingmarchbanks', 'chris', 'csmarchbanks']",{'crash': 100}
"['website', 'config', 'latestrelease', 'gohugoiogoogle', 'issue', 'veeramachaneni', 'goutham', 'gouthamve']",{'issue': 100}
"['result', 'query', 'query', 'buffer', 'incorrect', 'causedpracucci', 'marcoquerier', 'updatepracucci', 'tibran', 'pstibrany', 'peterquerier', 'updatepracucci', 'tibran', 'pstibrany', 'entry', 'changelogpracucci', 'tibran', 'pstibrany', 'peter']","{'buffer': 100, 'incorrect': 100}"
"['client', 'supportcheckpointannanayagarwal', 'annanayclient', 'optionannanayagarwal', 'annanayclient', 'package', 'httpclient', 'configsannanayagarwal', 'annanayclient', 'grpcclient', 'changeannanayagarwal', 'annanaystore', 'clientannanayagarwal', 'annanayrename', 'config', 'parameterannanayagarwal', 'annanaycorrect', 'config', 'package', 'referenceannanayagarwal', 'annanayconfig', 'sampleannanayagarwal', 'annanaycrash', 'quicklyannanayagarwal', 'generation', 'linterpracucci', 'marcowhite', 'noise', 'cleanedpracucci', 'marcocomment', 'review', 'addressannanayagarwal', 'annanayclient', 'optionannanayagarwal', 'annanayclient', 'vendorannanayagarwal', 'annanaycomment', 'addressannanayagarwal', 'level', 'revert', 'entryannanayagarwal', 'marco', 'pracucci']",{'generation': 100}
"['expose', 'metric', 'checkpoint', 'ingestersexpose', 'metric', 'checkpoint', 'ingesterspracucci', 'metric', 'checkpointpracucci']",{'expose': 100}
"['concurrent', 'option', 'query', 'limitconcurrent', 'option', 'query']",{'concurrent': 100}
"['invalidation', 'cache', 'invalidate', 'numberinvalidation', 'cache', 'invalidate', 'cache', 'usingrequest', 'specific', 'number', 'whenever', 'incrementedrequest', 'sukhaniresult', 'querier', 'generation', 'cache', 'inconsistency', 'frontend', 'number', 'cachingsandeep', 'sukhanirequest', 'cache', 'number', 'table', 'delete', 'review', 'suggestedsandeep', 'sukhaniresult', 'store', 'check', 'request', 'cache', 'number', 'delete', 'directlystore', 'result', 'header', 'cache', 'response', 'number', 'decideresult', 'header', 'cache', 'cache', 'error', 'numbersandeep', 'sukhaniconflict', 'mergesandeep']",{'generation': 100}
"['querier', 'parallelism', 'worker', 'elliott', 'numberstructure', 'elliott', 'numbermanager', 'elliott', 'numberinterface', 'concurrency', 'issue', 'support', 'parallelism', 'elliott', 'numberinterface', 'upstream', 'elliott', 'numberconcurrency', 'elliott', 'numbergraceful', 'shutdown', 'elliott', 'numberprocess', 'service', 'context', 'elliott', 'numberracey', 'elliott', 'numberunnecessary', 'elliott', 'numberparam', 'client', 'config', 'elliott', 'numberaround', 'distribution', 'elliott', 'numberexample', 'single', 'configs', 'binary', 'elliott', 'numberunnecessary', 'elliott', 'numberconcurrency', 'elliott', 'numberwithblock', 'manager', 'address', 'elliott', 'number']","{'concurren': 90, 'issue': 100}"
"['issue', 'linux', 'elliott', 'number']",{'issue': 100}
"['queryfrontend', 'status', 'incorrect', 'timeoutqueryfrontend', 'status', 'incorrect', 'timeoutdmitry', 'shmulevichcomment', 'addresseddmitry']",{'incorrect': 100}
"['delete', 'request', 'metric', 'monitoringdelete', 'request', 'metric', 'monitoringsandeep', 'sukhaniupdate', 'issue', 'minor', 'changelogsandeep', 'metric', 'changelogsandeep', 'marco', 'pracucci']",{'issue': 100}
"['cortex', 'issue', 'block', 'release', 'storagepracucci']",{'issue': 100}
"['store', 'expose', 'gatewaypracucci']",{'expose': 100}
"['issue', 'registrationcreate', 'veeramachaneni', 'goutham', 'gouthamve']",{'issue': 100}
"['client', 'upgrade', 'prometheusclient', 'prometheus', 'upgradedpracucci', 'compilation', 'issue', 'exporterpracucci', 'integration', 'compilationpracucci']",{'issue': 100}
"['error', 'update', 'almostaround', 'error', 'deadcode', 'cleanupspecific', 'error', 'deadcodenathan', 'github', 'zenderdistribute', 'keysfn', 'config', 'defines', 'hashingnathan', 'github', 'zenderiterator', 'readbatchiterator', 'consumedunderlyingnathan', 'github', 'cachenathan', 'github', 'removingnathan', 'github', 'zendergosimple', 'suggestion', 'cleanupnathan', 'github', 'ignore', 'goroutine', 'errorerrcheck', 'nolingextra', 'somethingnathan', 'github', 'zenderissue', 'staticchecknathan', 'github', 'cleanupnathan', 'github', 'zendermakefile', 'removenathan', 'github', 'zenderimport', 'reordernathan', 'github', 'issuecortexproject', 'cortex', 'issue', 'addressdeprecationnathan', 'github', 'noerrornathan', 'github', 'zendersince', 'noerror', 'requirenathan', 'github', 'zenderswitchnathan', 'github', 'classnathan', 'github', 'zendererror', 'warning', 'cachenathan', 'github', 'zendercondense', 'littlenathan', 'github', 'insteadnathan', 'github', 'comment', 'addingnathan', 'github', 'statenathan', 'github', 'zenderdeadline', 'context', 'error', 'returnnathan', 'github', 'zenderdefer', 'otherwisenathan', 'github', 'nolint', 'comment', 'clearnathan', 'github', 'zenderrefactor', 'methodsince', 'testutils', 'fixture', 'alreadyplace', 'helper', 'testutils', 'method', 'commonnathan', 'github', 'errcheck', 'exclude', 'globalnathan', 'github', 'zendererror', 'anythingnathan', 'github', 'function', 'cleanupnathan', 'github', 'zenderglobal', 'tracer', 'excludes', 'addingnathan', 'github', 'importnathan', 'github', 'error', 'ratelimiter', 'returnnecessary', 'backoff', 'retrybackoff', 'continuenathan', 'github']",{'issue': 100}
"['current', 'config', 'expose', 'handlercurrent', 'config', 'expose', 'urlvalue', 'valuepracucci', 'marcoomitempty', 'removedpracucci', 'integration', 'endpoint', 'configpracucci', 'marco', 'pracucci']",{'expose': 100}
"['tibrany', 'peteractivity', 'tracker', 'serializationrulefmt', 'state', 'previousrulefmt', 'prometheussmall', 'tibrany', 'peterdirectory', 'activity', 'tibrany', 'peterclean', 'tibrany', 'peterbbefacdebddceec', 'tibrany', 'petertracker', 'tibrany', 'peterselectsense', 'return', 'method', 'alreadyselect', 'tibrany', 'peterdirectory', 'tracker', 'tibrany', 'peterdefault', 'active', 'query', 'tracker', 'tibrany', 'peterremoteaddrrequires', 'empty', 'prometheus', 'tibrany', 'petermethod', 'possible', 'comment', 'tibrany', 'petermaster', 'issue', 'tibrany', 'peter']",{'issue': 100}
"['goroutine', 'buffer', 'tibrany', 'peter']",{'buffer': 100}
"['squashedcommitauthor', 'pracucci', 'metric', 'issue', 'knownpracucci', 'marcocommitauthor', 'pracucci', 'ruler', 'changelogpracucci', 'marcocommitauthor', 'pracucci', 'marcoreview', 'check', 'changelogpracucci', 'marcobccefbacfbbccdb', 'commitauthor', 'pracucci', 'marcocommit', 'acbccccbeedaaacauthor', 'bryan', 'borehamclosehead', 'flush', 'reasonclosehead', 'reasonreasonimmediate', 'sendingchunk', 'check', 'sincenoflush', 'returnbryan', 'borehamcommitauthor', 'bryan', 'borehamempty', 'noflush', 'return', 'seriesbryan', 'borehamcommitauthor', 'pracucci']",{'issue': 100}
"['metric', 'issue', 'knownpracucci']",{'issue': 100}
"['expose', 'usage', 'bucketexpose', 'usage', 'bucketquerier', 'metric', 'bucket', 'component', 'exposequerier', 'label', 'ingester', 'bucket', 'metric', 'bucket', 'tibrany', 'peter']",{'expose': 100}
"['shipping', 'block', 'number', 'tenant', 'shipping', 'concurrency', 'blockpracucci', 'number', 'changelogpracucci', 'marcostruct', 'usertsdb', 'exportpracucci']",{'concurren': 90}
"['mergelibrary', 'update', 'vendoredpromtheusprometheus', 'wilkieconflict', 'mergevernekar', 'ganesh', 'csbtechcreation', 'state', 'recoververnekar', 'ganesh', 'csbtechrecord', 'ganesh', 'csbtechvernekar', 'ganesh', 'csbtechcompression', 'ganesh', 'csbtechcheckpoint', 'prometheus', 'ganesh', 'csbtechmetric', 'checkpoint', 'changevernekar', 'ganesh', 'csbtechattempt', 'chunk', 'initialvernekar', 'ganesh', 'csbtechchunk', 'checkpoint', 'ganesh', 'csbtechvernekar', 'ganesh', 'csbtechstartup', 'recoververnekar', 'ganesh', 'csbtechtruncation', 'segment', 'removevernekar', 'ganesh', 'csbtechalways', 'ganesh', 'csbtechrecovery', 'timervernekar', 'ganesh', 'csbtechrigorousvernekar', 'ganesh', 'csbtechvernekar', 'ganesh', 'csbtechseries', 'recovery', 'number', 'limitvernekar', 'ganesh', 'csbtechsegment', 'deletion', 'ganesh', 'csbtechprocess', 'recordgraceful', 'ganesh', 'csbtechseries', 'ganesh', 'csbtechseries', 'process', 'checkpoint', 'parallelvernekar', 'ganesh', 'csbtechprocessingconcurrency', 'prometheus', 'style', 'handlingprocessingvernekar', 'ganesh', 'csbtechsmall', 'enhancementvernekar', 'ganesh', 'csbtechseries', 'cache', 'processing', 'sample', 'statevernekar', 'ganesh', 'csbtechenhancement', 'cache', 'buffer', 'sample', 'statevernekar', 'ganesh', 'csbtechseries', 'cache', 'checkpoint', 'statevernekar', 'ganesh', 'csbtechsmall', 'enhancementvernekar', 'ganesh', 'csbtechvernekar', 'ganesh', 'csbtechremovevernekar', 'ganesh', 'csbtechprometheusvernekar', 'shutdown', 'avoidvernekar', 'ganesh', 'csbtechrebasevernekar', 'ganesh', 'csbtechcomment', 'reviewvernekar', 'ganesh', 'csbtechsmall', 'enhancementvernekar', 'ganesh', 'csbtechupdate', 'commentvernekar', 'ganesh', 'csbtechingester', 'dependancy', 'circular', 'removevernekar', 'ganesh', 'csbtechsegment', 'changevernekar', 'ganesh', 'csbtechdirectory', 'token', 'temporaryvernekar', 'ganesh', 'csbtechdisble', 'ganesh', 'csbtechendpoint', 'flush', 'shutdown', 'irrespectivevernekar', 'ganesh', 'csbtechrecordvernekar', 'ganesh', 'csbtechcomment', 'gouthamvernekar', 'ganesh', 'csbtechcomment', 'gouthamvernekar', 'ganesh', 'csbtechdeadlock', 'goroutine', 'possible', 'memoryvernekar', 'ganesh', 'csbtechcomment', 'reviewvernekar', 'ganesh', 'csbtechsmall', 'metic', 'memorychunks', 'counter', 'cleanupvernekar', 'ganesh', 'csbtechconfig', 'update', 'argumentvernekar', 'ganesh', 'csbtechmigrate', 'ganesh', 'csbtechcomment', 'reviewvernekar', 'ganesh', 'csbtechcomment', 'reviewvernekar', 'ganesh', 'csbtechvernekar', 'ganesh', 'codesome']",{'buffer': 100}
"['metric', 'expose', 'shipper', 'ingestermetric', 'expose', 'shipper', 'ingestertenant', 'shippergather', 'metric', 'fortunatelycountershippershipper', 'block', 'uploadedacross', 'groupshipper', 'separate', 'ingester', 'metric', 'tibrany', 'peter']",{'expose': 100}
"['metric', 'querymetric', 'queriedsamples', 'update', 'tibrany', 'peterslice', 'length', 'tibrany', 'peter']",{'length': 100}
"['pending', 'incorrect', 'tibrany', 'petermdash', 'parenthesis', 'tibrany', 'petertimeout', 'tibrany', 'peter']",{'incorrect': 100}
"['deadlock', 'goroutine', 'possible', 'memoryvernekar', 'ganesh', 'csbtech']",{'deadlock': 100}
"['sleep', 'synch']",{'synch': 100}
"['global', 'distributor', 'limiter', 'ingestion', 'limiter', 'globalpracucci', 'error', 'linterpracucci', 'entry', 'number', 'changelogpracucci', 'service', 'discovery', 'distributorpracucci', 'error', 'linterpracucci', 'master', 'ingester', 'ingester', 'ingesters', 'consistency', 'referencepracucci', 'marcointerface', 'place', 'consumption', 'readlifecycler', 'definitionpracucci', 'period', 'reload', 'introducedpracucci', 'marcobmizerany', 'assert', 'dependency', 'spuriouspracucci', 'issue', 'master', 'rebasingpracucci', 'issue', 'master', 'rebasingpracucci', 'entry', 'changepracucci', 'distributor', 'systempracucci']",{'issue': 100}
"['mergerequest', 'generation', 'logic', 'pracucci', 'distributor', 'resharingseries', 'generation']",{'generation': 100}
"['buffer', 'metric']",{'buffer': 100}
"['series', 'generation']",{'generation': 100}
"['mergethorfour', 'request', 'block', 'bucketstore', 'config', 'mergestore', 'block', 'setting', 'config', 'expose']",{'expose': 100}
"['metric', 'memberlist', 'expose', 'tibrany', 'peterexpose', 'memberlist', 'internallibrary', 'armon', 'memberlist', 'metric', 'tibrany', 'peter']",{'expose': 100}
"['store', 'status', 'return', 'return', 'error', 'additionstatus', 'return', 'metric', 'issue', 'writesprometheus', 'electedcallum', 'callumstyan', 'styan']",{'issue': 100}
"['blockblock', 'storage', 'ingesterthansen', 'signedtransfer', 'shutdown', 'ingesterthansen', 'signedquerier', 'block', 'querythansen', 'signedvendorthansen', 'signedthansen', 'signedsplit', 'separatethansen', 'signederrorthansen', 'signedcheck', 'creationthansen', 'signedanchor', 'regexpthansen', 'signedconfigurable', 'intervalthansen', 'flakethansen', 'signedstore', 'enabledthansen', 'signedsinsecurethansen', 'signedblock', 'error', 'ignorethansen', 'signedwrapper', 'function', 'commonthansen', 'signedstorethansen', 'signedquerier', 'directorythansen', 'signedmanager', 'ignore', 'tablethansen', 'config', 'structurethansen', 'experimentalthansen', 'signeddirectory', 'separate', 'blockthansen', 'config', 'changethansen', 'signedthansen', 'signedvalidate', 'configsthansen', 'rebase', 'overflow', 'changethansen']",{'overflow': 100}
"['refactor', 'package', 'queryrange', 'frontend', 'externalbehaviour', 'packageroundtripper', 'middleware', 'codec', 'encode', 'request', 'decode', 'message', 'trigger', 'protocol', 'cache', 'protobuf', 'buffer', 'support', 'response', 'field', 'interface', 'field', 'definition', 'update', 'configuration', 'tovena', 'cyril']",{'buffer': 100}
"['cortexproject', 'length']",{'length': 100}
"['enhancement', 'cache', 'buffer', 'sample', 'statevernekar', 'ganesh', 'csbtech']",{'buffer': 100}
"['optimize', 'mergestreammergestream', 'optimisevernekar', 'ganesh', 'csbtechcomment', 'reviewvernekar', 'ganesh', 'csbtechrefactorvernekar', 'ganesh', 'csbtechnextbatcharr', 'nextbatchbuf', 'query', 'buffer', 'solves', 'reusingvernekar', 'ganesh', 'csbtechmergestreams', 'commentvernekar', 'ganesh', 'csbtechmergebatch', 'removevernekar', 'ganesh', 'csbtechempty', 'check']",{'buffer': 100}
"['gojekcollect', 'prometheus', 'cortex', 'permission', 'cluster', 'telegraf', 'veeramachaneni', 'goutham', 'gouthamve']",{'permission': 100}
"['ballast', 'optionalallowsoften', 'issue', 'golangbryan']",{'issue': 100}
"['number', 'batchvarious', 'issue', 'missingbryan']",{'issue': 100}
"['expose', 'manager', 'config', 'veeramachaneni', 'goutham', 'gouthamve']",{'expose': 100}
"['bfdcfa', 'mergeoverride', 'expose', 'request', 'config', 'gouthamveoverride', 'config', 'field', 'expose', 'limit']",{'expose': 100}
"['override', 'config', 'field', 'expose', 'veeramachaneni', 'goutham', 'gouthamve']",{'expose': 100}
"['mergerequest', 'cortexproject', 'generation', 'mergecontainer', 'generation', 'proto', 'single']",{'generation': 100}
"['container', 'generation', 'proto', 'singletarget', 'phony', 'generatedbunch', 'container', 'stoppingdefault', 'compilationbryan']",{'generation': 100}
"['chunk', 'expose', 'veeramachaneni', 'goutham', 'gouthamve']",{'expose': 100}
"['stack', 'trace', 'report', 'level', 'error', 'extrastackplace', 'localise', 'utilsbryan']",{'stack': 100}
"['baade', 'mergechunk', 'request', 'patform', 'parallelchunk', 'concurrent', 'maximum', 'fetch']",{'concurrent': 100}
"['chunk', 'concurrent', 'maximum', 'fetch', 'patrick', 'mcilroy']",{'concurrent': 100}
"['different', 'label', 'separatediagnose', 'issue', 'easierbryan']",{'issue': 100}
"['bigchunkchunk', 'overflow', 'anotherlimit', 'check', 'addingbryan']",{'overflow': 100}
"['readscale', 'client', 'table', 'valuedefault', 'query', 'usage', 'function', 'error', 'command', 'dynamo', 'addingwrite', 'ondemand', 'dynamo', 'support', 'addeddynamiciomode', 'generation', 'current', 'setting', 'khaines', 'haines']",{'generation': 100}
"['prometheus', 'update', 'expose', 'metric']",{'expose': 100}
"['ingester', 'labelpairs', 'metric', 'flushdefer', 'labelpairs', 'metricsince', 'sample', 'averagelabel', 'slice', 'avoidstore', 'series', 'labelpairs', 'lookupbenchmarkmetric', 'usable', 'fixture', 'extractbenchmark', 'buffer', 'valueevent']",{'buffer': 100}
"['ingester', 'labelpairs', 'metric', 'flushdefer', 'labelpairs', 'metricsince', 'sample', 'averagelabel', 'slice', 'avoidstore', 'series', 'labelpairs', 'lookupbenchmarkmetric', 'usable', 'fixture', 'extractbenchmark', 'buffer', 'value']",{'buffer': 100}
"['ebefb', 'mergerequest', 'grafana', 'exposetoken', 'ingester', 'number', 'expose']",{'expose': 100}
"['modification', 'concurrent']",{'concurrent': 100}
"['query', 'cardinality', 'indexmatcher', 'query', 'range', 'filter', 'length', 'cardinality', 'indexresult', 'small', 'query', 'series', 'label']",{'length': 100}
"['series', 'concurrent']",{'concurrent': 100}
"['admin', 'replication', 'metric', 'expose', 'factorglobal', 'switch', 'metric', 'packaga', 'usingpromauto', 'wilkiereplication', 'expose', 'factor', 'wilkiemetriccreate', 'decrement', 'increment', 'client', 'number', 'counter', 'wilkiestats', 'admin', 'replication', 'warning', 'wilkiemetric', 'register']",{'expose': 100}
"['notification', 'webhookservice', 'issue', 'weaveworks']",{'issue': 100}
"['message', 'invalid', 'protection', 'addingwrite', 'request', 'validation', 'issue', 'dynamo', 'failsrequest', 'debug', 'output', 'dynamo', 'label', 'length', 'valuelabel', 'setting', 'length', 'valuewrite', 'request', 'validation', 'issue', 'dynamo', 'failsrequest', 'debug', 'output', 'dynamo', 'label', 'function', 'ingester', 'addition', 'sense', 'value', 'validatesample', 'struct', 'referencedcheck', 'lengthdefault', 'label', 'gofmt', 'adjustment', 'minorlabel', 'label', 'length', 'label', 'function', 'ingester', 'addition', 'sense', 'value', 'validatesample', 'struct', 'referencedcheck', 'lengthdefault', 'label', 'gofmt', 'adjustment', 'minorlabel', 'import', 'addingdefault', 'ingester', 'artifact', 'comment', 'valuegofmt', 'changeerror', 'string', 'error', 'return', 'informationgitignore', 'output', 'context', 'error', 'sense', 'config', 'structure', 'length', 'valuematch', 'reference', 'function']","{'issue': 100, 'length': 100}"
"['handlerunavailable', 'status', 'internalcortex', 'issue', 'weaveworks']",{'issue': 100}
"['config', 'option', 'cosmos', 'cassandra', 'cluster', 'expose', 'azureinitial', 'lookup', 'cluster', 'internalrequest', 'support', 'authentication', 'cassandraclusterconfig', 'gocql', 'function', 'setting', 'helper']",{'expose': 100}
"['update', 'preventgroup', 'traceconfig', 'warning', 'overflow']",{'overflow': 100}
"['mergetablemanager', 'crash', 'request', 'weaveworkspointer', 'check', 'manager', 'dynamodb', 'table']",{'crash': 100}
"['prometheus', 'support', 'formatformat', 'binaryversion', 'formatstill', 'default', 'prometheustrickiness', 'ability', 'track', 'alertgroup', 'commentcortex', 'issue', 'weaveworks']",{'issue': 100}
"['ruler', 'worker', 'counterutilisation', 'issue']",{'issue': 100}
"['issue', 'gocyclo', 'revert', 'error', 'returnbazel', 'protobufs', 'buildingrequest', 'scope', 'weaveworksregex', 'scope', 'matchrequest', 'readme', 'terraform', 'weaveworks', 'provisioningterraform', 'instruction', 'sectionrequest', 'gocyclo', 'weaveworks', 'return', 'valuespawn', 'output', 'reading', 'subshell', 'cyclostretch', 'image', 'issue', 'gocyclo', 'error', 'returnspell', 'check', 'request', 'weaveworkscheckspell', 'checkspecial', 'special', 'pattern', 'usingrequest', 'verbose', 'weaveworksverbose', 'propagaterequest', 'weaveworks', 'instruction', 'shfmt', 'updateextra', 'request', 'weaveworks', 'lintingbuilt', 'shellcheck', 'scope', 'lintingshfmt', 'update', 'instructionrequest', 'weaveworks', 'pythonbuild', 'flake', 'image', 'golangrequest', 'error', 'block', 'removeerror', 'firstcheck', 'error', 'faadf', 'parallel', 'imagerequest', 'weaveworksdocker', 'request', 'weaveworks', 'updateoverride', 'dailyrequest', 'document', 'weaveworks', 'docker', 'installdockerdocker', 'detail', 'update', 'debianallow', 'package', 'docker', 'nameddocker', 'document', 'selection', 'installationporcelain', 'defaultrequest', 'remnant', 'weaveplugin', 'weaveworksweaveplugin', 'remnant', 'removerequest', 'docker', 'weaveworksbuild', 'cddfc', 'docker', 'speedrequest', 'weaveworksbuild', 'option', 'callerrequest', 'status', 'weaveworksversion', 'flakepython', 'directionflake', 'installpython', 'buildpython', 'lintingrequest', 'shebang', 'python', 'kinvolkrequest', 'version', 'weaveworks', 'shfmtstatus', 'insteadshfmt', 'latestshfmtshfmt', 'installshfmt', 'installbuild', 'pyhcl', 'installrequest', 'alban', 'shfmt', 'update', 'kinvolkshellcheck', 'issuerequest', 'alban', 'shfmt', 'update', 'kinvolkshfmt', 'styleprint', 'errorrequest', 'alban', 'shfmt', 'update', 'kinvolkshfmt', 'update', 'latestshfmt', 'update', 'latestedaaa', 'script', 'argumentrequest', 'upgrade', 'pleasedefault', 'version', 'upgrade', 'abcabbuild', 'request', 'service', 'weaveworks', 'golangbuild', 'eebdd', 'regex', 'haskell', 'imagetag', 'imagebuild', 'bafbfa', 'request', 'service', 'weaveworks', 'golangshfmt', 'scriptbuild', 'stuff', 'goland', 'service', 'imagerequest', 'haskell', 'weaveworks', 'imageshfmtbuild', 'haskell', 'circle', 'loginbuild', 'branchprefix', 'script', 'circlebuild', 'request', 'weaveworks', 'commonbuild', 'account', 'robot', 'imagefeedback', 'reviewfefbd', 'protobufreadme', 'updateimagebuild', 'weaveworks', 'golang', 'ffbfc', 'imageweave', 'version', 'update', 'dockerrequest', 'version', 'weaveworks', 'kubeadmcustom', 'example', 'privatecfbda', 'example', 'private', 'customkubernetes', 'kubeadmcentos', 'request', 'weaveworks', 'faaaafselect', 'weave', 'baseddefault', 'versionfactorise', 'option', 'kubeconfiginstallerror', 'access', 'decryptingusername', 'centosexample', 'ansiblecentos', 'docker', 'setupdocker', 'centosplaybook', 'issuedefault', 'upgradeallow', 'docker', 'installation', 'injectionkubectl', 'command', 'taintkubectl', 'single', 'taintremoveansible', 'dockerfrequentlyregistry', 'insecureshfmt', 'imageoption', 'docker', 'imagescript', 'cortex', 'imagecommand', 'kubeadmtoken', 'enable', 'release', 'aeefbserver', 'scope', 'secureserver', 'securerequest', 'rebase', 'issue', 'weaveworksavoid', 'rebase', 'artefact', 'function', 'linterpython', 'shebang', 'changerequest', 'weave', 'relative', 'kinvolkunicode', 'request', 'issue', 'scheddisable', 'integrationgcloud', 'integration', 'update', 'commandshellcheck', 'setup', 'edefcweave', 'integration', 'configbuild', 'request', 'alban', 'external', 'kinvolkprint', 'template', 'creationintegration', 'accountnameinginstance', 'deletionintegration', 'parameterunicode', 'issue', 'schedcurrent', 'usingrequest', 'warning', 'linter', 'kinvolkdocument', 'requirementlinter', 'warningrequest', 'multiple', 'playbookfastdp', 'edcbb', 'avoidutility', 'library', 'ansible', 'efadfshorthand', 'terraform', 'playbook', 'virtual', 'shorthand', 'terraformterraform', 'ansible', 'aadcf', 'mentionterraform', 'template', 'output', 'dddabfdevelopment', 'ansible', 'playbook', 'configurationweave', 'ansible', 'playbook', 'configurationefedd', 'retry', 'ignore', 'ansiblesetup', 'terraform', 'helper', 'functioncloud', 'terraform', 'provisioninghclfmt', 'installterraform', 'ignore', 'statecross', 'script', 'aaebc', 'generate', 'product', 'dependency', 'version', 'cartesianscript', 'imagedocker', 'script', 'version', 'relevantscript', 'source', 'dependency', 'absolute', 'directory', 'currentparallelise', 'optionrequest', 'mflag', 'weaveworksweaveworks', 'package', 'mflag', 'mflagextquoterequest', 'ignore', 'weaveworks', 'shfmtsupportprotobuf', 'generatedrequest', 'timeouttimeoutreduce', 'timeoutrequest', 'default']",{'issue': 100}
"['updatechange', 'squashedbazel', 'protobufs', 'buildingrequest', 'scope', 'weaveworksregex', 'scope', 'matchrequest', 'readme', 'terraform', 'weaveworks', 'provisioningterraform', 'instruction', 'sectionrequest', 'gocyclo', 'weaveworks', 'return', 'valuespawn', 'output', 'reading', 'subshell', 'cyclostretch', 'image', 'issue', 'gocyclo', 'error', 'returnspell', 'check', 'request', 'weaveworkscheckspell', 'checkspecial', 'special', 'pattern', 'usingrequest', 'verbose', 'weaveworksverbose', 'propagaterequest', 'weaveworks', 'instruction', 'shfmt', 'updateextra', 'request', 'weaveworks', 'lintingbuilt', 'shellcheck', 'scope', 'lintingshfmt', 'update', 'instructionrequest', 'weaveworks', 'pythonbuild', 'flake', 'image', 'golangrequest', 'error', 'block', 'removeerror', 'firstcheck', 'error', 'faadf', 'parallel', 'imagerequest', 'weaveworksdocker', 'request', 'weaveworks', 'updateoverride', 'dailyrequest', 'document', 'weaveworks', 'docker', 'installdockerdocker', 'detail', 'update', 'debianallow', 'package', 'docker', 'nameddocker', 'document', 'selection', 'installationporcelain', 'defaultrequest', 'remnant', 'weaveplugin', 'weaveworksweaveplugin', 'remnant', 'removerequest', 'docker', 'weaveworksbuild', 'cddfc', 'docker', 'speedrequest', 'weaveworksbuild', 'option', 'callerrequest', 'status', 'weaveworksversion', 'flakepython', 'directionflake', 'installpython', 'buildpython', 'lintingrequest', 'shebang', 'python', 'kinvolkrequest', 'version', 'weaveworks', 'shfmtstatus', 'insteadshfmt', 'latestshfmtshfmt', 'installshfmt', 'installbuild', 'pyhcl', 'installrequest', 'alban', 'shfmt', 'update', 'kinvolkshellcheck', 'issuerequest', 'alban', 'shfmt', 'update', 'kinvolkshfmt', 'styleprint', 'errorrequest', 'alban', 'shfmt', 'update', 'kinvolkshfmt', 'update', 'latestshfmt', 'update', 'latestedaaa', 'script', 'argumentrequest', 'upgrade', 'pleasedefault', 'version', 'upgrade', 'abcabbuild', 'request', 'service', 'weaveworks', 'golangbuild', 'eebdd', 'regex', 'haskell', 'imagetag', 'imagebuild', 'bafbfa', 'request', 'service', 'weaveworks', 'golangshfmt', 'scriptbuild', 'stuff', 'goland', 'service', 'imagerequest', 'haskell', 'weaveworks', 'imageshfmtbuild', 'haskell', 'circle', 'loginbuild', 'branchprefix', 'script', 'circlebuild', 'request', 'weaveworks', 'commonbuild', 'account', 'robot', 'imagefeedback', 'reviewfefbd', 'protobufreadme', 'updateimagebuild', 'weaveworks', 'golang', 'ffbfc', 'imageweave', 'version', 'update', 'dockerrequest', 'version', 'weaveworks', 'kubeadmcustom', 'example', 'privatecfbda', 'example', 'private', 'customkubernetes', 'kubeadmcentos', 'request', 'weaveworks', 'faaaafselect', 'weave', 'baseddefault', 'versionfactorise', 'option', 'kubeconfiginstallerror', 'access', 'decryptingusername', 'centosexample', 'ansiblecentos', 'docker', 'setupdocker', 'centosplaybook', 'issuedefault', 'upgradeallow', 'docker', 'installation', 'injectionkubectl', 'command', 'taintkubectl', 'single', 'taintremoveansible', 'dockerfrequentlyregistry', 'insecureshfmt', 'imageoption', 'docker', 'imagescript', 'cortex', 'imagecommand', 'kubeadmtoken', 'enable', 'release', 'aeefbserver', 'scope', 'secureserver', 'securerequest', 'rebase', 'issue', 'weaveworksavoid', 'rebase', 'artefact', 'function', 'linterpython', 'shebang', 'changerequest', 'weave', 'relative', 'kinvolkunicode', 'request', 'issue', 'scheddisable', 'integrationgcloud', 'integration', 'update', 'commandshellcheck', 'setup', 'edefcweave', 'integration', 'configbuild', 'request', 'alban', 'external', 'kinvolkprint', 'template', 'creationintegration', 'accountnameinginstance', 'deletionintegration', 'parameterunicode', 'issue', 'schedcurrent', 'usingrequest', 'warning', 'linter', 'kinvolkdocument', 'requirementlinter', 'warningrequest', 'multiple', 'playbookfastdp', 'edcbb', 'avoidutility', 'library', 'ansible', 'efadfshorthand', 'terraform', 'playbook', 'virtual', 'shorthand', 'terraformterraform', 'ansible', 'aadcf', 'mentionterraform', 'template', 'output', 'dddabfdevelopment', 'ansible', 'playbook', 'configurationweave', 'ansible', 'playbook', 'configurationefedd', 'retry', 'ignore', 'ansiblesetup', 'terraform', 'helper', 'functioncloud', 'terraform', 'provisioninghclfmt', 'installterraform', 'ignore', 'statecross', 'script', 'aaebc', 'generate', 'product', 'dependency', 'version', 'cartesianscript', 'imagedocker', 'script', 'version', 'relevantscript', 'source', 'dependency', 'absolute', 'directory', 'currentparallelise', 'optionrequest', 'mflag', 'weaveworksweaveworks', 'package', 'mflag', 'mflagextquoterequest', 'ignore', 'weaveworks', 'shfmtsupportprotobuf', 'generatedrequest', 'timeouttimeoutreduce', 'timeoutrequest', 'default', 'literal', 'composite', 'fieldchange', 'issue', 'gocyclo', 'revert', 'error', 'returnsubtreesubtree']",{'issue': 100}
"['validation', 'label', 'metric', 'routinemutex', 'regexps', 'usingmultiple', 'regexp', 'thread']",{'thread': 100}
"['snappy', 'performance', 'allowsreduces', 'garbage', 'buffer']",{'buffer': 100}
"['message', 'expose', 'prometheusfollowedsirupsen', 'promrus', 'logrus', 'legacy', 'metric', 'version', 'message', 'conflict', 'expose', 'insteadprune', 'promrus', 'ensure', 'legacy', 'weaveworksstatus', 'checkout', 'xargsprometheus', 'cortex', 'ability', 'vendor']",{'expose': 100}
"['function', 'ingester', 'extract', 'healthy', 'decidefunction', 'ingester', 'extract', 'healthy', 'decideinterface', 'package', 'readringinterface', 'expose', 'ishealthy', 'readringinstead', 'distributor']",{'expose': 100}
"['error', 'dynamodb', 'expose', 'information']",{'expose': 100}
"['chunk', 'batch', 'fetch', 'bigtableinstrumentation', 'error', 'catch', 'streammemcache', 'register', 'writeschunk', 'stack', 'instrument', 'fetch', 'error', 'bigtable', 'batch']",{'stack': 100}
"['squashedrequest', 'error', 'block', 'removeerror', 'firstcheck', 'error', 'faadf', 'parallel', 'imagerequest', 'weaveworksdocker', 'request', 'weaveworks', 'updateoverride', 'dailyrequest', 'document', 'weaveworks', 'docker', 'installdockerdocker', 'detail', 'update', 'debianallow', 'package', 'docker', 'nameddocker', 'document', 'selection', 'installationporcelain', 'defaultrequest', 'remnant', 'weaveplugin', 'weaveworksweaveplugin', 'remnant', 'removerequest', 'docker', 'weaveworksbuild', 'cddfc', 'docker', 'speedrequest', 'weaveworksbuild', 'option', 'callerrequest', 'status', 'weaveworksversion', 'flakepython', 'directionflake', 'installpython', 'buildpython', 'lintingrequest', 'shebang', 'python', 'kinvolkrequest', 'version', 'weaveworks', 'shfmtstatus', 'cedcd', 'insteadshfmt', 'latestshfmtshfmt', 'installshfmt', 'installbuild', 'pyhcl', 'installrequest', 'alban', 'shfmt', 'update', 'kinvolkshellcheck', 'issuerequest', 'alban', 'shfmt', 'update', 'kinvolkshfmt', 'styleprint', 'errorrequest', 'alban', 'shfmt', 'update', 'kinvolkshfmt', 'update', 'beadedd', 'latestshfmt', 'update', 'latestedaaa', 'script', 'argumentrequest', 'upgrade', 'dcddfdefault', 'version', 'upgrade', 'abcabbuild', 'request', 'service', 'weaveworks', 'golangbuild', 'eebdde', 'regex', 'haskell', 'imagetag', 'imagebuild', 'bafbfa', 'request', 'service', 'weaveworks', 'golangshfmt', 'scriptbuild', 'stuff', 'goland', 'service', 'imagerequest', 'haskell', 'weaveworks', 'imageshfmtbuild', 'haskell', 'circle', 'loginbuild', 'branchprefix', 'script', 'circlebuild', 'request', 'weaveworks', 'commonbuild', 'account', 'robot', 'imagefeedback', 'reviewfefbdd', 'protobufreadme', 'updateimagebuild', 'weaveworks', 'golang', 'ffbfcb', 'imageweave', 'version', 'update', 'dockerrequest', 'version', 'weaveworks', 'kubeadmcustom', 'example', 'privatecustom', 'example', 'private', 'cfbdafkubernetes', 'kubeadmcentos', 'request', 'weaveworks', 'faaaafselect', 'weave', 'baseddefault', 'versionfactorise', 'option', 'kubeconfiginstallerror', 'access', 'decryptingusername', 'centosexample', 'ansible', 'eafdecentos', 'docker', 'setupdocker', 'centosplaybook', 'issuedefault', 'upgradeallow', 'docker', 'installation', 'injectionkubectl', 'command', 'taintkubectl', 'single', 'taintremoveansible', 'dockerfrequentlyregistry', 'insecureshfmt', 'imageoption', 'docker', 'imagescript', 'cortex', 'imagecommand', 'kubeadmtoken', 'enable', 'release', 'aeefbserver', 'scope', 'secureserver', 'securerequest', 'rebase', 'issue', 'weaveworksavoid', 'rebase', 'artefact', 'function', 'linterpython', 'shebang', 'changerequest', 'weave', 'relative', 'kinvolkunicode', 'request', 'issue', 'scheddisable', 'integrationgcloud', 'integration', 'update', 'commandshellcheck', 'setup', 'edefcweave', 'integration', 'configbuild', 'request', 'alban', 'external', 'kinvolkprint', 'template', 'creationintegration', 'accountnameinginstance', 'deletionintegration', 'ecdcc', 'parameterunicode', 'issue', 'schedcurrent', 'usingrequest', 'warning', 'linter', 'kinvolkdocument', 'requirementlinter', 'warningrequest', 'multiple', 'playbookfastdp', 'edcbbautility', 'library', 'ansible', 'efadfcshorthand', 'terraform', 'playbook', 'virtual', 'shorthand', 'terraformterraform', 'ansible', 'aadcf', 'mentionterraform', 'template', 'output', 'dddabfedevelopment', 'ansible', 'playbook', 'configurationweave', 'ansible', 'playbook', 'configurationefedd', 'retry', 'ignore', 'ansiblesetup', 'terraform', 'helper', 'functioncloud', 'terraform', 'provisioninghclfmt', 'installterraform', 'ignore', 'statecross', 'script', 'aaebcd', 'generate', 'product', 'dependency', 'version', 'cartesianscript', 'imagedocker', 'script', 'version', 'relevantscript', 'source', 'dependency', 'absolute', 'directory', 'currentparallelise', 'optionrequest', 'mflag', 'weaveworksweaveworks', 'package', 'mflag', 'mflagextquoterequest', 'ignore', 'weaveworks', 'shfmtsupportprotobuf', 'generatedrequest', 'timeouttimeoutreduce', 'timeoutdefault', 'request', 'weaveworks', 'facbasubtreesubtree']",{'issue': 100}
"['shfmt', 'insteadmentionedbuild', 'weaveworks', 'issuecommentraisedmvdan', 'issuebuild', 'shfmt', 'failure', 'behavenetgo', 'bindata', 'fzipp', 'protoc', 'mjibson', 'shfmt', 'misspell', 'jteeuwen', 'protobuf', 'mvdan', 'client', 'gocyclo', 'gogoproto', 'golang', 'gogoslick', 'errcheck', 'golint', 'kisielkrunningshfmt', 'undefined', 'mvdan', 'syntaxshfmt', 'undefined', 'mvdan', 'syntaxshfmt', 'undefined', 'mvdan', 'syntaxshfmt', 'undefined', 'mvdan', 'syntaxshfmt', 'undefined', 'mvdan', 'syntaxshfmt', 'undefined', 'mvdan', 'syntaxprotoc', 'golint', 'fzipp', 'kisielk', 'jteeuwen', 'golang', 'command', 'mjibson', 'client', 'bindata', 'shfmt', 'netgo', 'misspell', 'protobuf', 'gocyclo', 'gogoproto', 'gogoslick', 'errcheck', 'mvdanbuild', 'error', 'imagearound', 'deterministic', 'issue', 'buildingshfmt', 'mvdan']",{'issue': 100}
"['detect', 'duplicate', 'order', 'samplewould', 'totallyreceiver', 'transferproblem', 'series', 'startupprometheus', 'issueminormisreport', 'timestamp', 'duplicate', 'sample', 'valueerror', 'duplicate', 'efficient', 'issue', 'series', 'value', 'sampleremovedifferent', 'totallycortex', 'issue', 'weaveworks']",{'issue': 100}
"['remote', 'prometheus', 'supportremote', 'prometheus', 'supportremote', 'prometheus', 'cortex', 'genericprometheuscortex', 'issue', 'weaveworkspackagefeedback', 'review', 'cleanup']",{'issue': 100}
"['cardinalitycortex', 'issue', 'weaveworks']",{'issue': 100}
"['trace', 'issue', 'correctness', 'querypointer', 'chunk', 'thinkchunk', 'cachegofmtshfmt', 'imagechunk', 'check', 'memcache', 'includewrite', 'chunk', 'corruptvalidation', 'checksumcommentfeedback', 'review']",{'issue': 100}
"['chunk', 'label', 'timestamp', 'range', 'enable', 'schema', 'valuechunk', 'label', 'timestamp', 'range', 'enable', 'schema', 'valuebuild', 'speedfeedback', 'reviewlabel', 'length', 'value', 'limitschema', 'label', 'value']",{'length': 100}
"['multitenant', 'service', 'alertmanagercortex', 'issue', 'weaveworkspipeline', 'alertmanager', 'layerdifferent', 'multiplex', 'cortexconfig', 'alertmanager', 'createlocalhost', 'configs', 'nreceivers', 'hostname', 'route', 'cortex', 'globoff', 'orgid', 'scope', 'receiver', 'xpost', 'configs', 'alertmanager', 'reachable', 'outsidealertmanager', 'multipledifferent', 'gossip']",{'issue': 100}
"['initialization', 'order', 'startupglobal', 'tracer', 'clearer', 'accidentallycortex', 'issue', 'weaveworks']",{'issue': 100}
"['package', 'prometheus', 'updatecortex', 'issue', 'weaveworks']",{'issue': 100}
"['series', 'metric', 'limitseries', 'metric', 'limitcortex', 'issue', 'series', 'metric', 'error', 'exceededseries', 'metric', 'userstatefeeback', 'review']",{'issue': 100}
"['schemaschemadefine', 'range', 'interface', 'schemainterface', 'different', 'schema', 'implementationdelegate', 'various', 'schemastore', 'chunk', 'query', 'intersect', 'invert', 'order', 'updatelabel', 'distribution', 'query', 'removebunch', 'testinggenerator', 'scheme', 'composite', 'rangestore', 'chunkresult', 'check', 'label', 'issue', 'thats', 'manual', 'coupleempty', 'dynamodbstart', 'schema']",{'issue': 100}
"['basedprocess', 'limit', 'distributor', 'total', 'knowledgecross', 'distributorcortex', 'issue', 'weaveworks']",{'issue': 100}
"['concurrency', 'review', 'distributor']",{'concurren': 90}
"['clean', 'connection', 'ingester', 'stalecortex', 'issue', 'weaveworks']",{'issue': 100}
"['queue', 'state', 'extractobject', 'goroutine', 'additem', 'advantage', 'concurrency', 'logic']",{'concurren': 90}
"['length', 'scheduling']",{'length': 100}
"['flush', 'concurrent', 'increase']",{'concurrent': 100}
"['reproduction', 'issue']",{'issue': 100}
"['promql', 'expression', 'endpoint', 'distributorobject', 'returnvalid', 'falsecortex', 'issue', 'weaveworks']",{'issue': 100}
"['calculation', 'safer', 'incorrect']",{'incorrect': 100}
"['calculation', 'safer', 'incorrect']",{'incorrect': 100}
"['comms', 'distributor', 'ingesterbuild', 'generatedduplicate', 'importservice', 'expose', 'distributor', 'ingestermigrate', 'ingester', 'package', 'server', 'distributoralong', 'server', 'ingesteringester', 'client', 'plumb', 'optionallyingester', 'distributor', 'propagateinstrumentation', 'middleware', 'package']",{'expose': 100}
"['squashedshellcheckmessage', 'error', 'capitaliserequest', 'weaveworks', 'shfmtvendorshfmt', 'specific', 'version', 'vendorrequest', 'token', 'revert', 'token', 'support', 'experimentalrequest', 'weaveworks', 'shfmtshfmt', 'errorsucceeds', 'shellcheck', 'overrightrequest', 'compliant', 'integration', 'config', 'shellcheckshellcheck', 'error', 'space', 'spuriousrequest', 'weaveworks', 'shfmtallowshfmt', 'shellshfmt', 'gopath', 'permission', 'circlerequest', 'exists', 'checkconfig', 'wcloudserivice', 'wcloudfixingsupport', 'token', 'experimentalsubtreesubtree']",{'permission': 100}
"['default', 'account', 'permission', 'collection', 'distributor', 'limit']",{'permission': 100}
"['mergeflushers', 'concurrent', 'request', 'weaveworks', 'parameteriseparameterise', 'flushers', 'concurrent', 'number']",{'concurrent': 100}
"['flushers', 'concurrent', 'number', 'parameterise']",{'concurrent': 100}
"['ccfdd', 'bbcaa', 'mergerequest', 'flush', 'metric', 'weaveworks', 'queue', 'lengthflush', 'metric', 'length', 'queue']",{'length': 100}
"['flush', 'metric', 'length', 'queue']",{'length': 100}
"['mergerequest', 'state', 'weaveworksdifferent', 'expose', 'metric', 'state']",{'expose': 100}
"['different', 'expose', 'metric', 'state']",{'expose': 100}
"['custom', 'expose', 'metric']",{'expose': 100}
"['mergechunk', 'request', 'weaveworks', 'exposechunk', 'memory', 'metric', 'exposure']",{'Exposure': 100}
"['chunk', 'memory', 'metric', 'exposure']",{'Exposure': 100}
"['token', 'alreadyresult', 'crash', 'situation', 'double', 'number', 'intendedfrankenstein', 'issue', 'weaveworks']","{'crash': 100, 'issue': 100}"
"['batch', 'dynamodb', 'limitchunk', 'ingestor', 'writeserrormember', 'length', 'equalmaximum', 'dynamodb', 'research', 'batchbatchdeveloperguide', 'amazondynamodb']",{'length': 100}
