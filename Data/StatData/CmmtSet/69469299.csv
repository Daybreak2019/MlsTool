message,fuzzy
"['security', 'update', 'striptags', 'dependencyrenovate']",{'Security': 100}
"['coroutines', 'kotlincoroutines', 'kotlinkotlincompile', 'generation', 'antlrplugin', 'update', 'metalavaupdate', 'update', 'metalavawould', 'differ', 'signature']",{'generation': 100}
"['issue', 'channel', 'capacity']",{'issue': 100}
"['update', 'writeapollo', 'issue', 'tutorial', 'android', 'apollographql']",{'issue': 100}
"['publish', 'signaturebintray', 'sonatypeworkingissuecomment', 'issue', 'gradle']",{'issue': 100}
"['gradle', 'improvement', 'cache', 'plugin', 'configurationconfiguraiton', 'expose', 'filelistconfiguration', 'usage']",{'expose': 100}
"['missingapollo', 'issue', 'issuecomment', 'android', 'apollographqlmetalava']",{'issue': 100}
"['thread', 'dispatcher', 'storedispatcher', 'writeensure', 'orderinglocationensure', 'revert', 'orderingcommit', 'revertsconfigurable', 'normalization', 'asynchcleanupcheckstyleupdateschwab', 'martin', 'bonnin']",{'thread': 100}
"['apollo', 'schema', 'plugin', 'support', 'enableapollo', 'schema', 'plugin', 'support', 'enableschema', 'parser', 'resolveresolution', 'schema', 'implicit', 'support', 'updatebuilt', 'schema', 'introspection', 'scalar', 'queryapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['support', 'empty', 'graphqlapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['dependency', 'runtime', 'support', 'coroutines', 'expose']",{'expose': 100}
"['refactor', 'structure', 'package', 'graphql', 'parserparser', 'refactor', 'structure', 'packageparser', 'operation', 'package', 'graphqlschema', 'parser', 'introspection', 'graphqlparser', 'graphqlerror', 'operation', 'graphql', 'parserapollo', 'android', 'apollographql', 'issue']",{'issue': 100}
"['schema', 'introspectionschema', 'codegen', 'introspectionissue', 'missedapollo', 'android', 'apollographql', 'issue']",{'issue': 100}
"['schema', 'support', 'grammar', 'antlrparser', 'antlr', 'schema', 'graphql', 'support', 'grammarapollo', 'android', 'apollographql', 'issue']",{'issue': 100}
"['okhttp', 'dependency', 'runtime', 'kotlin', 'coroutinesdependency', 'coroutines', 'kotlin', 'runtimeconsumer', 'expose', 'coroutinesconstructor']",{'expose': 100}
"['inline', 'directive', 'condition', 'fragmentfield', 'inline', 'directive', 'fragmentapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['level', 'issue', 'fragment', 'queryapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['check', 'object', 'selectionfield', 'interface', 'selection', 'object', 'union', 'validaterecursive', 'fixture', 'structureapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['kotlin', 'runtimeconvert', 'kotlinoptional', 'buffer', 'parameterfield', 'optionalfield']",{'buffer': 100}
"['initial', 'kotlin', 'structure', 'runtimeexecution', 'introduce', 'context', 'graphqlokhttp', 'access', 'response', 'container', 'customizeapollo', 'issue', 'android', 'apollographql', 'closefeedbackinitial', 'kotlin', 'structure', 'runtimeapollo', 'module', 'structure', 'runtime', 'introduce', 'initial', 'kotlinfacade', 'interface', 'apolloclient', 'similarseveral', 'request', 'execution', 'graphql', 'requestexecutor', 'networkexecutor', 'layer', 'short', 'circuit', 'operation', 'responsible', 'pipeline', 'terminal', 'executor', 'business', 'logic', 'final', 'network', 'chain', 'queryapollo', 'implementation', 'websocket', 'abstraction', 'provideprovides', 'coroutine', 'configurationapollo', 'android', 'apollographql', 'issuesample', 'update', 'network', 'layerfeedback', 'addressactive', 'response', 'graphqlissue', 'okhttp', 'awaitclose', 'parse', 'producer', 'request', 'callbackflow', 'response', 'address', 'closereplace', 'callbackflow', 'regularandroid', 'samplerename', 'networkexecutor']",{'issue': 100}
"['document', 'issue', 'parse', 'graphqldocument', 'issue', 'parse', 'graphqlapollo', 'issue', 'android', 'apollographql', 'closeapollo', 'compiler', 'parser', 'update', 'kotlin', 'martin', 'bonnin']",{'issue': 100}
"['execution', 'introduce', 'context', 'graphqlexecution', 'introduce', 'context', 'graphqlokhttp', 'access', 'response', 'container', 'customizeapollo', 'issue', 'android', 'apollographql', 'closefeedbackfeedback']",{'issue': 100}
"['metaspace', 'processlatest', 'gradle', 'memoryapollo', 'issue', 'android', 'apollographqldaemon', 'metaspace']",{'issue': 100}
"['cache', 'issue', 'cachekey', 'updatedcache', 'issue', 'cachekey', 'updatedapollo', 'issue', 'android', 'apollographql', 'closeargument']",{'issue': 100}
"['optional', 'accessor', 'synthetic', 'generate', 'propertyissue', 'mitigate', 'filternotnull', 'accessor', 'interop', 'synthetic', 'swift', 'generation']",{'generation': 100}
"['issue', 'multiplatform', 'kotlin', 'setupissue', 'multiplatform', 'kotlin', 'setupsince']",{'issue': 100}
"['plugin', 'publishupload', 'security', 'plugin', 'reason']",{'Security': 100}
"['issue', 'compat', 'targetbigdecimal', 'equal', 'number', 'hashcodeconvert', 'kotlincommontest', 'possibleissue', 'native', 'crash', 'kotlin', 'careful', 'sincereview', 'addressclean']","{'issue': 100, 'crash': 100}"
"['issue', 'dependency']",{'issue': 100}
"['encode', 'payload', 'request', 'generate', 'graphqlencode', 'payload', 'request', 'generate', 'graphqlapollo', 'issue', 'android', 'apollographql', 'closeinterface', 'default', 'value', 'removefeedback', 'sampleissue', 'encode', 'condition', 'document', 'update', 'queryfixture']",{'issue': 100}
"['issue', 'query', 'kotlin', 'kotlinapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['model', 'generate', 'function', 'kotlin', 'mapperinterface', 'behaves', 'generate', 'constructor', 'mapperapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['field', 'issue', 'fragment', 'conditionfield', 'issue', 'fragment', 'conditionfield', 'parent', 'condition', 'response', 'fragmentapollo', 'issue', 'android', 'apollographql', 'closefeedback']",{'issue': 100}
"['issue', 'idlingresources', 'watcherissue', 'idlingresourceswatcher', 'proper', 'idlingresourcecontributes', 'aoedlund', 'dlund', 'anders']",{'issue': 100}
"['httpcacheapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['generation', 'folder', 'class', 'duplicatereplace', 'functionsourcesets', 'modify', 'source', 'plugin', 'revert', 'adjustaccount', 'sourcefolder']",{'generation': 100}
"['watcher', 'event', 'status', 'querysamplewrapper', 'issue', 'callback', 'properlyverify', 'watcher', 'event', 'status']",{'issue': 100}
"['expose', 'publishingdocumentation', 'coroutineexpose', 'publishingupload', 'checksum', 'bintray', 'sonatype', 'confuses']",{'expose': 100}
"['fragment', 'conditionissue', 'fragment', 'conditionapollo', 'issue', 'android', 'apollographql', 'closefeedback']",{'issue': 100}
"['validation', 'input', 'objectissue', 'validation', 'input', 'proper', 'inputapollo', 'issue', 'android', 'apollographql', 'closeupdate', 'gitignore']",{'issue': 100}
"['issue', 'rxjava']",{'issue': 100}
"['redundant', 'generation', 'reflection', 'moshi']",{'generation': 100}
"['compilationapollo', 'debug', 'issue', 'simple', 'kotlin']",{'issue': 100}
"['graphql', 'symbol', 'ignoreapollo', 'issue', 'android', 'apollographql', 'closeissue', 'quote', 'string', 'object', 'losesissue', 'quote', 'string', 'object', 'losesserialization', 'array', 'proper', 'object', 'plain', 'insteadorder', 'appearsversionapollo', 'issue', 'android', 'apollographql', 'closeversion', 'revertapollo', 'update', 'response', 'tahsin', 'tasomaniacissue', 'lowercaseapollo', 'issue', 'android', 'apollographql', 'closeversion', 'snapshot', 'changereleasesnapshot', 'versionsavytskyi']",{'issue': 100}
"['issue', 'catch', 'kotlin']",{'issue': 100}
"['apollo', 'compiler', 'dependencyapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['retryable', 'extensionretryable', 'extensionapollo', 'issue', 'android', 'apollographql', 'closeissue', 'apollocall', 'chanel', 'kdocsapollo', 'android', 'apollographql', 'issuedeprecate', 'tochannel']",{'issue': 100}
"['field', 'issue', 'regression', 'index', 'fragment', 'queryarray', 'contains', 'generation', 'graphql', 'support', 'responsefield', 'issue', 'reference', 'response', 'surrogate', 'field', 'inline', 'index', 'reverts', 'fragment', 'queryapollo', 'issue', 'android', 'apollographql']","{'issue': 100, 'generation': 100}"
"['collision', 'objectapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['field', 'clashavoid', 'field', 'clashissue', 'argument', 'queryfield', 'potential', 'argument', 'listitemwriter', 'value', 'writer', 'clash', 'lambdaapollo', 'issue', 'android', 'apollographql', 'closeupdate', 'fixturerework']",{'issue': 100}
"['constant', 'customtype', 'generate', 'orderedconstant', 'customtype', 'generate', 'orderedapollo', 'issue', 'android', 'apollographql', 'closereview', 'suggestion', 'tahsin', 'tasomaniac']",{'issue': 100}
"['field', 'optional', 'inline', 'fragmentbecame', 'irrelevant', 'condition', 'particular', 'rightapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['confident', 'introduce', 'separate', 'subscription', 'persistence', 'enable', 'querymessage', 'protocol', 'persistence', 'support', 'updatemessage', 'negotiation', 'protocol', 'error', 'resend', 'documentapollo', 'issue', 'android', 'apollographql', 'closefeedback']",{'issue': 100}
"['field', 'value', 'generate', 'defaultapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['implementation', 'generate', 'tojsonimplementation', 'generate', 'tojsontojson', 'introduce', 'response', 'serialize', 'easierapollo', 'issue', 'android', 'apollographql', 'update', 'fixture', 'revertcommit', 'reverts', 'baecdinstead', 'introduce', 'revert']",{'issue': 100}
"['support', 'directive', 'fragment', 'inlinesupport', 'directive', 'fragment', 'inlineissue', 'inline', 'directive', 'address', 'fragmentregular', 'inline', 'simplify', 'generation', 'fragmentserialization', 'issue', 'responsewriter', 'address', 'fragmentapollo', 'issue', 'android', 'apollographql', 'closeissue', 'genericcodegen', 'fragmentfragmentserialization', 'deserialization', 'fragmentupdate', 'gitignorefeedback', 'address']","{'generation': 100, 'issue': 100}"
"['address', 'value', 'ignoreapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['operation', 'writer', 'issuebegin', 'object', 'arrayapollo', 'android', 'apollographql', 'issue']",{'issue': 100}
"['issue', 'gradle', 'compat', 'plugins']",{'issue': 100}
"['issue', 'sidebaressential']",{'issue': 100}
"['singularize', 'irregular', 'class', 'capitalizeapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['variable', 'default', 'value', 'generateoptional', 'variable', 'default', 'operation', 'value', 'generate', 'graphqlapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['issue', 'javadoc']",{'issue': 100}
"['okhttp', 'callback', 'custom', 'addressapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['graphqlcontain', 'format', 'entry', 'response', 'master', 'graphql', 'section', 'accordingapollo', 'issue', 'android', 'apollographql', 'closedisable', 'revert', 'japicmp']",{'issue': 100}
"['internal', 'modifier', 'generate', 'configuration', 'kotlinapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['cache', 'support', 'subscriptioncache', 'support', 'policy', 'subscription', 'enablecache', 'network', 'cache', 'fetch', 'networkapollo', 'issue', 'android', 'apollographql', 'closecheckstyle']",{'issue': 100}
"['template', 'issue', 'update']",{'issue': 100}
"['template', 'issue', 'update']",{'issue': 100}
"['implementation', 'accessors', 'kotlinaccessors', 'expose', 'implementation']",{'expose': 100}
"['restriction', 'uniqueness', 'registration', 'subscriptionrestriction', 'uniqueness', 'registration', 'subscriptionalready', 'argument', 'subscription', 'checkingsynchronization', 'addressapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['graphql', 'ignore', 'token', 'commaapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['document', 'query', 'minify', 'graphqldocument', 'query', 'minify', 'graphqlapollo', 'issue', 'android', 'apollographql', 'closedisable', 'pluginfixture']",{'issue': 100}
"['state', 'listener', 'subscriptionstate', 'listener', 'subscriptionapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['provider', 'params', 'connection', 'subscription', 'injectprovider', 'params', 'connection', 'subscription', 'injectapollo', 'issue', 'android', 'apollographql', 'closecheckstyle', 'update']",{'issue': 100}
"['guard', 'manager', 'transition', 'subscription', 'stateguard', 'transitionguard', 'transitionapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['fragment', 'inlineapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['adapter', 'default', 'scalar', 'object', 'customapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['field', 'issue', 'class', 'surrogate', 'fragment', 'mapperapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['objectapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['field', 'default', 'input', 'generatedfield', 'default', 'input', 'generatedapollo', 'issue', 'android', 'apollographql', 'closecheckoptional', 'absent', 'value']",{'issue': 100}
"['deadlock', 'execution', 'possiblesynchronization', 'global', 'structure', 'relax', 'previousapollo', 'issue', 'android', 'apollographql']","{'deadlock': 100, 'issue': 100}"
"['argument', 'empty', 'object', 'input', 'parserargument', 'empty', 'object', 'input', 'parserapollo', 'issue', 'android', 'apollographql', 'closerework']",{'issue': 100}
"['issue', 'fragment', 'nestedapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['field', 'empty', 'codegen', 'default', 'value', 'inputapollo', 'android', 'apollographql', 'issue']",{'issue': 100}
"['issue', 'overflow', 'circle', 'input', 'stackapollo', 'issue', 'android', 'apollographql']","{'issue': 100, 'overflow': 100}"
"['report', 'fragment', 'spreadparse', 'error', 'field', 'mergeapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['support', 'query', 'introspectionapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['issue', 'enumtype', 'generation', 'kotlin', 'wrappingapollo', 'android', 'apollographql', 'issue']","{'issue': 100, 'generation': 100}"
"['duplicatedapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['check', 'fragment', 'function', 'possibleannotation', 'nullable', 'possibleapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['screen', 'detail', 'exception', 'pointer', 'detail', 'sample', 'linterstatement', 'default', 'sample', 'linter', 'apollographql', 'issue', 'switch', 'error', 'reference', 'response', 'property', 'apollo', 'object', 'android', 'containedscreen', 'large', 'method', 'extrapolate', 'entry', 'detail', 'repository', 'interface', 'property']",{'issue': 100}
"['issue', 'inline', 'level', 'specification', 'fragmentapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['issue', 'argument', 'variable', 'array', 'referenceapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['issue', 'definition', 'fragment', 'queryapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['transitive', 'input', 'generatedapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['fragment', 'issue', 'nestedfragment', 'issue', 'nestedapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['issue', 'validation', 'variable', 'fragmentissue', 'validation', 'variable', 'fragmentallow', 'variable', 'reference', 'fragmentvalidate', 'variable', 'graphql']",{'issue': 100}
"['issue', 'backward', 'compatibilityarray', 'definition', 'relax', 'mandatory', 'commasupport', 'commentapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['conditional', 'inlinefield', 'conditional', 'inlinefield', 'issue', 'merges', 'backward', 'inline', 'compatibility', 'condition']",{'issue': 100}
"['issue', 'package', 'enable', 'output']",{'issue': 100}
"['httpcallapollo', 'issue', 'android', 'apollographql', 'closecheckstyle']",{'issue': 100}
"['request', 'contentapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['issue', 'optional', 'kotlin', 'generationapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['class', 'model', 'generate', 'input', 'kotlinapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['warning', 'annotation', 'unchecked', 'marshaller', 'generate', 'suppressapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['optional', 'generation', 'possible', 'verification', 'fragmentavoid', 'optional', 'generation', 'possible', 'verification', 'fragmentapollo', 'issue', 'android', 'apollographql', 'closefixture']","{'generation': 100, 'issue': 100}"
"['support', 'exclude', 'graphqlsupport', 'exclude', 'graphqlapollo', 'issue', 'android', 'apollographql', 'closekotlin', 'sample']",{'issue': 100}
"['issue', 'model', 'generation', 'kotlin', 'nullableapollo', 'issue', 'android', 'apollographql']","{'issue': 100, 'generation': 100}"
"['persistence', 'section', 'queryapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['error', 'propagate', 'networkerror', 'propagate', 'networkapollo', 'issue', 'android', 'apollographql', 'closeenable', 'integration']",{'issue': 100}
"['support', 'extensionsupport', 'extensionapollo', 'issue', 'android', 'apollographql', 'closeenable', 'integration']",{'issue': 100}
"['okhttp', 'dependencyapollo', 'android', 'apollographql', 'issue']",{'issue': 100}
"['scalar', 'object', 'custom', 'insteadapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['input', 'generationapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['issue', 'model', 'wrong', 'operation', 'kotlinapollo', 'android', 'apollographql', 'issue']",{'issue': 100}
"['optional', 'argument', 'wrapdata', 'model', 'operation', 'kotlinapollo', 'android', 'apollographql', 'issue']",{'issue': 100}
"['model', 'safevalueof', 'generation', 'kotlin', 'wrappingapollo', 'issue', 'android', 'apollographql']","{'generation': 100, 'issue': 100}"
"['apollo', 'issue', 'error', 'local', 'codegenapollo', 'android', 'apollographql', 'issue']",{'issue': 100}
"['queryapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['plain', 'dependencyissue', 'annotation', 'comment', 'dependency', 'plainapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['version', 'issue', 'update', 'gradleversion', 'issue', 'update', 'gradle']",{'issue': 100}
"['support', 'generation', 'kotlin', 'modelfirst', 'implementation', 'kotlinbuildreworkconfiguration', 'plugincheckstylerefactorrefactorupdate', 'fixturefragment', 'rework', 'inlinesmall', 'inline']",{'generation': 100}
"['header', 'supportrequest', 'structure', 'requestheaders', 'request', 'support', 'interceptor', 'concept', 'similarissue', 'local', 'integration', 'systemapollo', 'issue', 'address', 'android', 'apollographqlmutationerror', 'compilation']",{'issue': 100}
"['sample', 'addition', 'marknjunge', 'kotlin', 'coroutineskotlin', 'samplechange', 'requestedunnecessary', 'runonuithread', 'removeinitialize', 'apolloclientimprove', 'readabilitydetail', 'issue', 'repositorycommit', 'token', 'temptedexample', 'coroutinesbelongstravis', 'unbreakcancel', 'ondestroy']",{'issue': 100}
"['dependencycontains', 'update', 'followingupdate', 'reference', 'packagegatsbyjs', 'gatsby', 'source', 'dependencyapollo', 'theme', 'gatsby', 'dependencypushpin', 'preset', 'config', 'upgrade', 'insteadrenovate', 'disabledbegin', 'title', 'rebase', 'recycle', 'modify', 'issue', 'ghost', 'config', 'renovatebot', 'immortalrenovate', 'retry', 'rebase', 'checkapollo', 'marketplace', 'dashboard', 'repository', 'renovate', 'android', 'apollographql']",{'issue': 100}
"['listener', 'subscription', 'notifyconnection', 'listener', 'subscription', 'notifyserver', 'active', 'notifyseveral', 'server', 'reboot', 'callback', 'wheneverapollo', 'issue', 'android', 'apollographql', 'closecheckstyle']",{'issue': 100}
"['issue', 'operation', 'queryapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['nullable', 'fragmentapollo', 'android', 'apollographql', 'rollback', 'forgotapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['operation', 'document', 'queryissue', 'operation', 'document', 'querygeneration', 'removeupdate', 'value', 'generationapollo', 'issue', 'android', 'apollographql', 'closebuild']",{'issue': 100}
"['graphql', 'class', 'capitalizeapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['schema', 'defines', 'clash', 'operation', 'object', 'graphqlapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['issue', 'warning', 'access', 'property', 'rightapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['sourcetaskothers', 'interestedissuecomment', 'issue', 'gradle']",{'issue': 100}
"['apollo', 'warning', 'configuration', 'addressapollo', 'android', 'apollographql', 'issue']",{'issue': 100}
"['incorrect', 'javadoc', 'rxapollo']",{'incorrect': 100}
"['issue', 'argument', 'annotation', 'operation', 'constructor', 'notnullissue', 'argument', 'annotation', 'operation', 'constructor', 'notnullapollo', 'android', 'apollographql', 'issueversion', 'downgrade', 'javapoet', 'dependency']",{'issue': 100}
"['issue', 'generationmodifier', 'metafields', 'transientapollo', 'issue', 'android', 'apollographql', 'closeissue', 'generationapollo', 'issue', 'android', 'apollographql', 'closefixture']",{'issue': 100}
"['incorrect', 'modify', 'codegen']",{'incorrect': 100}
"['metafields', 'transientapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['issue', 'plugin']",{'issue': 100}
"['issue', 'instant']",{'issue': 100}
"['issue', 'class', 'singularize', 'formattedapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['handlerequest', 'cache', 'header', 'responseapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['field', 'issue', 'lowercase', 'generatedapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['property', 'mistypedapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['deletedapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['execution', 'propertyapollo', 'execution', 'propertywrapper', 'plain', 'issue', 'property', 'magic', 'black', 'class', 'gradle', 'version', 'evaluation', 'plugin', 'androidreadme', 'update', 'requirement', 'reflect']",{'issue': 100}
"['changedapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['issue', 'cache', 'input', 'graphql', 'cache', 'input', 'graphql', 'result', 'reference', 'input', 'serialize', 'resolveapollo', 'issue', 'android', 'apollographql', 'closeapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['moshi', 'update', 'versionissue', 'error', 'moshi', 'fixedapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['apollo', 'module', 'library', 'usageapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['issue', 'fragment', 'inlineinstance', 'inline', 'response', 'fragmentmatch', 'class', 'mapper', 'inline', 'fallback', 'response', 'typename', 'surrogate', 'fragment', 'generatesapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['serialization', 'issue', 'inputapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['generation', 'workablegradle', 'command', 'generationcommentrelative', 'insteadplatform', 'agnosticspace', 'extra', 'removeappropriate', 'variableconsistent', 'variableupdatedefine']",{'generation': 100}
"['issue', 'scalar', 'custom', 'generationissue', 'scalar', 'custom', 'generationapollo', 'issue', 'android', 'apollographql', 'closebuild', 'triger']",{'issue': 100}
"['class', 'iterator', 'innerapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['operation', 'payloadapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['alive', 'connection', 'heartbeat', 'supportsupport', 'message', 'heartbeat', 'subscriptionapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['annotation', 'jetbrainsupdate', 'gradlesnapshot', 'update', 'sampleapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['issue', 'empty', 'cache', 'watcher', 'queryfetch', 'empty', 'dependent', 'cache', 'watcherapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['graphqlapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['equal', 'generate', 'input', 'hashcodeapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['regular', 'inline', 'regular', 'inline', 'reference', 'declaration', 'fragmentapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['codegenapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['graphqljson', 'customtypevalueimplementation', 'current', 'string', 'customtypevalue', 'introduce', 'regularapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['field', 'boolean', 'startapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['string', 'codegen', 'regardless', 'value', 'queryapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['clearingapollo', 'android', 'apollographql', 'issue']",{'issue': 100}
"['message', 'parameter', 'payload', 'connection', 'subscriptionapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['delay', 'removedepends', 'method', 'delay', 'removedelay', 'removedelay', 'removelatch', 'thread', 'sincecomplicaterxjava', 'delay', 'removesimplify', 'rxjavalatch', 'removelatch', 'removelatch', 'removedelay', 'httpcachetestintegrationtest', 'delay', 'removedelay', 'removelatch', 'integrationtest', 'removeremove', 'mockwebserver', 'delay', 'response', 'integrationtestremove', 'httpcachetestthread', 'removerxapollo', 'refactor', 'simplifiesmethod', 'extract', 'interceptor', 'removebasefetchertest', 'class', 'timeoutuseless', 'latch', 'removelatch', 'basefetchertest', 'removeimport', 'basefetcher', 'removerestore', 'assertion', 'accidentallyatomic']",{'thread': 100}
"['issue', 'annotation', 'deprecatedapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['issue', 'reservedfield', 'rawvalue', 'graphqlapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['decode', 'custom', 'encodeapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['issue', 'gradle', 'schema', 'relative', 'submodulesapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['violation', 'length', 'refactor']",{'length': 100}
"['template', 'apollo', 'label', 'issue', 'update']",{'issue': 100}
"['cache', 'normalizedapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['issue', 'fragment']",{'issue': 100}
"['clear', 'stale', 'plugin', 'generation', 'configuration']",{'generation': 100}
"['field', 'issue', 'optional', 'inline', 'fragmentoptional', 'force', 'inline', 'fragmentapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['string', 'scalar', 'value', 'custom', 'scalar', 'value', 'custom', 'serializeapollo', 'issue', 'android', 'apollographql']",{'issue': 100}
"['issue', 'builder', 'boolean', 'default', 'inputtype', 'valuecompilable', 'field', 'boolean', 'default', 'compiler', 'value', 'input', 'generates']",{'issue': 100}
"['issue', 'builder', 'inline']",{'issue': 100}
"['annotation', 'issue', 'deprecation', 'duplicatedclose']",{'issue': 100}
"['optional', 'inputtype', 'introduce', 'value', 'undefined', 'statewrapper', 'optional', 'class', 'inputtype', 'introduce', 'value', 'statewrapper', 'optional', 'inputtype', 'value', 'input', 'generation', 'object', 'serialize', 'update', 'utilizeclose']",{'generation': 100}
"['annotation', 'fragment', 'generation', 'nullable', 'mapperclose']",{'generation': 100}
"['issue', 'argument', 'fragment', 'findbugsclose']",{'issue': 100}
"['issue', 'store', 'mutationid', 'rename', 'partial', 'optimisticissue', 'store', 'mutationid', 'rename', 'partial', 'optimisticversion', 'updateversion', 'mutationid', 'rename', 'issue', 'cache', 'record', 'partial', 'query', 'optimisticissue', 'buildcheck', 'style']",{'issue': 100}
"['clear', 'crash', 'clearing', 'cache', 'public', 'stackoverflow']",{'crash': 100}
"['javadoc', 'input', 'generation']",{'generation': 100}
"['apollo', 'issue', 'codegen', 'functionclose']",{'issue': 100}
"['annotation', 'generation']",{'generation': 100}
"['optional', 'generation']",{'generation': 100}
"['field', 'generation']",{'generation': 100}
"['generation', 'flatten', 'class']",{'generation': 100}
"['plugin', 'generation']",{'generation': 100}
"['resource', 'issueresource', 'issue']",{'issue': 100}
"['simplify', 'generation', 'mapper']",{'generation': 100}
"['simplify', 'generation', 'mapper']",{'generation': 100}
"['support', 'interface', 'generation']",{'generation': 100}
"['mergerequest', 'javadoc', 'symbol', 'specialsymbol', 'javadoc', 'special', 'generation']",{'generation': 100}
"['symbol', 'javadoc', 'special', 'generation']",{'generation': 100}
"['wildcard', 'generation']",{'generation': 100}
"['error', 'structure', 'result', 'compiler', 'generation']",{'generation': 100}
"['schema', 'generation']",{'generation': 100}
"['cbadc', 'mergerequest', 'union', 'mergeunion', 'issue']",{'issue': 100}
"['union', 'issue']",{'issue': 100}
"['field', 'keyword', 'final', 'generation']",{'generation': 100}
"['import', 'issue', 'scalar', 'object', 'custom']",{'issue': 100}
"['class', 'model', 'abstract', 'generation', 'enable', 'mapper']",{'generation': 100}
"['update', 'generation', 'mapper', 'factory']",{'generation': 100}
"['import', 'class', 'operation', 'generation', 'fragmentimport', 'class', 'operation', 'generation', 'fragmentgradle', 'plugin', 'project', 'fragment', 'queryapollo', 'compiler', 'credit', 'query']",{'generation': 100}
"['generation', 'implementation', 'factory']",{'generation': 100}
"['creator', 'generation', 'interface', 'factory']",{'generation': 100}
"['generation', 'scalar', 'custom', 'abstract']",{'generation': 100}
"['update', 'generation', 'query']",{'generation': 100}
"['wrapper', 'definition', 'operation', 'generation', 'fragment', 'query']",{'generation': 100}
"['annotation', 'nonnull', 'generation']",{'generation': 100}
"['fragment', 'generation', 'inlinesimple', 'fragment', 'generation', 'inlinefragment', 'conditionupdate', 'method']",{'generation': 100}
"['supportsupportjavadoc', 'generationjavadoc', 'generation']",{'generation': 100}
