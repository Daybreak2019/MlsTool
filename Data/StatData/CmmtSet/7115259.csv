message,fuzzy
"['maximum', 'length', 'limit', 'frame', 'uncompressedmemory', 'attack', 'exhaustionreferenceadvisory', 'security', 'eventlet']","{'length': 100, 'Security': 100}"
"['websocket', 'corolocaleventlet', 'issue']",{'issue': 100}
"['policy', 'security']",{'Security': 100}
"['patcher', 'kwargs', 'builteventlet', 'issue']",{'issue': 100}
"['urllib', 'example', 'importeventlet', 'issue']",{'issue': 100}
"['crash', 'eventletstyle', 'nativelyleast', 'crash', 'eventlet', 'suffers', 'sense', 'issue']","{'crash': 100, 'issue': 100}"
"['supplyeventlet', 'issue']",{'issue': 100}
"['threadingmodule', 'python', 'subprocess', 'exception', 'ignoredexception', 'function', 'ignoredrecent', 'tracebackassertassertionerrorpython', 'patch', 'import', 'callback', 'pointrather', 'thread', 'trackingregister', 'referencethreadingclose']",{'thread': 100}
"['disconnect', 'backdoor', 'switch', 'socketconsole', 'break', 'interactiveanother', 'backdoor']",{'backdoor': 100}
"['dnspythoneventlet', 'issueeventlet', 'issue']",{'issue': 100}
"['python', 'supporteventlet', 'issue']",{'issue': 100}
"['implementdeadlock', 'usingimplementation', 'deadlock', 'replacepython', 'implementation', 'version']",{'deadlock': 100}
"['redundant', 'causedeventlet', 'issue']",{'issue': 100}
"['supporteventlet', 'issue']",{'issue': 100}
"['response', 'continueperform', 'operation', 'timing', 'clientdribble', 'issue', 'status', 'applicationfiller', 'whitespacefinal', 'success', 'parse', 'response', 'clienteager', 'applicationwrite', 'reading', 'header', 'requeststill', 'occurparse', 'clienteverythingresponse']",{'issue': 100}
"['issue', 'python', 'syntax', 'keyword', 'compatibleissue', 'python', 'syntax', 'keyword', 'compatibleargument', 'keyword', 'validate']",{'issue': 100}
"['thread', 'import', 'unsupported', 'importantimport', 'solution', 'support', 'check', 'builteventlet', 'issue']","{'thread': 100, 'issue': 100}"
"['timeout', 'monotonicorigin', 'eventletrelatedeventleteventleteventlet', 'issueeventlet', 'issue']",{'issue': 100}
"['regenerateleast', 'openssl']",{'OpenSSL': 100}
"['local', 'example', 'invocation', 'backdoor']",{'backdoor': 100}
"['importerror', 'eventleteventlet', 'issue']",{'issue': 100}
"['thread', 'thanks', 'monkey', 'teslereventlet', 'issue']","{'thread': 100, 'issue': 100}"
"['dance', 'latin', 'environissue', 'unicodeeventlet', 'issue']",{'issue': 100}
"['travis', 'eventlet', 'issue']",{'issue': 100}
"['cpython', 'argument', 'upstream', 'timeout', 'event', 'compatibleeventlet', 'issue']",{'issue': 100}
"['insensitive', 'greendns', 'entryhostnamehostsresolvereventletbechtold', 'thomas', 'tbechtold']",{'Sensitive': 90}
"['connection', 'reset', 'remoteclient', 'remote', 'processingrequest', 'reset', 'connectioneconnreset', 'socket', 'health', 'haproxy', 'check', 'errorstrerr', 'loggedeventlet', 'issue']",{'issue': 100}
"['thanks', 'geoffrey', 'implementation', 'monotonic', 'workaround', 'thomas', 'suitablesooner', 'process', 'import', 'child', 'forcegunicorn', 'possiblyeventlet', 'issuebenoitc', 'gunicorn', 'issue']",{'issue': 100}
"['implementation', 'monotonic', 'patcher', 'workaround', 'suitablepython', 'defaultmodule', 'process', 'involvesimport', 'monkey', 'recursive', 'monkeyeventlet', 'issue']",{'issue': 100}
"['greendns', 'retry', 'earlyeventlet', 'issue']",{'issue': 100}
"['thanks', 'github', 'python', 'jacofourie', 'oserror', 'convenienceeventlet', 'issue']",{'issue': 100}
"['dnspython', 'support', 'ededeeventlet', 'issue']",{'issue': 100}
"['identity', 'thanks', 'github', 'linbingeventlet', 'issue']",{'issue': 100}
"['available', 'platform', 'convenience', 'windoweventlet', 'issueeventlet', 'issue']",{'issue': 100}
"['random', 'convenienceeventlet', 'issue']",{'issue': 100}
"['websockets', 'connection', 'applies', 'closeeventlet', 'issue']",{'issue': 100}
"['queue', 'catchingeventlet', 'issue']",{'issue': 100}
"['issuegreenioeventlet', 'issue']",{'issue': 100}
"['update', 'monotoniceventlet', 'issue']",{'issue': 100}
"['thanks', 'github', 'justdoit', 'developer', 'recursionerror', 'geventeventlet', 'issue']",{'issue': 100}
"['proxyeventlet', 'issue']",{'issue': 100}
"['freebsd', 'removeddependstransitionfuture', 'support', 'removedeventlet', 'issue']",{'issue': 100}
"['nameserversintroducedbehavior', 'address', 'contains', 'check', 'return', 'firsteventlet', 'issue']",{'issue': 100}
"['false', 'givingsometimes', 'firstrelatedeventlet', 'issueeventlet', 'issue']",{'issue': 100}
"['mistake', 'timeouterror', 'timeouteventlet', 'issue']",{'issue': 100}
"['recent', 'pyzmq', 'upstream', 'signature', 'matcheventleteventlet', 'issue']",{'issue': 100}
"['urllib', 'patch', 'replaces', 'customeventlet', 'issuegeneral', 'eventlet', 'issue']",{'issue': 100}
"['thanks', 'matthew', 'greenpool', 'argument', 'check', 'pagelexport', 'semaphore', 'namespace', 'leveleventlet', 'issue']",{'issue': 100}
"['search', 'localcommon', 'implementation', 'append', 'getaddrinfolevel', 'domainsupport', 'eventleteventlet', 'issue']",{'issue': 100}
"['presence', 'package', 'pyopenssleventlet', 'issue']",{'issue': 100}
"['websocket', 'update', 'exampleeventlet', 'issue']",{'issue': 100}
"['returnnumber', 'buffer', 'returneventletnameko', 'onefinestay', 'issue']","{'buffer': 100, 'issue': 100}"
"['wrappermethod', 'thread']",{'thread': 100}
"['blank', 'header', 'content', 'length', 'blank', 'trigger', 'header', 'content', 'valueerror', 'responselength', 'blank', 'header', 'content', 'integerrequest', 'responseeventlet']",{'length': 100}
"['compatibility', 'socket', 'kwarg', 'familybreak', 'socket', 'family', 'greensocketeventlet', 'issue']",{'issue': 100}
"['weirdness', 'patcher', 'greendns', 'issueimportgreendns', 'importimportimportissubclass', 'printresultpythonpythonfalsepythonpythonpythonfalsepythonpython', 'issueappears', 'issue', 'version', 'package', 'version', 'package', 'greenmodule', 'import', 'greendns', 'runningregularmodule', 'socket', 'python', 'greensubpackages', 'greendns', 'import', 'regularalready', 'effect', 'issueweirdness', 'greeningeventlet', 'issuesmarkets', 'patcheventlet', 'issue']",{'issue': 100}
"['socket', 'method', 'blockingmodule', 'socket', 'resolution', 'greenmethod', 'inconsistent', 'dnspythonconsequence', 'patchcycle', 'import', 'eliminatedreappears', 'cycle', 'import', 'cycle', 'import', 'monkey', 'greendns', 'failure', 'performcycle', 'import', 'python', 'version', 'failure', 'changerecent', 'tracebackproject', 'eventletassert', 'isinstanceassertionerrorrecent', 'tracebackproject', 'eventletassert', 'isinstanceassertionerrorseparate', 'patcheventlet', 'issue']",{'issue': 100}
"['pyopensslextension', 'buildingopenssl', 'declaration', 'static', 'erreur', 'cryptostaticopenssl', 'includeopenssl', 'cryptoopenssl', 'cryptoopenssl', 'cryptoprevious', 'openssl', 'declaration', 'command', 'error', 'statusknown', 'pyopenssl', 'issuesimple', 'workaround']",{'OpenSSL': 100}
"['thanks', 'garth', 'false', 'mollett', 'server', 'importantconnection', 'default', 'handshake', 'return', 'blockinglater', 'handshake', 'return', 'implicitlyusual', 'serversimple', 'socket', 'connects', 'vulnerable', 'clientclient']",{'vulnerable': 100}
"['setsockopt', 'socket', 'failedeventlet', 'issue']",{'issue': 100}
"['wfile', 'bufferedcause', 'makefileeventlet', 'issueobject', 'number', 'returneventlet', 'issue']",{'issue': 100}
"['import', 'subprocess', 'patcher', 'certaineventlet', 'issue']",{'issue': 100}
"['pattern', 'design', 'replacedeventlet', 'issue']",{'issue': 100}
"['selectselector', 'implementingmodule', 'thing', 'version', 'facility', 'greenfacility', 'likelyprevious', 'fileno', 'expose', 'selectselector', 'confusingmethod', 'selector']",{'expose': 100}
"['error', 'greensocketmethod', 'recvfrom', 'sendtogreensocket', 'blockingioerror', 'error', 'blockingpython', 'trampoline', 'socket', 'methodvarious', 'error', 'reasonfunction', 'exampleeventlet', 'issue']",{'issue': 100}
"['error', 'greensocketmethod', 'recvfrom', 'sendtogreensocket', 'blockingioerror', 'error', 'blockingpython', 'trampoline', 'socket', 'methodvarious', 'error', 'reasonfunction', 'exampleeventlet', 'issue']",{'issue': 100}
"['patch', 'import', 'monkeyeventlet', 'issue']",{'issue': 100}
"['processoriginal', 'issue', 'eventlet', 'reportexplanation']",{'issue': 100}
"['processoriginal', 'issue', 'eventlet', 'reportexplanation', 'comment']",{'issue': 100}
"['sendall', 'semantincs', 'greenio', 'removesocket', 'timeout', 'semantics', 'informationprevious', 'implementationleast', 'manifest', 'block', 'clientassume', 'eventlet', 'issue']",{'issue': 100}
"['empty', 'buffer', 'string', 'application']",{'buffer': 100}
"['subprocess', 'supporteventlet', 'issue']",{'issue': 100}
"['requestwrite', 'connection', 'chunkreaderror', 'closeeventlet', 'issueeventlet', 'issue']",{'issue': 100}
"['jerzyk', 'greenioalways', 'returneventlet', 'issue']",{'issue': 100}
"['socket', 'hrachyshka', 'address', 'startingreturn', 'socket', 'specialeventlet', 'issue']",{'issue': 100}
"['enotconn', 'thanks', 'seyeong', 'empty', 'greenio', 'runningeventlet', 'issue']",{'issue': 100}
"['thanks', 'stuart', 'default', 'context', 'initalization', 'incorrect', 'mclareneventlet', 'issue']","{'incorrect': 100, 'issue': 100}"
"['thread', 'state']",{'thread': 100}
"['thanks', 'antonio', 'double', 'greenio', 'closeeventlet', 'issue']",{'issue': 100}
"['patcheventlet', 'issue']",{'issue': 100}
"['thanks', 'wrapping', 'exception', 'donagh', 'mccaberaise', 'everythingraise', 'eventlet', 'issue']",{'issue': 100}
"['python', 'failure', 'travis', 'compatconsists', 'number', 'condition', 'presentcurrent', 'greenpipeinheritance', 'making', 'favour', 'socketioobject', 'module', 'version', 'greenpython', 'urllib', 'neededpython', 'module', 'selector', 'subprocessvarious', 'bufsize', 'closepython', 'argument', 'random', 'reorganizingpython', 'whole', 'buildknown', 'attributeclose', 'eventlet', 'issueeventlet', 'issueexperimental', 'supporteventlet', 'issueeventlet', 'issue']",{'issue': 100}
"['retries', 'buffer']",{'buffer': 100}
"['import', 'delayeventlet', 'issue']",{'issue': 100}
"['connection', 'epipe', 'error', 'remote', 'closesmall', 'connectioncause', 'kernel', 'epipe', 'buffer', 'sinceexpects']",{'buffer': 100}
"['people', 'comment', 'problem', 'issue']",{'issue': 100}
"['pythoneventlet', 'issue']",{'issue': 100}
"['assert', 'keyword', 'deprecatedeventlet', 'issue']",{'issue': 100}
"['false', 'setting', 'clientexpect', 'particular', 'response', 'headereventlet', 'issue']",{'issue': 100}
"['queuegithub', 'issue']",{'issue': 100}
"['accumulate', 'thanks', 'result', 'zhangaccumulate', 'eventlet', 'issue']",{'issue': 100}
"['flexiblygithub', 'issue']",{'issue': 100}
"['proxy', 'thanks', 'tpool', 'urbanconnection', 'psycopg', 'eventlet', 'issue']",{'issue': 100}
"['github', 'readme', 'thanks', 'rename', 'thomas', 'grainger', 'megies', 'tobiaseventlet', 'issue']",{'issue': 100}
"['flake', 'configurationeveryone', 'width', 'length']",{'length': 100}
"['nameerroreventlet', 'issue']",{'issue': 100}
"['tpool', 'worker', 'limitedtestcaseeventlet', 'issue']",{'issue': 100}
"['connection', 'timeouts', 'socketeventlet', 'issue']",{'issue': 100}
"['asserts', 'greenio', 'excess', 'removeeventlet', 'issue']",{'issue': 100}
"['greendns', 'support', 'resolveeventlet', 'issue']",{'issue': 100}
"['string', 'returningwsgiinput', 'return', 'single', 'eventlet', 'issue']",{'issue': 100}
"['semaphore', 'timeout', 'supportsupport', 'eventlet', 'issue']",{'issue': 100}
"['thanks', 'bitbucket', 'greensocket', 'method', 'cache', 'tegeler', 'greenioeventlet', 'issue']",{'issue': 100}
"['trampolinegreenssl', 'performance', 'eventlet', 'issue']",{'issue': 100}
"['clienteventlet', 'issue']",{'issue': 100}
"['relative', 'thanks', 'alanp', 'greenioeventlet', 'issue']",{'issue': 100}
"['jessica', 'thanks', 'typeerroreventlet', 'issue']",{'issue': 100}
"['thread', 'getsockopt', 'request', 'event']",{'thread': 100}
"['waitpid', 'issue']",{'issue': 100}
"['thread', 'method', 'environment', 'tpool']",{'thread': 100}
"['availableuseful', 'openssl', 'module', 'external', 'requireorder']",{'OpenSSL': 100}
"['maximum', 'configurable', 'lengthintact', 'default', 'length', 'requestoverride', 'server']",{'length': 100}
"['thread', 'wrapper', 'interface', 'greenthreadident', 'setter', 'setnameisdaemon', 'daemon', 'propertywrapper', 'greenthread']",{'thread': 100}
"['patch', 'monkeypatchingobject', 'garbage', 'collectedprocess', 'significant', 'daemon', 'result', 'prettymemory', 'thread', 'green']",{'thread': 100}
"['limit', 'header', 'overall', 'length']",{'length': 100}
"['limit', 'header', 'length']",{'length': 100}
"['thread', 'context']",{'thread': 100}
"['solves', 'issue']",{'issue': 100}
"['thread', 'tpool', 'whine', 'interpreter']",{'thread': 100}
"['whitespace', 'issue']",{'issue': 100}
"['socket', 'generic', 'forwarder', 'writtenmethod', 'object', 'levelmethod', 'class', 'regularsocket', 'forwarder', 'backdor', 'simmilar']",{'backdoor': 93}
"['different', 'string', 'socket', 'convertdivision', 'integer']",{'integer': 100}
"['thread', 'module']",{'thread': 100}
"['pyflakes', 'extraneous', 'issue']",{'issue': 100}
"['eventlet', 'issue']",{'issue': 100}
"['redundant', 'thread', 'sound', 'fragile']",{'thread': 100}
"['websocket', 'paper', 'tissue']",{'issue': 91}
"['thread', 'module']",{'thread': 100}
"['argument', 'greenpipe', 'stdlib', 'caller', 'incorrect', 'buflen']",{'incorrect': 100}
"['sensitive', 'timing']",{'Sensitive': 100}
"['various', 'rtyler', 'difficult', 'violation', 'issue']",{'issue': 100}
"['various', 'greensocket', 'method', 'aspect', 'backdoor', 'appropriate', 'content']",{'backdoor': 100}
"['patch', 'invalid', 'content', 'length']",{'length': 100}
"['tremendous', 'performance', 'quantity', 'yield', 'issue']",{'issue': 100}
"['various', 'buffer', 'platform']",{'buffer': 100}
"['minor', 'compatibility', 'weird', 'issue']",{'issue': 100}
"['crash', 'import', 'command']",{'crash': 100}
"['python', 'thanks', 'eventlet', 'issue']",{'issue': 100}
"['fileno', 'thread', 'particular', 'enable', 'start', 'randomc', 'performance', 'traceback']",{'thread': 100}
"['assert', 'incorrect']",{'incorrect': 100}
"['behavior', 'openssl', 'normal', 'penalize', 'reflect', 'close', 'backwards']",{'OpenSSL': 100}
"['length', 'regression', 'content']",{'length': 100}
"['length', 'double', 'restore', 'content', 'logic']",{'length': 100}
"['backdoor', 'usage']",{'backdoor': 100}
"['eventlet', 'expose']",{'expose': 100}
"['brunswick', 'brian', 'backdoor', 'patch']",{'backdoor': 100}
"['plain', 'backdoor', 'duplicate', 'complexity', 'greenlet']",{'backdoor': 100}
"['information', 'twistedutil', 'buffer', 'available', 'exception']",{'buffer': 100}
"['buffer', 'twistedutil']",{'buffer': 100}
"['protocol', 'buffercreator', 'argument', 'buffer', 'clientcreator']",{'buffer': 100}
"['mainloop', 'buffer', 'block']",{'buffer': 100}
"['listentcp', 'argument', 'buffer', 'keyword', 'connecttcp']",{'buffer': 100}
"['protocol', 'synchronous', 'buffer', 'class']",{'buffer': 100}
"['interesting', 'issue']",{'issue': 100}
"['header', 'content', 'length']",{'length': 100}
"['content', 'length']",{'length': 100}
"['multi', 'buffer', 'advanceterminator', 'minus']",{'buffer': 100}
"['thread', 'python', 'native', 'eventletpython', 'native', 'databsae', 'thingpython']",{'thread': 100}
