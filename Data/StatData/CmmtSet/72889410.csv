message,fuzzy
"['findreturnrefrequires', 'buffer', 'arraypatch', 'method', 'check', 'alreadyerror']",{'buffer': 100}
"['findreturnrefdetector', 'findreturnref', 'responisbletrackversion', 'necessary', 'current', 'spotbugsinfrastructure', 'alreadyredundant', 'stack', 'patch', 'removerelies', 'infrastructure', 'alreadydetector', 'positive', 'returninghappens']",{'stack': 100}
"['issueproblem', 'volatile', 'report', 'issue', 'syntheticeclipseeclipsesynthetic', 'switch', 'compiler', 'generatesynthetic', 'spotbugs', 'issue', 'reportspotbugs', 'field', 'synthetic', 'ignore']",{'issue': 100}
"['access', 'issue', 'support', 'privatemember', 'private', 'definesprivate', 'method', 'access', 'inner', 'contains', 'outerreference', 'method', 'constant', 'access', 'relaxedspotbugs', 'aware', 'changemember', 'spotbugs', 'access', 'report']",{'issue': 100}
"['metadata', 'generation']",{'generation': 100}
"['generation', 'eclipse', 'projectcompilation', 'error', 'issueaccess', 'spotbugs', 'eclipse', 'projecterror', 'issue', 'remainingcomingandrey', 'loskutov']","{'generation': 100, 'issue': 100}"
"['reporttrouble', 'class', 'issue', 'transorm']",{'issue': 100}
"['suggestion', 'issue']",{'issue': 100}
"['hotspotpullrequest', 'issue', 'project']",{'issue': 100}
"['sarif', 'reportsarif', 'validator', 'schema', 'property', 'logicallocationadditional', 'schema', 'permitsarif', 'validator', 'reportedvalue', 'schema', 'property', 'sarifsarif', 'version', 'refersarif', 'final', 'upgrade', 'conformpopulate', 'final', 'version', 'refers', 'propertysarif', 'reporter', 'logic', 'refactor', 'extract', 'reusesarif', 'support', 'experimentalnotification', 'invocationsarif', 'issuecomment', 'microsoft', 'issue']",{'issue': 100}
"['placeholder', 'supportdescription', 'spotbugs', 'containsarif', 'parse', 'report', 'support', 'dynamicphase', 'generation', 'simple', 'placeholder']",{'generation': 100}
"['compileruntimeissuecomment', 'gradle', 'issue']",{'issue': 100}
"['sourceset', 'explainplugin', 'spotbugs', 'gradle', 'issue']",{'issue': 100}
"['vulnerability', 'external', 'injection', 'entityupgrade', 'securityclosetransitive', 'exclude', 'compatible', 'dependency']",{'injection': 100}
"['plugin', 'update', 'gradle', 'followplugin', 'spotbugs', 'gradle', 'close', 'issue']",{'issue': 100}
"['reporttrouble', 'issue', 'transorm', 'buginstance', 'containedmultiple', 'class']",{'issue': 100}
"['reporttrouble', 'issue', 'transorm', 'buginstance', 'containedmultiple', 'class']",{'issue': 100}
"['wrong', 'property', 'buildissuecomment', 'gradle', 'issue']",{'issue': 100}
"['array', 'shrunk', 'empty', 'dangerous', 'result', 'openjdk', 'version', 'reflection', 'toarray', 'update', 'necessary', 'performance', 'collection', 'concurrent']",{'concurrent': 100}
"['experimental', 'multiremove', 'sonarqube', 'clone', 'shallow', 'warningplease', 'shallow', 'configureplugin', 'latestspecify', 'coveragejacoco', 'report', 'generation', 'support', 'appendingsubproject', 'generatemerge', 'sonarqube', 'analysisjacoco', 'result', 'coveragecompatibility', 'executorservice', 'implementation', 'backwardanalysis', 'executorservicesynclonization', 'approach', 'legacy', 'mechanismchangelog', 'entryshutdown', 'findbugs', 'class', 'caller', 'executorservicesonarcloud', 'reportedsonarcloud', 'uselessimprove', 'coverageimprove', 'coverageneedle', 'reduceshorten', 'thread', 'constructor', 'profilerthread', 'multi', 'profiler', 'ready', 'analysisstderr', 'usage', 'original', 'standard', 'interfaceclass']","{'generation': 100, 'thread': 100}"
"['report', 'generation', 'support', 'appendingsubproject', 'generatemerge', 'sonarqube', 'analysis']",{'generation': 100}
"['special', 'thread']",{'thread': 100}
"['reproducer', 'spotbugs', 'issue']",{'issue': 100}
"['preventswithout', 'logic', 'class', 'parentframe', 'stack', 'returnbottom', 'symptom', 'reference']",{'stack': 100}
"['incorrect', 'replacign']",{'incorrect': 100}
"['critical', 'issue']",{'issue': 100}
"['window', 'ignorepermission', 'ignore', 'requiredsystem', 'window', 'likely', 'permission']",{'permission': 100}
"['releasediscus', 'spotbugs', 'issue']",{'issue': 100}
"['changelog', 'issue']",{'issue': 100}
"['issue', 'report', 'variable', 'compilerissue']",{'issue': 100}
"['silly', 'error', 'descriptor', 'avoidclassmodule', 'issue', 'resides', 'packageinside', 'class', 'driver', 'allowclass']",{'issue': 100}
"['module', 'analyzedifferent', 'analyze', 'issue', 'currentlysense', 'class']",{'issue': 100}
"['dogfood', 'github', 'ignore', 'issue']",{'issue': 100}
"['eclipsecoverall', 'eclipseplugin', 'content', 'directory', 'deletesretrigger', 'generation', 'workaroundupdate']",{'generation': 100}
"['arrayfindbugsproject', 'findbugs', 'issue', 'takenthanks', 'mebigfatguy']",{'issue': 100}
"['checkstyle', 'issue']",{'issue': 100}
"['eclipseplugin', 'gradleinitial', 'generation', 'properlyupdateupdate', 'eclipse', 'generate']",{'generation': 100}
"['gradle', 'buildinitial', 'gradle', 'setupoutput', 'generate', 'actuallyfindbugs', 'buildthough', 'compile', 'compilingbuildannotation', 'spotbugsconfiguration', 'simplifiedminor', 'issue', 'empty', 'directorypopulate', 'scriptjavadocs', 'generateannotation', 'javadocs', 'generatedannotation', 'javadocs', 'generate', 'javadocchance', 'config', 'mantainance', 'publishdistribution', 'produceplugins', 'leavng', 'srcdist', 'equivalentgeneratedocssubset', 'reference', 'failslonger', 'generates', 'generatedocs', 'webpagebuild', 'smoketestgradle', 'eclipse', 'setup', 'project', 'intellij']",{'issue': 100}
"['annotation', 'database', 'nonnullparameter', 'false', 'current', 'definition', 'positive', 'handler', 'forkjoinpoolvalid', 'documentation', 'oraclejavase', 'boolean', 'concurrent', 'forkjoinpool']",{'concurrent': 100}
"['getprimaryfield', 'method', 'javadoc', 'issue']",{'issue': 100}
"['expose', 'field', 'report', 'representation']",{'expose': 100}
"['incorrect', 'return']",{'incorrect': 100}
"['verbose', 'stack']",{'stack': 100}
"['value', 'stack']",{'stack': 100}
"['robust', 'tweak', 'couple', 'assertion', 'conditionpriority', 'suspicious', 'expression', 'integer']",{'integer': 100}
"['string', 'array', 'check', 'length', 'range']",{'length': 100}
"['exception', 'concurrent', 'modificationmainlist']",{'concurrent': 100}
"['stack', 'shell']",{'stack': 100}
"['crash', 'example']",{'crash': 100}
"['security', 'constraint']",{'Security': 100}
"['issue', 'string', 'format', 'changingseaecd', 'bccbab', 'trunk']",{'issue': 100}
"['testingground', 'stack', 'simple', 'simplify', 'opcode', 'printereaecd', 'bccbab', 'trunk']",{'stack': 100}
"['tweak', 'security', 'manager', 'various', 'qualifiervalidation', 'qualifiereaecd', 'bccbab', 'trunk']",{'Security': 100}
"['fatal', 'problemrather', 'somethingwrong', 'rewrite', 'crash', 'formateaecd', 'bccbab', 'trunk']","{'fatal': 100, 'crash': 100}"
"['mistaken', 'patch', 'bridge', 'issue', 'keithclassinfo', 'detectionfindbugseaecd', 'bccbab', 'trunk']",{'issue': 100}
"['opcode', 'iterative', 'stack', 'analysiseaecd', 'bccbab', 'trunk']",{'stack': 100}
"['stack', 'trace', 'entireeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['forge', 'sourceeaecd', 'bccbab', 'trunk']",{'forger': 91}
"['method', 'confidence', 'issue', 'synthetic', 'lowereaecd', 'bccbab', 'trunk']",{'issue': 100}
"['generic', 'issue', 'coder', 'project', 'ninja', 'monkey', 'foundeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['forge', 'partial', 'sourceeaecd', 'bccbab', 'trunk']",{'forger': 91}
"['forge', 'sourceeaecd', 'bccbab', 'trunk']",{'forger': 91}
"['issue', 'update', 'varioussynchronization', 'eclipse', 'stupid', 'updateeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['thread', 'background', 'exception', 'uncaught', 'handlereaecd', 'bccbab', 'trunk']",{'thread': 100}
"['issue', 'reporteaecd', 'bccbab', 'trunk']",{'issue': 100}
"['builder', 'buffer', 'method', 'constant', 'string', 'variousmutate', 'mighteaecd', 'bccbab', 'trunk']",{'buffer': 100}
"['length', 'chart', 'stats', 'problemeaecd', 'bccbab', 'trunk']",{'length': 100}
"['eclipse', 'release', 'issue', 'commenteaecd', 'bccbab', 'trunk']",{'issue': 100}
"['method', 'evaluation', 'issue', 'uploadeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['dirty', 'findbugs', 'issue', 'clean', 'warningeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['problem', 'concurrency', 'potential', 'atomicity', 'cleanedscreen', 'scroll', 'everythingeaecd', 'bccbab', 'trunk']",{'concurren': 90}
"['brosius', 'party', 'resource', 'patch', 'issue', 'plugins', 'documentationeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['guicallback', 'issue', 'cloud', 'project', 'reason', 'uploadedeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['daemon', 'thread', 'createdeaecd', 'bccbab', 'trunk']",{'thread': 100}
"['specific', 'generate', 'issue', 'cloudeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['issue', 'maxage', 'select', 'cloud', 'storedeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['merger', 'sloppy', 'issue', 'uniqueeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['subtle', 'union', 'intersection', 'issue', 'numbereaecd', 'bccbab', 'trunk']",{'issue': 100}
"['class', 'issue', 'slashedeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['class', 'issue', 'slashedeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['stack', 'evaluation', 'custom', 'opcode', 'annotation', 'reuseeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['usage', 'issue', 'client', 'server', 'checkincombine', 'multiple', 'requestalways', 'applicationname', 'unknownhonor', 'plugin', 'global', 'settingstatistic', 'servereaecd', 'bccbab', 'trunk']",{'issue': 100}
"['correctness', 'issue', 'raiseeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['tracker', 'detail', 'deadlockinstanceof', 'questionfinal', 'private', 'atomicboolean', 'override', 'initialvalue', 'atomicboolean', 'synchronizedatomicboolean', 'detail', 'method', 'findbugs', 'dedaedfbfddceb', 'override', 'initialvalue', 'source', 'problematic', 'super', 'synchronizedthread', 'eclipse', 'different', 'deadlock', 'runninginside', 'method', 'class', 'current', 'classloader', 'callingvalidate', 'thread', 'method', 'class', 'classloader', 'initialvalue', 'initialvalue', 'synchronizedeaecd', 'bccbab', 'trunk']","{'deadlock': 100, 'thread': 100}"
"['clean', 'genericheadless', 'issue', 'upload', 'signedeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['cloud', 'deadlock', 'avoideaecd', 'bccbab', 'trunk']",{'deadlock': 100}
"['generation', 'alloweaecd', 'bccbab', 'trunk']",{'generation': 100}
"['update', 'security', 'bugrankeaecd', 'bccbab', 'trunk']",{'Security': 100}
"['findbugs', 'development', 'occurs', 'default', 'issue', 'package', 'environment', 'classpatheaecd', 'bccbab', 'trunk']",{'issue': 100}
"['thread', 'request', 'engine', 'issue', 'performance', 'number', 'webcloudclienteaecd', 'bccbab', 'trunk']","{'thread': 100, 'issue': 100}"
"['overflow', 'check', 'microseaecd', 'bccbab', 'trunk']",{'overflow': 100}
"['evaluation', 'hudson', 'issue', 'cloud', 'history', 'servereaecd', 'bccbab', 'trunk']",{'issue': 100}
"['findbugs', 'issue', 'networkeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['issue', 'property', 'uploads', 'systemeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['issue', 'cloud', 'server', 'abilityeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['brosius', 'incorrect', 'patch', 'message', 'pasteeaecd', 'bccbab', 'trunk']",{'incorrect': 100}
"['stack', 'opcode', 'ifnonnull', 'ifnulleaecd', 'bccbab', 'trunk']",{'stack': 100}
"['argument', 'message', 'issue', 'numberconstructor', 'invokes', 'method', 'inefficient', 'givenclass', 'doubleeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['duplicate', 'issue', 'annotation', 'variable', 'avoideaecd', 'bccbab', 'trunk']",{'issue': 100}
"['partial', 'eclipse', 'issue', 'analysis', 'relativeeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['issue', 'update', 'syncs', 'uploads', 'print', 'statseaecd', 'bccbab', 'trunk']",{'issue': 100}
"['value', 'checkfornull', 'removal', 'concurrentmap', 'concurrent', 'situation', 'returningeaecd', 'bccbab', 'trunk']",{'concurrent': 100}
"['decorator', 'enhance', 'category', 'issue', 'suppresseaecd', 'bccbab', 'trunk']",{'issue': 100}
"['parameter', 'issue', 'commandeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['volatile', 'application', 'class', 'field', 'issue', 'reporteaecd', 'bccbab', 'trunk']",{'issue': 100}
"['eclipse', 'green', 'browser', 'ubuntu', 'crash', 'avoideaecd', 'bccbab', 'trunk']",{'crash': 100}
"['compilation', 'issue', 'styleeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['program', 'issue', 'refine', 'point', 'maybemutateeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['cursor', 'issue', 'cloud', 'various', 'commenteaecd', 'bccbab', 'trunk']",{'issue': 100}
"['plugin', 'eclipse', 'entry', 'patch', 'ignores', 'issue', 'classpath', 'reviewedeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['dbevaluation', 'field', 'issue', 'package', 'speed', 'statseaecd', 'bccbab', 'trunk']",{'issue': 100}
"['plugin', 'eclipsefindbugs', 'cloud', 'correctusername', 'signedannotation', 'update', 'serversubmits', 'thread', 'background', 'annotation', 'commenteaecd', 'bccbab', 'trunk']",{'thread': 100}
"['issue', 'trigger', 'cloud', 'appengine', 'clienteaecd', 'bccbab', 'trunk']",{'issue': 100}
"['false', 'forge', 'positive', 'sourceeaecd', 'bccbab', 'trunk']",{'forger': 91}
"['false', 'negative', 'issue', 'infinite', 'addedeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['thread', 'getinstancehasheaecd', 'bccbab', 'trunk']",{'thread': 100}
"['callback', 'thread', 'executeeaecd', 'bccbab', 'trunk']",{'thread': 100}
"['sortables', 'default', 'issue', 'signout', 'stateeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['issue', 'listener', 'completion', 'status', 'signineaecd', 'bccbab', 'trunk']",{'issue': 100}
"['method', 'issue', 'cloud', 'client', 'unrelatedeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['support', 'tracker', 'status', 'googlesummary', 'issue', 'cloud', 'analysiseaecd', 'bccbab', 'trunk']",{'issue': 100}
"['plugin', 'event', 'thread', 'executes', 'background', 'operation', 'engine', 'attempt', 'buginstances', 'update', 'cloud', 'queue', 'writeeaecd', 'bccbab', 'trunk']",{'thread': 100}
"['hasevaluations', 'store', 'result', 'functionality', 'optimize', 'field', 'issue', 'dbissue', 'query', 'booleaneaecd', 'bccbab', 'trunk']",{'issue': 100}
"['invocation', 'issue', 'commandbetter', 'message', 'error', 'cloud', 'property', 'appengine', 'local', 'commandeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['buffer', 'proto', 'commandeaecd', 'bccbab', 'trunk']",{'buffer': 100}
"['servlet', 'evaluation', 'appenginecloud', 'response', 'issue', 'initial', 'supporteaecd', 'bccbab', 'trunk']",{'issue': 100}
"['issue', 'query', 'support', 'short', 'commandeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['buffer', 'protocol', 'current', 'issue', 'initial', 'project', 'server', 'currentlyclient', 'server', 'cloud', 'juniteaecd', 'bccbab', 'trunk']","{'buffer': 100, 'issue': 100}"
"['forge', 'sourceeaecd', 'bccbab', 'trunk']",{'forger': 91}
"['forge', 'sourceeaecd', 'bccbab', 'trunk']",{'forger': 91}
"['reference', 'integer', 'string', 'identityeaecd', 'bccbab', 'trunk']",{'integer': 100}
"['forge', 'sourceeaecd', 'bccbab', 'trunk']",{'forger': 91}
"['graph', 'issue', 'round', 'scoreeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['average', 'pattern', 'compute', 'issue', 'varianceeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['detail', 'compute', 'issue', 'additional', 'scariesteaecd', 'bccbab', 'trunk']",{'issue': 100}
"['ignore', 'issue', 'pendingeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['window', 'minimize', 'issue', 'filedeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['evaluation', 'compute', 'issue', 'stats', 'overalleaecd', 'bccbab', 'trunk']",{'issue': 100}
"['blacklist', 'leaderboardeaecd', 'bccbab', 'trunk']",{'blacklist': 100}
"['issue', 'projecteaecd', 'bccbab', 'trunk']",{'issue': 100}
"['concurrency', 'class', 'signal', 'priority', 'existence', 'elevateeaecd', 'bccbab', 'trunk']",{'concurren': 90}
"['stack', 'connection', 'error', 'print', 'traceeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['workarounddetail', 'trackersubset', 'class', 'currentlyclass', 'output', 'folder', 'sourceclass', 'folder', 'issue', 'createdcheck', 'marker', 'deleteeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['possible', 'expose', 'multiple', 'explorer', 'addedeaecd', 'bccbab', 'trunk']",{'expose': 100}
"['constructor', 'complain', 'issue', 'botchedeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['folder', 'source', 'issue', 'configuredeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['project', 'collection', 'current', 'profiler', 'issue', 'static', 'instance', 'analysis', 'number', 'result', 'profiler', 'configurableconsole', 'plugin', 'progress', 'eclipse', 'findbugs', 'currentlyeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['workspace', 'filter', 'locatedpathname', 'workstation', 'different', 'solves', 'issue', 'absolute', 'projecteffect', 'different', 'property', 'relative', 'format', 'projecteaecd', 'bccbab', 'trunk']",{'issue': 100}
"['package', 'length', 'prefixeaecd', 'bccbab', 'trunk']",{'length': 100}
"['object', 'single', 'issue', 'annotate', 'interfaceeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['reclassify', 'issue', 'label', 'style', 'correctnesseaecd', 'bccbab', 'trunk']",{'issue': 100}
"['problem', 'summary', 'field', 'fatal', 'error', 'misorderedeaecd', 'bccbab', 'trunk']",{'fatal': 100}
"['issue', 'resize', 'selection', 'scrollbars', 'showneaecd', 'bccbab', 'trunk']",{'issue': 100}
"['issue', 'explorer', 'showneaecd', 'bccbab', 'trunk']",{'issue': 100}
"['incorrect', 'summaryeaecd', 'bccbab', 'trunk']",{'incorrect': 100}
"['issue', 'double', 'browser', 'scrollbareaecd', 'bccbab', 'trunk']",{'issue': 100}
"['switch', 'incorrect', 'message', 'default', 'thrown', 'warningeaecd', 'bccbab', 'trunk']",{'incorrect': 100}
"['refresh', 'issue', 'bugfix', 'changelisteaecd', 'bccbab', 'trunk']",{'issue': 100}
"['checkfornull', 'parameter', 'generation', 'warningduplicate', 'warningeaecd', 'bccbab', 'trunk']",{'generation': 100}
"['progress', 'refresh', 'issue', 'update', 'incremental', 'stilleaecd', 'bccbab', 'trunk']",{'issue': 100}
"['opcode', 'stack', 'aaloadeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['method', 'injection', 'ignoreeaecd', 'bccbab', 'trunk']",{'injection': 100}
"['fixedseparate', 'category', 'string', 'issue', 'formatproblem', 'varargs', 'lumpinginformation', 'regular', 'expression', 'additional', 'annotation', 'warningupdate', 'preferenceeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['crash', 'input', 'textuiimprove', 'erroreaecd', 'bccbab', 'trunk']",{'crash': 100}
"['class', 'field', 'string', 'public', 'generation', 'eclipse', 'background', 'reflection', 'message', 'initialize', 'class', 'contains', 'string', 'field', 'report', 'public', 'mechanism', 'warningeaecd', 'bccbab', 'trunk']",{'generation': 100}
"['plugin', 'eclipse', 'library', 'dependency', 'findbugs', 'class', 'optional', 'issue', 'available', 'analysiseaecd', 'bccbab', 'trunk']",{'issue': 100}
"['injection', 'uninitializedeaecd', 'bccbab', 'trunk']",{'injection': 100}
"['opcode', 'stack', 'signatureeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['relevant', 'plugin', 'issue', 'bluej', 'indentation', 'cleanedeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['value', 'problem', 'ternary', 'issue', 'check', 'unhelpful', 'return', 'suppress', 'warningeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['deadloc', 'synchronization', 'string', 'internedeaecd', 'bccbab', 'trunk']",{'deadlock': 93}
"['subclass', 'class', 'issue', 'priority', 'tweakingeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['object', 'discus', 'sourcefile', 'issue', 'getlineoffset', 'describedeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['findbugs', 'attempt', 'issue', 'initial', 'error', 'recreateeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['option', 'issue', 'loadbugseaecd', 'bccbab', 'trunk']",{'issue': 100}
"['incorrect', 'warning', 'overagressive', 'exception', 'inaccurate', 'throwereaecd', 'bccbab', 'trunk']",{'incorrect': 100}
"['nullcheck', 'incorrect', 'redundant', 'clause', 'number', 'mentionedeaecd', 'bccbab', 'trunk']",{'incorrect': 100}
"['minor', 'option', 'issue', 'error', 'standardeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['message', 'system', 'default', 'issue', 'check', 'spurious', 'warningeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['uservalue', 'injection', 'clean', 'confusioneaecd', 'bccbab', 'trunk']",{'injection': 100}
"['information', 'uservalue', 'injection', 'storeeaecd', 'bccbab', 'trunk']",{'injection': 100}
"['readproject', 'sourceforge', 'option', 'class', 'issue', 'projecteaecd', 'bccbab', 'trunk']",{'issue': 100}
"['buffer', 'taint', 'string', 'source', 'track', 'appendseaecd', 'bccbab', 'trunk']",{'buffer': 100}
"['analysis', 'priority', 'thread', 'customizableeaecd', 'bccbab', 'trunk']",{'thread': 100}
"['field', 'issue', 'synthetic', 'warningeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['sourceforge', 'class', 'serialization', 'issue', 'warningeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['catch', 'sourceforge', 'crossplatform', 'initialization', 'exception', 'workaround', 'issue', 'startup', 'revert', 'propagate', 'crash', 'vistaeaecd', 'bccbab', 'trunk']","{'issue': 100, 'crash': 100}"
"['stack', 'eclipse', 'exception', 'getter', 'traceeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['sourceforge', 'issue', 'selection', 'xforms', 'buginstance', 'support', 'history', 'appropriate', 'qualifiereaecd', 'bccbab', 'trunk']",{'issue': 100}
"['issue', 'xforms', 'support', 'historyeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['sourceforge', 'attribute', 'buginstances', 'issue', 'filter', 'history', 'avoideaecd', 'bccbab', 'trunk']",{'issue': 100}
"['backwards', 'stack', 'instruction', 'encounter', 'reseteaecd', 'bccbab', 'trunk']",{'stack': 100}
"['additionfindbugs', 'class', 'sfbugs', 'workspace', 'document', 'relaxedfielddescriptor', 'thread', 'findbugs', 'exception', 'classfileeaecd', 'bccbab', 'trunk']",{'thread': 100}
"['guard', 'findbugs', 'current', 'couple', 'issue', 'reproduce', 'completedetail', 'trackereaecd', 'bccbab', 'trunk']",{'issue': 100}
"['method', 'invocation', 'integer', 'positive', 'rathereaecd', 'bccbab', 'trunk']",{'integer': 100}
"['address', 'output', 'density', 'sourceforge', 'issue', 'check', 'divisor', 'avoiddetail', 'trackereaecd', 'bccbab', 'trunk']",{'issue': 100}
"['field', 'issue', 'report', 'publiceaecd', 'bccbab', 'trunk']",{'issue': 100}
"['scary', 'enumeration', 'issue', 'cleanup', 'fixingeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['various', 'method', 'synethetic', 'issue', 'annotation', 'syntheticeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['method', 'issue', 'unreachable', 'priorityeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['conflict', 'issue', 'multiple', 'report', 'avoidimmediate', 'sourcecontroleaecd', 'bccbab', 'trunk']",{'issue': 100}
"['incorrect', 'sourcesinkinfo', 'method', 'equalmultiple', 'meaning', 'comparinglocation', 'debuggingeaecd', 'bccbab', 'trunk']",{'incorrect': 100}
"['stack', 'repeat', 'check', 'opcode', 'iterationeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['opcode', 'weird', 'stack', 'cleaneaecd', 'bccbab', 'trunk']",{'stack': 100}
"['instancefield', 'staticfieldfieldinfo', 'object', 'changedhashcode', 'issue', 'equal', 'compareto', 'class', 'major', 'yield', 'stillreporteaecd', 'bccbab', 'trunk']",{'issue': 100}
"['constructor', 'changethread', 'issue', 'analysis', 'stilleaecd', 'bccbab', 'trunk']",{'issue': 100}
"['sourceforge', 'attempt', 'issuethrow', 'exception', 'wrong', 'distinguish', 'returninganalysis', 'exception', 'thrownanalyzingdialog', 'changethread', 'thread', 'analysiscatch', 'exception', 'analysisthreadappropriatelymethod', 'eventseems', 'issueeaecd', 'bccbab', 'trunk']",{'thread': 100}
"['issue', 'pointeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['value', 'assert', 'stack', 'attempt', 'failure', 'nonexistent', 'error', 'rathereaecd', 'bccbab', 'trunk']",{'stack': 100}
"['opcode', 'stack', 'methodeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['thread', 'parse', 'priority', 'unsafe', 'formateaecd', 'bccbab', 'trunk']",{'thread': 100}
"['supression', 'issue', 'filter', 'cleaneaecd', 'bccbab', 'trunk']",{'issue': 100}
"['tweak', 'effect', 'stack', 'issue', 'opcode', 'infiniteeaecd', 'bccbab', 'trunk']","{'stack': 100, 'issue': 100}"
"['access', 'injection', 'reflective', 'annotation', 'analysis', 'statisticaleaecd', 'bccbab', 'trunk']",{'injection': 100}
"['value', 'stack', 'method', 'returneaecd', 'bccbab', 'trunk']",{'stack': 100}
"['issue', 'report', 'tiger', 'boxingeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['automatic', 'findbugs', 'exception', 'issue', 'containeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['forge', 'sourceeaecd', 'bccbab', 'trunk']",{'forger': 91}
"['value', 'integer', 'suppresseaecd', 'bccbab', 'trunk']",{'integer': 100}
"['behavoir', 'editor', 'detail', 'issue', 'weird', 'linkingeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['forge', 'sourceeaecd', 'bccbab', 'trunk']",{'forger': 91}
"['forge', 'sourceeaecd', 'bccbab', 'trunk']",{'forger': 91}
"['context', 'plugin', 'eclipseplugin', 'eclipse', 'others', 'sensitive', 'context', 'noticedmarker', 'class', 'folder', 'level', 'entire', 'source', 'projectproblem', 'assumption', 'present', 'projectplugin', 'marker', 'folder', 'source', 'context', 'package', 'explorer', 'project', 'analysis', 'launchedindividual', 'marker', 'clear', 'folder', 'source', 'important', 'source', 'entire', 'package', 'project', 'number', 'largepossible', 'unobtrusive', 'output', 'different', 'folder', 'source', 'location', 'package', 'effort', 'extra', 'project', 'patch', 'versioneaecd', 'bccbab', 'trunk']",{'Sensitive': 100}
"['onlyanalyze', 'option', 'expose', 'textuionlyanalyze', 'useful', 'option', 'class', 'packagescotteaecd', 'bccbab', 'trunk']",{'expose': 100}
"['systematic', 'injection', 'quoteeaecd', 'bccbab', 'trunk']",{'injection': 100}
"['issue', 'fortifyeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['injection', 'smartereaecd', 'bccbab', 'trunk']",{'injection': 100}
"['stack', 'argument', 'position', 'stuff', 'number', 'consistenteaecd', 'bccbab', 'trunk']",{'stack': 100}
"['injection', 'attribute', 'injecteaecd', 'bccbab', 'trunk']",{'injection': 100}
"['example', 'class', 'exploitable', 'class', 'security', 'focuschoserefactor', 'currentstrippedsqlinjection', 'bugreportanalyzemethod', 'function', 'decompose', 'changeeasier', 'modification', 'class', 'indentation', 'bracepeoplesystem', 'individualnumber', 'application', 'enhanceinjection', 'remainedplease', 'coulddiffs', 'contribute', 'futureeaecd', 'bccbab', 'trunk']",{'Security': 100}
"['value', 'stack', 'computation', 'constant', 'opcode', 'properlyeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['exception', 'issue', 'opcode', 'cleaneaecd', 'bccbab', 'trunk']",{'issue': 100}
"['problem', 'switch', 'stack', 'opcode', 'statement', 'computedeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['marker', 'eclipse', 'generate', 'class', 'issue', 'inner', 'google', 'multiplyeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['fatal', 'method', 'assertioneaecd', 'bccbab', 'trunk']",{'fatal': 100}
"['stack', 'accuratelyeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['stack', 'ifnonnull', 'ifnull', 'anythingeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['value', 'stack', 'logical', 'opcode', 'understandeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['patch', 'class', 'issue', 'ecplipseavoid', 'patch', 'slightlyeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['google', 'patch', 'class', 'folder', 'analyze', 'issue', 'project', 'classpatheaecd', 'bccbab', 'trunk']",{'issue': 100}
"['generic', 'issue', 'clean', 'numbereaecd', 'bccbab', 'trunk']",{'issue': 100}
"['stack', 'refactor', 'opcode', 'clean', 'seperate', 'autoboxingeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['stack', 'recognition', 'entry', 'nonnegativeeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['source', 'issue', 'display', 'numbereaecd', 'bccbab', 'trunk']",{'issue': 100}
"['class', 'classloader', 'issue', 'yummyeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['issue', 'stuffeaecd', 'bccbab', 'trunk']",{'issue': 100}
"['thread', 'register', 'local', 'analysis', 'cacheeaecd', 'bccbab', 'trunk']",{'thread': 100}
"['recursive', 'infinite', 'positive', 'eliminatepossible', 'object', 'stack', 'operation', 'target', 'checkedcast', 'update', 'opcode', 'infinite', 'recursive', 'detectingeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['binary', 'check', 'search', 'foundnegative', 'integer', 'averageresult', 'arrayeaecd', 'bccbab', 'trunk']",{'integer': 100}
"['value', 'generates', 'stack', 'eclipse', 'retainedassumption', 'violatesdisable', 'assertioneaecd', 'bccbab', 'trunk']",{'stack': 100}
"['thread', 'check', 'return', 'creatingeaecd', 'bccbab', 'trunk']",{'thread': 100}
"['opcode', 'stack', 'opcode', 'effort', 'analysiseaecd', 'bccbab', 'trunk']",{'stack': 100}
"['incorrect', 'error', 'messagecheck', 'setdateeaecd', 'bccbab', 'trunk']",{'incorrect': 100}
"['class', 'integer', 'priorityboolean', 'mediumeaecd', 'bccbab', 'trunk']",{'integer': 100}
"['local', 'length', 'different', 'mergingeaecd', 'bccbab', 'trunk']",{'length': 100}
"['stack', 'trackcomputer', 'stack', 'abilityeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['array', 'source', 'length', 'issue', 'point', 'level', 'return', 'warningeaecd', 'bccbab', 'trunk']","{'length': 100, 'issue': 100}"
"['tweak', 'injection', 'warningeaecd', 'bccbab', 'trunk']",{'injection': 100}
"['enable', 'injection', 'detectioneaecd', 'bccbab', 'trunk']",{'injection': 100}
"['depth', 'stack', 'check', 'operandeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['catch', 'object', 'stack', 'exception', 'opcodeeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['analysis', 'priority', 'thread', 'lowereaecd', 'bccbab', 'trunk']",{'thread': 100}
"['stack', 'exception', 'print', 'traceeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['stack', 'generate', 'athrow', 'error', 'emptyeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['sensitive', 'signedeaecd', 'bccbab', 'trunk']",{'Sensitive': 100}
"['patch', 'applyvalue', 'incorrect', 'signature', 'array', 'pusheddiomidis', 'spinelliseaecd', 'bccbab', 'trunk']",{'incorrect': 100}
"['deref', 'medium', 'param', 'issue', 'priority', 'warningtarget', 'dangerouseaecd', 'bccbab', 'trunk']",{'issue': 100}
"['stack', 'imprecisioneaecd', 'bccbab', 'trunk']",{'stack': 100}
"['renamedvalue', 'stack', 'return', 'definitelyeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['length', 'block', 'circuit', 'shorteaecd', 'bccbab', 'trunk']",{'length': 100}
"['summary', 'generation', 'explicitlyeaecd', 'bccbab', 'trunk']",{'generation': 100}
"['stack', 'deptheaecd', 'bccbab', 'trunk']",{'stack': 100}
"['instanceof', 'correctinstanceof', 'incorrect', 'previouswould', 'succeedeaecd', 'bccbab', 'trunk']",{'incorrect': 100}
"['object', 'analysiserror', 'error', 'analysisrather', 'dealingexception', 'stack', 'traceeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['sensitive', 'little', 'priority', 'leveleaecd', 'bccbab', 'trunk']",{'Sensitive': 100}
"['injection', 'currentlyeaecd', 'bccbab', 'trunk']",{'injection': 100}
"['underflows', 'stack', 'bytecode', 'propagatedeaecd', 'bccbab', 'trunk']","{'underflow': 95, 'stack': 100}"
"['fixedstyleproblem', 'fixedvalue', 'integer', 'check', 'methodcheck', 'result', 'rewrote', 'simplifieddivision', 'double', 'integercheck', 'catchanalysiseaecd', 'bccbab', 'trunk']",{'integer': 100}
"['summary', 'report', 'suppresses', 'large', 'sample', 'property', 'extra', 'project', 'generation', 'memoryeaecd', 'bccbab', 'trunk']",{'generation': 100}
"['catch', 'stack', 'empty', 'local', 'expectseaecd', 'bccbab', 'trunk']",{'stack': 100}
"['thread', 'constructor', 'dubious', 'method', 'callingeaecd', 'bccbab', 'trunk']",{'thread': 100}
"['thread', 'somethingeaecd', 'bccbab', 'trunk']",{'thread': 100}
"['false', 'length', 'positiveeaecd', 'bccbab', 'trunk']",{'length': 100}
"['deadlock', 'selectedeaecd', 'bccbab', 'trunk']",{'deadlock': 100}
"['message', 'array', 'length', 'returningeaecd', 'bccbab', 'trunk']",{'length': 100}
"['length', 'unlesseaecd', 'bccbab', 'trunk']",{'length': 100}
"['event', 'thread', 'method', 'staticeaecd', 'bccbab', 'trunk']",{'thread': 100}
"['incorrect', 'bitmaskeaecd', 'bccbab', 'trunk']",{'incorrect': 100}
"['substitute', 'keyword', 'generation', 'sidebarattractiveeaecd', 'bccbab', 'trunk']",{'generation': 100}
"['fatal', 'analysis', 'exception', 'reporteaecd', 'bccbab', 'trunk']",{'fatal': 100}
"['sensitive', 'attempt', 'information', 'attempt', 'update', 'changedvalue', 'update', 'thinkproblem', 'information', 'instruction', 'requiredeaecd', 'bccbab', 'trunk']",{'Sensitive': 100}
"['elimination', 'redundantrecognition', 'idiomvalue', 'number', 'instructioninformation', 'update', 'alreadyvalue', 'stack', 'matchvalueeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['minor', 'control', 'deduction', 'sensitive', 'simplificationeaecd', 'bccbab', 'trunk']",{'Sensitive': 100}
"['subclass', 'access', 'superclass', 'field', 'instanceaffect', 'statsaccess', 'field', 'treatedhandle', 'class', 'thread', 'extendedsubclass', 'threadeaecd', 'bccbab', 'trunk']",{'thread': 100}
"['comparator', 'version', 'message', 'insensitive', 'printeaecd', 'bccbab', 'trunk']",{'Sensitive': 90}
"['insensitive', 'propertyeaecd', 'bccbab', 'trunk']",{'Sensitive': 90}
"['findbugs', 'bytecode', 'package', 'movedanalysis', 'fixedoccurrence', 'stack', 'changeeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['exception', 'stack', 'underflow', 'improvedeaecd', 'bccbab', 'trunk']","{'stack': 100, 'underflow': 100}"
"['array', 'check', 'length', 'preferenceeaecd', 'bccbab', 'trunk']",{'length': 100}
"['problem', 'stack', 'print', 'traceeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['object', 'thread', 'checkeaecd', 'bccbab', 'trunk']",{'thread': 100}
"['stack', 'approach', 'limitation', 'fundamental', 'aroundsubroutinethrowhandle', 'placeanalysis', 'sophisticatedcontrol', 'detect', 'subroutine', 'includingnestingeaecd', 'bccbab', 'trunk']",{'stack': 100}
"['sensitive', 'increase', 'precision', 'pollute', 'downstreamrecombines', 'control', 'sensitiveeaecd', 'bccbab', 'trunk']",{'Sensitive': 100}
"['treatment', 'ifnull', 'instructionvalue', 'actuallyinformation', 'stack', 'accurate', 'propagateeaecd', 'bccbab', 'trunk']",{'stack': 100}
