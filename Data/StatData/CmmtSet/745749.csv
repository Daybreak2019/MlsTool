message,fuzzy
"['thread', 'affinity', 'refactoringbetter', 'thread', 'assertion', 'contextfailure']",{'thread': 100}
"['method', 'expose', 'params', 'config', 'factoryclose']",{'expose': 100}
"['mergerequest', 'master', 'myemperor', 'mergeissue', 'effect', 'incorrect', 'exception']",{'incorrect': 100}
"['mergerequest', 'master', 'mergemethod', 'expose', 'configure', 'module', 'guice']",{'expose': 100}
"['thread', 'affinitysingle', 'class', 'review', 'comment']",{'thread': 100}
"['ignore', 'security', 'local', 'check']",{'Security': 100}
"['obsolete', 'concurrency', 'class', 'customimplementation', 'executor', 'service']",{'concurren': 90}
"['issue', 'table', 'summary', 'border', 'suite']",{'issue': 100}
"['issue', 'table', 'summary', 'border', 'suite']",{'issue': 100}
"['issue', 'value', 'priorityclose']",{'issue': 100}
"['eclipse', 'expose']",{'expose': 100}
"['thread', 'affinitycloseclassfollowingthread', 'affinityclass', 'parallel']",{'thread': 100}
"['streamline', 'status', 'thread', 'interruptclose']",{'thread': 100}
"['dynamic', 'injection', 'streamlineclose']",{'injection': 100}
"['class', 'concurrent', 'support']",{'concurrent': 100}
"['dynamic', 'injection', 'streamlineclose']",{'injection': 100}
"['instance', 'parallelism', 'streamline', 'basedclosecombination', 'instance', 'group', 'parallelafore', 'combination', 'mentionednumber', 'thread', 'ensure', 'equalthreadcountwithin', 'instance', 'methodinstance', 'testng']",{'thread': 100}
"['issue', 'interface', 'fieldclose']",{'issue': 100}
"['issue', 'update']",{'issue': 100}
"['issue', 'return', 'comment']",{'issue': 100}
"['mergekrmahadevan', 'request', 'issue', 'mergedependency', 'circular']",{'issue': 100}
"['internal', 'format', 'thread']",{'thread': 100}
"['mergekrmahadevan', 'support', 'graphviz', 'request', 'mergevisualisation', 'graphviz', 'expose']",{'expose': 100}
"['mergekrmahadevan', 'incorrect', 'usage', 'request', 'computeifabsent', 'usage']",{'incorrect': 100}
"['mergekrmahadevan', 'issue', 'snapshot', 'request']",{'issue': 100}
"['ebfea', 'mergekrmahadevan', 'support', 'request', 'thread', 'affinitythread']",{'thread': 100}
"['mergehelper', 'safety', 'request', 'thread', 'stachenovissue', 'thread', 'safety']",{'thread': 100}
"['issue', 'thread', 'safetythread', 'safetysynchronizedmap']","{'issue': 100, 'thread': 100}"
"['mergekrmahadevan', 'request', 'mergenative', 'support', 'injection', 'factory']",{'injection': 100}
"['native', 'support', 'injection', 'factoryclose']",{'injection': 100}
"['mergerequest', 'stachenov', 'thread', 'mergethread']",{'thread': 100}
"['ccace', 'mergekrmahadevan', 'issue', 'method', 'request', 'interceptor', 'mergefirst', 'interceptor', 'order']",{'issue': 100}
"['refactor', 'dynamicgraph', 'algorithm', 'efficientdynamicgraph', 'organizes', 'curvepractical', 'lotsofedgestest', 'finish', 'length']",{'length': 100}
"['mergerequest', 'sskorol', 'class', 'injection', 'factoryinjection', 'class', 'provider', 'factory']",{'injection': 100}
"['injection', 'class', 'provider', 'provider', 'extract', 'constructor', 'class', 'level', 'listener', 'interception', 'factoryclass', 'value']",{'injection': 100}
"['mergeeyehwan', 'request', 'concurrent', 'linkedsecure', 'insertion']",{'concurrent': 100}
"['mergekrmahadevan', 'issue', 'request', 'sonarcubeissue', 'sonarcube']",{'issue': 100}
"['mergekrmahadevan', 'request', 'collection', 'concurrentcollection', 'concurrent']",{'concurrent': 100}
"['queue', 'concurrent']",{'concurrent': 100}
"['mergekrmahadevan', 'request', 'mergeparameter', 'injection', 'method']",{'injection': 100}
"['parameter', 'injection', 'methodclose']",{'injection': 100}
"['insertguardstructure', 'thread']",{'thread': 100}
"['failure', 'openjdkfails', 'travis', 'openjdk', 'buildissue', 'provider', 'security', 'gradle', 'usingecdhe', 'cipherpleaseissue', 'gradle']",{'Security': 100}
"['thread', 'field']",{'thread': 100}
"['issue', 'performanceassertequals', 'version', 'return']",{'issue': 100}
"['mergekrmahadevan', 'issue', 'request', 'sonarcubesonarcube', 'violation']",{'issue': 100}
"['fbdfb', 'mergekrmahadevan', 'request', 'issue', 'mergeissue']",{'issue': 100}
"['mergekrmahadevan', 'request', 'mergeclass', 'param', 'injection', 'beforeclass']",{'injection': 100}
"['class', 'param', 'injection', 'beforeclassclosechange', 'unrelatedclass', 'parameter', 'violation', 'sonarprevious', 'delivery']",{'injection': 100}
"['issue', 'class', 'classfileset']",{'issue': 100}
"['issue', 'class', 'classfileset']",{'issue': 100}
"['issue', 'reporter', 'duplicate']",{'issue': 100}
"['issue', 'cbeust', 'testng']",{'issue': 100}
"['mergegjuillot', 'request', 'mergenative', 'injection', 'provider']",{'injection': 100}
"['native', 'class', 'injection', 'dataprovider']",{'injection': 100}
"['error', 'generatedsummary', 'incorrect', 'table', 'testng', 'incorrect', 'table', 'testng', 'emptylocation', 'large', 'error', 'column', 'renderingclose']",{'incorrect': 100}
"['mergekrmahadevan', 'issue', 'request', 'sonarcubesonar', 'violation']",{'issue': 100}
"['issue', 'dynamicgraph', 'priority', 'fixingclosedynamicgraph', 'dependent', 'methodmethod', 'executedcause', 'segregate', 'independent', 'testnglowest', 'method']",{'issue': 100}
"['testng', 'number', 'pattern', 'thread']",{'thread': 100}
"['issue', 'github']",{'issue': 100}
"['issue', 'cbeust', 'testng']",{'issue': 100}
"['instance', 'check', 'parallel', 'method', 'execution', 'thread']",{'thread': 100}
"['issue', 'sonarlint']",{'issue': 100}
"['cfcbf', 'ceefb', 'mergekrmahadevan', 'issue', 'request', 'sonarcube', 'issue']",{'issue': 100}
"['mergerequest', 'bmorganatlas', 'mergeresource', 'testng', 'subdirectory', 'report', 'generation']",{'generation': 100}
"['resource', 'testng', 'directory', 'report', 'generation', 'prefix', 'applies', 'class', 'relative', 'report', 'artifact']",{'generation': 100}
"['issue', 'github']",{'issue': 100}
"['mergekrmahadevan', 'request', 'mergetestng', 'unique', 'listener', 'injection', 'ensure']",{'injection': 100}
"['unique', 'listener', 'injection', 'logic', 'ensure', 'testnglistener', 'class', 'instanceduplicate', 'listener', 'invocation']",{'injection': 100}
"['reporter', 'implementationlistener', 'invocation', 'deliveryimplementation', 'streamlinedfirst', 'invokedfirst', 'testnglistenertestngtestng', 'report', 'generation']",{'generation': 100}
"['mergerequest', 'patch', 'benmccann', 'mergerepos', 'security', 'maven']",{'Security': 100}
"['repos', 'security', 'maven', 'alwaysdeveloper']",{'Security': 100}
"['provider', 'method', 'parallel', 'number', 'class', 'thread', 'suite', 'sequential']",{'thread': 100}
"['multipl', 'thread']",{'thread': 100}
"['bookkeeping', 'thread', 'reliable', 'active', 'result']",{'thread': 100}
"['multiple', 'execution', 'accessors', 'thread', 'suite', 'state']",{'thread': 100}
"['mergeissue', 'request', 'juherr', 'mergeissue', 'incorrect']",{'incorrect': 100}
"['issue', 'sonarqube']",{'issue': 100}
"['mergeissue', 'request', 'juherr', 'mergeissue', 'parameter', 'xmlreporter', 'crash']",{'crash': 100}
"['eeccd', 'mergerequest', 'entryspace', 'patch', 'xmlreporter', 'issue']",{'issue': 100}
"['issue', 'random', 'groupbugtest']",{'issue': 100}
"['issue', 'cbeust', 'testng']",{'issue': 100}
"['return', 'provider', 'class', 'crash', 'empty', 'array']",{'crash': 100}
"['issue', 'spock']",{'issue': 100}
"['configure', 'sonarqube', 'travisolder', 'issue', 'jacoco', 'version']",{'issue': 100}
"['issue', 'parameter']",{'issue': 100}
"['fdabe', 'mergekrmahadevan', 'request', 'mergeobject', 'altercation', 'suite', 'expose']",{'expose': 100}
"['issue', 'state', 'instance']",{'issue': 100}
"['issue', 'testng', 'error', 'revert', 'eclipse', 'remotetestng', 'bdfdeacdbfaea']",{'issue': 100}
"['bcaee', 'mergeorigin', 'issue', 'master', 'remote', 'mergeconflict']",{'issue': 100}
"['mergeorigin', 'issue', 'master', 'remote', 'mergeconflict']",{'issue': 100}
"['mergeorigin', 'issue', 'master', 'remote', 'mergeconflict']",{'issue': 100}
"['mergeorigin', 'issue', 'master']",{'issue': 100}
"['mergeorigin', 'issue', 'master', 'remote', 'mergeconflict']",{'issue': 100}
"['mergeorigin', 'issue', 'master']",{'issue': 100}
"['failure', 'debug', 'trace', 'stack']",{'stack': 100}
"['compilation', 'travis', 'issue']",{'issue': 100}
"['constructor', 'injection', 'dataprovider']",{'injection': 100}
"['dataprovider', 'guice', 'injection']",{'injection': 100}
"['issue', 'cbeust', 'testngthomas']",{'issue': 100}
"['issue', 'testng', 'xmlreporterannotation', 'nullablepossible']",{'issue': 100}
"['module', 'suite', 'property', 'parentproperty', 'parent', 'module', 'suite', 'guicemodule', 'approach', 'factorypossibility', 'possibleproperty', 'testng', 'parent', 'module', 'guicemethod', 'module', 'injector', 'getinstance', 'factorydependency', 'injection', 'parent', 'module']",{'injection': 100}
"['scheduling', 'randomness', 'increaserandomness', 'increase', 'likely', 'scheduling', 'patch']",{'randomness': 100}
"['switch', 'randomness', 'increase', 'contextsystem', 'result', 'inherentlynumber', 'concurrent', 'default', 'runningthreadnumber', 'thread', 'patch', 'processor', 'likelyresult']","{'randomness': 100, 'concurrent': 100, 'thread': 100}"
"['incorrect', 'constructor']",{'incorrect': 100}
"['dataprovider', 'injection']",{'injection': 100}
"['mergeissue', 'request', 'vladrassokhin', 'mergeimprove', 'issue']",{'issue': 100}
"['print', 'stack']",{'stack': 100}
"['colspan', 'alignment', 'issue', 'emailablereport']",{'issue': 100}
"['maven', 'surefire', 'filter', 'frame', 'stack']",{'stack': 100}
"['trace', 'stack', 'style']",{'stack': 100}
"['stack', 'trace']",{'stack': 100}
"['thread', 'distinguish']",{'thread': 100}
"['trace', 'stack']",{'stack': 100}
"['thread', 'dataprovider']",{'thread': 100}
"['performance', 'improvement', 'report', 'generation']",{'generation': 100}
"['class', 'thread', 'loader']",{'thread': 100}
"['mergelukasj', 'request', 'issue', 'mergeissue', 'support', 'resource', 'class']",{'issue': 100}
"['issue', 'support', 'resource', 'class']",{'issue': 100}
"['issue', 'method', 'testng']",{'issue': 100}
"['issue', 'string', 'assertequals']",{'issue': 100}
"['issue', 'testng', 'error', 'eclipse', 'remotetestng']",{'issue': 100}
"['simple', 'mustachereport', 'generation']",{'generation': 100}
"['issue', 'github']",{'issue': 100}
"['issue', 'cbeust', 'testng', 'workaround']",{'issue': 100}
"['issue', 'instance', 'itest']",{'issue': 100}
"['trace', 'stack']",{'stack': 100}
"['trace', 'stack']",{'stack': 100}
"['getxmltest', 'expose']",{'expose': 100}
"['trace', 'stack']",{'stack': 100}
"['trace', 'stack']",{'stack': 100}
"['trace', 'stack']",{'stack': 100}
"['trace', 'junitreports', 'stack']",{'stack': 100}
"['testng', 'invalid', 'generation', 'filter']",{'generation': 100}
"['stack', 'trace']",{'stack': 100}
"['issue', 'method', 'afterxxx', 'annotation', 'setting', 'class', 'versa']",{'issue': 100}
"['incorrect', 'parallel', 'parameter', 'dataprovider', 'injection']","{'incorrect': 100, 'injection': 100}"
"['incorrect', 'method', 'order', 'configuration']",{'incorrect': 100}
"['incorrect', 'method', 'order', 'configuration']",{'incorrect': 100}
"['runner', 'issue', 'catch', 'initialize', 'right', 'suite', 'configuration']",{'issue': 100}
"['runner', 'issue', 'catch', 'initialize', 'right', 'suite', 'configuration']",{'issue': 100}
"['issue', 'makar', 'error']",{'issue': 100}
"['issue', 'assertequals', 'javadoc', 'primitiveassert', 'relevant']",{'issue': 100}
"['thread', 'robuts']",{'thread': 100}
"['issue', 'testng', 'invalid', 'trivial', 'message']",{'issue': 100}
"['injection', 'provider']",{'injection': 100}
"['verbose', 'trace', 'reporter', 'stack']",{'stack': 100}
"['thread', 'suite', 'attribute']",{'thread': 100}
"['testng', 'class', 'entire', 'thread']",{'thread': 100}
"['ignore', 'issue', 'testng', 'class', 'implicit', 'classpath', 'definition', 'loader']",{'issue': 100}
"['dependency', 'injection']",{'injection': 100}
"['injection', 'method']",{'injection': 100}
"['concurrency', 'resultmap']",{'concurren': 90}
"['integer', 'support', 'replcae']",{'integer': 100}
"['method', 'suite', 'generation', 'empty']",{'generation': 100}
"['method', 'parallel', 'thread']",{'thread': 100}
"['instance', 'method', 'multiple', 'thread']",{'thread': 100}
"['valueof', 'strict', 'method', 'addedchange', 'generation', 'suite', 'smallfixedchange']",{'generation': 100}
"['testng', 'cfbafcbd', 'summary', 'thread', 'group', 'report']",{'thread': 100}
"['stack', 'trace']",{'stack': 100}
"['aftergroups', 'concurrency']",{'concurren': 90}
"['concurrency', 'backport']",{'concurren': 90}
"['thread', 'sequential']",{'thread': 100}
"['testng', 'double', 'comparison', 'eclipse', 'stack', 'click', 'plugin']",{'stack': 100}
"['dependency', 'incorrect', 'testng']",{'incorrect': 100}
