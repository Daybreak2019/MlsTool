message,fuzzy
"['ensure', 'local', 'object', 'clearing', 'stack', 'analyze', 'monitor', 'revertreverts']",{'stack': 100}
"['stack', 'print', 'graalvm', 'traceissue']",{'stack': 100}
"['ensure', 'local', 'object', 'clearing', 'stack', 'analyze', 'monitorstuart']",{'stack': 100}
"['stack', 'construction', 'framestuart']",{'stack': 100}
"['trace', 'array', 'object', 'stack', 'throwstuart']",{'stack': 100}
"['concurrent', 'realizationstuart']",{'concurrent': 100}
"['stack', 'conversion']",{'stack': 100}
"['preds', 'integer', 'precision', 'renamerichhickey']",{'integer': 100}
"['reassessment', 'tuples', 'direct', 'mapentries']",{'assessment': 91}
"['class', 'depth', 'failure', 'switch', 'frame', 'stack']",{'stack': 100}
"['absolute', 'reposition', 'position', 'navigatorparameter', 'issue', 'defaultwhether', 'prefix', 'defaultdefault', 'otherwiseensure', 'correctness', 'commonimplementation', 'clispformat', 'clisp', 'patch', 'output', 'returnsymbol', 'insensitive', 'common', 'printedclojure', 'whereasstuart']","{'issue': 100, 'Sensitive': 90}"
"['proxy', 'abstract', 'method', 'interfaceproxy', 'class', 'abstract', 'generate', 'producedsuper', 'incorrect', 'methodexist', 'abstract', 'methodstuart']",{'incorrect': 100}
"['counter', 'thread', 'reportstuart']",{'thread': 100}
"['application', 'overflow', 'template', 'stack', 'postwalkstuart']","{'overflow': 100, 'stack': 100}"
"['error', 'incorrect', 'locationstuart']",{'incorrect': 100}
"['collection', 'volatile', 'field', 'thread', 'final', 'transient', 'visibility', 'acrossstuart']",{'thread': 100}
"['sends', 'release', 'deadlock', 'seque', 'pendingstuart']",{'deadlock': 100}
"['switch', 'boolean', 'thread', 'check', 'birth']",{'thread': 100}
"['expose', 'vector', 'fixhash', 'murmur', 'different', 'basis', 'return']",{'expose': 100}
"['clear', 'local', 'dynamic', 'thread', 'memory', 'transactionsentinel', 'conveyance', 'issue', 'describedstuart']","{'thread': 100, 'issue': 100}"
"['stack', 'emptystuart']",{'stack': 100}
"['integer', 'presume', 'round']",{'integer': 100}
"['generation', 'permgen']",{'generation': 100}
"['custom', 'buffer', 'allowstuart']",{'buffer': 100}
"['local', 'redefs', 'thread', 'insteadstuart']",{'thread': 100}
"['problem', 'alongoriginal', 'problem', 'methodchange', 'fixture', 'inputstream', 'functionsuite', 'addingoutputstream', 'readerreturn', 'order', 'encodingarray', 'unicode', 'pointevery', 'buffer', 'worthbufferwritten', 'single', 'orderslurp', 'input', 'streamascii']",{'buffer': 100}
"['temporary', 'integer', 'evaluation', 'autobox', 'revertreverts']",{'integer': 100}
"['integer', 'evaluation']",{'integer': 100}
"['length', 'iterate', 'dispatch', 'codedstuart']",{'length': 100}
"['thread', 'handlerstuart']",{'thread': 100}
"['thread', 'agentstuart']",{'thread': 100}
"['coerce', 'integer', 'longs']",{'integer': 100}
"['separate', 'filling', 'process', 'stdout', 'buffer', 'inenc', 'character', 'input', 'specifyingoutenc', 'option', 'input', 'renamedhandle', 'default', 'platformplatform', 'window', 'command', 'likely', 'support', 'thread', 'stdout', 'stdin']","{'buffer': 100, 'thread': 100}"
"['initial', 'version', 'overflow']",{'overflow': 100}
"['constituent', 'character', 'allowbigints', 'reducepromote', 'restore', 'primitive', 'returnexcept', 'integer', 'counterpart', 'double', 'returnoverflow']",{'integer': 100}
"['account', 'static', 'double', 'longs', 'stack']",{'stack': 100}
"['exception', 'crash', 'object', 'equal', 'method', 'throwstuart']",{'crash': 100}
"['consumpton', 'stack', 'fixedstuart']",{'stack': 100}
"['thread', 'boundstuart']",{'thread': 100}
"['issue', 'rename']",{'issue': 100}
"['integer', 'return', 'value']",{'integer': 100}
"['symbol', 'incorrect', 'exception', 'message', 'argument', 'firstchouser']",{'incorrect': 100}
"['local', 'thread', 'thread', 'bindingthread', 'interface']",{'thread': 100}
"['refactor', 'vector', 'safety', 'function', 'check', 'mutable', 'thread', 'support']",{'thread': 100}
"['scgilardi', 'issue', 'patch', 'default']",{'issue': 100}
"['minor', 'version', 'integer', 'clojure', 'incremental']",{'integer': 100}
"['patch', 'alignment', 'version', 'clojure', 'support', 'issue']",{'issue': 100}
"['repository', 'local', 'maven', 'install', 'hlship', 'issue', 'patch', 'result']",{'issue': 100}
"['issue', 'exception']",{'issue': 100}
"['filename', 'issue', 'patch']",{'issue': 100}
"['class', 'chouser', 'option', 'issue', 'patch']",{'issue': 100}
"['issue', 'control', 'reader', 'jhawk', 'patch']",{'issue': 100}
"['validate', 'resultset', 'label', 'unique', 'column', 'issue']",{'issue': 100}
"['patch', 'method', 'expose', 'chouser', 'static', 'field', 'issue']","{'expose': 100, 'issue': 100}"
"['class', 'ancestor', 'patch', 'parent', 'superclass', 'issue', 'cemerick']",{'issue': 100}
"['proxy', 'patch', 'bridge', 'cgrand', 'covariant', 'generate', 'issue', 'method', 'return']",{'issue': 100}
"['proxy', 'patch', 'issue', 'iface', 'method']",{'issue': 100}
"['bytecode', 'rwvtveer', 'issue', 'patch']",{'issue': 100}
"['patch', 'issue', 'chouser', 'trolard']",{'issue': 100}
"['patch', 'chouser', 'option', 'order', 'sensitivity', 'issue']",{'issue': 100}
"['patch', 'issue', 'timothypratley']",{'issue': 100}
"['integration', 'maven', 'hlship', 'issue', 'patch']",{'issue': 100}
"['maven', 'directory', 'hlship', 'issue', 'patch', 'destination', 'revert']",{'issue': 100}
"['patch', 'maven', 'hlship', 'issue']",{'issue': 100}
"['interfaceimplement', 'stack', 'countstack', 'patch', 'chouser']",{'stack': 100}
"['integer', 'achim', 'passen', 'patch']",{'integer': 100}
"['usage', 'incorrect', 'chouser', 'report', 'patch']",{'incorrect': 100}
"['integer', 'overflow']","{'integer': 100, 'overflow': 100}"
"['importproxy', 'security', 'class', 'applet', 'package', 'violation', 'method', 'privateproxy', 'dynamic', 'classloaderapplet']",{'Security': 100}
"['integer', 'patch']",{'integer': 100}
"['method', 'expose', 'patch']",{'expose': 100}
"['print', 'stephen', 'length', 'gilardi', 'patch', 'level']",{'length': 100}
"['integer', 'bitops']",{'integer': 100}
"['vector', 'integer']",{'integer': 100}
"['style', 'radix', 'octal', 'integer']",{'integer': 100}
"['parent', 'context', 'dynamic', 'thread', 'classloader']",{'thread': 100}
"['injection', 'optional', 'function']",{'injection': 100}
"['resolution', 'issue']",{'issue': 100}
"['thread', 'policy']",{'thread': 100}
"['history', 'length', 'adaptive']",{'length': 100}
