message,fuzzy
"['setup', 'operation', 'timeouts', 'increasedriveoutputprint', 'issue', 'selenium', 'tracebacks', 'driver', 'runningchange']",{'issue': 100}
"['deletealong', 'sysmeta', 'shard', 'object', 'problematic', 'broker', 'shard', 'object', 'broker', 'handoff', 'deletedattribute', 'broker', 'deletedstoredaccount', 'broker', 'usingshard', 'container', 'responsible', 'objectnewer', 'replicationpointer', 'shard', 'replacingconsequence', 'listingnever', 'range', 'shard', 'detailcontainercontains', 'patch', 'issue', 'demonstratessysmeta', 'shard', 'containersysmeta', 'shard', 'container', 'whitelistedshard', 'meaning', 'alistairncoles', 'alistairchange']",{'issue': 100}
"['shard', 'deletes', 'issue', 'empty', 'acceptsreclaim', 'shard', 'lettingpartialifeabbbabfc']",{'issue': 100}
"['pipeline', 'reconciler', 'encryption', 'encryption', 'operator', 'pipeline', 'reconcilerchangeclose']",{'encryption': 100}
"['patch', 'binary', 'regression', 'missingrecent', 'binary', 'simplebehavior', 'perfectpatch', 'redundant', 'incorrect', 'binarydecorator', 'serverreturn', 'shortcutnonzerofailure', 'basicproxy', 'storage', 'sinceissue', 'missingwould', 'simplestnever', 'error', 'return', 'nothingproxy', 'server', 'missingreturn', 'error', 'littleseveralwildcard', 'aliasreturn', 'service', 'available', 'startright']",{'incorrect': 100}
"['configurable', 'clock', 'allowabledefault', 'minuteminute', 'limitupgradeimpactrequest', 'weakens', 'protection', 'security', 'somewhatbehavior', 'setting', 'operator', 'priorfilter', 'section', 'alistairncoles', 'alistairchange']",{'Security': 100}
"['status', 'comparisondummy', 'bucket', 'storedmight', 'circumstance', 'comparedresponse', 'integer', 'unsupporteddefault', 'value', 'return', 'insteaddefault', 'bucket', 'response', 'alistairncoles', 'alistairchangeclose']",{'integer': 100}
"['audit', 'object', 'developer', 'operator', 'watcherobject', 'useful', 'operator', 'swiftprovides', 'cluster', 'boundary', 'auditor', 'object', 'definedadditional', 'object', 'iteratesemantic', 'ensure', 'cluster', 'operatorsegment', 'consistency', 'accountedswift', 'object', 'encryption', 'locatewatcher', 'entry', 'auditor', 'commitconfig', 'namedmethod', 'class', 'watcher', 'leastkwargskwargs', 'startkwargskwargsauditor', 'startaudit', 'objectmethod', 'argument', 'auditkeyword', 'version', 'contextadditional', 'complicationprocessinclude', 'reference', 'implementation', 'pluginplugin', 'watcherchange']",{'encryption': 100}
"['concurrent', 'greenpool']",{'concurrent': 100}
"['concurrent', 'greenpoolrequest', 'backup', 'blockage', 'waterfallbatch', 'practicerequest', 'primary', 'fragmentenough', 'feeder', 'quick', 'pendingenough', 'request', 'proxy', 'network', 'pending', 'backup', 'numbernever', 'request', 'extra', 'improvedassertionerrors', 'fakestatus', 'statuschange']",{'concurrent': 100}
"['swift', 'encryption']",{'encryption': 100}
"['mergeswift', 'expose']",{'expose': 100}
"['crypto', 'native']",{'crypto': 100}
"['swift', 'expose', 'commandcommandprobe', 'helpful', 'available', 'thinksince', 'childseamless', 'reload', 'option', 'mainlyseamless', 'workerfinish', 'connection', 'spawn', 'parent', 'existingreplacement', 'graceful', 'workerchange']",{'expose': 100}
"['socket', 'workerdistribution', 'lumpy', 'request', 'seemsproject', 'parallelsolution', 'eventlet', 'sinceforeverarticlehitch', 'issue', 'varnishcommit', 'eventletchange']",{'issue': 100}
"['crypto', 'string', 'native', 'properwould', 'stringversion', 'major', 'writtenpretty', 'proxywould', 'error', 'proxy', 'corrupt', 'invalid', 'client', 'contentwrite', 'ensure', 'nativestill', 'effort', 'ambiguous', 'string', 'whetherrequest', 'string', 'native', 'metadataencode', 'error', 'decodematch', 'native', 'string', 'trustpipeline', 'metadatarelatedversion', 'ability', 'optiondefault', 'upgrade', 'proxypython', 'upgrade', 'firstpython', 'upgradeicccabddd']",{'crypto': 100}
"['container', 'generation']",{'generation': 100}
"['proxy', 'memcache', 'response', 'entry', 'killingrespond', 'helpful', 'cache', 'cache', 'concurrent', 'repopulatereturniaaaeeabbfefdda', 'changeclose']",{'concurrent': 100}
"['suffix', 'updater', 'shuffle', 'failureoften', 'tuningadjust', 'concurrency', 'dependingcontainer', 'layercontainerbacklog', 'async', 'updater', 'pendings', 'restarts', 'giantwould', 'updater', 'concurrency', 'directory', 'suffix', 'startfound', 'making', 'wantedreduce', 'failure', 'startfirst', 'retry', 'failure', 'failedconfigs', 'reasonable', 'handful', 'almostoverall', 'overwhelmedshuffle', 'suffixchangeclose']",{'concurren': 90}
"['mergeaccount', 'encryption', 'swift', 'audit']",{'encryption': 100}
"['mergefilename', 'formpost', 'unicode', 'issue']",{'issue': 100}
"['unicode', 'issue', 'filename', 'formpostattribute', 'native', 'string', 'filenameconvert']",{'issue': 100}
"['issue', 'duplicatedduplicatedstrippedvalue', 'additioniddfbceab']",{'issue': 100}
"['object', 'proxy', 'queue', 'chunkinstanciates', 'putter', 'proxystore', 'object', 'serverputter', 'storage', 'policy', 'dependingbufferize', 'queue', 'chunkobject', 'socket', 'chunksocket', 'greenthreadobject', 'consume', 'server', 'queue', 'default', 'queue', 'avoidobject', 'server', 'ensure', 'queue', 'greenthread', 'block', 'socket', 'reading', 'clientwrite', 'manages', 'buffer', 'system', 'socket', 'behavior', 'concerningwrite', 'bufferreturn', 'behaves', 'putterexcept', 'dynamic', 'adapts', 'bufferspeedbuffer', 'socket', 'queue', 'additionshown', 'duplicate', 'interest', 'queueingprofilingremove', 'patch', 'greenthread', 'buffer', 'serverreader', 'consumption', 'benchmark', 'upload', 'increasingchange']",{'buffer': 100}
"['header', 'abort', 'message', 'header', 'client', 'request', 'header', 'length', 'contentmight', 'request', 'proxy', 'server', 'authorizedpython', 'request', 'proxy', 'backend', 'couldpython', 'backend', 'client', 'singlemultiple', 'request', 'object', 'reflect', 'eventlet']",{'length': 100}
"['range', 'shard', 'empty', 'sharderpossiblity', 'container', 'container', 'empty', 'handoffvalid', 'container', 'shardcleavesmaller', 'usingrange', 'shard', 'container', 'numbermaybe', 'handoff', 'errorrange', 'shard', 'container', 'empty', 'numbercould', 'process', 'shard', 'object', 'patch', 'issue', 'method', 'shardreturn', 'container', 'empty', 'replicatehandoff', 'locationrange', 'shard', 'context', 'shardingrange', 'shard', 'treatidfcfbcdfaaaa', 'changeclose']",{'issue': 100}
"['trust', 'proxy', 'length', 'client', 'disconnectedtransfer', 'chunkedlength', 'allocation', 'content', 'backendrequest', 'length', 'content']",{'length': 100}
"['specifyfinal', 'symlink', 'target', 'error', 'symlink', 'targetdynamic', 'object', 'symlink', 'targetstatic', 'symlink', 'existcontent', 'sincematch', 'specifiy', 'client', 'symlinkcontainer', 'length', 'contentgoodness', 'bonuslocation', 'sniffingcause', 'symlink', 'awarelater', 'anywayallow', 'symlink', 'middlewaresupdate', 'container', 'override', 'dynamic', 'symlink']",{'length': 100}
"['mergeallow', 'value', 'connection', 'insensitive']",{'Sensitive': 90}
"['insensitive', 'connectionparse', 'proxy', 'insert', 'header', 'connectionvalue', 'random', 'occurs', 'functionalrealisticicbdeefdecceebe']",{'Sensitive': 90}
"['swift', 'encryption']",{'encryption': 100}
"['available', 'updatebandit', 'blacklist', 'pluginslatest', 'reference', 'pluginschangeclose']",{'blacklist': 100}
"['private', 'method', 'rework', 'backend', 'methodallow', 'backend', 'private', 'method', 'truishallows', 'expose', 'expandprivate', 'available', 'methodrobust', 'delete', 'async', 'subsequent', 'check', 'preservedlistingslash', 'object']",{'expose': 100}
"['partition', 'integer']",{'integer': 100}
"['partition', 'integer', 'string', 'changereplicator', 'object', 'partition', 'input', 'number', 'targetreplicator', 'partition', 'input', 'storedintegermethod', 'retreve', 'partition', 'stringpartition', 'target']",{'integer': 100}
"['response', 'heartbeatingheader', 'review', 'issue', 'purpose', 'force', 'order', 'response', 'eventlet', 'preventwhole']",{'issue': 100}
"['stringclient', 'response', 'property', 'stdlibresponseerror', 'response', 'raiseheader', 'stringreturn', 'native', 'container', 'stringthingheader', 'formatinstead', 'switch', 'integer', 'divisionideebcdecebbc']",{'integer': 100}
"['swift', 'object', 'crypto', 'metadata', 'detail']",{'crypto': 100}
"['object', 'decryptionobject', 'decryption', 'metadatasysmeta', 'object', 'crypto', 'wrongencryptiondecrypt', 'patch', 'storedchangeauthor', 'thomas', 'goirandpartial']","{'encryption': 90, 'crypto': 100}"
"['display', 'object', 'crypto', 'metadata', 'detail', 'swiftifcadecdbbfbadd']",{'crypto': 100}
"['duplicate', 'usingcause', 'issue', 'weird', 'actuallydespite', 'yieldchange', 'ibfdfceccafca']",{'issue': 100}
"['client', 'input', 'signature', 'verifyvalue', 'content', 'calculatingcontent', 'check', 'malicious', 'header', 'partyupload', 'object', 'overwrite', 'content', 'arbitraryclock', 'minute', 'withinserver', 'proxyerror', 'content', 'raiseupload', 'security', 'providesassurance', 'payload', 'client', 'object', 'proxy', 'connection', 'serverperform', 'swift', 'hopefullybenefit', 'object', 'verification', 'proxyobject', 'server', 'tends', 'boundspareiebcbedeeeaffe', 'changeclose']",{'Security': 100}
"['concurrency', 'partition']",{'concurren': 90}
"['mergeallow', 'multi', 'deletes', 'concurrent']",{'concurrent': 100}
"['encryption', 'server']",{'encryption': 100}
"['multi', 'deletes', 'concurrentrequest', 'objectprevious', 'error', 'deletedallow', 'multiple', 'factor', 'operator', 'concurrency', 'configuredeletesdefault', 'concurrencyopenstack', 'pipermailifbedcbdaacdcbd']",{'concurren': 90}
"['encryption', 'proxy', 'server', 'register', 'present', 'whetherstartoperator', 'encryption', 'keymasterswrites', 'encryption', 'unable', 'retrievestill', 'guaranteeswift', 'keymastersencryption', 'serverheader', 'neithericbcafedbfbfbbf', 'changerelatedicfdcefbedcebf']",{'encryption': 100}
"['ssync', 'concurrency', 'ability', 'commitmultiple', 'security', 'ssync', 'singlessync', 'ensure', 'request', 'runningupdate', 'partition', 'ssyncidedddddddaaacc']","{'concurren': 90, 'Security': 100}"
"['issue', 'simplechange']",{'issue': 100}
"['external', 'sectionpatch', 'updatesecret', 'encryption', 'external', 'section', 'changingslight', 'point', 'differencepatch', 'refers', 'multikey']",{'encryption': 100}
"['etags', 'normalordinary', 'uploads', 'multipartnumber', 'followedbehavior', 'clientdownload', 'object', 'presenceupload', 'disableupload', 'download', 'integrity', 'issue', 'client', 'checkmetadata', 'request', 'requestindication', 'objectliteral', 'reasonsegment', 'necessarilyadditional', 'request', 'backendmultiple', 'request', 'additional', 'listingarbitrary', 'number', 'proxyfsclient', 'exact', 'generationdistinguish', 'large', 'static', 'patch', 'objectstartedimpact', 'swiftproxyfs']",{'issue': 100}
"['container', 'decryption', 'simplifyopenstack', 'followingmight', 'handleropenstack', 'followingcaught', 'error', 'handledchange']",{'encryption': 90}
"['range', 'python', 'issue', 'xrange', 'xrangerange', 'xrange', 'renamechange']",{'issue': 100}
"['invalid', 'request', 'ignorewould', 'correctrelevant', 'encryption', 'middleware', 'request', 'plaintext', 'proxychange']",{'encryption': 100}
"['expose', 'trackalready', 'trackparityinstead', 'hexdigestreturn', 'tupleiccfffdedcaeae']",{'expose': 100}
"['multiple', 'encryption', 'support']",{'encryption': 100}
"['secret', 'multiple', 'encryption', 'operator', 'introducesecret', 'oldersecret', 'decrypt', 'necessary', 'object', 'stillmultiple', 'keymaster', 'patch', 'support', 'modifies', 'classunique', 'secret', 'operation', 'encryptionsecret', 'fetch', 'decryptercrypto', 'retrievedmiddleware', 'crypto', 'compatible', 'object', 'configurationchange', 'iacfbcccfadadd']","{'encryption': 100, 'crypto': 100}"
"['config', 'update', 'samplehealthcheck', 'object', 'middleware', 'server', 'addedconfig', 'encryption', 'proxyenablechange']",{'encryption': 100}
"['tuples', 'holdingtypeerrors', 'necessary', 'oldereventlet', 'followingextraeventlet', 'originalyield', 'wilcard', 'issue', 'clause']",{'issue': 100}
"['bfbaa', 'mergeenforcement', 'length', 'fixups', 'content']",{'length': 100}
"['lengthproduce', 'header', 'length', 'application', 'contenterror', 'exactlyexception', 'thrown', 'connection', 'action', 'responsemightmanifest', 'requestmiddleware', 'request', 'containercallback', 'reply', 'container', 'tempurl', 'authorizenonempty', 'responsereturn', 'responseclient', 'response', 'request', 'nonemptymethod', 'request', 'simple', 'originalclear']",{'length': 100}
"['dbfdfmerge', 'eventlet', 'blacklist']",{'blacklist': 100}
"['mergeupdate', 'object', 'updater', 'concurrent']",{'concurrent': 100}
"['integer', 'number']",{'integer': 100}
"['rectify', 'integer', 'numberchange']",{'integer': 100}
"['concurrent', 'update', 'object', 'updaterobject', 'support', 'setting', 'updater', 'configurationcontrol', 'concurrencycontrol', 'process', 'update', 'container', 'concurrent', 'concurrency', 'number', 'consistency', 'configurationobjectaccount', 'containeraccount', 'refers', 'number', 'concurrentauditor', 'object', 'container', 'updater', 'number', 'concurrencyprocesshandle', 'concurrencyprocess', 'update', 'async', 'usinginsteadupgradeimpactconfigobject', 'updaterconcurrencyfaster', 'advantageobject', 'updaterdefault', 'concurrencyupdate', 'exactlyobject', 'updaterconcurrencyieefebddcae']","{'concurrent': 100, 'concurren': 90}"
"['insecure', 'behavior', 'functionalplumb', 'option', 'probablychange']",{'insecure': 100}
"['warning', 'blacklist']",{'blacklist': 100}
"['reconstructor', 'multiprocessreconstructor', 'multiprocess', 'objectprocess', 'multiple', 'concurrent', 'workersolution', 'prefix']",{'concurrent': 100}
"['clean', 'segmenterror', 'messagealready', 'length', 'value', 'error', 'messagealwaysquestion', 'fwithtruncatingenough', 'mentionchange']",{'length': 100}
"['respect', 'header', 'backendoverride', 'middleware', 'largebackendobject', 'comingheader', 'figure', 'controllerconditionalwould', 'encryption', 'replaceassume', 'conditionalconditionalallows', 'proxymatch', 'store', 'compatible', 'swiftupload', 'multipartibbfddbcccbdd']",{'encryption': 100}
"['assertion', 'expirer', 'concurrency']",{'concurren': 90}
"['assertion', 'expirer', 'concurrency']",{'concurren': 90}
"['small', 'cleanup', 'errorhappens', 'integer', 'comparebetwen', 'cpython', 'integer', 'instancebetterchange']",{'integer': 100}
"['mergeaccount', 'increase', 'limit', 'internal', 'length']",{'length': 100}
"['disallow', 'delete', 'timestamp', 'equaltimestamp', 'equal', 'value', 'delete', 'previouslycould', 'timestamp', 'happenedobject', 'value', 'integer', 'result', 'immediatelyvalue', 'integer', 'timestamp', 'happenedtimestamp', 'equal', 'value', 'delete', 'changevalue', 'delete']",{'integer': 100}
"['incorrect', 'correctiabcddecdacabcb', 'changeclose']",{'incorrect': 100}
"['proxy', 'object', 'server', 'correctlyclient', 'object', 'connection', 'improper', 'error', 'serverexpects', 'ecappiter', 'caller', 'closecaller', 'particular', 'callingexception', 'closepolicy', 'segment', 'considerrange', 'whole', 'request', 'proxyrange', 'fragment', 'object', 'serverproxy', 'object', 'serverunsatisfiable', 'client', 'realizes', 'requestclientsegment', 'fragmentfirst', 'whole', 'hencefragmentchangeclose']",{'improper': 100}
"['daemon', 'manpagedaemon', 'manpage', 'concurrency', 'currentexplanationdaemon', 'patchchange']",{'concurren': 90}
"['issue', 'middleware', 'small', 'formattingtrivialfixiebcebadcdeefc']",{'issue': 100}
"['aliasoption', 'reference', 'aliasoption', 'aliassnippet', 'incorrect', 'storage', 'policy', 'samplepossible']",{'incorrect': 100}
"['countboolean', 'integer', 'replacesparameter', 'configurationlimit', 'argumentspecific', 'number', 'acquiredinstead', 'tryingrange', 'limitdefault', 'value', 'limit', 'numbericcaaafcdbeefd']",{'integer': 100}
"['crash', 'functests']",{'crash': 100}
"['mergeexplanation', 'header', 'limit', 'length']",{'length': 100}
"['explanation', 'header', 'limit', 'length', 'contentsegment', 'container', 'header', 'content', 'lengthdocument', 'large', 'explainedpatch', 'explanationchangeclose']",{'length': 100}
"['mergesecret', 'encryption', 'retrieve', 'barbican']",{'encryption': 100}
"['issue', 'timing', 'deletetraceback', 'recentpython', 'xenial', 'swift', 'workspace', 'jenkins', 'ubuntu', 'crossassertionerrorstdout', 'capturedstdout', 'capturedraiseibeafffddaeaacc']",{'issue': 100}
"['secret', 'barbican', 'encryption', 'retrievesecret', 'encryption', 'patch', 'support', 'retrievingmanagement', 'external', 'currentlylimitediefaefaaebebaeb']",{'encryption': 100}
"['multiple', 'reconstructor', 'strategy', 'workerconcept', 'similar', 'strategy', 'module', 'daemonmanage', 'multiple', 'python', 'leverageprocess', 'worker', 'concurrency', 'propertyrebalance', 'dense', 'chassisdefault', 'currentlyreconstructor', 'section', 'objectwhole', 'number', 'devicereconstructoroperate', 'different', 'subset', 'workertends', 'update', 'reconlittleshutdown', 'strategy', 'spawn', 'workerdaemon', 'strategy', 'respawn', 'workerreconstructor', 'stats', 'reconcompatibility', 'replication', 'aggregateddefault', 'everychange']",{'concurren': 90}
"['cbabbobject', 'thread', 'server']",{'thread': 100}
"['object', 'server', 'thread', 'configurable', 'countrunningprocess', 'object', 'threadbenefitcommit', 'objectdefault', 'thread', 'serverobject', 'eventlet', 'server', 'configurable', 'tpoolconfig', 'tpool', 'regardlessallows', 'excess', 'operator', 'threadremove', 'regardlesschange', 'ifbefebcebeacclose']",{'thread': 100}
"['issue', 'encodingbytestrings', 'mixture', 'object', 'metadata', 'currentlymethod', 'raiseconcatenate', 'attempt', 'metadataascii', 'bytestringobject', 'unicode', 'object', 'metadatafooter', 'whereas', 'object', 'valuediskfile', 'patch', 'changingencode', 'unicode', 'value', 'function', 'object', 'existingunicode', 'diskfile', 'mixture', 'bytestringfunction', 'unicode', 'returnedvalue', 'ensures', 'metadatadiskfile', 'callerbytestrings', 'alistairncoles', 'alistairchange']",{'issue': 100}
"['reconstructor', 'revert', 'remote', 'reject', 'suffixorder', 'limit', 'connection', 'ssync', 'concurrent', 'remote', 'serverremote', 'ssync', 'reject', 'additional', 'forcingrequest', 'remote', 'replicate', 'suffix', 'replicatecause', 'remote', 'initial', 'replicate', 'flightprimary', 'local', 'rehash', 'invalid', 'return', 'suffixsender', 'comparefinal', 'replicategiven', 'primary', 'remote', 'rehash', 'suffixrsync', 'requirement', 'replicationrsync', 'content', 'suffix', 'syncedupdate', 'remote', 'server', 'likely', 'changedreflectreplicate', 'ssync', 'suffix', 'protocolhowever', 'harmfulahead', 'refresh', 'ssync', 'useful', 'potentiallysuffix', 'inodesconversation', 'sensessync', 'suffix', 'immediatelysuccessful', 'reconstructor', 'finishreplicate', 'entirelyremote', 'partition', 'useless', 'withoutcloseiaceefaae']",{'concurrent': 100}
"['bunch', 'setup', 'factor', 'stack', 'commentdiverge', 'delete', 'separate', 'commonfunction', 'calledibbfadaaceca']",{'stack': 100}
"['mergeenable', 'expose', 'header', 'setting']",{'expose': 100}
"['enable', 'expose', 'header', 'setting', 'clustermight', 'customer', 'operatordefault', 'header', 'storage', 'access', 'container', 'commitallow', 'proxy', 'header', 'server', 'clustercontrol', 'header', 'expose', 'accessicaafcaaeebfabd']",{'expose': 100}
"['suffix', 'update', 'deterministicoption', 'replication', 'everymight', 'update', 'randomness', 'listingoften', 'example', 'partitionreplicator', 'partition', 'schwede', 'cschwede', 'christianrelatedclosechange']",{'randomness': 100}
"['response', 'entityrange', 'sends', 'satisfiable', 'headerrange', 'satisfiable', 'previouslyobject', 'indicationsatisfiable', 'craftcontent', 'satisfiable', 'server', 'responserange', 'request', 'header', 'field', 'contentrange', 'example', 'unsatisfiedrange', 'contentcomplete', 'length', 'current', 'responseselectedrange', 'header', 'content', 'serverrange', 'proxy', 'support', 'section', 'languagesectionchange']",{'length': 100}
"['insecure', 'netifaces', 'installallow', 'switch', 'icbebeeaeaafbd', 'changechange']",{'insecure': 100}
"['request', 'backendstoringmanifest', 'conditional', 'everyrequire', 'request', 'large', 'recompute', 'contentalready', 'store', 'sinceallows', 'objectrequest', 'comparison', 'withoutadditionalobject', 'large', 'length', 'object', 'serverstill', 'manifest', 'gettingsysmeta', 'large', 'header']",{'length': 100}
"['mergerequest', 'expose', 'openstack', 'header', 'control', 'access']",{'expose': 100}
"['request', 'expose', 'openstack', 'header', 'control', 'accessibafbcfebcbdcf']",{'expose': 100}
"['python', 'value', 'denominator', 'check', 'preventresult', 'integer', 'divisionvalue', 'helpernotimplementedstill', 'calculation', 'statscloseifccabfceffd']",{'integer': 100}
"['agent', 'request', 'object', 'header', 'updaterupdate', 'object', 'async', 'server', 'pickleagent', 'object', 'title', 'style', 'server', 'includedobject', 'updateragent', 'object', 'style', 'header', 'accordingheader', 'field', 'insensitive', 'thereforeremove', 'agent', 'object', 'patch', 'header', 'updateriacbfeeaead', 'changeclose']",{'Sensitive': 90}
"['ssync', 'fragment', 'diskfile', 'failedmatch', 'iterator', 'fragment', 'sufficientalready', 'length', 'ssync', 'sender', 'contentsender', 'wouldmight', 'receiver', 'ssync', 'startcomplete', 'header', 'diskfile', 'content', 'lengthreconstructor', 'ssync', 'header', 'sincefragment', 'object', 'serverfragment', 'detect', 'writtenlabel', 'matchappear', 'fragment', 'thereforesender', 'ssync', 'communicatesource', 'receiversender', 'patch', 'ssync', 'checkequal', 'header', 'value', 'length', 'content', 'countdisconnect', 'mismatchdisconnect', 'receiver', 'preventsssync', 'subsequent', 'fragment']",{'length': 100}
"['functionalhistory', 'middlwarelocation', 'history', 'header', 'container', 'usingobviouslocation', 'history', 'changerequest', 'version', 'header', 'addedsyntax', 'stack', 'sinceswift', 'thing', 'history', 'suitechangingstackolderlocation', 'versionlocation', 'version', 'obvious', 'vesions', 'stacknewerlocation', 'vesionshistoryoldersupportedhistory', 'location', 'vesions', 'versionnewerhistory', 'locationnewer', 'swift', 'functionalpatchserver', 'process', 'container', 'testingalready', 'middleware', 'option', 'enablingprocess', 'functionalprocess', 'historymiddleware', 'explicity']",{'stack': 100}
"['afeba', 'bfaaeheader', 'history', 'separate', 'stack']",{'stack': 100}
"['header', 'responsenormative', 'consideration', 'implementation', 'sectionresource', 'origin', 'practice', 'respondallow', 'generate', 'header', 'control', 'origin', 'access', 'dynamicallyresponse', 'request', 'everyauthor', 'header', 'origin', 'resourceprovide', 'control', 'appropriate', 'directive', 'preventacross', 'inaccuratedynamic', 'generation', 'control', 'origin', 'access', 'firstheader', 'origin', 'incomingscenario', 'header', 'origin', 'consideravailable', 'static', 'swift', 'content', 'alicecreates', 'containerallow', 'container', 'control', 'origin', 'appropriate', 'accessbrowser', 'visitreference', 'origin', 'browser', 'crossincludes', 'request', 'preflight', 'issue', 'responseheadercontrol', 'origin', 'accessmethod', 'control', 'accessdeletefollows', 'browser', 'preflight', 'cross', 'origin', 'requestvisit', 'referencewould', 'thing', 'exactbrowserpreflight', 'response', 'cachedrequest', 'server', 'resource', 'everytime', 'neededallow', 'header', 'accessinformationsectionchange', 'iefeebffabebde']","{'generation': 100, 'issue': 100}"
"['middleware', 'historyconcept', 'previous', 'check', 'whetherobject', 'versionrecent', 'container', 'version', 'exists', 'currentpreserve', 'previousrecent', 'container', 'version', 'deleteexists', 'marker', 'version', 'recent', 'currentexists', 'marker', 'version', 'delete', 'container', 'container', 'versionexists', 'delete', 'markermarker', 'version', 'recent', 'delete', 'copiedrecent', 'versionoperation', 'history', 'deleteshistoryexists', 'version', 'current', 'check', 'versionempty', 'delete', 'marker', 'objectobject', 'container', 'record', 'versionversion', 'original', 'current', 'deletedreturn', 'container', 'deleteshistoryclient', 'header', 'specify', 'container', 'stackconsideration', 'upgradeclient', 'history', 'proxyhistory', 'clusterrequest', 'proxy', 'stack', 'necessarilychange']",{'stack': 100}
"['fbfcbmerge', 'encryption', 'delimiter', 'interaction']",{'encryption': 100}
"['interaction', 'encryption', 'delimiterelement', 'container', 'subdir', 'producedwould', 'decrypter', 'functests', 'update', 'wouldcaughtclosechange']",{'encryption': 100}
"['enable', 'encryption']",{'encryption': 100}
"['enable', 'encryptionprocess', 'functionaldefault', 'patch', 'value', 'proxy', 'function', 'pointfunctional', 'configurationpatch', 'environmentprocess', 'encryptionvariable', 'environmentencryptionplace', 'motivation', 'supportupstream', 'encryption', 'functionallymiddleware', 'proposedchange']",{'encryption': 100}
"['object', 'constraint', 'metadata', 'checkobject', 'proxy', 'method', 'metadata', 'checkedallow', 'object', 'violates', 'metadataplaceifcecaecebfe', 'changeclose']",{'violate': 93}
"['issue', 'python', 'diskfileunicode', 'issueencode', 'python', 'decodeunicode', 'issue']",{'issue': 100}
"['mergepython', 'object', 'issue', 'generator']",{'issue': 100}
"['issue', 'python', 'object', 'generatorattribute', 'object', 'generatorissueifeaedaedfdbfc']",{'issue': 100}
"['decrypter', 'encryptercrypto', 'drivesecret', 'encryption', 'highlightfollow', 'review']",{'encryption': 100}
"['bfcca', 'mergerequirement', 'encryption', 'instruction', 'package']",{'encryption': 100}
"['instruction', 'requirement', 'encryption', 'packagedevel', 'libssl', 'openssl', 'listedinstallation', 'instructionchange']","{'encryption': 100, 'OpenSSL': 100}"
"['container', 'specificcompatible', 'secret', 'encryption', 'sampleremove', 'process', 'encryption', 'proxy', 'sampledefault', 'middleware', 'proxyibceacfacaea']",{'encryption': 100}
"['enable', 'encryption', 'object', 'proxy', 'object', 'serverencryption', 'introducingmiddleware', 'encryption', 'firstoption', 'middleware', 'encryptionmiddleware', 'encryption', 'proxydefault', 'option', 'falseallow', 'header', 'encryption', 'hinson', 'jlhinson', 'hamdi', 'roumaniupgradeimpactchange']",{'encryption': 100}
"['enable', 'object', 'metadatasystem', 'metadatasysmeta', 'objectcause', 'sysmeta', 'existingsystem', 'crypto', 'metadata', 'middlewareobject', 'metadatasysmeta', 'object', 'patch', 'introduces', 'header', 'namespaceoutbound']",{'crypto': 100}
"['footer', 'replication', 'proxyfooter', 'object', 'proxy', 'server', 'metadatasupport', 'trailfooter', 'encryption', 'request', 'order', 'persist', 'policyencryption', 'update', 'specific', 'header', 'container', 'overrideencryptedpatchgeneric', 'ecputter', 'functionality', 'putterclass', 'objectmultiphase', 'creates', 'support', 'subclass', 'mimeputter', 'multipartfooter', 'behaviourmodifies', 'putter', 'place', 'objectconnectionmethod', 'refactorsclass', 'sharedcallback', 'middleware', 'footer', 'sysmeta', 'object', 'value', 'namespacemiddleware', 'namespaceobjectpatch', 'value', 'additionheader', 'point', 'backendoptional', 'sysmeta', 'header', 'value', 'conditional', 'request', 'matchalready', 'policyactual', 'footer', 'usingsysmeta', 'object', 'backendactual', 'point', 'sysmeta', 'objectrather', 'value', 'pointer', 'encryptionexample', 'encryption', 'objecttherefore', 'value', 'support', 'backend', 'changedlocation', 'encryption', 'alternate', 'possible', 'placealternative', 'locationfirst', 'object', 'serverobject', 'object', 'serverpolicy', 'usingthird', 'proxy', 'middleware', 'backend', 'partyobject', 'conditional', 'server']",{'encryption': 100}
"['deletes', 'concurrent']",{'concurrent': 100}
"['currentlydisable', 'fallocatepatchproblem', 'functional', 'sincesaios', 'issue', 'section', 'addeddeveloper', 'warning']",{'issue': 100}
"['update', 'async', 'object', 'correctcontainer', 'request', 'object', 'resultingupdate', 'object', 'value', 'override', 'actualfragment', 'opposedoverride', 'value', 'request', 'includedincludes', 'update', 'container', 'incorrect', 'currentlyfragment', 'correctarrives', 'update', 'request', 'objectupdate', 'container', 'server', 'direct', 'replication', 'whethervalue', 'update', 'objectnewer', 'timestamp', 'thereforecontainer', 'update', 'request', 'objectupdate', 'container', 'object', 'serverupdate', 'incorrectupdate', 'container', 'recordedarrives', 'timestamp', 'error', 'subsequentlyalready', 'correctsysmeta', 'update', 'patch', 'container', 'backend', 'overrideinstead', 'value', 'container', 'updatecontent', 'lengthclosechange']",{'incorrect': 100}
"['range', 'ignore', 'negative', 'suffixrange', 'client', 'swiftrange', 'header', 'length', 'contentrange', 'invalidchangeclose']",{'length': 100}
"['select', 'thread', 'module']",{'thread': 100}
"['select', 'thread', 'module', 'select', 'thread', 'driver', 'select', 'driver', 'onsumingwhole', 'block', 'eventletcloseifebddbebfbcabf']",{'thread': 100}
"['mergemerge', 'option', 'concurrent', 'proxy']",{'concurrent': 100}
"['option', 'concurrent', 'proxyenable', 'parameter', 'control', 'concurrent', 'changeallows', 'concurrentreplica', 'concurrencyproxy', 'source', 'firstexcept', 'container', 'object', 'mechanismgreen', 'greenasyncpile', 'threadrelatedvalue', 'amountanother', 'value', 'setting', 'concurrent', 'fullystagger', 'abilityshorter', 'float', 'value', 'chance', 'firingsomewhere', 'defaultdefault', 'meaning', 'staggerdocimpactimplement', 'blueprint', 'concurrentchange']",{'concurrent': 100}
"['exception', 'crash']",{'crash': 100}
"['internal', 'power', 'method', 'partitionincrease', 'power', 'method', 'partition', 'expose', 'commandfuture', 'actual', 'modification', 'actual', 'allocation', 'movementpartition', 'pairwise', 'allocationtherefore', 'devicevalue', 'partition', 'index', 'deviceincrease', 'renames', 'power', 'partition', 'operatorpower', 'hardlinks', 'possible', 'withoutplease', 'power', 'partition', 'detail', 'movingchangeimplement']",{'expose': 100}
"['object', 'proxy', 'server', 'support', 'chunkedproxy', 'header', 'length', 'server', 'matter', 'prohibits', 'middelwaresresponse', 'calculate', 'lengthstartchange', 'ifccdebefeaef']",{'length': 100}
"['length', 'backend', 'policy', 'fallocate', 'contentremove', 'content', 'lengthexcept', 'valuelength', 'content', 'backenddetail', 'fallocate', 'driver', 'number', 'changemethod', 'calculate', 'ordercontrollerlength', 'value', 'content']",{'length': 100}
"['swift', 'permission']",{'permission': 100}
"['swift', 'permissionchangebuilder', 'swift', 'renamedexecute', 'python', 'permissionremove', 'python', 'permission', 'patchchange']",{'permission': 100}
"['eventletsocket', 'thread', 'monkeypatchingmonkeypatches', 'socket', 'threadavoidfails', 'object', 'serveriadcacfbfbeddb']",{'thread': 100}
"['expose', 'expiration', 'response', 'token', 'tempauthwould', 'token', 'indicationwould', 'stoppedsuccessful', 'token', 'number', 'secondallows', 'client', 'requestalready', 'header', 'swauthalready', 'keystone', 'expose', 'identicalimpact', 'security', 'expirationchange']","{'expose': 100, 'Security': 100}"
"['default', 'statebuilder', 'writtenobsoletemultiple', 'string', 'length', 'invalid', 'valueerrorchange']",{'length': 100}
"['expose', 'header', 'duplication', 'control', 'accessexpose', 'control', 'access', 'problemexpose', 'header', 'container', 'control', 'accessheader', 'sensitiveheader', 'request', 'mergedexpose', 'header', 'string', 'sensitive', 'control', 'accessheader', 'sensitiveexpose', 'header', 'control', 'container', 'objectexpose', 'header', 'container', 'control', 'accesscontrol', 'expose', 'accesspatch', 'providesifccebecacfcbd']","{'expose': 100, 'Sensitive': 100}"
"['mergeexample', 'kwarg', 'middleware', 'incorrect']",{'incorrect': 100}
"['testr', 'modify', 'ostestr', 'functionaldefcoreeasier', 'defcore', 'functional', 'changetestr', 'swift', 'usingallowscause', 'concurrency', 'failurestill', 'reasonswitch', 'stdout', 'ostestr', 'robert', 'rbtcollins', 'maharaj', 'ganesh']",{'concurren': 90}
"['repeat', 'crashrange', 'segment', 'manifest', 'specifiedsegment', 'crash', 'coalescerequest', 'efficiency', 'specification', 'singlerange']",{'crash': 100}
"['keystoneclient', 'thread']",{'thread': 100}
"['issue', 'python', 'utilspython', 'aliaspython', 'exception', 'group', 'parameter', 'sincepython', 'bufferpython', 'requiredpython', 'append']",{'issue': 100}
"['mergepython', 'directory', 'issue', 'compatibility']",{'issue': 100}
"['issue', 'python', 'utilsurllib', 'importprivate', 'accessfunction', 'replacechange', 'icdddffbfebbad']",{'issue': 100}
"['header', 'storage', 'replicate', 'policyreplicator', 'object', 'concurrency', 'couldindex', 'header', 'storage', 'policy', 'partner', 'wrongpolicy', 'multiple', 'replication', 'instancedefault', 'request', 'header']",{'concurren': 90}
"['swift', 'security', 'static', 'analysis', 'bandit']",{'Security': 100}
"['mergeanother', 'update', 'green', 'container', 'thread']",{'thread': 100}
"['document', 'method', 'filling', 'rsync', 'driversync', 'drive', 'remotewrite', 'rsync', 'attempt', 'certainlocation', 'local', 'drivesolution', 'issue', 'suggestedpoint', 'mount', 'permissionsymlink', 'mount', 'swift', 'ensures', 'firstwritebroken', 'method', 'issue']",{'issue': 100}
"['issue', 'docstrings', 'outputchange']",{'issue': 100}
"['security', 'static', 'analysis', 'bandit', 'bandit', 'config', 'basicbandit', 'improvespecific', 'swiftexcludedbandit', 'project', 'securityimplement', 'bandit', 'swift', 'blueprintchange']",{'Security': 100}
"['update', 'hackingflake', 'whitelist', 'blacklist', 'checkdisable', 'ignore', 'currentlycheck', 'changechange', 'check', 'followingflake', 'ignore', 'select', 'optionpossible', 'select', 'option', 'ignoreflake', 'option', 'baseddeefedfdcdcbcfc', 'pycqaflake', 'purpose', 'enhance', 'codingpermit', 'common', 'detect', 'checkpython', 'portingnewer', 'marker', 'environmentpython', 'install', 'dnspythonidbdadaaacabfae']",{'blacklist': 100}
"['python', 'directory', 'issue', 'compatibility', 'remainingchangeconfigparserchange']",{'issue': 100}
"['objectmight', 'client', 'request', 'objectdestination', 'request', 'difference', 'contentactual', 'lengthconditional', 'status', 'length', 'response', 'contentrange', 'object', 'response', 'instanceconditional', 'status', 'partialcontentrange', 'content', 'whole', 'swift', 'content', 'storedresponse', 'proxy', 'object', 'serverdestination', 'length', 'whole', 'content', 'unfortunatelylengthmethod', 'patch', 'whole', 'responseinstanceiffdfcadcdaabb', 'changeclose']",{'length': 100}
"['green', 'update', 'container', 'thread', 'listingactual', 'serverasync', 'effort', 'container', 'handlechange', 'drive', 'improvewrites', 'object', 'container', 'replica', 'resultbbacfdfbcfca', 'notmynamedocimpactchange']",{'thread': 100}
"['issue', 'python', 'minor', 'relatedreplacingfunction', 'python', 'removedchange']",{'issue': 100}
"['integer', 'configdefault', 'object', 'server', 'section', 'config', 'replicationvalue', 'different', 'setting', 'integer', 'determinesrequest', 'object', 'server', 'single', 'workerprocess', 'object', 'server', 'parent', 'swiftcontinues', 'requiredlisten', 'number', 'workerobject', 'privilege', 'server', 'behave', 'pretty', 'workerexcept', 'unique', 'alwaysrequest', 'object', 'server', 'singleprocess', 'server', 'parent', 'restarts', 'detectslisten', 'server', 'missingfound', 'server', 'extraneous', 'devicefound', 'object', 'server', 'parent', 'process', 'sighupprocess', 'close', 'parent', 'stillfinish', 'childfunction', 'optional', 'param', 'helpersetsid', 'screw', 'suppress', 'child', 'workerprocessmethod', 'storage', 'workerpolicyhelpermethod', 'servermtimes', 'bindportscache', 'track', 'address', 'object', 'reconstructor', 'unique', 'serverunique', 'address', 'serverprobe', 'serverdifference', 'serverprobe', 'total', 'serverignore', 'argumentreplicator', 'reconstructor', 'objectimprovement', 'bonusaddresspatch', 'swift', 'vagrant', 'testingswift', 'vagrant', 'swiftstackallow', 'setup', 'different', 'servermatch', 'different', 'server', 'happenserver', 'devicedifferent', 'localhost', 'configureaddressconfig', 'serverimplementation', 'littleallows', 'accuratelydefault', 'unspecifiedexplict', 'everythingbehaves', 'whataremyips', 'benchmarknormal', 'number', 'workersummary', 'cfcaaba', 'small', 'benefit', 'benchmark', 'isolation', 'numberfdabbabdecfbca', 'result', 'overheaddfedca', 'dbishopdocimpactiabaeccceafdc']",{'integer': 100}
"['quarantine', 'enoentremove', 'operation', 'anotherright', 'object', 'whole', 'operation', 'concurrent', 'pointneedlesslycloseidedfeebb']",{'concurrent': 100}
"['mergeobject', 'fsync', 'incorrect']",{'incorrect': 100}
"['replicator', 'partition', 'cleanup', 'probetests', 'issue', 'state', 'currentreplicator', 'object', 'clean', 'attempt', 'cross', 'efficientknown', 'failurersync', 'replication', 'configfails', 'handoff', 'clean', 'partitioncleanup', 'region', 'ssync', 'replicationhandoff', 'failure', 'resultingcleanup', 'implicit', 'clause', 'partitionfirst', 'ssync', 'failurewould', 'remotecondition', 'rsync', 'failure', 'entryunittests', 'failure', 'changemaster', 'reasonable', 'probetest']",{'issue': 100}
"['enable', 'update', 'header', 'container', 'overridealternative', 'crypto', 'middlewarevalue', 'content', 'serverdifferent', 'content', 'similar', 'erasure', 'codingobject', 'patch', 'server', 'modifies', 'overwriteupdate', 'value', 'header', 'container', 'middlewareoverride', 'update', 'container', 'backendensures', 'header', 'backend', 'prefix', 'usingpropagation', 'override', 'verifiesinternal', 'client', 'container', 'object', 'servercontainerchange']",{'crypto': 100}
"['common', 'reloads', 'example', 'couplingcommon', 'nosetests', 'middlewarecommon', 'nosetests', 'reset', 'logger', 'makingbroken', 'attemptwrongpatch', 'changelogadapter', 'local', 'thread', 'state', 'isolation', 'decoratorcalledifaaaddaefeccd']",{'thread': 100}
"['length', 'response', 'content', 'missingpatch', 'content', 'class', 'childheader', 'content', 'argumentmight', 'acutual', 'length', 'loose', 'contentoverwrite', 'headercontent', 'property', 'lengthcause', 'header', 'difference', 'length', 'contentaffect', 'partyfollows', 'middleware', 'response', 'originalreturn', 'header', 'httpokorder', 'patch', 'header', 'changecontent', 'correctchange']",{'length': 100}
"['proxyreloadaccount', 'sysmeta', 'whitelist', 'ratelimit', 'globalaccount', 'sysmeta', 'blacklist', 'ratelimit', 'config', 'proxycontinueifdcdcfdbbfbc']",{'blacklist': 100}
"['connection', 'invalidreplicator', 'account', 'generation', 'container', 'connection', 'timeout', 'checkreplicate', 'request', 'check', 'reallyreplconnection', 'connection', 'constructionremove', 'patch', 'invalidiebdecbedbaab', 'changeclose']",{'generation': 100}
"['mergeconvert', 'length', 'integer']","{'length': 100, 'integer': 100}"
"['rebalance', 'crashbuilder', 'swift', 'versioncould', 'calculation', 'commitinstead', 'rebalance', 'round', 'crash', 'occurs', 'command', 'rebalance', 'firstdevice', 'reason', 'replica', 'countrebalance', 'causerebalances', 'subsequentifafadaaeec']",{'crash': 100}
"['integer', 'lengthpatch']",{'integer': 100}
"['openstack', 'security', 'referencechange', 'ibaebfdbeaef']",{'Security': 100}
"['variable', 'incorrect']",{'incorrect': 100}
"['function', 'usage', 'insecure', 'mktemp']",{'insecure': 100}
"['method', 'combinebuild', 'pending', 'container', 'backend', 'supposedflush', 'certainwould', 'sqlite', 'concurrent', 'threadflush', 'pendinginstead']",{'concurrent': 100}
"['permission', 'catch', 'statsd', 'packet', 'error', 'writingcloseibcecafdffda']",{'permission': 100}
"['enable', 'object', 'metadatapatch', 'object', 'header', 'system', 'metadatasysmeta', 'object', 'useful', 'pendingserver', 'demand', 'encryption', 'migrationalready', 'sysmeta', 'object', 'gatekeeperpatch', 'modifies', 'passedpersist', 'header', 'object', 'serveralongside', 'object', 'metadatapatch', 'objectsystem', 'ignore', 'supportmodification', 'system', 'object', 'metadatarequires', 'requestdiscussedpatch', 'objectsystem', 'update', 'metadatasystem', 'class', 'brainsplittermodulesystem', 'blueprint', 'object', 'metadatachange']",{'encryption': 100}
"['function', 'usage', 'insecure', 'mktemppatch', 'insecure', 'eliminatessecure', 'replacedalternative']",{'insecure': 100}
"['issue', 'policy', 'swift', 'storagereset', 'createdpatch', 'local', 'policy', 'config', 'startedeager', 'object', 'addedtestcases', 'missingcause', 'issue', 'state', 'coulddefault', 'collection', 'cleanup', 'drivethingiabaedfcbeacffc']",{'issue': 100}
"['policy', 'container', 'storage', 'supportindex', 'container', 'storage', 'indexrequest', 'container', 'containerindex', 'container', 'policyindex', 'object', 'policy', 'movingpolicy', 'changepolicy', 'container', 'desiredstatusparticular', 'container', 'recreationupdate', 'container', 'database', 'server', 'extra', 'deletedtimestamp', 'notate', 'tablecause', 'container', 'status', 'replicationversa', 'field', 'activecurrentaccurate', 'container', 'useful', 'replicationattribute', 'forensics', 'container', 'expose', 'backendheader', 'container', 'backend', 'response', 'basicdefault', 'value', 'container', 'empty', 'placeholderdatabasetimestamp', 'delete', 'statusindex', 'value', 'storage', 'backend', 'reconciler', 'policy', 'object', 'order', 'recentlydeletedresponsefield', 'status', 'timestampresponsedocimpactimplement', 'policy', 'blueprint', 'storageiedffbbffaefbac']",{'expose': 100}
"['fakeloggerdaemon', 'parameterize', 'logger', 'previouslyinterface', 'implementation', 'subtle', 'character', 'issue', 'passingexercise', 'changebetter', 'sensehelperdocimpactimplement', 'policy', 'blueprint', 'storagechange', 'idebddfeeddae']",{'issue': 100}
"['policy', 'storage', 'supportobject', 'basiccollection', 'application', 'object', 'classpolicy', 'collection', 'metadatapolicy', 'container', 'specificcontainer', 'specify', 'policy', 'different', 'container', 'policypolicy', 'collection', 'basedfollows', 'section', 'formatformatpolicy', 'storagechickenpolicy', 'storageturkeydefaultformatcontainer', 'access', 'policy', 'existingpolicy', 'specifiedpolicy', 'container', 'defaultallows', 'admin', 'specify', 'policy', 'withoutapplication', 'forcingstorage', 'introduces', 'policy', 'commitsubsequent', 'thereofpolicy', 'expose', 'storagedocimpactimplement', 'policy', 'blueprint', 'storagechange']",{'expose': 100}
"['mergeplumb', 'insecure']",{'insecure': 100}
"['reallyoverall', 'issue', 'hilarity', 'error', 'loggingchange']",{'issue': 100}
"['default', 'length', 'tokenopenstack', 'deployers', 'comment', 'default', 'length', 'token', 'loggedieddefcfeb']",{'length': 100}
"['different', 'clustercheck', 'reconstronger', 'equalityparticular', 'configparser', 'equalityacross', 'secret', 'expose', 'internal', 'prefix', 'suffixchecksum', 'containingiafeebcaefcc']",{'expose': 100}
"['issue', 'service', 'loggingpython', 'version', 'exception', 'error', 'servicecatch', 'container']",{'issue': 100}
"['issue', 'service', 'loggingpython', 'version', 'exception', 'error', 'servicecatch', 'container', 'updatersquelchicceeafffebde', 'changeclose']",{'issue': 100}
"['daecec', 'mergeupload', 'object', 'internal', 'length', 'support', 'method']",{'length': 100}
"['upload', 'object', 'length', 'support', 'method', 'client', 'chunkedknown', 'content', 'content', 'lengthmethod', 'chunkedidebdeefabafeaf']",{'length': 100}
"['container', 'request', 'timestamp', 'additional', 'kwargheader', 'chain', 'update', 'backendindependent', 'multiplebackend', 'request', 'different', 'timestampapart', 'skirt', 'preloads', 'issue', 'alwaysallows', 'generate', 'timestamp', 'timestamp', 'includingreplicator', 'difference', 'consistency', 'alwayscleaner', 'storedclient', 'container', 'replica', 'comingdelete', 'sinceallow', 'timestampissue', 'container', 'cleanest', 'seemedkwarg', 'additionaldriveby', 'fakelogger', 'updatechange']",{'issue': 100}
"['swift', 'right', 'cross', 'request', 'simplerequest', 'return', 'flight', 'swift', 'optionallow', 'control', 'origin', 'accessjavascript', 'agent', 'request', 'duplicatedeveloper', 'swiftallow', 'container', 'control', 'origin', 'access', 'publicwebserver', 'matchrequest', 'container', 'public', 'accepts', 'crossallow', 'container', 'control', 'origin', 'access', 'swiftcould', 'point', 'browserbrowser', 'origin', 'filesystemrequest', 'custom', 'header', 'xmlhttprequest', 'token', 'withoutrequest', 'header', 'control', 'access', 'tokenrequest', 'preflight', 'swift', 'optionorigin', 'matchcontainerleave', 'tokenrequest', 'control', 'origin', 'accesspatch', 'containerapplication', 'certainswift', 'runningallow', 'header', 'control', 'origin', 'accessorigin', 'result', 'unfortunatesupersede', 'object', 'header', 'comingbehavior', 'changewrite', 'hopefullyrequest', 'header', 'behavior', 'origin', 'previousalways', 'origin', 'decoratorallow', 'header', 'control', 'origin', 'access', 'responsematch', 'container', 'origin', 'whetherallow', 'container', 'control', 'origin', 'accesscontainerbehavior', 'proxydefault', 'decoratorallow', 'header', 'control', 'origin', 'access', 'responsevalue', 'origin', 'request', 'matchcontrol', 'container', 'accessstart', 'container', 'magicallyorigin', 'request', 'control', 'origin', 'access', 'publicallow', 'header', 'control', 'origin', 'accessmodel', 'request', 'security', 'origin', 'responseheader', 'request', 'control', 'origin', 'accessallow', 'container', 'control', 'origin', 'access', 'previousorigin', 'passedcontrol', 'origin', 'accessoption', 'regularallow', 'container', 'control', 'origin', 'accessoption', 'regularobject', 'header', 'config', 'object', 'serveroverridden', 'containerobject', 'option', 'header', 'regularwithout', 'container', 'objectallow', 'expose', 'header', 'control', 'origin', 'accesswhole', 'behavior', 'option']","{'Security': 100, 'expose': 100}"
"['respect', 'object', 'servernever', 'object', 'value', 'proxyobject', 'network', 'server', 'issue', 'smartenough', 'timeout', 'enforceprocess', 'operation', 'problemnever', 'object', 'serveranymore', 'deletes', 'reallychange']",{'issue': 100}
"['manifest', 'multipart', 'copyingquery', 'request', 'param', 'issue', 'clientmanifest', 'expectation', 'multipartmanifest', 'objectnormal', 'object', 'resultmanifest', 'content', 'typicallymiddlewares', 'modify', 'mechanism', 'couldextends', 'request', 'headernormal', 'nothingwithout', 'manifest', 'object', 'multipartconcatenation', 'workingchange']",{'issue': 100}
"['short', 'error', 'response', 'content', 'response', 'container', 'lengthgrows', 'segment', 'header', 'shrinkconfuses', 'segmentcontent', 'lengthclient', 'sends', 'request', 'anotherinstead', 'leftover', 'status', 'objectheader', 'sends', 'buffer', 'sincedeadlock', 'response', 'swift', 'firsthilarityshorter', 'pretty', 'contentdeadlock']",{'buffer': 100}
"['cfddareplica', 'search', 'depth', 'integer', 'handoff']",{'integer': 100}
"['option', 'container', 'configurationsummary', 'option', 'configurationmiddleware', 'cluster', 'operatorpipeline', 'container', 'proxycluster', 'container', 'proxyavailable', 'realm', 'specifies', 'containergroup', 'realm', 'container', 'cluster', 'containervalue', 'containeraccount', 'realm', 'container', 'realm', 'container', 'usingsource', 'security', 'issue', 'easilycircuit', 'timestamp', 'different', 'difficult', 'situationdaemon', 'container', 'sincewithin', 'configurationrealm', 'specifies', 'cluster', 'resolvedendpoint', 'operator']","{'Security': 100, 'issue': 100}"
"['modulebranch', 'coverage', 'attemptshort', 'interactioncpython', 'coveragepy', 'issue', 'covereddiskfile', 'valid', 'check', 'removecould', 'field', 'number', 'worth', 'verifiedremove', 'closemethod', 'diskfilereader', 'exception', 'quarantine', 'context', 'raiserange', 'generate', 'event', 'definition', 'quarantinequarantine', 'ensure', 'generatormodifiedasserttrue', 'placeassertequals', 'assertequal', 'reference', 'objectchange']",{'issue': 100}
"['netifaces', 'requirement', 'external', 'whitelistallow', 'externalallow', 'assent', 'insecure', 'optionthough', 'netifaces', 'package', 'retrieveallow', 'clearer', 'insecure', 'optionallow']",{'insecure': 100}
"['replica', 'search', 'depth', 'integer', 'handoff', 'sanify', 'countprimary', 'search', 'number', 'proxyaccount', 'object', 'container', 'number', 'twiceintegral', 'fractional', 'behaviorobject', 'replica', 'imagineperhaps', 'cluster', 'replica', 'migratingsmartwould', 'proxy', 'object', 'primaryround', 'computehandoff', 'intent', 'weirdhandoff', 'objecteffectscale', 'replica', 'latency', 'cliff', 'littleinstead', 'everynoticeable', 'small', 'producehandoff', 'number', 'compute', 'basedreplica', 'primarycliff', 'behavior', 'latencyintegral', 'replicaintegral', 'behavior', 'numberchangeiefdbecddccff']",{'integer': 100}
"['valid', 'header', 'value', 'suitable', 'header', 'responsevalue', 'integer', 'header', 'sincetimestamp', 'value', 'modifiednewer', 'value', 'content', 'resultconditionalreturn', 'timestamp']",{'integer': 100}
"['value', 'delete', 'integer', 'handleclient', 'value', 'delete', 'integerreport', 'error']",{'integer': 100}
"['constraint', 'expose', 'basicieefadaeddcdbaa']",{'expose': 100}
"['discoverable', 'addedallow', 'sensitive', 'access', 'privileged', 'information', 'allowingmeantdocimpactifbfedeebfdcd', 'changeimplement', 'blueprint', 'capabilityclose']",{'Sensitive': 100}
"['effea', 'mergeaccount', 'request', 'container', 'concurrent']",{'concurrent': 100}
"['account', 'request', 'container', 'concurrent', 'fixedaccount', 'request', 'concurrentnormal', 'access', 'retry', 'fdadd', 'encounterretry', 'initialization', 'cursorresultingchange']",{'concurrent': 100}
"['deletedefine', 'delete', 'single', 'appliessemanticsprotocolmultiple', 'delete', 'resource', 'command', 'swift', 'specifieddeletedeveloper', 'swift', 'moduledelete', 'usage', 'welcomemultiple', 'unusual', 'resource', 'reading', 'affectingemploy', 'craft', 'usuallymultiple', 'behavior', 'affectingthreadforum', 'ydwmhcrj', 'searchin', 'action', 'wndzdrs', 'craftnasal', 'behavior', 'current', 'topicthird', 'unsupported', 'partyaround', 'librarypossible', 'semantics', 'snowflakequestion', 'issue', 'delete', 'requestdocimpactclosechange']",{'issue': 100}
"['swift', 'essexresultmanifestffadbc', 'essexsegment', 'content', 'small', 'lengthsegment', 'large', 'content', 'lengthsegment', 'large', 'length', 'shenanigan', 'contentmastersegment', 'content', 'small', 'lengthsegment', 'large', 'content', 'lengthsegment', 'large', 'length', 'shenanigan']",{'length': 100}
"['mergeparameter', 'buffer', 'server']",{'buffer': 100}
"['parameter', 'buffer', 'server', 'socketpython', 'library', 'standard', 'socket', 'module', 'performslarge', 'typicallydefault', 'bufferparamter', 'proxyobjectmight', 'value', 'temptedrequest', 'reference', 'unable', 'author', 'basiscontext', 'requestattribute', 'wfile', 'objectinput', 'objectattribute', 'object', 'socket', 'rfile', 'wrappingoverride', 'temptedinstead', 'class', 'attribute', 'pythonsince', 'class', 'ensure', 'socket', 'flush', 'method', 'invokes', 'eventletattribute', 'wbufsize', 'method', 'classstandard', 'confusedclass', 'attribute', 'librarymakefile', 'object', 'parameter', 'connection', 'bufsizevalue', 'socketallow', 'socketflushimprovement', 'performanceaveragevalue', 'usingnologcapture', 'nocapture', 'nosetestsproxychangepeter', 'portante']",{'buffer': 100}
"['diskfile', 'reference', 'implementationobject', 'refactor', 'server', 'knowledgeupdate', 'diskfilemanager', 'async', 'class', 'pickle', 'creationalong', 'replicator', 'suggestionstorage', 'thread', 'method', 'object', 'setupmethod', 'controllerspecific', 'close', 'timestampentire', 'metadataallow', 'isolate', 'implementation', 'class', 'environment', 'specificsimplifies', 'callermultiple', 'statement', 'pointpattern', 'usageportantemergequota', 'account', 'commitmiddlewarediskfilemanagermethodattributediskfilemethodattributediskfilereadermethodattributediskwriter', 'diskfilewritermethoddiskfile', 'class', 'object', 'diskreaderimplement', 'method', 'returnedmethod', 'necessaryimplement', 'method', 'iteratornecessary', 'iteratorauditordiskfile', 'refactoredattributereference', 'implementation', 'object', 'server', 'backend', 'memorydiskfile', 'class', 'swiftswiftreferencecommits', 'portante', 'diskfile', 'swift', 'glusterintegration', 'swift', 'glusteriefdbaecf', 'changepeter', 'portante']",{'thread': 100}
"['quota', 'account', 'quota', 'account', 'integerquota', 'account', 'installationchoke', 'value', 'integer', 'quota']",{'integer': 100}
"['middleware', 'header', 'handleobject', 'length']",{'length': 100}
"['constructor', 'argument', 'diskfilediskfile', 'additional', 'diskfilesurface', 'exposure', 'abstractionobject', 'implementationfutureconsolidate', 'diskwritermethod', 'diskfile', 'publiccreate', 'method', 'class', 'access', 'diskreaderchange']",{'Exposure': 100}
"['small', 'generation', 'header', 'performance']",{'generation': 100}
"['small', 'generation', 'header', 'performanceserver', 'proxy', 'applyinstead', 'request', 'proxy', 'header', 'matterinstead', 'server']",{'generation': 100}
"['certificate', 'server', 'insecure']",{'insecure': 100}
"['certificate', 'server', 'insecure', 'keystonereport', 'dispersion', 'populate', 'swiftinsecure', 'acceptdefault']",{'insecure': 100}
"['incorrect', 'staticweb']",{'incorrect': 100}
"['default', 'workerdefault', 'value', 'workeraccount', 'object', 'value', 'server', 'workerspawn', 'process', 'idealsuccessful', 'producepython', 'inspect', 'numberpython', 'compiledseems', 'method', 'system', 'pretty', 'withoutreturn', 'raisemethod', 'integer', 'utilityconfig', 'dynamiccontainer', 'drive', 'sampleforce', 'update', 'workerdocimpactchange', 'ifadcabcbedbace']",{'integer': 100}
"['blacklist', 'currentlypatch', 'followupdetailexcept', 'exception', 'leastnumber', 'octal', 'writtenspace', 'docstringempty', 'localization', 'stringchange']",{'blacklist': 100}
"['local', 'affinityprimary', 'proxy', 'local', 'server', 'desirable', 'proxyregion', 'capacity', 'regionoptional', 'value', 'large', 'matchprimary', 'matter', 'request', 'request', 'concurrent', 'primaryorderingdefault', 'proxy', 'setting', 'configdefault', 'behavior', 'configurationregion', 'multi', 'blueprintieacdedfeeebdda']",{'concurrent': 100}
"['parallelism', 'expirer', 'objectparallelism', 'process', 'concurrency', 'singledaemon', 'multiple', 'differentdocimpactchange']",{'concurren': 90}
"['mergemessage', 'length', 'support', 'rework']",{'length': 100}
"['message', 'length', 'support', 'reworklength', 'value', 'header', 'length', 'contentrequest', 'header', 'value', 'support', 'transfermultiple', 'value', 'header', 'return', 'transferwithout', 'algorithm', 'object', 'existingserver', 'addition', 'notice', 'proxymessage', 'header', 'length', 'content', 'specifiedmaximum', 'request', 'objectentire', 'request', 'large', 'entity', 'readingchangepeter', 'portante']",{'length': 100}
"['issue', 'probetests', 'fixedpython', 'eventlet', 'swiftclientrequire', 'server', 'issue']",{'issue': 100}
"['issue', 'container', 'container', 'object', 'patch', 'resolvereplicate', 'object', 'followingaccnt']",{'issue': 100}
"['useful', 'includingstillenough', 'randomness', 'lengthconvenience', 'function', 'addedinformationembeds', 'wonderingembeds', 'firstquite']",{'randomness': 100}
"['incorrect', 'manifest', 'return', 'content', 'multipartchange']",{'incorrect': 100}
"['ebbfdunicode', 'issue']",{'issue': 100}
"['unicode', 'issue', 'staticwebprefix']",{'issue': 100}
"['insensitive', 'human', 'toleratemaybe', 'swiftoperatorvalue', 'admin']",{'Sensitive': 90}
"['swift', 'crash']",{'crash': 100}
"['actual', 'request', 'handlerwrapper', 'function', 'method', 'publicactual', 'request', 'returnvalid', 'extra', 'response', 'headerallow', 'expose', 'header', 'control', 'accessexpose', 'header', 'support', 'control', 'accessmethod', 'option', 'refactoringlogicdetail', 'extra', 'little', 'addeddocimpactieafaaeadccbc']",{'expose': 100}
"['swift', 'option', 'commandsettingalready', 'config', 'thing', 'command', 'wantedshort', 'delete', 'concurrency', 'optionletter']",{'concurren': 90}
"['versionexpect', 'issue', 'release', 'decideiaecfbfbffefa']",{'issue': 100}
"['debug', 'config', 'option', 'eventlet', 'causeprint', 'trace', 'stderr', 'stack', 'productiondevelopment']",{'stack': 100}
"['resetswift', 'output', 'probetests', 'captureprobetests', 'prettierresetswift', 'probetests', 'subprocess', 'callingprint', 'stderr', 'stderr', 'buffer', 'stdout', 'resetswift', 'combinedhandle', 'debug', 'stdout', 'nosetests', 'output']",{'buffer': 100}
"['container', 'basedclient', 'determination', 'cluster', 'lookedheader', 'spoofable', 'security', 'triviallycheck', 'gainedsecurity', 'check', 'senseclient', 'sound', 'cluster', 'baseddefeat', 'reallyfactor', 'reallyfactormight', 'security', 'providebalancer', 'external', 'strip', 'swift', 'cluster', 'behindheader', 'substitute', 'client', 'clusterworth', 'thinkvalue', 'smalldocimpactibefceedfaaadeb']",{'Security': 100}
"['wsgicontext', 'changepatch', 'control', 'relinquishes', 'current', 'withoutmiddleware', 'stack', 'errorclient', 'chunk', 'firstunderlyingchange']",{'stack': 100}
"['segmentmiddleware', 'response', 'header', 'length', 'requestmanifest', 'reference', 'objectwithout', 'response', 'content', 'transfererror', 'response', 'stuffedresponse', 'content', 'lengthiaaedcbabfbae']",{'length': 100}
"['setting', 'incorrect']",{'incorrect': 100}
"['mergeboundary', 'byteranges', 'length']",{'length': 100}
"['boundary', 'byteranges', 'length', 'multipartformat', 'paddingboundary', 'string', 'chance', 'length', 'regex', 'chanceboundary', 'string', 'lengthconsistentlychange', 'ieedabeebdeceb']",{'length': 100}
"['issue', 'swiftidentical', 'openbsdcommit', 'glance']",{'issue': 100}
"['breakout', 'reuseutils', 'accessible', 'ringbuilderalong', 'searchbuilder', 'ringbuilder', 'instancepython', 'dependency', 'ubuntuinstallinstall', 'fedoracomplianceremove', 'small', 'undefined', 'builder', 'issue']",{'issue': 100}
"['mergemerge', 'issure', 'format']",{'issue': 91}
"['issue', 'commonissuemodifiedmodifiedmodifiedmodifiedmodifiedchange', 'icbccdfcebeadcd']",{'issue': 100}
"['issue', 'sourcechange', 'idebbdbacaeffd']",{'issue': 100}
"['pickle', 'serializationexecute', 'pickle', 'arbitraryserialization', 'supportspecific', 'object', 'subsetunability', 'cache', 'configurationvalueinsecure', 'pickle', 'serializationstill', 'insecure', 'pickle', 'serializationdefault', 'serializationinstallation', 'cache']",{'insecure': 100}
"['mergeimprovement', 'local', 'thread', 'handoff']",{'thread': 100}
"['improvement', 'local', 'thread', 'handoff', 'loggingproxy', 'warning', 'localchange', 'ibacebfcddeda']",{'thread': 100}
"['swift', 'adaptwebob', 'funcional', 'patchset', 'additional', 'compatibility', 'addressedrange', 'webob', 'official', 'patch', 'header', 'issue', 'mergedwebob', 'pylon', 'commitacceptunicode', 'invalidwebob', 'blueprint', 'supportchange', 'iefdcdaffdddbcc']",{'issue': 100}
"['length', 'content']",{'length': 100}
"['transferresponse', 'content', 'length', 'return']",{'length': 100}
"['issue', 'renamedifcfecacbaaebee']",{'issue': 100}
"['issue', 'staticweb']",{'issue': 100}
"['suppress', 'trace', 'stack']",{'stack': 100}
"['retry', 'segment', 'manifest', 'content', 'stack', 'error', 'creation', 'abort']",{'stack': 100}
"['mergeobject', 'middleware', 'issue']",{'issue': 100}
"['mergeurlparse', 'swauth', 'result', 'incorrect']",{'incorrect': 100}
"['import', 'incorrect']",{'incorrect': 100}
"['urlparse', 'swauth', 'result', 'incorrect']",{'incorrect': 100}
"['ddeaa', 'mergerefactor', 'reuse', 'concurrency', 'proxy']",{'concurren': 90}
"['account', 'outputoutput', 'concurrent']",{'concurrent': 100}
"['object', 'connection', 'concurrent']",{'concurrent': 100}
"['object', 'concurrent']",{'concurrent': 100}
"['adecbexecute', 'object', 'thread', 'server', 'fsyncs']",{'thread': 100}
"['thread', 'fsyncs']",{'thread': 100}
"['trace', 'proxy', 'memcache', 'stack']",{'stack': 100}
"['bffcbheader', 'error', 'content', 'length']",{'length': 100}
"['simpler', 'check', 'length']",{'length': 100}
"['stats', 'permission']",{'permission': 100}
"['group', 'redundant', 'devauth', 'length', 'describe', 'suggestion', 'middleware', 'check', 'callback', 'optional', 'proxy', 'string', 'urlparse', 'logic']",{'length': 100}
"['edfcec', 'mergecause', 'crash', 'issue', 'empty']","{'crash': 100, 'issue': 100}"
"['mergeaccount', 'facility', 'expose', 'container', 'external', 'metadata']",{'expose': 100}
"['account', 'facility', 'expose', 'container', 'external', 'metadata']",{'expose': 100}
"['mergerequest', 'proxy', 'behavior', 'incorrect', 'server', 'exception', 'return', 'uncaught']",{'incorrect': 100}
