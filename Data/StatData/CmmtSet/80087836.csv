message,fuzzy
"['updateremove', 'discus', 'issue', 'github']",{'issue': 100}
"['table', 'stream', 'increase', 'speed', 'memory', 'table', 'fullcopy', 'streamlevel', 'sender', 'output', 'encryption', 'stream', 'input']",{'encryption': 100}
"['thread', 'skiplistbarkati', 'ahsan']",{'thread': 100}
"['mechanism', 'compaction', 'jemalloc', 'possiblecompaction', 'continuouslycause', 'flush', 'issue', 'result']",{'issue': 100}
"['compaction', 'stream', 'levelwritten', 'streamfigure', 'badger', 'computation', 'levellevel', 'baselevel', 'incorrect']",{'incorrect': 100}
"['debug', 'crash', 'iteratordebug', 'crash', 'range', 'index', 'block']",{'crash': 100}
"['debug', 'tableindex', 'initindexdebug', 'crash', 'initindex', 'information']",{'crash': 100}
"['ristretto', 'integer', 'field', 'memory', 'fetchindex']",{'integer': 100}
"['removeremove', 'issue', 'github']",{'issue': 100}
"['atomic', 'deadlock', 'valueempty', 'issue', 'memtables', 'truncateoption', 'memtablecompaction', 'levelwrite', 'transaction']","{'deadlock': 100, 'issue': 100}"
"['encryption', 'flattenencryption', 'flatten', 'support', 'badgerchangeencryptioncache', 'panic', 'index', 'block']",{'encryption': 100}
"['metric', 'number', 'expvar', 'number', 'expose', 'table', 'metricpoint']",{'expose': 100}
"['small', 'compression', 'table', 'enabledcompression', 'issue', 'smallaccount', 'compression', 'block', 'table', 'capacity', 'block']",{'issue': 100}
"['integer', 'error', 'overflow', 'buildingconversion', 'const', 'value', 'untypedlarge', 'store', 'const']","{'integer': 100, 'overflow': 100}"
"['github', 'issue']",{'issue': 100}
"['option', 'blockcache', 'chore', 'warningcache', 'encryption', 'compression', 'blockmessage', 'cache', 'warning']",{'encryption': 100}
"['option', 'expose']",{'expose': 100}
"['buffer', 'badger']",{'buffer': 100}
"['block', 'rework', 'cache', 'indexseparate', 'cache', 'index', 'blockcache', 'encryption', 'store', 'compression', 'block', 'badgercache', 'memory', 'index', 'table', 'limit', 'bloomremove']",{'encryption': 100}
"['numalloc', 'expvar', 'expose', 'metrictrack', 'numalloc', 'expose']",{'expose': 100}
"['compaction', 'cache', 'cache', 'supportcompaction', 'cache', 'wouldoption', 'integer', 'iterator', 'tablereversenocacheblock', 'cache', 'nocache']",{'integer': 100}
"['calloc', 'slice', 'memory', 'allocation', 'buffer', 'jarif', 'ibrahim']",{'buffer': 100}
"['manual', 'improvement', 'memory', 'allocationcontains', 'improvement', 'revertsencrypt', 'dgraph', 'ceeffbabb', 'background', 'badger', 'block', 'compress', 'reverteacbcdbfdfabfd', 'dgraph', 'buffer', 'badger', 'decompression', 'revertcondition', 'dgraph', 'badger', 'revertdgraph', 'edceaeffbeaaffd', 'overflow', 'integer', 'check', 'table', 'assert', 'badger', 'revertmemory', 'calloc', 'calloc', 'encryption', 'block', 'buffer', 'decompressioncontainscompaction', 'cherry', 'pickingbadger', 'dgraph']","{'buffer': 100, 'overflow': 100, 'integer': 100, 'encryption': 100}"
"['entire', 'update', 'replay', 'badger', 'issue', 'partiallyentry', 'insertedcommit']",{'issue': 100}
"['limit', 'batchlimit', 'single', 'includedissuecause', 'issue', 'jarif', 'ibrahim']",{'issue': 100}
"['level', 'builder', 'building', 'table', 'resource', 'empty', 'cleanupcompaction', 'instance', 'process', 'tableblock', 'encryption', 'goroutines', 'compressionwould', 'builderquestion']",{'encryption': 100}
"['updateexpand', 'issue']",{'issue': 100}
"['encrypt', 'background', 'block', 'compress', 'revertreverts', 'commitcrash', 'reproduce', 'crash', 'couldrelatedcurrent', 'crash', 'state', 'badgerdescription']",{'crash': 100}
"['buffer', 'decompression', 'revertreverts', 'commitcrash', 'reproduce', 'crash', 'couldrelatedcurrent', 'crash', 'state', 'badger']","{'buffer': 100, 'crash': 100}"
"['condition', 'revertreverts', 'commitcrash', 'reproduce', 'couldcrashrelatedcurrent', 'crash', 'state', 'badger']",{'crash': 100}
"['overflow', 'integer', 'check', 'table', 'assert', 'revertreverts', 'commitnecessary', 'builder', 'reproduce', 'couldcrashrelatedcurrent', 'crash', 'state', 'badger']","{'overflow': 100, 'integer': 100, 'crash': 100}"
"['overflow', 'integer', 'check', 'table', 'assert']","{'overflow': 100, 'integer': 100}"
"['reworkcurrent', 'implementation', 'issue', 'threecompaction', 'invariant', 'generate', 'bottom', 'requestconsecutive', 'issue', 'tableissuecomment', 'issue', 'badger', 'dgraphcompaction', 'order', 'performs', 'levelversion', 'prefix', 'prefix', 'table', 'jarif', 'ibrahim']",{'issue': 100}
"['issue', 'badger', 'dgraphchangestashbadger', 'dgraphchangestash', 'applybadger', 'dgraph']",{'issue': 100}
"['account', 'restore', 'considerconsume', 'memory', 'issue', 'forcefullybeyond', 'buffer']","{'issue': 100, 'buffer': 100}"
"['badger', 'guaranteeupdate', 'transaction', 'concurrent', 'multipleusingfound', 'commitinstead', 'iterator', 'concurrent', 'multiplefirst', 'masterissue', 'badger', 'dgraph']",{'concurrent': 100}
"['number', 'thread', 'streamthreadid', 'field', 'stream', 'simulate', 'thread', 'keytolist', 'functionthread', 'local']",{'thread': 100}
"['prefix', 'droppedprefix', 'issue', 'badgerdropprefix', 'prefix']",{'issue': 100}
"['conditionissue', 'dgraphblock', 'crash', 'sequence', 'logicalcould', 'occuriteratorblock', 'functionblock', 'block', 'functionblock', 'evictedeviction', 'block', 'cachewould', 'decrementbecomes', 'startsince', 'block', 'syncpool']",{'crash': 100}
"['buffer', 'decompressionbuffer', 'decompression', 'commitaddedbuffer', 'bufferwouldissue', 'badger', 'dgraph']",{'buffer': 100}
"['update', 'issue', 'template']",{'issue': 100}
"['compression', 'disabledissue', 'dgraphbuilt', 'compression', 'badgercould', 'crash', 'minuteerror', 'returnbuilt', 'compression', 'badger']",{'crash': 100}
"['condition', 'doesnothavecondition', 'false', 'variableissuecomment', 'issue', 'dgraph']",{'issue': 100}
"['cache', 'default', 'disablecache', 'performance', 'compression', 'defaultencryptionbench', 'result', 'encryptedcacheaverage', 'speedtotal', 'minutewithout', 'cacheaverage', 'speedtotal', 'minutecondition', 'issue', 'boolean']",{'issue': 100}
"['block', 'background', 'encrypt', 'compressencryption', 'compression', 'support', 'common', 'worker', 'bufferroutine', 'block', 'point', 'startworker', 'goroutines', 'table', 'space', 'mightblock', 'branchbenchstatreduction', 'deltaencryptionimprovement', 'delta', 'speedencryptionplease', 'issue', 'badger', 'dgraph']",{'issue': 100}
"['semantics', 'rework', 'mutationissue', 'concurrency', 'maxfid', 'variabledifferent']",{'concurren': 90}
"['update', 'version', 'commitonelinemaster', 'warning', 'deepsourcedelete', 'immediatelycache', 'metric', 'deletioncollision', 'check', 'default', 'hashingeviction', 'delete', 'operation', 'overflow', 'cache', 'maxcostcustom', 'keytohash', 'functionregression', 'processitems', 'memory']",{'overflow': 100}
"['issue', 'iteratorissue', 'badger', 'dgraphiterator', 'duplicate', 'iterator', 'consistsresult']",{'issue': 100}
"['segmentation', 'faultsegmentation', 'fault', 'commitactual', 'issue', 'withinbadger', 'dgraphissue', 'badger', 'dgraphissue', 'badger', 'dgraph']",{'issue': 100}
"['rotate', 'encryptionrotate', 'encryption']",{'encryption': 100}
"['writer', 'encryption', 'streamstream', 'table', 'information', 'storewriter', 'store', 'tableissue', 'badger', 'dgraph']",{'encryption': 100}
"['window', 'issue', 'datalosswindow', 'actual', 'circumventtruncatingfbdfeffbbaedfde', 'badger', 'wouldwould', 'offset', 'truncate', 'returnoriginalreplay', 'offset', 'function', 'returnvalid', 'offset', 'startforward', 'movementinsteadfbdfeffbbaedfde', 'badger', 'validendoff', 'notice', 'startvalidendoff', 'offsetissue', 'badger', 'dgraph']",{'issue': 100}
"['compilationcomplains', 'linux', 'goarch', 'integer', 'longerissuecomment', 'issue', 'badger', 'dgraph']","{'integer': 100, 'issue': 100}"
"['encryption', 'enableencryption', 'disect', 'commitdecryption']",{'encryption': 100}
"['deadlock', 'stats', 'discardfollows', 'discardstatscompaction', 'stats', 'routine', 'update', 'exceeds', 'discard', 'complete', 'request', 'generatedwritten', 'memtable', 'flushwritten', 'memtables', 'flush', 'equal', 'tabledeadlock', 'eventcompaction', 'stats', 'discard', 'table', 'requestcompaction', 'stats', 'separate', 'routine', 'flush', 'discard', 'decouples', 'introduces', 'channel']",{'deadlock': 100}
"['table', 'stream', 'datakeywriter', 'encryption', 'streamfirst', 'wouldwould']",{'encryption': 100}
"['encryption', 'truncation', 'previous', 'store', 'value', 'frontchangechange', 'front', 'testgetmoreensure', 'offset', 'replay', 'rightunderstand']",{'encryption': 100}
"['prefix', 'iteratorbiggest', 'picktable', 'prefix', 'timestampscorrect', 'returnexamplecomparison', 'prefix', 'tablesmallest', 'value', 'returnprefix', 'incorrect', 'greatercontains', 'timestamp', 'smallestbiggest', 'smallesttimestampsissue', 'badger', 'dgraph']",{'incorrect': 100}
"['issue', 'restore', 'transactionrestore', 'batch', 'bunch', 'batchtransactional', 'overflow', 'certain', 'limit', 'entrysmall', 'circumstance', 'tableentry', 'flush']","{'issue': 100, 'overflow': 100}"
"['entry', 'headercommit', 'length', 'value', 'entry', 'header', 'storedlength', 'footer', 'entry', 'offsetentry', 'tablepoint', 'valueentry', 'indexentry', 'offset', 'current', 'index', 'entrylength']",{'length': 100}
"['approachcomplexity', 'issue', 'unnecessaryissue', 'badger', 'dgraph']",{'issue': 100}
"['update', 'issue', 'ignore', 'staleupdate', 'indefinite', 'bounty', 'challenge', 'currentlyautomaticallygithub', 'label', 'stale']",{'issue': 100}
"['format', 'index', 'table', 'offsetindex', 'offset', 'tablecommit', 'index', 'block', 'index', 'length', 'table']",{'length': 100}
"['watermarkwatermark', 'shorter', 'doneuntil', 'process', 'integer', 'iterate', 'choosingchangeprocess', 'watermark', 'doneuntilnotifyandremove']",{'integer': 100}
"['transactional', 'rewrite', 'limitensure', 'transactional', 'rewrite', 'limitbuilt', 'temporary', 'value', 'entrytransactional', 'overflow', 'iteration', 'limit', 'committedmaxbatchsize', 'maxbatchcountissue', 'badger', 'dgraph']",{'overflow': 100}
"['window', 'directorywindow', 'directory', 'methodissuecomment', 'issue', 'badger', 'dgraph']",{'issue': 100}
"['darwingversion', 'issue', 'documenteddarwin', 'macos', 'impactversion', 'macos', 'badger']",{'issue': 100}
"['enable', 'staleenable', 'staleclose', 'inactivity', 'issue', 'stalestatus', 'issue', 'stale', 'markedexemptlabels']",{'issue': 100}
"['streamwriter', 'methodstreamwriterversion', 'ensuressuffix', 'version', 'lexicographical', 'strict', 'comparison', 'insteadsteamwriter', 'catch', 'validation', 'issue', 'level', 'orderingchangedifferent', 'version']",{'issue': 100}
"['directory', 'crash', 'readonlyissue', 'badger', 'dgraph']",{'crash': 100}
"['streamwriter', 'overlapframework', 'streamwriter', 'badger', 'table', 'issue', 'stream', 'clear', 'start', 'chance', 'levelchangecause', 'streamwriter', 'overlapfrancesc', 'levelintroduce', 'capital']",{'issue': 100}
"['loadtoramchecksum', 'option', 'loadtoram', 'validation', 'insteaddgraph', 'reduction', 'loadtoram', 'issue', 'startup', 'badgerchecksum', 'table', 'block', 'levelbadger', 'issue']",{'issue': 100}
"['condition', 'inmemory', 'concurrent', 'table', 'badger']",{'concurrent': 100}
"['goroutines', 'table', 'sstables', 'blockserial', 'readindex', 'reader', 'simpler', 'performance', 'loadtoram', 'block', 'goroutines', 'memorymap', 'random', 'maximum', 'sweet', 'goroutines', 'table', 'random', 'multipleaverage', 'master', 'ensure', 'cache', 'internal', 'takenflushbufs', 'goroutines', 'subpar', 'table', 'rotational', 'external', 'block', 'improvement', 'index', 'generate', 'table', 'seriallyserial', 'concurrency', 'goroutines', 'index', 'switchedimprove', 'loggingreview']",{'concurren': 90}
"['panic', 'flatten', 'empty', 'issue', 'badger']",{'issue': 100}
"['buffer', 'singleton', 'discard', 'memory', 'afterward']",{'buffer': 100}
"['penultimate', 'truncateinvalid', 'einval', 'minus', 'confusion', 'truncation', 'iterates', 'value', 'issue']",{'issue': 100}
"['violation', 'badger', 'finallyforce', 'issue', 'condition', 'reproduce', 'current', 'struct', 'value', 'logicvaluestruct', 'revertreverts', 'commitcompaction', 'struct', 'force', 'value', 'wouldvalue']",{'issue': 100}
"['account', 'retrieve', 'simulate', 'introduce', 'randomness']",{'randomness': 100}
"['badgeroutput', 'method', 'disectidentify', 'violates', 'totalversion', 'difference', 'outputmatch', 'account', 'money']",{'violate': 93}
"['multiplebleve', 'blevesearch', 'support', 'issue', 'request', 'disallow', 'badger', 'issue', 'iterator']",{'issue': 100}
"['exists', 'window', 'crash', 'restartwindow', 'process', 'dependency', 'memory', 'system', 'attemps', 'badger']",{'crash': 100}
"['enable', 'length', 'skiplistinline', 'length', 'value', 'skiplistlimit', 'increase', 'making', 'commitvalue', 'offset', 'alignedboundary', 'align', 'ratherboundary', 'align', 'pointerboundary', 'machine']",{'length': 100}
"['updatereduce', 'length']",{'length': 100}
"['setting', 'metadatapublic', 'expose', 'structmetadata']",{'expose': 100}
"['overflow', 'tableexceedconversion']",{'overflow': 100}
"['issue', 'report']",{'issue': 100}
"['track', 'writech', 'length', 'expvar', 'metric']",{'length': 100}
"['baaebmerge', 'issue', 'request', 'dgraphevaluate']",{'issue': 100}
"['mergemerge', 'issue', 'request', 'dgraphgolint']",{'issue': 100}
"['mergemerge', 'issue', 'request', 'dgraphfillitem']",{'issue': 100}
"['fillitemfillitem', 'expose', 'kvitem', 'struct', 'public', 'methodallows', 'filling', 'value']",{'expose': 100}
"['syncs', 'manifestensure', 'amidst', 'safety', 'crash', 'systemcouldbiggest', 'manifesttrack', 'valueinclude']",{'crash': 100}
"['expose', 'value']",{'expose': 100}
"['deadlock', 'compaction']",{'deadlock': 100}
"['overflow', 'integer', 'system', 'insteadissue', 'compile', 'causedoverflow', 'issue', 'changesetrevertingcomment']","{'overflow': 100, 'integer': 100, 'issue': 100}"
"['video', 'readme', 'tutorialvideo', 'readme', 'tutorialissuecomment', 'issue', 'badger', 'dgraph']",{'issue': 100}
"['issue', 'mutex']",{'issue': 100}
"['issue', 'mutex']",{'issue': 100}
"['consistency', 'crash']",{'crash': 100}
"['deadlock', 'potential']",{'deadlock': 100}
"['fatal', 'active', 'value']",{'fatal': 100}
"['memtable', 'concurrent']",{'concurrent': 100}
"['slice', 'comment', 'clean', 'table', 'valid', 'empty', 'issue']",{'issue': 100}
