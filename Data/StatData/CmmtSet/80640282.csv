message,fuzzy
"['jline', 'incorrect', 'error', 'function', 'upgrade']",{'incorrect': 100}
"['version', 'chore', 'incorrect']",{'incorrect': 100}
"['gradle', 'dependency', 'incorrect', 'download', 'kotlin']",{'incorrect': 100}
"['gradle', 'jline', 'dependency', 'submodule', 'picocli', 'configuration', 'implementation', 'shelljline', 'maven', 'project', 'picocli', 'solves', 'issue', 'shell', 'version']",{'issue': 100}
"['sensitive', 'hierarchy']",{'Sensitive': 100}
"['issue', 'reproduce']",{'issue': 100}
"['incorrect', 'bugfix', 'param', 'unmatched', 'index', 'positional']",{'incorrect': 100}
"['update', 'jline', 'issue']",{'issue': 100}
"['abbrev', 'helpcommand', 'insensitive']",{'Sensitive': 90}
"['attribution', 'incorrect']",{'incorrect': 100}
"['ensure', 'regardless', 'environment', 'issue']",{'issue': 100}
"['ensure', 'regardless', 'tracertest', 'environment', 'issue']",{'issue': 100}
"['gradle', 'generation', 'module', 'suppressclose']",{'generation': 100}
"['arggroup', 'annotation', 'field', 'class', 'processincremental', 'level', 'compiler', 'intellij', 'issue', 'classarggroup']",{'issue': 100}
"['manual', 'example', 'improvedwriter', 'renameinstead', 'trace', 'print', 'stacktrace', 'stack', 'stacktrace', 'styleerror', 'print', 'debug', 'message', 'stacktraceclose']",{'stack': 100}
"['trace', 'insensitive', 'levelclose']",{'Sensitive': 90}
"['global', 'option', 'issue', 'reproduce']",{'issue': 100}
"['excludes', 'generation']",{'generation': 100}
"['expose', 'argument', 'parseresult']",{'expose': 100}
"['separate', 'issue']",{'issue': 100}
"['manual', 'insensitive']",{'Sensitive': 90}
"['length', 'codepoint']",{'length': 100}
"['length', 'isnonalphabetic', 'codepoint']",{'length': 100}
"['insensitive', 'option']",{'Sensitive': 90}
"['support', 'insensitive']",{'Sensitive': 90}
"['overflow', 'potential', 'codepoint']",{'overflow': 100}
"['asciidoctor', 'generator', 'synopsis', 'incorrect']",{'incorrect': 100}
"['exception', 'stack', 'method', 'commits']",{'stack': 100}
"['command', 'issue', 'class', 'reuse']",{'issue': 100}
"['section', 'dependency', 'injection', 'quarkus']",{'injection': 100}
"['javadoc', 'incorrect']",{'incorrect': 100}
"['message', 'exception', 'simplify', 'incorrect']",{'incorrect': 100}
"['expectation', 'incorrect']",{'incorrect': 100}
"['reflection', 'issue']",{'issue': 100}
"['update', 'subcommands', 'insensitive']",{'Sensitive': 90}
"['subcommands', 'exception', 'update', 'insensitive', 'duplicate']",{'Sensitive': 90}
"['subcommands', 'insensitive']",{'Sensitive': 90}
"['default', 'locale', 'englishconsole', 'english', 'command', 'insensitive', 'option', 'ascii']",{'Sensitive': 90}
"['subcommands', 'getters', 'setter', 'insensitive', 'option']",{'Sensitive': 90}
"['insensitive', 'exception', 'setting']",{'Sensitive': 90}
"['parseresult', 'insensitive', 'query']",{'Sensitive': 90}
"['support', 'partial', 'insensitive']",{'Sensitive': 90}
"['update', 'issue']",{'issue': 100}
"['stacktraces', 'issue']",{'issue': 100}
"['trace', 'stack', 'default']",{'stack': 100}
"['incorrect', 'codegen']",{'incorrect': 100}
"['multiple', 'incorrect', 'error', 'exclusive', 'bugfix', 'message', 'group']",{'incorrect': 100}
"['bullet', 'issue', 'release']",{'issue': 100}
"['completion', 'positional', 'paramsupdate', 'refactoredfunction', 'extractsubcommands', 'paramsreadable', 'minor', 'generation', 'refactorings']",{'generation': 100}
"['command', 'argspeccommand', 'public', 'argspecbelongs', 'getter', 'model', 'expose', 'field', 'existingwrite', 'default', 'subcommand', 'sensitivesimpler', 'bazel', 'styleuniform', 'command', 'default', 'override']",{'expose': 100}
"['generation', 'graalvm', 'visit', 'parameter', 'reflection', 'consumer']",{'generation': 100}
"['resource', 'removedproject', 'issue', 'spring']",{'issue': 100}
"['equal', 'exception', 'length', 'infinite', 'usage', 'bugfix', 'command', 'synopsis', 'exceeds', 'messageindent', 'synopsis', 'multicloseclose']",{'length': 100}
"['ignore', 'issue', 'reproduce']",{'issue': 100}
"['incorrect', 'number', 'example', 'script', 'groovy', 'version']",{'incorrect': 100}
"['incorrect', 'number', 'example', 'processor', 'annotation', 'version']",{'incorrect': 100}
"['manual', 'version', 'incorrect']",{'incorrect': 100}
"['generation', 'update', 'struct', 'script', 'bracket']",{'generation': 100}
"['variable', 'generation', 'scope', 'script']",{'generation': 100}
"['updatecreate', 'target', 'modular', 'issue', 'article', 'moditect', 'plugin', 'folder', 'versioncompatibility', 'trigger', 'levelupdate', 'manifest']",{'issue': 100}
"['stack', 'bugfix', 'value', 'default', 'option', 'overflow', 'arggroupclose']","{'stack': 100, 'overflow': 100}"
"['composite', 'bugfix', 'synopsis', 'issue', 'group', 'expandclose']",{'issue': 100}
"['exception', 'incorrect', 'example', 'programmatic', 'classclose']",{'incorrect': 100}
"['section', 'dependency', 'injection', 'micronaut']",{'injection': 100}
"['clarify', 'update', 'tracker', 'issue', 'manual', 'github']",{'issue': 100}
"['section', 'dependency', 'injection', 'spring', 'manualclose']",{'injection': 100}
"['incorrect', 'asciidoc', 'syntax', 'markdown']",{'incorrect': 100}
"['update', 'issue']",{'issue': 100}
"['class', 'enhancement', 'javadoc', 'diagramimprove', 'javadocbrokenaround', 'gradle', 'issue']",{'issue': 100}
"['support', 'stack', 'setter', 'method', 'validationclose']",{'stack': 100}
"['subcommands', 'incorrect', 'bugfix', 'newlines']",{'incorrect': 100}
"['support', 'class', 'interface', 'dependency', 'injection', 'update', 'ifactory', 'implementation', 'proxyclose']",{'injection': 100}
"['dependency', 'injection', 'runnable', 'container', 'callable', 'enhancement', 'static', 'method', 'acceptclose']",{'injection': 100}
"['dependency', 'injection', 'picoinject', 'annotation', 'custom']",{'injection': 100}
"['insensitive', 'version']",{'Sensitive': 90}
"['issue', 'release']",{'issue': 100}
"['compile', 'overwrite', 'example', 'kotlin', 'value', 'frozenexception', 'kotlin', 'sample', 'runtime', 'currentcompile', 'exception', 'constant', 'value', 'primitive', 'thread', 'private', 'field', 'option', 'string', 'processexample', 'picocli', 'cosmo', 'testedbranch', 'example', 'kotlin', 'picocli', 'language', 'master', 'cosmo', 'versionbranch', 'example', 'kotlin', 'picocli', 'language', 'cosmo', 'versionmacos', 'environmentpicocli', 'version']",{'thread': 100}
"['incorrect', 'paramlabel', 'option', 'message', 'arity', 'shortclose']",{'incorrect': 100}
"['incorrect', 'sequence', 'adjacent', 'resultedclose']",{'incorrect': 100}
"['permission', 'access', 'travis']",{'permission': 100}
"['close', 'thrown', 'issue', 'option']",{'issue': 100}
"['xterm', 'pseudo', 'color', 'window', 'exists', 'default', 'solution', 'ignore', 'close', 'issue']",{'issue': 100}
"['issue', 'field']",{'issue': 100}
"['close', 'option', 'issue', 'field']",{'issue': 100}
"['property', 'system', 'window', 'color', 'close', 'issue', 'style', 'jansi']",{'issue': 100}
"['support', 'decode', 'order', 'hexadecimal', 'value', 'integer', 'octal', 'string', 'parse', 'methodclose']",{'integer': 100}
"['option', 'issue']",{'issue': 100}
