message,fuzzy
"['identical', 'issue', 'force']",{'issue': 100}
"['array', 'reproduce', 'equal', 'value', 'issue']",{'issue': 100}
"['buffer', 'default', 'openclbuffer']",{'buffer': 100}
"['buffer', 'memoryissue']",{'buffer': 100}
"['capacity', 'buffer']",{'buffer': 100}
"['command', 'buffer', 'writeoperator', 'expectspromiseopencl', 'implementationwrite']",{'buffer': 100}
"['request', 'mastercheck', 'issue']",{'issue': 100}
"['check', 'issue']",{'issue': 100}
"['travis', 'issue']",{'issue': 100}
"['device', 'safety', 'issue']",{'issue': 100}
"['device', 'issue']",{'issue': 100}
"['order', 'issue']",{'issue': 100}
"['value', 'issue']",{'issue': 100}
"['comparison', 'integer']",{'integer': 100}
"['mergemerge', 'request', 'haahhcount', 'incorrect', 'update']",{'incorrect': 100}
"['global', 'incorrect', 'update', 'generate', 'method']",{'incorrect': 100}
"['devicedevice', 'operationaffect', 'thread', 'driverresult']",{'thread': 100}
"['mergemerge', 'request', 'value', 'thread']",{'thread': 100}
"['value', 'thread']",{'thread': 100}
"['runtime', 'version', 'context', 'function', 'fixedruntime', 'issue', 'function', 'compile', 'versioncontains']",{'issue': 100}
"['buffer', 'request', 'kylelutzbuffer', 'memory', 'clone']",{'buffer': 100}
"['buffer', 'memory', 'clone']",{'buffer': 100}
"['mergemerge', 'local', 'buffer', 'request', 'memory', 'local']",{'buffer': 100}
"['memory', 'localfailure', 'memory', 'report', 'local', 'buffer']",{'buffer': 100}
"['fafdcemerge', 'local', 'buffer', 'request', 'kylelutzclass']",{'buffer': 100}
"['request', 'kylelutzvector', 'issue']",{'issue': 100}
"['vector', 'issue']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'mageswaranissue', 'string']",{'issue': 100}
"['mergemerge', 'empty', 'range', 'request', 'kylelutzempty', 'range', 'issue']",{'issue': 100}
"['empty', 'range', 'issue']",{'issue': 100}
"['vector', 'temporaryelement', 'issue', 'vector', 'temporary', 'intermediaryvector', 'output', 'group']",{'issue': 100}
"['mergemerge', 'request', 'kylelutz', 'threadstorage', 'cache', 'global', 'local', 'thread', 'program']",{'thread': 100}
"['storage', 'cache', 'global', 'local', 'thread', 'program']",{'thread': 100}
"['reflect', 'issue']",{'issue': 100}
"['mergemerge', 'popcount', 'request', 'kylelutzopencl', 'popcount', 'issue', 'device']",{'issue': 100}
"['opencl', 'popcount', 'issue', 'device']",{'issue': 100}
"['thread', 'benchmark']",{'thread': 100}
"['opencl', 'ratheropencl', 'reference', 'documentationopencl', 'issue']",{'issue': 100}
"['reorganize', 'issue']",{'issue': 100}
"['overload', 'convenience', 'buffer']",{'buffer': 100}
"['value', 'thread']",{'thread': 100}
"['buffer', 'method', 'clone']",{'buffer': 100}
"['argument', 'constructor', 'vector', 'queueinitialize', 'vector', 'constructor', 'changeargument', 'queueargument', 'initialize', 'context', 'command', 'buffer', 'improves', 'performance', 'issue', 'command', 'queuedifferent', 'command', 'operation', 'queuestill', 'vector']","{'buffer': 100, 'issue': 100}"
"['issue', 'algorithmgather', 'issue', 'algorithmanother']",{'issue': 100}
"['source', 'ternary', 'string', 'binary', 'function', 'storesource', 'binary', 'issue']",{'issue': 100}
"['lambda', 'expression', 'comparison', 'issue', 'operatoroperator', 'comparison', 'issuelambda', 'expression', 'ensurelambda', 'expression']",{'issue': 100}
"['security', 'warning', 'silence']",{'Security': 100}
"['uchar', 'literaluchar', 'issue']",{'issue': 100}
"['tuple', 'issue', 'boosttuple', 'issue', 'boost']",{'issue': 100}
"['literal', 'issueliteral', 'issue', 'unsignedwould', 'value', 'character', 'directlywithout', 'quote', 'insteadkernel', 'compilation']",{'issue': 100}
"['issue', 'iterators', 'issue', 'iterators', 'usingalways', 'function', 'refactoredfalse', 'return', 'iterators', 'iterator', 'previouslycompilation']",{'issue': 100}
"['command', 'queue', 'default', 'systemcommand', 'queue', 'default', 'systemstatic', 'accessible', 'command', 'compute', 'default', 'queueanalogous', 'default', 'context', 'devicestreamwithout', 'changeexplicit', 'algorithm', 'queuewould', 'command', 'temporaryqueue', 'argument', 'algorithm', 'commandvalue', 'system', 'default', 'equalperformance', 'condition', 'issue', 'library', 'througoutseparate']",{'issue': 100}
"['allocator', 'memory', 'buffer', 'allocator', 'buffer', 'mallocconstructorretain', 'buffer', 'parameter', 'falsebuffer', 'reference', 'constructorbuffer', 'decrementreference', 'destructor', 'buffer', 'effectbuffer', 'memorymodify']",{'buffer': 100}
"['window', 'issue']",{'issue': 100}
"['variable', 'occursiterator', 'functionargument', 'buffer', 'iterator']",{'buffer': 100}
"['iterator', 'adaptormethod', 'properlyiterator', 'buffer', 'adaptor']",{'buffer': 100}
"['constuctor', 'vectorconstuctor', 'objectmemory', 'buffer', 'object', 'error', 'movedbuffer', 'check', 'constructor', 'attemptedempty']",{'buffer': 100}
"['intelcompiler', 'opencl', 'intel', 'wouldcompile', 'vector', 'errorfunction', 'viable', 'candidate', 'functionaddress', 'space', 'parametercompare', 'value', 'input', 'predicateliteral', 'memory', 'global', 'value', 'buffer', 'spaceprivate', 'memory', 'spacevalue', 'reading', 'local', 'private', 'space']",{'buffer': 100}
"['request', 'ddemidovlowlevel', 'initialization', 'buffer', 'queue']",{'buffer': 100}
"['lowlevel', 'initialization', 'buffer', 'queue']",{'buffer': 100}
"['lambda', 'length', 'wrapper', 'functionlambda', 'length', 'wrapper', 'functionlambda']",{'length': 100}
