message,fuzzy
"['issue', 'introduce', 'assertj', 'recursive', 'comparison']",{'issue': 100}
"['pitest', 'configurepitest', 'configure', 'mutationexclude', 'pitest', 'stack', 'traceorder', 'dependencyplugincompilehenry']",{'stack': 100}
"['rework', 'shortcutdeepequals', 'equal', 'reference', 'checkproper', 'issue', 'implementationequal', 'reflexive', 'implementationoutside', 'equal', 'reference', 'implementation', 'check', 'reducedoverallshortcut', 'thorough', 'regression', 'ensure', 'provideimplementation']",{'issue': 100}
"['assertion', 'integer', 'method', 'array', 'contains', 'overloadedclose']",{'integer': 100}
"['describe', 'readability', 'error', 'difficult', 'object', 'error', 'lengthy', 'quick', 'element']",{'length': 92}
"['injection', 'field', 'capability', 'addedassertion', 'createdassertion', 'error', 'place', 'consolidate', 'collection']",{'injection': 100}
"['snapshot', 'odditysnapshot', 'mavenbreak', 'noextraheaders', 'header', 'removeelides', 'reproducible', 'removeremoveheadersbuild', 'master', 'bndtools', 'plugin', 'reproducible', 'mavenhargrave', 'signedassert', 'bundle', 'custom', 'proxy', 'classloader', 'composite', 'classdifferent', 'assert', 'loader', 'assertj', 'classloader', 'composite', 'classavoid', 'necessarydefault', 'strategy', 'assertjstrategy', 'defines', 'proxy', 'class', 'specifiedavoids', 'beneficialloader', 'composite', 'classrefactorcentralize', 'logic', 'classstrategy', 'loader', 'assumption', 'classprepares', 'future', 'updatedsupport', 'custom', 'definingloader', 'bytebuddy', 'update', 'cache', 'classassert', 'loader', 'assertj', 'multiple', 'importantassertion', 'custom', 'classunique', 'proxy', 'generation', 'classcostigliola', 'assertj', 'issuehargrave']",{'generation': 100}
"['failure', 'issue', 'bndtools', 'revertreverts']",{'issue': 100}
"['failure', 'thread', 'issue']","{'thread': 100, 'issue': 100}"
"['plugin', 'stack', 'trace', 'surefire']",{'stack': 100}
"['trace', 'display', 'stack', 'maven']",{'stack': 100}
"['failure', 'issue']",{'issue': 100}
"['localtime', 'issue', 'midnight', 'assumption']",{'issue': 100}
"['expose', 'array', 'assertion']",{'expose': 100}
"['optional', 'expose', 'assertion']",{'expose': 100}
"['expose', 'assertion']",{'expose': 100}
"['iterable', 'expose', 'assertion']",{'expose': 100}
"['issue', 'module']",{'issue': 100}
"['extract', 'parameter', 'double', 'issue', 'parameter']",{'issue': 100}
"['collision', 'environment', 'window', 'insensitive', 'class']",{'Sensitive': 90}
"['throwable', 'stack', 'trace']",{'stack': 100}
"['throwable', 'stack', 'trace']",{'stack': 100}
"['expose', 'objectcostigliola', 'guava', 'assertj']",{'expose': 100}
"['junit', 'jupiter', 'introduceassertj', 'offeredsoftassertions', 'workingjunit', 'jupiter', 'drawbacksupport', 'execution', 'parallel', 'lackingsupport', 'testinstance', 'semantics', 'lifecycle', 'mannerundesirable', 'registration', 'programmaticinstance', 'allowsconstructorwould', 'assertall', 'lifecycle', 'thoughgivenmethod', 'instanceregistration', 'programmaticinstance', 'allowsfield', 'supersedessoftassertions', 'support', 'injection', 'instancemethod', 'testabletesttemplatethrow', 'exceptionbeforeeach', 'aftereach', 'constructor', 'method', 'lifecyclesoftassertions', 'assertall', 'invokes', 'instancemethod']",{'injection': 100}
"['throwable', 'trace', 'hasmessage', 'understanding', 'stack']",{'stack': 100}
"['issue', 'project', 'javadoc', 'plugin', 'maven']",{'issue': 100}
"['trace', 'print', 'assertionerror', 'assertj', 'stack']",{'stack': 100}
"['entry', 'android', 'assertion', 'improper', 'stream', 'point', 'entry']",{'improper': 100}
"['expose', 'fieldcurrent', 'method', 'assert']",{'expose': 100}
"['issue', 'warning']",{'issue': 100}
"['iterable', 'issue']",{'issue': 100}
"['issue', 'warning']",{'issue': 100}
"['jacoco', 'issue', 'support']",{'issue': 100}
"['maven', 'javadoc', 'generation', 'plugin', 'additionalparam']",{'generation': 100}
"['trace', 'stack', 'print', 'information']",{'stack': 100}
"['issue', 'polish', 'sonarclose', 'resourcerefactor', 'improvement']",{'issue': 100}
"['stack', 'trace', 'filteringerror', 'trace', 'thrown', 'element', 'assertj', 'stack', 'removefailwithmessageassert', 'custom', 'element', 'subclass']",{'stack': 100}
"['throwable', 'trace', 'check', 'instanceof', 'stack']",{'stack': 100}
"['completable', 'overflow']",{'overflow': 100}
"['integer', 'overload', 'bytearrayassert', 'method']",{'integer': 100}
"['issue', 'generation', 'manifest']","{'issue': 100, 'generation': 100}"
"['generator', 'assertion', 'issue', 'costigliola', 'assertj', 'fluent']",{'issue': 100}
"['generator', 'assertion', 'issue', 'costigliola', 'assertj', 'fluent']",{'issue': 100}
"['issue', 'template']",{'issue': 100}
"['navigable', 'expose', 'assertion', 'bddassertions']",{'expose': 100}
"['expose', 'assertion', 'error']",{'expose': 100}
"['issue', 'template']",{'issue': 100}
"['issue', 'template']",{'issue': 100}
"['support', 'issue']",{'issue': 100}
"['expose', 'assertion']",{'expose': 100}
"['assertion', 'failure', 'thread']",{'thread': 100}
"['generation', 'parent', 'javadoc']",{'generation': 100}
"['incorrect', 'jarjar', 'plugin', 'generatedparent', 'upgrade']",{'incorrect': 100}
"['incorrect', 'window', 'separator']",{'incorrect': 100}
"['mergerequest', 'issue', 'jcgayactual', 'error', 'issue', 'message', 'inversion']",{'issue': 100}
"['actual', 'error', 'issue', 'message', 'inversion', 'isequaltoactual', 'message']",{'issue': 100}
"['fedcfd', 'mergerequest', 'issue', 'absolute', 'hasparent']",{'issue': 100}
"['absolute', 'issue', 'parent', 'comparisonrelativealways', 'canonical']",{'issue': 100}
"['hasextension', 'issue', 'assertion']",{'issue': 100}
"['default', 'assertion', 'thread', 'format', 'custom', 'safety', 'addition', 'useless', 'deprecate']",{'thread': 100}
"['fbddakamilszymanski', 'request', 'issue', 'mergehassamesizeas', 'assertion', 'charsequence']",{'issue': 100}
"['disallow', 'issue', 'private', 'field', 'possibility']",{'issue': 100}
"['object', 'issue', 'standard', 'unicode', 'representation', 'hexadecimal']",{'issue': 100}
"['iterable', 'assert', 'issue', 'field', 'comparators']",{'issue': 100}
"['topic', 'request', 'issue', 'message']",{'issue': 100}
"['issue', 'message']",{'issue': 100}
"['assertion', 'hexadecimal', 'messagefloat', 'consistent', 'integer', 'arrayvalue', 'hexadecimal']",{'integer': 100}
"['issue', 'mapassertverifies', 'entry']",{'issue': 100}
"['issue', 'mapassertverifies', 'entry']",{'issue': 100}
"['bddebbranch', 'twillouer', 'issue', 'mergeconflictassertjassertj']",{'issue': 100}
"['mergetwillouer', 'request', 'issue', 'mergeclose', 'format']",{'issue': 100}
"['issue', 'assertion', 'throwableassert']",{'issue': 100}
"['issue', 'assertion', 'throwableassert']",{'issue': 100}
"['issue', 'assertion', 'throwableassert']",{'issue': 100}
"['issue', 'assertion', 'throwableassert']",{'issue': 100}
"['mergerequest', 'issue']",{'issue': 100}
"['mergetwillouer', 'request', 'issue']",{'issue': 100}
"['ebcbad', 'mergetwillouer', 'request', 'issue', 'mergeissue']",{'issue': 100}
"['adaddbftwillouer', 'request', 'issue']",{'issue': 100}
"['mergetwillouer', 'request', 'issue']",{'issue': 100}
"['format', 'issue', 'relatedsynchronization', 'instance']",{'issue': 100}
"['plugin', 'maven', 'bundle', 'directlyconfiguration', 'simplifies', 'workaround', 'requiredarchiver', 'mavenarchiver', 'plexus', 'plugin', 'incompatibilitytesla', 'meclipse', 'issue']",{'issue': 100}
"['expose', 'floatsbasetest']",{'expose': 100}
"['issue', 'hassamesize', 'arrayassert']",{'issue': 100}
"['dfabc', 'mergerequest', 'issue', 'nfrancoisabstractassert', 'issue', 'friend', 'isinstanceof']",{'issue': 100}
"['issue', 'contains', 'value']",{'issue': 100}
"['eeccc', 'mergerequest', 'issue']",{'issue': 100}
"['stack', 'exceptioninstanciation', 'encapsulate', 'failure', 'assertionerror', 'filter', 'stackshouldbeequal', 'processing', 'special', 'assertionerror']",{'stack': 100}
"['issue', 'nurkiewicz', 'tomasz']",{'issue': 100}
