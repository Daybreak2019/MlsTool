message,fuzzy
"['enable', 'dependency', 'dependabot', 'managechain', 'option', 'dependency', 'update', 'security']",{'Security': 100}
"['limit', 'tunnelingrouter', 'cloudnativelabs', 'issue']",{'issue': 100}
"['conversiondetail', 'followingrouter', 'cloudnativelabs', 'query', 'fmerge', 'arefs', 'security', 'fpull']",{'Security': 100}
"['passwordrouter', 'cloudnativelabs', 'query', 'fmerge', 'arefs', 'security', 'fpull']",{'Security': 100}
"['security', 'scanningcodeql', 'action', 'github', 'usage', 'configuration']",{'Security': 100}
"['template', 'issue', 'issue', 'repository', 'github', 'template', 'community']",{'issue': 100}
"['ipset', 'performance', 'largerouter', 'performance', 'improves', 'restorerouter', 'cloudnativelabs', 'issue']",{'issue': 100}
"['mergerequest', 'random', 'coufaljamitigate', 'random', 'issue', 'conntrack', 'iptables']",{'issue': 100}
"['mergeeeeeeta', 'request', 'generate', 'fwmark', 'mergegeneratefwmark', 'argument', 'sprint', 'unintentional']",{'Sprintf': 92}
"['generatefwmark', 'argument', 'sprint', 'unintentional']",{'Sprintf': 92}
"['heartbeat', 'networkservice', 'networkpolicyrouter', 'issue', 'referenceheartbeat', 'policy']",{'issue': 100}
"['epollimage', 'compile', 'gobgpmakefile', 'patch', 'router', 'similarbuilt', 'gobgpfunctionarchitecture', 'compile', 'linuxinstead', 'packageupstream', 'syscallgolang', 'issue']",{'issue': 100}
"['graceful', 'issue', 'update', 'termination', 'alpinenetlink', 'updateupdate', 'stats', 'libnetworkupdate', 'libnetworkupdate', 'endpoint', 'deleteflusher', 'conntrackmainloop', 'orderupdate', 'alpinerevert', 'alpine', 'updaterevertversion']",{'issue': 100}
"['reuse', 'extract', 'clean', 'method', 'refactorwithdraw', 'external', 'generation', 'previousservice']",{'generation': 100}
"['address', 'nexthop', 'insertionrouter', 'cloudnativelabs', 'issue']",{'issue': 100}
"['validate', 'presence', 'definition', 'valid', 'crash', 'networksupport', 'egress']",{'crash': 100}
"['enable', 'iptablesrouter', 'cloudnativelabs', 'issue']",{'issue': 100}
"['proxy', 'configure', 'explicitrouter', 'cloudnativelabs', 'issue']",{'issue': 100}
"['address', 'optional', 'server', 'issue', 'listensaddress', 'configure', 'local', 'server', 'introduces', 'lister', 'anntation']",{'issue': 100}
"['connection', 'network', 'issue', 'policy', 'chain', 'firewall', 'ensures', 'chain', 'additioncleanup', 'garbage', 'stale', 'collection', 'iptables']",{'issue': 100}
"['check', 'condition', 'issue', 'healthcheck', 'condition', 'issue', 'healthheartbeat']",{'issue': 100}
"['router', 'cloudnativelabs', 'issue']",{'issue': 100}
"['documentation', 'issue', 'toolbox']",{'issue': 100}
"['metric', 'update', 'loggingprotocol', 'metric', 'label', 'addedredundant', 'removeddashboard', 'example', 'addeddashboard', 'screenshot', 'addeddashboard', 'namespacemetricmetricmetric', 'registermetric', 'addedlevel', 'controller', 'servicemetric', 'controller', 'levelshutdown', 'graceful', 'servercleanupmetric', 'controller', 'exportingmissingdashboard', 'updatedmetric', 'update', 'orderdeclareddashboard', 'updateddashboard', 'enable', 'changedrouter', 'cloudnativelabs', 'issueassignmentargumentupdateddefault', 'addedparse', 'directive', 'pickupregressionstatement', 'error', 'function', 'syntax', 'declarationchangedupdatedmarkdownrespective', 'metric', 'controller', 'registration', 'runningstudio', 'visual', 'expose', 'behaviour', 'addedinstanciation', 'metric', 'controller', 'period', 'updatedforgottcleanupmetric']",{'expose': 100}
"['limitation', 'issue', 'verbose', 'namespaces', 'network', 'potentialnamespaces', 'linuxdocker', 'libnetworkgolang', 'forum', 'discussion', 'topic', 'grqdckfo']",{'issue': 100}
"['mergeprometheus', 'cloudnativelabs', 'request', 'mergeprometheus', 'connection', 'inactive', 'metric', 'service', 'active', 'backend', 'expose']",{'expose': 100}
"['daemon', 'object', 'issue', 'agent', 'partial', 'towardsoveride', 'hostname', 'kubelet']",{'issue': 100}
"['building', 'generation', 'unique', 'service', 'endpoint', 'generate', 'manifest', 'serviceendpoint', 'lookup', 'service', 'internallyclose']",{'generation': 100}
