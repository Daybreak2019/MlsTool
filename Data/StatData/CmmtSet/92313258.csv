message,fuzzy
"['subdomain', 'generation', 'deduplicate', 'logicinteon']",{'generation': 100}
"['mergemerge', 'request', 'config', 'issuer']",{'issue': 91}
"['mergevault', 'check', 'chain', 'joshvanl', 'request', 'conformancevault', 'check', 'chain', 'certificate', 'issuer']",{'issue': 91}
"['mergemerge', 'joshvanl', 'certificate', 'request', 'revertchain', 'reverts', 'issuer']",{'issue': 91}
"['reverts', 'issuer', 'bundlejoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['mergemerge', 'joshvanl', 'certificate', 'request', 'issuercertificate', 'request', 'issuer']",{'issue': 91}
"['permission', 'managerissuerjoshvanl', 'vleeuwenjoshua']",{'permission': 100}
"['optional', 'issuer', 'controllercontrollerjoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['issuer', 'controllerjoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['issue', 'requestclean', 'issue', 'support', 'target']",{'issue': 100}
"['clean', 'issue', 'targetgrigorenko', 'kevin']",{'issue': 100}
"['bedeba', 'mergeedglynes', 'requestupdate', 'issuer']",{'issue': 91}
"['check', 'staticcertmanager', 'validation', 'deadcodevalue', 'errcheck', 'error', 'issuer', 'return', 'checkedvalue', 'errcheck', 'error', 'issuer', 'return', 'checkedvault', 'issuer', 'deadcodestatement', 'gosimple', 'client', 'issuer', 'venafi', 'redundantvalue', 'errcheck', 'error', 'return', 'checkedintroduce', 'couldserver', 'webhook', 'value', 'errcheck', 'error', 'return', 'checkedserver', 'webhook', 'value', 'errcheck', 'error', 'return', 'checkedashley', 'davis']",{'issue': 91}
"['clean', 'issue', 'support', 'targetgrigorenko', 'kevin']",{'issue': 100}
"['policy', 'security', 'kyverno', 'installrichard']",{'Security': 100}
"['policy', 'security', 'kyverno', 'installrichard']",{'Security': 100}
"['requestorder', 'issue']",{'issue': 100}
"['requestsetup', 'issuer']",{'issue': 91}
"['mergemerge', 'chain', 'parse', 'joshvanl', 'certificate', 'requestchain', 'parse', 'issuer', 'certificate']",{'issue': 91}
"['mergemerge', 'chain', 'parse', 'joshvanl', 'certificate', 'requestvault', 'construct', 'chain', 'certificate', 'populate', 'issuer']",{'issue': 91}
"['refactor', 'string', 'consts', 'literal', 'setupgeneration', 'ensures', 'valid', 'issuer', 'current', 'seemsirbekrm']",{'issue': 91}
"['unusedcontroller', 'issuer', 'venafi', 'structcheckrichard']",{'issue': 91}
"['return', 'register', 'errorvalue', 'controller', 'errcheck', 'error', 'issuer', 'return', 'checkedrichard']",{'issue': 91}
"['error', 'unexpectedvalue', 'errcheck', 'error', 'issuer', 'return', 'checkedvalue', 'errcheck', 'error', 'issuer', 'return', 'checkedvalue', 'errcheck', 'error', 'issuer', 'return', 'checkedvalue', 'errcheck', 'error', 'issuer', 'return', 'checkedrichard']",{'issue': 91}
"['string', 'error', 'string', 'error', 'issuer', 'akamairichard']",{'issue': 91}
"['simplify', 'statement', 'returnstrategy', 'issuer', 'return', 'falserichard']",{'issue': 91}
"['client', 'package', 'issuer', 'venafi', 'listerimport', 'client', 'issuer', 'venafi', 'listerrichard']",{'issue': 91}
"['crypto', 'directive', 'comment', 'replaceirbekrm']",{'crypto': 100}
"['webhook', 'warning', 'algorithm', 'issuer', 'validation', 'returnirbekrm']",{'issue': 91}
"['affac', 'mergerelease', 'external', 'sample', 'request', 'issuer', 'wallrjinstallation', 'external', 'sample', 'issuer', 'simplify']",{'issue': 91}
"['installation', 'external', 'sample', 'issuer', 'simplifyrichard']",{'issue': 91}
"['intermediate', 'issuer']",{'issue': 91}
"['requestpublic', 'function', 'comparison', 'incorrect']",{'incorrect': 100}
"['dbbfd', 'mergeirbekrm', 'requestgolang', 'crypto', 'upstream', 'manager']",{'crypto': 100}
"['webhook', 'limit', 'history', 'certificate', 'revisionupgrade', 'jetstack', 'issue', 'managerirbekrm']",{'issue': 100}
"['algorithm', 'issuer', 'longercrypto', 'hardcodedcryptomanagerirbekrm']",{'issue': 91}
"['requestcreation', 'function', 'issuer']",{'issue': 91}
"['creation', 'function', 'issuer']",{'issue': 91}
"['jetstack', 'requesthandle', 'revert', 'intermediate', 'issuer']",{'issue': 91}
"['intermediate', 'issuer']",{'issue': 91}
"['mergemerge', 'joshvanl', 'controller', 'request', 'issuer', 'contextcontroller', 'client', 'issuer', 'context']",{'issue': 91}
"['environment', 'issue', 'minor', 'localegboye']",{'issue': 100}
"['stack', 'cluster', 'defer', 'issuer', 'contextcontrollerjoshvanl', 'vleeuwenjoshua']","{'stack': 100, 'issue': 91}"
"['controller', 'client', 'issuer', 'contextjoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['reportcentral', 'truth', 'sourcereport', 'question', 'security', 'manager', 'vulnerabilityprojectashley', 'davis']",{'Security': 100}
"['signer', 'serviceaccount', 'controller', 'permission', 'managerjoshvanl', 'vleeuwenjoshua']",{'permission': 100}
"['empty', 'issuer', 'field', 'issuer', 'selfsignedempty', 'subject', 'issuer', 'matchsignedcommit', 'detects', 'issuedoperator', 'empty', 'emits', 'warning', 'cluster', 'warning', 'generate', 'detect', 'issueaccept', 'compliantashley', 'davis']",{'issue': 91}
"['mergemerge', 'joshvanl', 'kubectl', 'request', 'usernamerequestor', 'kubectl', 'default', 'issuer', 'outpt']",{'issue': 91}
"['requestcertificate', 'request', 'issue']",{'issue': 100}
"['mergecondition', 'generation', 'joshvanl', 'certificate', 'requestcondition', 'certificate']",{'generation': 100}
"['issue', 'ocspserversvalais']",{'issue': 100}
"['mergesoubeyrand', 'patch', 'requestaggregate', 'permission']",{'permission': 100}
"['frame', 'stack', 'lister', 'wrongframe', 'outsidementionexample', 'followingtrace', 'error', 'expectedvendor', 'patch', 'simple', 'versionframe', 'stack', 'order', 'correctfailure', 'happenedtrace', 'error', 'expectedvalais']",{'stack': 100}
"['listerfollow', 'generator', 'secret', 'generator', 'orderimportlister', 'jetstack', 'managerfoundapproach', 'issue', 'majorprevent', 'check', 'behavior', 'enforcecheck', 'namespace', 'correctdefault', 'secretcheck', 'output', 'gomock', 'proposeclient', 'mockgen', 'ordervalais']",{'issue': 100}
"['aggregate', 'permission', 'correctsoubeyrand']",{'permission': 100}
"['minimum', 'field', 'certificate', 'maximum', 'removeconversion', 'problem', 'issue', 'contextirbekrm']",{'issue': 100}
"['cbacb', 'mergemerge', 'external', 'request', 'issuer', 'wallrjexternal', 'issuer']",{'issue': 91}
"['external', 'sample', 'issuer', 'installrichard']",{'issue': 91}
"['request', 'wallrjfield', 'secret', 'venafi', 'issuer']",{'issue': 91}
"['trust', 'chain', 'issuer', 'verificationrichard']",{'issue': 91}
"['exclude', 'request', 'issuer', 'sorahvault', 'intermediate', 'issuer']",{'issue': 91}
"['intermediate', 'issuervault', 'certificate', 'issuer', 'vaultcertificate', 'intermediateavailablecertificate', 'issuer', 'issuingchain', 'generallycertificate', 'client', 'certificate', 'client', 'server', 'redundantbehaveissue', 'jetstack', 'managerpatch', 'jetstack', 'managerrandles', 'chrissorah', 'fukumori']",{'issue': 91}
"['dcabebmerge', 'issue', 'request', 'template', 'meyskenschange', 'comment', 'issue', 'template', 'block']",{'issue': 100}
"['comment', 'issue', 'template', 'blockeyskens']",{'issue': 100}
"['mergemerge', 'config', 'request', 'venafi', 'issuer', 'validation', 'wallrjvalidation', 'config', 'venafi', 'issuer']",{'issue': 91}
"['concurrent', 'panic', 'challenge', 'changingeyskens']",{'concurrent': 100}
"['ebcca', 'mergemerge', 'request', 'issuer', 'meyskens', 'documentissuerconfig', 'document']",{'issue': 91}
"['mergeready', 'wallrj', 'request', 'message', 'falseready', 'condition', 'venafi', 'issuer']",{'issue': 91}
"['ready', 'condition', 'venafi', 'issuer', 'alwayscondition', 'setup', 'error', 'message', 'meaningful', 'issuer', 'alwaysrichard']",{'issue': 91}
"['revert', 'introductiontrace', 'stack', 'loggingrichard']",{'stack': 100}
"['request', 'richardw', 'wallrjapprover', 'grant', 'reviewer', 'richard', 'permission', 'wallrj']",{'permission': 100}
"['approver', 'grant', 'reviewer', 'richard', 'permission', 'wallrjrichard']",{'permission': 100}
"['ccfebdb', 'mergehzhou', 'secret', 'certificate', 'status', 'issuer', 'output', 'event']",{'issue': 91}
"['secret', 'output', 'issuer']",{'issue': 91}
"['requestdisable', 'ability', 'account', 'issuer']",{'issue': 91}
"['mergemerge', 'request', 'error', 'suite', 'issuer']",{'issue': 91}
"['order', 'issuer']",{'issue': 91}
"['mergemerge', 'joshvanl', 'external', 'request', 'issuergroup', 'annotation', 'issuer']",{'issue': 91}
"['secret', 'issuer', 'controllerjoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['group', 'annotation', 'issuer', 'secretjoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['serviceaccount', 'request', 'issuer', 'paulwilljonessolver', 'issuer']",{'issue': 91}
"['requestcommand', 'creation', 'certificate', 'status', 'issuer', 'output']",{'issue': 91}
"['request', 'thejasbabu', 'namespacevault', 'namespace', 'issuer']",{'issue': 91}
"['mergesoubeyrand', 'master', 'requestpreserve', 'field', 'unknown', 'issuer', 'clusterissuer']",{'issue': 91}
"['output', 'issuer']",{'issue': 91}
"['unknown', 'issuer', 'clusterissuer']",{'issue': 91}
"['mergemerge', 'request', 'venafi', 'meyskens', 'asyncasync', 'venafi', 'issuer']",{'issue': 91}
"['ready', 'check', 'condition', 'length']",{'length': 100}
"['generic', 'update', 'copyright', 'issuer']",{'issue': 91}
"['generation', 'cobra', 'webhook', 'acmesolverjoshvanl', 'vleeuwenjoshua']",{'generation': 100}
"['boilerplate', 'issue']",{'issue': 100}
"['request', 'meyskensdefault', 'venafi', 'issuer']",{'issue': 91}
"['vault', 'listener', 'expose', 'revert', 'server', 'metricjoshvanl', 'vleeuwenjoshua']",{'expose': 100}
"['mergecontainer', 'sudermanjr', 'fairwindsops', 'chart', 'request', 'security', 'contextcontainer', 'deployment', 'chart', 'security', 'context']",{'Security': 100}
"['afdbfsoubeyrand', 'master', 'requestpreserve', 'field', 'unknown', 'issuer', 'clusterissuer']",{'issue': 91}
"['factory', 'favour', 'interface', 'usingbuildhttpclient', 'expose', 'level', 'package', 'metricjoshvanl', 'vleeuwenjoshua']",{'expose': 100}
"['expose', 'address', 'controller', 'prometheusjoshvanl', 'vleeuwenjoshua']",{'expose': 100}
"['unknown', 'issuer', 'clusterissuer']",{'issue': 91}
"['logic', 'retry', 'route', 'custom', 'package', 'removehandle', 'retry', 'controller', 'challengecertain', 'route', 'issue']",{'issue': 100}
"['comands', 'cobra', 'generation', 'controlledjoshvanl', 'vleeuwenjoshua']",{'generation': 100}
"['container', 'deployment', 'chart', 'security', 'contextsuderman', 'andrew']",{'Security': 100}
"['private', 'issue', 'differentsharedjoshvanl', 'vleeuwenjoshua']",{'issue': 100}
"['mergemerge', 'ingres', 'request', 'issuer', 'meyskensspecific']",{'issue': 91}
"['mergedewet', 'patch', 'requestcontainer', 'webhook', 'deployment', 'expose']",{'expose': 100}
"['integration', 'generation']",{'generation': 100}
"['request', 'munnerzdocker', 'image', 'issue']",{'issue': 100}
"['mergemerge', 'joshvanl', 'valid', 'certificate', 'request', 'duationvault', 'issuer', 'duration']",{'issue': 91}
"['vault', 'issuer', 'durationjoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['unknown', 'issuer', 'clusterissuer']",{'issue': 91}
"['request', 'munnerzgeneration', 'issue', 'experimental', 'enable', 'bundle']",{'issue': 100}
"['generation', 'issue']","{'generation': 100, 'issue': 100}"
"['request', 'munnerzgeneration', 'issue', 'experimental', 'enable', 'bundle']",{'issue': 100}
"['generation', 'issue']","{'generation': 100, 'issue': 100}"
"['issuer', 'support', 'selfsignedsrbraun']",{'issue': 91}
"['ebfde', 'mergecipher', 'suite', 'request', 'willthamesconfiguration', 'cipher', 'default', 'suite']",{'cipher': 100}
"['configuration', 'cipher', 'default', 'suitecommand', 'cipher', 'suite']",{'cipher': 100}
"['ebefda', 'mergeupdate', 'digitalocean', 'issue']",{'issue': 100}
"['issue', 'apiserver']",{'issue': 100}
"['mergemerge', 'ukhomeoffice', 'request', 'issuedeployment', 'annotation', 'issue', 'manager']",{'issue': 100}
"['deployment', 'annotation', 'issue', 'managerfischer']",{'issue': 100}
"['mergemerge', 'ukhomeoffice', 'request', 'issuesecuritycontext', 'webhook', 'cainjector', 'issue', 'optional']",{'issue': 100}
"['securitycontext', 'webhook', 'cainjector', 'issue', 'chart', 'deployment', 'optionalfischer']",{'issue': 100}
"['dfddbf', 'mergemerge', 'fallback', 'secret', 'joshvanl', 'request', 'annotationsecret', 'issuer', 'annotation', 'legacy']",{'issue': 91}
"['ffefd', 'mergecloudflare', 'apitoken', 'request', 'matevzmihaliccloudflare', 'token', 'option', 'issuer', 'authentication']",{'issue': 91}
"['secret', 'issuer', 'annotation', 'legacy', 'matchcertificate', 'existingjoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['joshvanl', 'controller', 'request', 'issuercheck', 'readiness', 'issuer', 'controller']",{'issue': 91}
"['check', 'readiness', 'issuer', 'controllerjoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['mergemerge', 'request', 'coaxvexfinalizers', 'update', 'controller', 'certificate', 'permission', 'manager']",{'permission': 100}
"['secret', 'joshvanl', 'request', 'namespacevault', 'resource', 'point', 'issuer', 'namespace']",{'issue': 91}
"['vault', 'initialise', 'secret', 'issuer', 'namespacejoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['vault', 'resource', 'point', 'issuer', 'namespacejoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['ebdde', 'mergejoshvanl', 'request', 'kubernetesvault', 'issuer', 'mount', 'kubernetes']",{'issue': 91}
"['mergemerge', 'joshvanl', 'request', 'issuer', 'outputincrease', 'issuer', 'output']",{'issue': 91}
"['issuer', 'kubernetesjoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['mergevault', 'check', 'secret', 'joshvanl', 'requestvault', 'check', 'cluster', 'secret', 'ensure', 'issuer']",{'issue': 91}
"['informative', 'cluster', 'kubectl', 'issuer', 'outputjoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['finalizers', 'permission', 'updatecertificate', 'manager']",{'permission': 100}
"['cluster', 'finalizers', 'update', 'controller', 'certificate', 'revert', 'permission', 'managerreverts']",{'permission': 100}
"['cluster', 'finalizers', 'update', 'controller', 'certificate', 'permission', 'manager']",{'permission': 100}
"['vault', 'certificate', 'client', 'issuer', 'serverusage', 'expectedjoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['documentation', 'solver', 'clusterissuer', 'issuer', 'removedreference', 'upgrade', 'update', 'error', 'issuer', 'syntax']",{'issue': 91}
"['efacbmerge', 'ingres', 'group', 'joshvanl', 'requestingres', 'support', 'issuer']",{'issue': 91}
"['macro', 'generation']",{'generation': 100}
"['request', 'munnerzbazel', 'issue']",{'issue': 100}
"['internal', 'issuer', 'kubernetesjoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['vault', 'issuer', 'kubernetesjoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['vault', 'issuer', 'authentication', 'kuberneteskunicki']",{'issue': 91}
"['generation', 'reference']",{'generation': 100}
"['cbcbfmerge', 'munnerz', 'issue', 'request', 'annotationtemporary', 'certificate', 'issue', 'issuance', 'annotation', 'control']",{'issue': 100}
"['temporary', 'certificate', 'issue', 'issuance', 'annotation']",{'issue': 100}
"['function', 'style', 'issue', 'issuer']",{'issue': 91}
"['generation', 'update', 'fixture', 'package']",{'generation': 100}
"['eetests', 'runningdetail', 'issue', 'followingbazelbuild', 'issuebazelbuild', 'issuebazelbuild', 'bazel']",{'issue': 100}
"['issue', 'jetstack', 'managerwellington', 'silva']",{'issue': 100}
"['namespace', 'secretissuecomment', 'jetstack', 'issue', 'manager', 'contextroeper', 'signedupdate']",{'issue': 100}
"['update', 'setup', 'client', 'issue', 'venafijoshvanl', 'vleeuwenjoshua']",{'issue': 100}
"['controller', 'client', 'issuer', 'legacyjoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['request', 'munnerzwrite', 'concurrent', 'panic']",{'concurrent': 100}
"['update', 'issuer', 'selfsignedjoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['mergejoshvanl', 'reporter', 'reporter', 'issuer', 'event']",{'issue': 91}
"['bubble', 'reason', 'error', 'issuer', 'prefixjoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['issue', 'requestready', 'prometheus', 'certificate', 'status', 'metric']",{'issue': 100}
"['mergemerge', 'fixup', 'update', 'munnerz', 'request', 'issue', 'account', 'email']",{'issue': 100}
"['issue', 'requestpodtemplate', 'toleration', 'affinity', 'support']",{'issue': 100}
"['mergemerge', 'joshvanl', 'controller', 'request', 'issueralpha', 'issuer', 'controller']",{'issue': 91}
"['dcbbe', 'mergevenafi', 'request', 'munnerzvenafi', 'issuer']",{'issue': 91}
"['issue', 'requestvalidation', 'commonname', 'length', 'dnsnames']","{'issue': 100, 'length': 100}"
"['mergepatch', 'zosocanuck', 'requestupdate', 'venafi', 'issuer']",{'issue': 91}
"['issue', 'requestmatchcaa', 'issuewild']",{'issue': 100}
"['validation', 'commonname', 'length', 'dnsnamestsang', 'michael']",{'length': 100}
"['certificate', 'request', 'issuer', 'controllerinstancejoshvanl', 'vleeuwenjoshua']",{'issue': 91}
"['issue', 'requestupdate', 'field', 'issuer']",{'issue': 91}
"['request', 'issuerfunction', 'issuer']",{'issue': 91}
"['generation', 'templatejoshvanl', 'vleeuwenjoshua']",{'generation': 100}
"['mergejoshvanl', 'interface', 'requestinterface', 'issuer']",{'issue': 91}
"['issue', 'requestwebhook', 'nodeselector', 'cainjector']",{'issue': 100}
"['certificate', 'issue', 'crystalmacbook', 'crystalchun', 'validation', 'certificate', 'fieldcrystalchun', 'crystalmacbook', 'crystalchun', 'private', 'function', 'encodingcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'private', 'statement', 'crystalmacbook', 'crystalchun', 'crystalprivate', 'message', 'decodingcrystalchun', 'crystalmacbook', 'crystalchun', 'private', 'decodingcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalconverter', 'changedcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalconvert', 'tryingcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'private', 'changedcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystaldebug', 'removedcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalextra', 'removedcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalextra', 'removedcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalduplicate', 'removedcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'private', 'certificate', 'issuer', 'encodingcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalcorrect', 'error', 'message', 'changedcrystalchun', 'crystalmacbook', 'crystalchun', 'certificate', 'objectcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalerror', 'changedcrystalchun', 'crystalmacbook', 'crystalchun', 'variable', 'private', 'certificate', 'encodingcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalencode', 'function', 'private', 'parametercrystalchun', 'crystalmacbook', 'crystalchun', 'encode', 'parsecrystalchun', 'crystalmacbook', 'crystalchun', 'crystalinvalid', 'removedcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalreference', 'bazel', 'updatecrystalchun', 'crystalmacbook', 'crystalchun', 'private', 'insteadmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'issue', 'removedmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'correctmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'correctmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'parameter', 'parse', 'fixedmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'private', 'different', 'encodingmacbook', 'crystalchun', 'removedmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'validation', 'certificate', 'fieldcrystalchun', 'crystalmacbook', 'crystalchun', 'private', 'function', 'encodingcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'private', 'statement', 'crystalmacbook', 'crystalchun', 'crystalprivate', 'message', 'decodingcrystalchun', 'crystalmacbook', 'crystalchun', 'private', 'decodingcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalconverter', 'changedcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalconvert', 'tryingcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'private', 'changedcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystaldebug', 'removedcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalextra', 'removedcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalextra', 'removedcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalduplicate', 'removedcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'private', 'certificate', 'issuer', 'encodingcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalcorrect', 'error', 'message', 'changedcrystalchun', 'crystalmacbook', 'crystalchun', 'certificate', 'objectcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalerror', 'changedcrystalchun', 'crystalmacbook', 'crystalchun', 'variable', 'private', 'certificate', 'encodingcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalencode', 'function', 'private', 'parametercrystalchun', 'crystalmacbook', 'crystalchun', 'encode', 'parsecrystalchun', 'crystalmacbook', 'crystalchun', 'crystalinvalid', 'removedcrystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'crystalreference', 'bazel', 'updatecrystalchun', 'crystalmacbook', 'crystalchun', 'private', 'insteadmacbook', 'crystalchun', 'issue', 'removedmacbook', 'crystalchun', 'correctmacbook', 'crystalchun', 'correctmacbook', 'crystalchun', 'parameter', 'parse', 'fixedmacbook', 'crystalchun', 'private', 'different', 'encodingmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'removedmacbook', 'crystalchun', 'crystalmacbook', 'crystalchun', 'syntax', 'error', 'removedmacbook', 'crystalchun', 'crystalprivate', 'movingmacbook', 'crystalchun', 'private', 'comma', 'changedmacbook', 'crystalchun', 'crystalfixedmacbook', 'crystalchun', 'defaultmacbook', 'crystalchun', 'predefinedmacbook', 'crystalchun', 'actualencodingmacbook', 'crystalchun', 'variablemacbook', 'crystalchun', 'encodingmacbook', 'crystalchun', 'crystalfixedmacbook', 'crystalchun', 'crystalupdatemacbook', 'crystalchun', 'crystaladdedmacbook', 'crystalchun', 'removedmacbook', 'crystalchun', 'crystalissue', 'creatingmacbook', 'crystalchun', 'variablemacbook', 'crystalchun', 'encodingmacbook', 'crystalchun', 'different', 'venafi', 'issuer']",{'issue': 91}
"['issue', 'requestcertificate', 'order', 'truncation']",{'issue': 100}
"['issue', 'requestclouddns']",{'issue': 100}
"['issue', 'requestsecretname', 'certificate', 'validate']",{'issue': 100}
"['issue', 'requestcontroller', 'common', 'basecontroller']",{'issue': 100}
"['issue', 'requestdocumentation', 'cnamestrategy']",{'issue': 100}
"['issue', 'requestdocumentation', 'setting', 'renewbefore']",{'issue': 100}
"['issuer', 'emailtsang', 'michael']",{'issue': 91}
"['ffbee', 'mergejoshvanl', 'expose', 'issuer']","{'expose': 100, 'issue': 91}"
"['request', 'munnerzcertificate', 'issuance', 'ecdsa', 'issuer']",{'issue': 91}
"['objectmetdata', 'solver', 'expose', 'templatejoshvanl', 'vleeuwenjoshua']",{'expose': 100}
"['issue', 'requestcertificate', 'owner', 'modify', 'ensure']",{'issue': 100}
"['issue', 'requestquick', 'solver', 'nginx', 'field', 'encrypt']",{'issue': 100}
"['request', 'munnerzgranular', 'permission']",{'permission': 100}
"['issue', 'requestcount', 'metric', 'number']",{'issue': 100}
"['issue', 'requestfield', 'solver', 'migration']",{'issue': 100}
"['example', 'contextual', 'letsencrypt', 'issuer', 'example', 'contextstefan']",{'issue': 91}
"['issue', 'requestparameter']",{'issue': 100}
"['granular', 'permission']",{'permission': 100}
"['parameter', 'namespace', 'documentparameter', 'namespace', 'missingfound', 'specify', 'forgot', 'resource', 'certificate', 'issuer', 'namespaceaddress', 'field', 'issuer', 'email', 'danieleffectory', 'sebastiaan', 'molleman', 'signedversion', 'james', 'signedeffectory', 'sebastiaan', 'molleman', 'signedgithub', 'release', 'james', 'signedeffectory', 'sebastiaan', 'molleman', 'signedparameter', 'namespace', 'missingfound', 'specify', 'forgot', 'resource', 'certificate', 'issuer', 'namespaceeffectory', 'sebastiaan', 'molleman']",{'issue': 91}
"['requestaddress', 'field', 'issuer', 'email', 'optional']",{'issue': 91}
"['address', 'field', 'issuer', 'email']",{'issue': 91}
"['comment', 'issue']",{'issue': 100}
"['chart', 'issue']",{'issue': 100}
"['mergemerge', 'fixup', 'ingres', 'munnerz', 'requestformat', 'ingres', 'certificate', 'issue']",{'issue': 100}
"['ingres', 'certificate', 'issue']",{'issue': 100}
"['mergemerge', 'config', 'munnerz', 'request', 'issuerconfiguration', 'solver', 'issuer']",{'issue': 91}
"['issue', 'addon']",{'issue': 100}
"['mergemerge', 'ginkgo', 'request', 'munnerzglobals', 'expose']",{'expose': 100}
"['validatecaa', 'functionality', 'defaultavoid', 'validatecaa', 'issue', 'disablesvalidatecaa', 'check', 'default', 'featureoption', 'manager', 'controller', 'internal', 'issue']",{'issue': 100}
"['version', 'cainjector', 'vbeta', 'controllerresolve', 'cainjector', 'issue', 'kubernetesapiserver']",{'issue': 100}
"['update', 'request', 'lentzi', 'issuercertificate', 'update', 'issuer']",{'issue': 91}
"['update', 'issuer', 'matchlennart']",{'issue': 91}
"['mergemerge', 'expose', 'kragniz', 'request', 'metricleader', 'expose', 'server', 'instance', 'metric']",{'expose': 100}
"['leader', 'expose', 'server', 'instance', 'metricmetric', 'instance', 'managerlouis', 'taylor']",{'expose': 100}
"['update', 'issuer']",{'issue': 91}
"['mergemerge', 'update', 'munnerz', 'request', 'issuer', 'venafi', 'tutorial']",{'issue': 91}
"['setting', 'issuer', 'venafi']",{'issue': 91}
"['request', 'munnerzcloud', 'venafi', 'issuer']",{'issue': 91}
"['enable', 'binary', 'issuer']",{'issue': 91}
"['whilst', 'generate', 'temporary', 'certificate', 'issue']",{'issue': 100}
"['mergemerge', 'issue', 'request', 'briantoppingdocumentation']",{'issue': 100}
"['eafdaa', 'mergemerge', 'munnerz', 'error', 'request', 'improvedfunction', 'failure', 'issue', 'event']",{'issue': 100}
"['function', 'failure', 'issue']",{'issue': 100}
"['ffcada', 'eaccbeewebhook', 'deploy', 'munnerz', 'requestwebhook', 'issuer']",{'issue': 91}
"['webhook', 'issuer']",{'issue': 91}
"['sentence', 'issuer']",{'issue': 91}
"['clear', 'client', 'issuer', 'wheneveravoids', 'solution', 'elegantextant', 'issuer']",{'issue': 91}
"['mergemerge', 'tjakobsson', 'request', 'security', 'securitycontext', 'chart', 'deployment', 'manager']",{'Security': 100}
"['clear', 'reverify', 'munnerz', 'requestclear', 'account', 'issuer', 'directory', 'differ']",{'issue': 91}
"['clear', 'account', 'issuer', 'directory']",{'issue': 91}
"['check', 'context', 'thread']",{'thread': 100}
"['resource', 'client', 'account', 'issuer']",{'issue': 91}
"['clarification', 'comment', 'issuer']",{'issue': 91}
"['reason', 'invalid', 'order', 'challengereason', 'helpful', 'information', 'order', 'field', 'populate', 'error', 'issue', 'server']",{'issue': 100}
"['level', 'issuerdemonstrates', 'level', 'certificate', 'validate', 'issuer', 'generatedbryant']",{'issue': 91}
"['invalid', 'scheduler', 'challenge', 'result', 'causingsingle', 'operation', 'issue', 'filterperform', 'operation']",{'issue': 100}
"['policy', 'issue', 'securitystart', 'enabledvasremm', 'vasilis', 'remmas']",{'issue': 100}
"['generation', 'variant', 'deploy', 'generate', 'manifest', 'deployment']",{'generation': 100}
"['fafadb', 'mergemerge', 'bitbucket', 'request', 'munnerzresolve', 'bitbucket', 'mirror', 'munnerz', 'issue', 'goautoneg']",{'issue': 100}
"['bitbucket', 'mirror', 'munnerz', 'issue']",{'issue': 100}
"['cnames', 'issuer']",{'issue': 91}
"['munnerz', 'status', 'issue', 'requestcondition', 'update', 'certificate', 'status', 'issuance']",{'issue': 100}
"['mergeready', 'condition', 'munnerz', 'requestready', 'condition', 'behaviour', 'certificate', 'consistent', 'issuer']",{'issue': 91}
"['metric', 'prometheuscount', 'request', 'certificatemetricregister', 'switch', 'status', 'result', 'metricexport', 'switch', 'nameforissuer', 'unneccessary', 'removerefactor', 'context', 'metric', 'controllerfunction', 'collection', 'function', 'error', 'collection', 'metricremove', 'spacefunction', 'update', 'expiry', 'certificate', 'package', 'metricrefactor', 'functionality', 'metriclouis', 'taylor', 'signedensurelouis', 'taylor', 'signedbuildlouis', 'taylor', 'signedrefactorlouis', 'taylor', 'errorlouis', 'taylor', 'signedcommentlouis', 'taylor', 'signedremove', 'issuertype', 'unusedlouis', 'taylor', 'signedinput', 'digest', 'updatelouis', 'taylor', 'signedstatus', 'updatelouis', 'taylor', 'signedlevel', 'metric', 'packagelouis', 'taylor', 'signedcommentlouis', 'taylor', 'signedfailure', 'metriclouis', 'taylor', 'signedremove', 'issue', 'metricrevert', 'hopefullylouis', 'taylor', 'signedmetric', 'assignlouis', 'taylor', 'signeddigest', 'updatelouis', 'taylor', 'signedheader', 'copyrightlouis', 'taylor', 'signedserver', 'metriclouis', 'taylor', 'signedbazel', 'updatelouis', 'taylor', 'signedcleanlouis', 'taylor']",{'issue': 100}
"['certificate', 'message', 'issuer']",{'issue': 91}
"['configurable', 'issuer', 'durationrenewbefore', 'configurable', 'issuer', 'configurable', 'functionality', 'configurable', 'issuer', 'configurable', 'issuer', 'durationdocumentation', 'massive', 'update', 'bazel', 'ehrlichboilerplate', 'header', 'field', 'issuer', 'ehrlichvault', 'custom', 'mount', 'ehrlichverify', 'update', 'renewbefore', 'certificate', 'validation', 'disallow', 'error', 'issuer', 'issuer', 'validation', 'ehrlichvalidation', 'renwal', 'issuer', 'ehrlichformat', 'update', 'ehrlichreflect', 'update', 'field', 'certificate', 'issuer', 'ehrlichcheck', 'value', 'issueroptions', 'renewbefore', 'certificate', 'ehrlichcheck', 'reason', 'delete', 'length', 'certificate', 'ehrlichnever', 'creation', 'generate', 'update', 'certificate', 'ehrlichcheck', 'bunch', 'ehrlichremove', 'function', 'ehrlichvault', 'function', 'renewbefore', 'field', 'optional', 'wrong', 'issuer', 'ehrlichformat', 'pointer', 'ehrlichcheck', 'value', 'ehrlichformat', 'pointer', 'ehrlichfunction', 'certificate', 'james', 'signedremove', 'james', 'signedexample', 'james', 'signedcertificate', 'renewbefore', 'james', 'signedremove', 'update', 'renewbefore']","{'issue': 91, 'length': 100}"
"['generation', 'reference']",{'generation': 100}
"['request', 'munnerzfails', 'invalid', 'issuer']",{'issue': 91}
"['invalid', 'issuer']",{'issue': 91}
"['request', 'munnerzready', 'status', 'account', 'issuer']",{'issue': 91}
"['status', 'account', 'issuer']",{'issue': 91}
"['mergemerge', 'request', 'ecdsa', 'issuer']",{'issue': 91}
"['generation', 'gazelle']",{'generation': 100}
"['mergemerge', 'request', 'munnerzcertificate', 'function', 'issuer']",{'issue': 91}
"['mergemerge', 'request', 'munnerzwrites', 'findzonebyfqdn', 'concurrent']",{'concurrent': 100}
"['request', 'munnerzrefactor', 'generation', 'account']",{'generation': 100}
"['refactor', 'generation']",{'generation': 100}
"['request', 'munnerzingres', 'update', 'controller', 'issuer', 'workqueue', 'limiter']",{'issue': 91}
"['ingres', 'update', 'controller', 'issuer', 'workqueue']",{'issue': 91}
"['pointer', 'issuer']",{'issue': 91}
"['request', 'munnerzfunction', 'separate', 'issue', 'different', 'cleanup']",{'issue': 100}
"['mergemerge', 'munnerz', 'status', 'request', 'issuercondition', 'status', 'issuer']",{'issue': 91}
"['private', 'generation', 'issue']","{'generation': 100, 'issue': 100}"
"['refactor', 'cleanup', 'issuer']",{'issue': 91}
"['refactor', 'manage', 'order', 'resource', 'issuer']",{'issue': 91}
"['omitempty', 'field', 'issuer', 'cabundledesjardins', 'vdesjardins']",{'issue': 91}
"['request', 'damienwebdevadditional', 'azuredns', 'update', 'issuer']",{'issue': 91}
"['issue', 'requestresource', 'solver', 'limit', 'request']",{'issue': 100}
"['dcddeamerge', 'issue', 'request', 'wlightningcertificate']",{'issue': 100}
"['jetstack', 'munnerz', 'ingres', 'issue']",{'issue': 100}
"['warning', 'ingres', 'issue']",{'issue': 100}
"['generate', 'expose', 'field', 'cachain']",{'expose': 100}
"['certificate', 'issuer', 'return']",{'issue': 91}
"['certificate', 'issuer']",{'issue': 91}
"['certificate', 'issue', 'return']",{'issue': 100}
"['request', 'munnerzproject', 'generation', 'bazel', 'switch']",{'generation': 100}
"['update', 'config', 'issuer']",{'issue': 91}
"['mergemerge', 'munnerz', 'issue', 'request', 'templateadditional', 'issue', 'template']",{'issue': 100}
"['additional', 'issue', 'template']",{'issue': 100}
"['function', 'getcertificate', 'expose']",{'expose': 100}
"['update', 'issuer', 'context']",{'issue': 91}
"['update', 'issuer']",{'issue': 91}
"['update', 'issuer']",{'issue': 91}
"['update', 'issuer']",{'issue': 91}
"['vault', 'update', 'issuer']",{'issue': 91}
"['update', 'issuer', 'controller']",{'issue': 91}
"['kragniz', 'request', 'validationruntime', 'specific', 'certificate', 'issuer', 'validation']",{'issue': 91}
"['validation', 'issuer']",{'issue': 91}
"['cbbebb', 'mergeinvalid', 'route', 'request', 'euanknotexist', 'delete', 'route', 'error', 'issuer']",{'issue': 91}
"['route', 'issuer']",{'issue': 91}
"['mergemerge', 'kragniz', 'certificate', 'request', 'rebase', 'validationcertificate', 'issue', 'dnsnames', 'ensure', 'trigger']",{'issue': 100}
"['certificate', 'issue', 'dnsnames', 'ensure', 'trigger']",{'issue': 100}
"['request', 'kragnizexample', 'resource', 'version', 'issuer']",{'issue': 91}
"['example', 'resource', 'version', 'issuer']",{'issue': 91}
"['mergepieterlange', 'patch', 'requestreference', 'cluster', 'issuer']",{'issue': 91}
"['reference', 'cluster', 'issuer']",{'issue': 91}
"['mergemerge', 'issuer', 'request', 'update', 'status', 'issuer']",{'issue': 91}
"['update', 'status', 'issuer']",{'issue': 91}
"['mergeeuank', 'owner', 'requestowner', 'route', 'issuer']",{'issue': 91}
"['groner', 'request', 'issuer', 'challengecheck', 'challenge', 'issuer']",{'issue': 91}
"['update', 'emailencrypt', 'email', 'longerendpoint', 'pebble', 'letsencrypt', 'issue', 'account', 'email']",{'issue': 100}
"['owner', 'route', 'issuer']",{'issue': 91}
"['check', 'challenge', 'issuer']",{'issue': 91}
"['bafdf', 'cafdd', 'mergevault', 'request', 'issuervault', 'endpoint', 'issuer']",{'issue': 91}
"['vault', 'endpoint', 'issuer']",{'issue': 91}
"['mergeeuank', 'namespaces', 'requestresource', 'namespaces', 'issuer']",{'issue': 91}
"['static', 'version', 'manifest', 'chart', 'regeneration']",{'generation': 91}
"['error', 'namespace', 'issuer']",{'issue': 91}
"['redundant', 'error', 'issuer']",{'issue': 91}
"['acmesolverrestrictive', 'namespace', 'acmesolverpolicy', 'security', 'numericgroup', 'policy', 'security', 'conceptkubernetes']",{'Security': 100}
"['issue', 'asterisk']",{'issue': 100}
"['ffebe', 'mergemerge', 'warning', 'request', 'munnerzready', 'condition', 'endpoint', 'acmev', 'issuer']",{'issue': 91}
"['ready', 'condition', 'endpoint', 'acmev', 'issuer']",{'issue': 91}
"['request', 'vdesjardinsvault', 'support', 'issuer']",{'issue': 91}
"['issue', 'requestusage']",{'issue': 100}
"['crypto', 'cherrypick', 'adbaaaccbdeabab']",{'crypto': 100}
"['acddd', 'mergemerge', 'acmev', 'request', 'munnerzprocess', 'asynchronous', 'rewrite', 'issuer', 'validation']",{'issue': 91}
"['limiter', 'cluster', 'issuer']",{'issue': 91}
"['issue', 'method']",{'issue': 100}
"['specific', 'config', 'issuer']",{'issue': 91}
"['rebase', 'issue']",{'issue': 100}
"['update', 'issuer', 'witih']",{'issue': 91}
"['struct', 'rewrite', 'issuer']",{'issue': 91}
"['append', 'agent', 'route', 'issuer']",{'issue': 91}
"['agent', 'akamai', 'issuer']",{'issue': 91}
"['cloudflare', 'agent', 'issuer']",{'issue': 91}
"['timeout', 'client', 'issuer']",{'issue': 91}
"['respect', 'region', 'route', 'issuer', 'region', 'resultambient', 'option']",{'issue': 91}
"['ambient', 'cluster', 'issuer']",{'issue': 91}
"['ambient', 'issuer']",{'issue': 91}
"['route', 'issuer', 'neversignificant', 'value']",{'issue': 91}
"['issuer', 'controllerimplement', 'credential', 'ambient', 'support', 'behindcluster', 'issuerdiscussedissue', 'jetstack', 'managereffect', 'implementation', 'route']",{'issue': 91}
"['field', 'issuer', 'skiptlsverify']",{'issue': 91}
"['rewrite', 'issuer']",{'issue': 91}
"['ceeedepatch', 'whereisaaron', 'requestdevel', 'cherry', 'instruction', 'submit', 'community', 'automatic', 'kuberneteschart', 'document', 'commonrealizecreate', 'issuer', 'clusterissueringres', 'extracomment', 'chart', 'addresswould', 'specify', 'address', 'clusterissuer', 'email']",{'issue': 91}
"['option', 'document', 'commonrealizecreate', 'issuer', 'clusterissueringres', 'extrawould', 'specify', 'address', 'clusterissuer', 'email']",{'issue': 91}
"['fbbbdmerge', 'route', 'wmedlar', 'policy', 'request', 'documentdevel', 'cherry', 'instruction', 'submit', 'community', 'automatic', 'kubernetesnecessary', 'minimum', 'manager', 'route', 'permission', 'necessaryreleasereleasenecessary', 'minimum', 'manager', 'route', 'permission', 'document']",{'permission': 100}
"['document', 'minimum', 'route', 'permission', 'manager']",{'permission': 100}
"['mergerjeczalik', 'patch', 'requestdevel', 'cherry', 'instruction', 'submit', 'community', 'automatic', 'kubernetesvalue', 'disablesdocumentation', 'localhost', 'cluster', 'managerissuefollow', 'issue']",{'issue': 100}
"['cecab', 'mergeendpoint', 'request', 'munnerzdevel', 'cherry', 'instruction', 'submit', 'community', 'automatic', 'kubernetesendpoint', 'manager', 'policyendpoint', 'master', 'release', 'version', 'resource', 'deployment', 'chart', 'permission', 'managerrelease', 'reducereleasereleasemikebryant', 'davecheney']",{'permission': 100}
"['munnerz', 'request', 'eventdevel', 'cherry', 'instruction', 'submit', 'community', 'rename', 'brevity', 'error', 'error', 'eventspecial', 'reviewerbrings', 'cluster', 'issuer', 'rename', 'brevity', 'error', 'event']",{'issue': 91}
"['mergemerge', 'warning', 'request', 'munnerzdevel', 'cherry', 'instruction', 'submit', 'community', 'automatic', 'kubernetescheck', 'invalid', 'certificate', 'eventfound', 'secret', 'controller', 'certificate', 'error', 'httpbin', 'managercontroller', 'certificate', 'secret', 'controller', 'httpbin', 'error', 'issue', 'normal', 'managercontroller', 'certificate', 'normal', 'managerreleasereleaseclearer']",{'issue': 100}
"['bundle', 'requestdevel', 'cherry', 'instruction', 'submit', 'community', 'automatic', 'kubernetescertificate', 'public', 'bundle', 'certificate', 'client', 'intermediatecertificate', 'chain', 'macos', 'certificate', 'intermediate', 'certificate', 'mkbundle', 'append', 'cfsslcloudflare', 'mkbundle', 'cfsslreleasereleasecertificate', 'bundle', 'issuer']",{'issue': 91}
"['adbea', 'mergemerge', 'update', 'munnerz', 'chart', 'requestdevel', 'cherry', 'instruction', 'submit', 'community', 'automatic', 'kubernetesfeedback', 'chart', 'update', 'alignfound', 'commits', 'dcbccbdbfeefb', 'kubernetesdocumentation', 'order', 'feedback', 'ingres', 'installation', 'address', 'chart', 'issue', 'issuer', 'configure', 'kubernetesreleasereleaseresource', 'default', 'request', 'deployment']",{'issue': 91}
"['script', 'manifest', 'generation', 'deployment']",{'generation': 100}
"['hostnetwork', 'cluster', 'issuer']",{'issue': 91}
"['dedddmerge', 'issue', 'request', 'munnerzdevel', 'cherry', 'instruction', 'submit', 'community', 'validity', 'certificate', 'validationcommonnames', 'certificate', 'dnsnames', 'improves', 'validity', 'commonname', 'certificate', 'dnsnames']",{'issue': 100}
"['update', 'issuer']",{'issue': 91}
"['basic', 'issuer']",{'issue': 91}
"['update', 'issuer', 'controller']",{'issue': 91}
"['aabdf', 'mergeinvalid', 'request', 'munnerzdevel', 'cherry', 'instruction', 'submit', 'community', 'invalid', 'issuer', 'invalid', 'issuer', 'secretassign']",{'issue': 91}
"['invalid', 'issuer']",{'issue': 91}
"['request', 'munnerzdevel', 'cherry', 'instruction', 'submit', 'community', 'automatic', 'kubernetessetup', 'panic', 'issuerpanic', 'registration', 'close', 'numberclosereleasereleaseinvalid', 'secret', 'contains', 'panic', 'exists', 'issuer']",{'issue': 91}
"['setup', 'panic', 'issuer']",{'issue': 91}
"['provider', 'issuer', 'clusterissuer', 'example']",{'issue': 91}
"['mergemerge', 'jetstack', 'request', 'issue', 'experimental', 'templatemerge', 'submit', 'automaticcreatereleasereleaseadmin']",{'issue': 100}
"['cluster', 'issuer']",{'issue': 91}
"['issuer', 'validation']",{'issue': 91}
"['issuer', 'validation']",{'issue': 91}
"['simple', 'issuer']",{'issue': 91}
"['update', 'controller', 'status', 'issuer', 'clusterissuer']",{'issue': 91}
"['dacfafmerge', 'jetstack', 'update', 'request', 'issuer', 'trigger', 'keypair']",{'issue': 91}
"['issuer', 'trigger', 'keypair']",{'issue': 91}
"['issuer', 'subject']",{'issue': 91}
"['mergemerge', 'cluster', 'jetstack', 'request', 'experimental', 'issuersupport', 'cluster', 'issuer']",{'issue': 91}
"['resource', 'issuer', 'clusterissuer']",{'issue': 91}
"['genericissuer', 'implementation', 'switch', 'issuer']",{'issue': 91}
"['implementation', 'issuer', 'context']",{'issue': 91}
"['acdfamerge', 'jetstack', 'request', 'experimental', 'issuerimplementation', 'basic', 'initial', 'issuer']",{'issue': 91}
"['updatestatus', 'certificate', 'issuer']",{'issue': 91}
"['recorder', 'update', 'issuer', 'event']",{'issue': 91}
"['method', 'issue', 'update']",{'issue': 100}
"['update', 'certificate', 'status', 'issue']",{'issue': 100}
"['setup', 'issuer']",{'issue': 91}
"['initial', 'issuer']",{'issue': 91}
"['field', 'issuer']",{'issue': 91}
"['dcdfc', 'mergemerge', 'jetstack', 'generic', 'request', 'experimental', 'issuerrefactor', 'share', 'implementation', 'issuer']",{'issue': 91}
"['efdeecc', 'ffcfaexperimental', 'jetstack', 'requestbasic', 'issuer']",{'issue': 91}
"['certificate', 'lister', 'issuer', 'controller']",{'issue': 91}
"['jetstack', 'request', 'experimentalcondition', 'status', 'issuer']",{'issue': 91}
"['condition', 'certificate', 'issuer']",{'issue': 91}
"['condition', 'switch', 'status', 'issuer']",{'issue': 91}
"['status', 'issuer']",{'issue': 91}
"['bedffd', 'mergeexperimental', 'jetstack', 'requestframework', 'basic', 'issuer']",{'issue': 91}
"['example', 'update', 'issuer']",{'issue': 91}
"['cffaacd', 'mergemerge', 'jetstack', 'secretkeyref', 'request', 'experimentalconfig', 'update', 'clouddns', 'issuer', 'service']",{'issue': 91}
"['config', 'update', 'clouddns', 'issuer', 'service']",{'issue': 91}
"['secret', 'issuer', 'deletion', 'control']",{'issue': 91}
"['basic', 'issuer']",{'issue': 91}
