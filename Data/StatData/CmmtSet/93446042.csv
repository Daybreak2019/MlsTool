message,fuzzy
"['specific', 'resource', 'factory', 'generic', 'couldimplementation', 'service', 'datafactory', 'azure', 'linkedfunction', 'sensitive', 'property', 'supressdiff']",{'Sensitive': 100}
"['block', 'supportservice', 'partner', 'concept', 'property', 'lighthouse', 'azure', 'permission', 'marketplace', 'couldmarketplace']",{'permission': 100}
"['property', 'support', 'categorysecurity', 'assessment', 'resource', 'support', 'category', 'center']",{'assessment': 100}
"['replacement', 'issue', 'couple']",{'issue': 100}
"['crash', 'formataddress', 'azure', 'format']",{'crash': 100}
"['versionless', 'encryption', 'support']",{'encryption': 100}
"['validator', 'scopemaps', 'removevalidator', 'incorrect']",{'incorrect': 100}
"['warning', 'cleanmaster', 'warning', 'followingsecondary', 'service', 'block', 'provider', 'magodo', 'github', 'crash', 'empty', 'terraform', 'introduce', 'schema', 'azurerm', 'computesecondary', 'service', 'block', 'provider', 'magodo', 'github', 'crash', 'empty', 'terraform', 'introduce', 'schema', 'azurerm', 'consumptionsecondary', 'service', 'block', 'provider', 'magodo', 'github', 'crash', 'empty', 'terraform', 'introduce', 'schema', 'azurerm', 'consumptionsecondary', 'medium', 'service', 'block', 'provider', 'magodo', 'github', 'crash', 'empty', 'terraform', 'introduce', 'schema', 'azurermsecondary', 'medium', 'service', 'block', 'provider', 'magodo', 'github', 'crash', 'empty', 'terraform', 'introduce', 'schema', 'azurermsecondary', 'medium', 'service', 'block', 'provider', 'magodo', 'github', 'crash', 'empty', 'terraform', 'introduce', 'schema', 'azurermsecondary', 'service', 'block', 'provider', 'magodo', 'github', 'mssql', 'crash', 'empty', 'terraform', 'introduce', 'schema', 'azurerm', 'migrationsecondary', 'service', 'block', 'provider', 'magodo', 'github', 'crash', 'empty', 'terraform', 'introduce', 'schema']",{'crash': 100}
"['registry', 'container', 'encryption', 'azureregistry', 'container', 'encryption', 'azureissue']",{'encryption': 100}
"['storage', 'workaround', 'portal', 'resource', 'value', 'account', 'fieldeffect', 'interprets', 'terraform', 'customer', 'issue', 'passive', 'false', 'value', 'documentation', 'portal', 'manifest', 'overview', 'account']",{'issue': 100}
"['issue', 'source']",{'issue': 100}
"['source', 'addedplease', 'issue']",{'issue': 100}
"['version', 'requiresecret', 'source', 'version', 'vaultcustom', 'front', 'vault', 'settingupdateterraform', 'resource', 'fixupformattingcleanwodansson', 'authoredvault', 'fixupcreate', 'permission', 'actuallycertificate', 'valid', 'frontendmanual', 'removewodansson']",{'permission': 100}
"['source', 'resourceissue', 'preview', 'resource', 'versionrefers', 'resource', 'azure', 'overview', 'vaultissue', 'attentionerror', 'report', 'settingbackend', 'error', 'service', 'reportresponse', 'issue', 'update', 'couldfield', 'forcenewlimit', 'acctest', 'subscription']",{'issue': 100}
"['resourceissueupdate', 'formatcomment', 'reference', 'issue']",{'issue': 100}
"['empty', 'crash', 'givenservice', 'block', 'likely', 'provider', 'parent', 'crash', 'empty']",{'crash': 100}
"['incorrect', 'machine', 'insight', 'application', 'virtual', 'reference', 'documentation']",{'incorrect': 100}
"['issue', 'swagger']",{'issue': 100}
"['struct', 'incorrect', 'field']",{'incorrect': 100}
"['guess', 'issue', 'workaround', 'password', 'certificate', 'empty', 'testdata', 'certificate']",{'issue': 100}
"['optional', 'crash', 'permission', 'fixingpermission', 'block', 'making', 'optionalpermission', 'block', 'empty', 'returnallows', 'empty', 'sendingblock', 'crash', 'permission', 'fixingpermission', 'block', 'optional', 'documentingupdate', 'consistent', 'update', 'definitiondetermine', 'createdon', 'possiblesettle', 'unfortunate', 'settleimprove', 'reliability', 'expose', 'field', 'azureaccess', 'wrappedsequence', 'privateupdate', 'comparison', 'custompollerrenames', 'error', 'parseconfirmation', 'consistency', 'increase', 'timeoutvendorjackofallops']","{'crash': 100, 'permission': 100, 'expose': 100}"
"['update', 'issue', 'effect']",{'issue': 100}
"['configuration', 'front', 'crash']",{'crash': 100}
"['argument', 'optionaladdress', 'issue']",{'issue': 100}
"['importfixeddocumentation', 'favorhybridcompute', 'resource', 'azure', 'documentation', 'defenderreference', 'azure', 'addedspecific', 'parser', 'resource', 'validators', 'hybrid', 'virtual', 'macihnerequest', 'yechenwei', 'feedbackerror', 'point', 'update', 'referenceserver', 'assessment', 'import', 'error', 'resource', 'vulnerability', 'addedresourceid', 'problem', 'revert', 'causedcommit']",{'assessment': 100}
"['import', 'issue', 'command', 'sensitive', 'lowercase', 'force', 'resource', 'example', 'attempt', 'terraform']","{'issue': 100, 'Sensitive': 100}"
"['update', 'issue', 'documentationprotocol', 'guidance', 'update', 'clearer', 'documentation', 'volume']",{'issue': 100}
"['length', 'window', 'password']",{'length': 100}
"['existent', 'crash', 'settingaddress', 'panic', 'invalid', 'string']",{'crash': 100}
"['permission', 'encryption']","{'permission': 100, 'encryption': 100}"
"['supportfield', 'upportsupport', 'block', 'enhancement', 'master', 'service', 'acctest', 'portal', 'encryption', 'explorer', 'azure', 'possible', 'double', 'encryption', 'infrastructureinfer', 'field']",{'encryption': 100}
"['microsoft', 'threat', 'protection', 'office', 'property', 'support']",{'threat': 100}
"['bfcbaemerge', 'request', 'provider', 'crash', 'terraformresponse']",{'crash': 100}
"['expose', 'lighthouse', 'fieldbatzner', 'brunhil']",{'expose': 100}
"['expose', 'valuebatzner', 'brunhil']",{'expose': 100}
"['security', 'azure', 'powershell', 'azure', 'support', 'output', 'settingselectvirtualmachinessqlserversappservicesstorageaccountskeyvaults']",{'Security': 100}
"['management', 'correction', 'issue']",{'issue': 100}
"['request', 'keyvault', 'crash', 'mssql', 'virtual', 'amoghrabicrash', 'keyvault', 'setting']",{'crash': 100}
"['crash', 'keyvault', 'setting']",{'crash': 100}
"['password', 'profile', 'length', 'window']",{'length': 100}
"['scope', 'validationintroduces', 'validation', 'scope', 'validatingeither', 'resource', 'group', 'subscription', 'managementworkaround', 'issue', 'resource', 'usability', 'otherwiseidentifiederror', 'message', 'comingunfamiliar']",{'issue': 100}
"['regression', 'issue', 'thing', 'paste', 'address']",{'issue': 100}
"['network', 'security', 'formatter', 'parser', 'group']",{'Security': 100}
"['crash', 'empty']",{'crash': 100}
"['importforce', 'failure', 'withinsince', 'output', 'misleadingerror', 'issue', 'providerobject', 'update', 'value', 'provider', 'refresh', 'invalid', 'azurerm', 'issue', 'providerobject', 'value', 'invalid', 'azurerm', 'issue', 'providerobject', 'value', 'provider', 'refresh', 'unsupported', 'delete', 'invalid', 'azurerm', 'attribute']",{'issue': 100}
"['acctests', 'issue', 'resolvemitch', 'drage']",{'issue': 100}
"['security', 'threat', 'solutionrecommendationsecurity', 'solution', 'recommendation', 'option', 'configplease', 'review', 'check', 'recommendation', 'config']","{'Security': 100, 'threat': 100}"
"['subnet', 'parser', 'insensitive']",{'Sensitive': 90}
"['autorest', 'dependency', 'azureresponse', 'issue', 'error']",{'issue': 100}
"['issue', 'consistency', 'address', 'delete', 'eventual', 'update']",{'issue': 100}
"['addingsystem', 'pipeline', 'access', 'workspace', 'identityreferencesecurity', 'azure', 'permission', 'grant', 'workspace', 'analytics', 'identity']",{'permission': 100}
"['certificate', 'upstream', 'issuegofumpt', 'issue']",{'issue': 100}
"['proxy', 'supportendpoint', 'expose', 'specify', 'support', 'kafka', 'management', 'setting']",{'expose': 100}
"['retry', 'crash', 'logic']",{'crash': 100}
"['issue', 'gofmt']",{'issue': 100}
"['managecontacts', 'usage', 'permission']",{'permission': 100}
"['issue', 'lintrest']",{'issue': 100}
"['mergeserver', 'security', 'import', 'request', 'provider', 'policy', 'mssql', 'terraformmssql', 'import']",{'Security': 100}
"['permission', 'import']",{'permission': 100}
"['purge', 'permission']",{'permission': 100}
"['check', 'resource', 'azure', 'deprecatedworkaround', 'issue', 'manages', 'resource', 'azure', 'terraform']",{'issue': 100}
"['mergesecurity', 'centre', 'request', 'provider', 'terraformcentre', 'security']",{'Security': 100}
"['security', 'center']",{'Security': 100}
"['mergeorigin', 'security', 'master', 'centre']",{'Security': 100}
"['request', 'yechenweirefactor', 'stack', 'azure', 'cluster']",{'stack': 100}
"['azure', 'validationwhilst', 'effort', 'azure', 'validationuseful', 'randomaround', 'issue', 'swaggerincomplete', 'source']",{'issue': 100}
"['refactor', 'stack', 'azure', 'cluster']",{'stack': 100}
"['resourceoverview', 'stack', 'azuremanager', 'master', 'stable', 'resource', 'specification', 'azure', 'azurestackhci']",{'stack': 100}
"['address', 'issue']",{'issue': 100}
"['example', 'terraform', 'versionexample', 'error', 'outputanother', 'issue', 'azurelinkid', 'parameter', 'errorentity', 'innererror', 'resource', 'fwlink', 'conflict', 'detail', 'target', 'messagetemplate', 'message', 'extendedcode']",{'issue': 100}
"['generation', 'parser', 'subscriptionid', 'dependency', 'direct', 'frontdoorfrontdoor', 'subscriptionid', 'dependency', 'direct', 'frontdoormethod', 'frontdoor', 'matchvalidator', 'formatter', 'parser', 'resource', 'backendpool', 'frontdoor', 'generatingfilename', 'frontdoorvalidator', 'formatter', 'parser', 'resource', 'frontdoor', 'generatingvalidator', 'endpoint', 'formatter', 'parser', 'resource', 'frontend', 'frontdoor', 'generatingformatters', 'healthprobe', 'parser', 'resource', 'validators', 'frontdoor', 'generatingvalidator', 'formatter', 'parser', 'resource', 'frontdoor', 'generatingvalidator', 'formatter', 'parser', 'resource', 'frontdoor', 'generatingvalidator', 'firewall', 'formatter', 'parser', 'resource', 'policy', 'application', 'frontdoor', 'generatingbuild']",{'generation': 100}
"['address', 'issue']",{'issue': 100}
"['centre', 'security']",{'Security': 100}
"['threat', 'detection', 'empty', 'attribute']",{'threat': 100}
"['daefd', 'mergemerge', 'request', 'generation', 'provider', 'resource', 'generation', 'documentation', 'resource']",{'generation': 100}
"['check', 'ensure', 'consistent', 'generation', 'github']",{'generation': 100}
"['signalar', 'crash']",{'crash': 100}
"['validate', 'function', 'generation', 'resource', 'generator']",{'generation': 100}
"['request', 'provider', 'validate', 'generation', 'funcs']",{'generation': 100}
"['validate', 'generation', 'funcs']",{'generation': 100}
"['request', 'provider', 'validate', 'function', 'generation']",{'generation': 100}
"['mergenetwork', 'validate', 'request', 'provider', 'terraformnetwork', 'validate', 'function', 'generation']",{'generation': 100}
"['request', 'provider', 'validate', 'function', 'generation']",{'generation': 100}
"['storage', 'scope', 'encryption']",{'encryption': 100}
"['validate', 'generation', 'funcs', 'enable', 'privatedns']",{'generation': 100}
"['firewall', 'validate', 'function', 'generation', 'policy']",{'generation': 100}
"['generation', 'apimanagement', 'refactor']",{'generation': 100}
"['goimportsalready', 'supersedes', 'goimports', 'process', 'error', 'generation', 'error', 'gofmt', 'goimports']",{'generation': 100}
"['generation', 'resource', 'generator', 'refactorfirst', 'complaint']",{'generation': 100}
"['network', 'security', 'partner', 'provider', 'parser']",{'Security': 100}
"['network', 'security', 'prefix', 'partner', 'provider', 'virtual']",{'Security': 100}
"['option', 'insensitiveallows', 'workaround', 'applyresource', 'manner', 'azure', 'insensitive', 'returnwhilst']",{'Sensitive': 90}
"['funcs', 'insensitive']",{'Sensitive': 90}
"['resource', 'generator', 'insensitive', 'support', 'generatingresponse', 'rewrite']",{'Sensitive': 90}
"['teamcity', 'appplatform', 'concurrent']",{'concurrent': 100}
"['mergemerge', 'request', 'patchdescription', 'keyvault', 'permission', 'update', 'documentation']",{'permission': 100}
"['issue', 'generatorconvention', 'measure', 'suffix', 'assumes']",{'issue': 100}
"['updatepermission', 'encryption', 'vault']",{'encryption': 100}
"['individual', 'permission', 'fixup']",{'permission': 100}
"['crash', 'setting']",{'crash': 100}
"['issue', 'format']",{'issue': 100}
"['fafdd', 'mergemerge', 'request', 'provider', 'crash', 'terraform', 'block', 'policy', 'certificate', 'crash']",{'crash': 100}
"['block', 'policy', 'certificate', 'crash', 'fixingaddition', 'source', 'resource']",{'crash': 100}
"['block', 'policy', 'certificate', 'crash']",{'crash': 100}
"['cyclic', 'reference', 'issue']",{'issue': 100}
"['additional', 'argument', 'supportargument', 'implementkeller', 'absuklcomplete', 'acceptancekeller', 'absuklupdate', 'websitekeller', 'absuklupdate', 'websitebamford', 'authoredservice', 'internal', 'apimanagement', 'update', 'azurermbamford', 'authoredsyntaxkeller', 'internal', 'apimanagement', 'update', 'azurermbamford', 'authoredinitializekeller', 'issue', 'removeissue', 'issuecomment', 'provider', 'azure', 'terraform', 'azurermkeller']",{'issue': 100}
"['issue', 'format']",{'issue': 100}
"['issue', 'format']",{'issue': 100}
"['issue', 'format']",{'issue': 100}
"['diagnostics', 'update', 'supportterraform', 'issue', 'azurerm', 'attribute', 'requiredplease', 'requiredstorage', 'account', 'optionalelegant']",{'issue': 100}
"['issue', 'endpoint', 'cloud', 'synapse']",{'issue': 100}
"['issue', 'stackoverflow']",{'issue': 100}
"['issue', 'length']","{'issue': 100, 'length': 100}"
"['expose', 'error', 'issuereason', 'expose', 'error', 'original', 'detail', 'message']",{'expose': 100}
"['request', 'provider', 'crash', 'terraforminside', 'service', 'crash']",{'crash': 100}
"['requiredmanager', 'master', 'integration', 'resource', 'factory', 'azure', 'support', 'runtime', 'update', 'schema', 'documentation', 'foundagent', 'issue']",{'issue': 100}
"['service', 'crash']",{'crash': 100}
"['regressionaround', 'issue']",{'issue': 100}
"['workingaround', 'issue', 'azure']",{'issue': 100}
"['workingaround', 'issue', 'azure']",{'issue': 100}
"['workingaround', 'issue', 'azure']",{'issue': 100}
"['workingaround', 'issue', 'azure']",{'issue': 100}
"['terraform', 'issue', 'azurerm', 'provider']",{'issue': 100}
"['update', 'parameterpolicy', 'update', 'issue', 'definitioncomment']",{'issue': 100}
"['request', 'contactallows', 'security', 'centerissue', 'resource', 'azure', 'current', 'returninclude', 'method', 'azure', 'causereturn']",{'Security': 100}
"['security', 'error', 'contact', 'center', 'creatingallows', 'security', 'centerresource', 'issue', 'azure', 'returninclude', 'status', 'method', 'azure', 'causereturn']","{'Security': 100, 'issue': 100}"
"['multiple', 'service', 'resource', 'virtualvirtual', 'service', 'desktopissue', 'request', 'followingterraform', 'issue', 'azurerm', 'followingservice', 'folderresource', 'initial', 'followingresource', 'complete', 'solid', 'resource']",{'issue': 100}
"['function', 'service', 'offshoot', 'settingissue', 'issuecomment', 'hashicorp', 'terraform', 'thread']",{'thread': 100}
"['version', 'update', 'property', 'supportnetwork', 'security', 'storagecache', 'support', 'version', 'update', 'target', 'model']",{'Security': 100}
"['expose', 'service', 'environment', 'information']",{'expose': 100}
"['issue', 'service', 'track', 'enable', 'azure', 'configunblock', 'workaround']",{'issue': 100}
"['anomalydetector', 'crash', 'qnamaker', 'fixingbamford']",{'crash': 100}
"['supportmodule', 'upgrade', 'computejulien', 'balestra', 'signedcreate', 'option', 'encryptionjulien', 'balestra', 'signedaddress', 'reviewjulien', 'balestra', 'signedclientencryption', 'organise', 'optional', 'optionrebase', 'vendorjulien', 'balestra', 'signedparameter', 'revisit', 'encryption', 'place', 'availablerestore', 'rebase', 'upgradecreate', 'request', 'optionalconditionalupdateupdaterefineupdate', 'linux', 'deallocateterrafmtworkingcomment', 'resolvebalestra', 'julien']",{'encryption': 100}
"['cafbfcfmerge', 'request', 'magodostandardize', 'sensitive', 'resource']",{'Sensitive': 100}
"['sensitive', 'resourceworkaround', 'azure']",{'Sensitive': 100}
"['feefbb', 'mergeforward', 'service', 'request', 'datadogdescriptioneasier', 'request', 'commitissue', 'handful', 'provider', 'struct', 'schema', 'azurerm', 'queue', 'namespaces', 'template', 'azurealign', 'component', 'servicebus', 'request', 'azure', 'terraform', 'schema', 'followingattribute', 'missingreorder', 'official', 'attribute', 'matchupdate', 'accordinglymotivationterraform', 'issue', 'azurerm', 'providerprovider', 'terraform', 'backport', 'azurermterraform', 'backport', 'provider', 'azurermterraform', 'backport', 'provider', 'azurermstatus', 'provider', 'terraform', 'backport', 'azurermtestinginitializationsummary', 'detail', 'section', 'smallmicrosoft', 'detail', 'afcbeb', 'azure', 'terraformloginscope', 'acceptance', 'provider', 'subscription', 'terraform', 'contributor', 'azurermprincipal', 'service', 'acceptance', 'provider', 'valid', 'format', 'terraform', 'azurerm', 'requiredassignment', 'scope', 'subscriptioncreation', 'assignment', 'retryingcreation', 'assignment', 'retryingclient', 'appiddisplayname', 'acceptance', 'provider', 'terraform', 'azurermterraform', 'acceptance', 'azurerm', 'providerclient', 'password', 'secrettenantenvironment', 'credentialnever', 'command', 'shell', 'history', 'writtenclient', 'exportclient', 'secretexporttenant', 'exportexportexportexporttestingdetailcommand', 'followingtesttimeout', 'service', 'terminal', 'provider', 'acceptance', 'terraform', 'title', 'acctests', 'servicebus', 'notifier', 'message', 'testargs', 'acceptance', 'packageservice', 'internal', 'provider', 'terraform', 'ldflags', 'servicebus', 'azurerm', 'timeoutpausepausepausepausepausepausepausepausepausepausepausepausepausepausepausepausepausepausepausepauseservice', 'servicebus', 'internal', 'provider', 'terraform', 'azurermdocumentsummary', 'detailqueue', 'namespaces', 'mygroup', 'resourcegroups', 'servicebus', 'snqueue', 'website', 'provider', 'resource', 'subscription', 'scaffoldscaffold', 'variable', 'requiredscaffoldingdetailcleanupsummary', 'detail', 'section', 'smallappid', 'content', 'initialization']",{'issue': 100}
"['workaround', 'issue']",{'issue': 100}
"['recreatedlocal', 'issue', 'update', 'runbookchange', 'terraform', 'updatesecond', 'reading', 'recreate']",{'issue': 100}
"['deprecateterraform', 'issue', 'azurerm']",{'issue': 100}
"['sensitive', 'value']",{'Sensitive': 100}
"['crash', 'notification']",{'crash': 100}
"['issue', 'custom', 'cleanmerge', 'issuesynthetic', 'resourcesignaures', 'clean', 'methodsuggestion', 'reviewjacomb', 'authoredcommonseparateclarificationconflict', 'delete', 'endpointacceptancesuggestion', 'reviewwodansson', 'authoredmerge', 'issue', 'resourcefebbdbfedeabdcd', 'provider', 'revert', 'terraform', 'aadbffdb', 'azurerm', 'timeoutreplacejacomb', 'authoredwodansson']",{'issue': 100}
"['source', 'crash']",{'crash': 100}
"['network', 'update', 'property', 'security']",{'Security': 100}
"['issue', 'acctests']",{'issue': 100}
"['incorrect', 'validatefunc']",{'incorrect': 100}
"['check', 'filesystem', 'filesystemaddress', 'issue']",{'issue': 100}
"['issue', 'import']",{'issue': 100}
"['issue', 'consistency', 'retry', 'roleassignment', 'managementgroup', 'logic']",{'issue': 100}
"['ceefa', 'afddafsebrosander', 'request', 'issue']",{'issue': 100}
"['statereflect', 'documentation', 'alteredterraform', 'error', 'usingparameter', 'statuscode', 'original', 'nparameter', 'message', 'alert', 'policy', 'value', 'invalid', 'state', 'security', 'failure', 'mssql', 'createorupdate', 'server', 'error', 'request', 'disabledresource', 'module', 'sqlserversqlserver', 'resource']",{'Security': 100}
"['sprintf', 'numbererror', 'followingsprintf', 'service', 'internal', 'format', 'azurerm']",{'Sprintf': 100}
"['incorrect', 'codeblock', 'stray']",{'incorrect': 100}
"['issue', 'acctest', 'compilation']",{'issue': 100}
"['mergearcturuszhang', 'preview', 'request', 'removepreview', 'encryption', 'statement']",{'encryption': 100}
"['issue', 'compilation']",{'issue': 100}
"['examle', 'foundserver', 'issue']",{'issue': 100}
"['preview', 'removelonger', 'public', 'encryption']",{'encryption': 100}
"['issue', 'issuer']",{'issue': 91}
"['check', 'linux', 'length', 'window', 'property']",{'length': 100}
"['protection', 'threat', 'attempt']",{'threat': 100}
"['azure', 'matchparameter', 'specifies', 'resource', 'letter', 'authorizationshown', 'import', 'error', 'resource', 'authorization', 'followingparameter', 'validation', 'detail', 'length', 'value', 'invalid', 'constraint', 'making', 'eventhub', 'autorest', 'input', 'authorization', 'error', 'request', 'minlength', 'azure']",{'length': 100}
"['mergemerge', 'request', 'provider', 'terraform', 'managementpolicy', 'crash']",{'crash': 100}
"['encryption', 'settingmachine', 'problem', 'linux', 'window', 'title', 'applies', 'virtual']",{'encryption': 100}
"['mergemerge', 'request', 'provider', 'azure', 'stack', 'unsupported', 'environment', 'builder']",{'stack': 100}
"['issue', 'recovery', 'request', 'avinoderesponse', 'network', 'workaround', 'issue', 'recovery', 'strange', 'service']",{'issue': 100}
"['response', 'network', 'workaround', 'issue', 'recovery', 'strange', 'service']",{'issue': 100}
"['issue', 'custom', 'metadata']",{'issue': 100}
"['request', 'provider', 'tweak', 'terraform', 'configdefault', 'concurrency']",{'concurren': 90}
"['default', 'concurrency']",{'concurren': 90}
"['validationvalidation', 'linux', 'window', 'resource', 'computer', 'currentprefix', 'length', 'validation', 'computerfunction', 'validation']",{'length': 100}
"['subscription', 'permission']",{'permission': 100}
"['supportmicrosoft', 'issue']",{'issue': 100}
"['validation', 'address', 'update', 'validupdate', 'prefix', 'length', 'validationrange', 'documentationupper', 'limit', 'changeerror', 'update', 'compliantconfig', 'subscription']",{'length': 100}
"['request', 'generation', 'provider', 'image', 'hyperv', 'terraformattribute', 'support']",{'generation': 100}
"['validation', 'address', 'update', 'validupdate', 'prefix', 'length', 'validationrange', 'documentationupper', 'limit', 'changeerror', 'update', 'compliantconfig', 'subscription']",{'length': 100}
"['exposenetwork', 'interface', 'assigns', 'azuredomain', 'expose', 'internalsuffix', 'somethingserver', 'example', 'reachexpose', 'azure', 'providedserver', 'connects', 'hostname', 'certificate']",{'expose': 100}
"['removetherefore', 'issue', 'preview', 'azure']",{'issue': 100}
"['preview', 'warning', 'removeserver', 'issue']",{'issue': 100}
"['supportlevel', 'cognitive', 'resource', 'creates', 'property', 'optional', 'accountmicrosoft', 'issue', 'error', 'service', 'cognitive', 'detail', 'qnamaker', 'account', 'thrownfunctionality', 'issue', 'property', 'azure', 'support', 'qnamaker', 'account', 'missingmicrosoft', 'cognitive', 'result', 'setting', 'attribute', 'property', 'qnamaker', 'service', 'acceptance', 'resource', 'ignores', 'error', 'current', 'website']",{'issue': 100}
"['various', 'issue']",{'issue': 100}
"['request', 'provider', 'issue', 'feedback']",{'issue': 100}
"['issue', 'feedback']",{'issue': 100}
"['expose', 'field']",{'expose': 100}
"['resourceimprove', 'issue']",{'issue': 100}
"['terraform', 'issue', 'order']",{'issue': 100}
"['terraform', 'issue', 'order']",{'issue': 100}
"['range', 'incorrect', 'backend', 'frontend']",{'incorrect': 100}
"['mergemerge', 'request', 'njuczalign', 'length', 'character', 'azure', 'record']",{'length': 100}
"['proper', 'length']",{'length': 100}
"['improper', 'example', 'importwrong', 'import', 'mygroup', 'resourcegroups', 'variable', 'example']",{'improper': 100}
"['fcfca', 'mergesdowsland', 'request', 'patchnetwork', 'security', 'association', 'interface', 'group']",{'Security': 100}
"['network', 'security', 'association', 'interface', 'group']",{'Security': 100}
"['request', 'providerstorage', 'customer', 'encryption', 'resource', 'enable', 'account', 'vault']",{'encryption': 100}
"['refactor', 'tflint', 'issue']",{'issue': 100}
"['request', 'johnwildesprefix', 'length']",{'length': 100}
"['resourcenetwork', 'security', 'introduces', 'interface', 'resource', 'group', 'commitissue', 'dependency', 'azure', 'requireddelete', 'order']",{'Security': 100}
"['issue', 'import']",{'issue': 100}
"['mergemerge', 'request', 'provider', 'crash', 'terraformresponse', 'loadbalancer', 'crash']",{'crash': 100}
"['response', 'loadbalancer', 'crash']",{'crash': 100}
"['prefix', 'length', 'correctedmaximum', 'prefix', 'length', 'usablenetwork', 'constraint', 'public', 'prefix', 'address', 'azure', 'virtual']",{'length': 100}
"['objective', 'correction', 'servicecorrection', 'documentationvalidates', 'provider', 'resource', 'sectionoptionalcomputedvalidatefuncoptionalcomputedvalidatefunccomplete', 'validationissue', 'azureterraform', 'issue', 'azurerm']",{'issue': 100}
"['parser', 'custom', 'encryption', 'validation']",{'encryption': 100}
"['issue', 'github', 'template']",{'issue': 100}
"['reading', 'crash', 'location']",{'crash': 100}
"['minor', 'issue']",{'issue': 100}
"['service', 'crash']",{'crash': 100}
"['group', 'crash', 'container']",{'crash': 100}
"['service', 'crash']",{'crash': 100}
"['linux', 'encryption', 'window']",{'encryption': 100}
"['encryption', 'validation']",{'encryption': 100}
"['queue', 'issue', 'support', 'performance', 'accountstorage', 'reading', 'block', 'suffer', 'unsupported', 'support', 'account']",{'issue': 100}
"['appcfg', 'request', 'provider', 'terraformgroup', 'insensitive', 'resource']",{'Sensitive': 90}
"['insensitive', 'resource']",{'Sensitive': 90}
"['emptyinside', 'object', 'default', 'samart', 'element', 'supersedes', 'nestedwhilst', 'check', 'crash', 'couple']",{'crash': 100}
"['issue', 'possiblecontinues']",{'issue': 100}
"['vnetgw', 'generation', 'source']",{'generation': 100}
"['generation', 'option']",{'generation': 100}
"['constraint', 'length', 'regex']",{'length': 100}
"['slice', 'provider', 'pointertrackparallelization', 'calledcalledplugin', 'crash', 'empty', 'unhelpful']",{'crash': 100}
"['mergemerge', 'request', 'gateway', 'provider', 'block', 'crash']",{'crash': 100}
"['block', 'crash']",{'crash': 100}
"['crash', 'empty']",{'crash': 100}
"['overflow', 'netapp']",{'overflow': 100}
"['mergemerge', 'request', 'yechenweisubcategory', 'issue']",{'issue': 100}
"['subcategory', 'issue']",{'issue': 100}
"['issue', 'github', 'template']",{'issue': 100}
"['expose', 'source', 'configuration', 'endpoint']",{'expose': 100}
"['requestgermany', 'threat', 'protection']",{'threat': 100}
"['mergemerge', 'request', 'provider', 'crash', 'crash', 'authentication']",{'crash': 100}
"['mergemerge', 'request', 'provider', 'crash']",{'crash': 100}
"['issue', 'documentationhealth', 'service', 'space']",{'issue': 100}
"['issue', 'fixingcause', 'space', 'error', 'service', 'category', 'health']",{'issue': 100}
"['update', 'documentationconfiguration', 'customhost', 'optional', 'front', 'issue']",{'issue': 100}
"['issue', 'review']",{'issue': 100}
"['different', 'deadlock', 'causedextra']",{'deadlock': 100}
"['mergemerge', 'request', 'issue', 'upstreamdatalakestore', 'filesystem', 'resource']",{'issue': 100}
"['address', 'update', 'issue']",{'issue': 100}
"['request', 'stack', 'updateupdate']",{'stack': 100}
"['importweird', 'issue', 'import', 'error', 'simple', 'resource', 'unknown', 'figure', 'message']",{'issue': 100}
"['front', 'azure', 'resourcecheckin', 'initialupdate', 'routingrulesexpand', 'implementedcreateupdate', 'functionalflatten', 'function', 'issue', 'portal', 'casingfronend', 'endpointflatten', 'endpoint', 'frontendsourceupdate', 'slight', 'documentationclient', 'frontend', 'addedendpoint', 'schema', 'enable', 'schemadomain', 'custom', 'documentation', 'cnameflatten', 'azurekeyvault', 'sourcelatest', 'updatechange', 'reviewerror', 'fixedclient', 'declarationclientsource', 'removedupdate', 'checkdestroyupdate', 'websiteauthoredupdate', 'azurermauthoredupdate', 'azurermauthoredupdateaddedupdateaddress', 'issueupdate', 'websiteauthoredissue']",{'issue': 100}
"['issue', 'review']",{'issue': 100}
"['mergestorage', 'degredation', 'request', 'provider', 'terraform', 'accountwrite', 'permission']",{'permission': 100}
"['degradingaccess', 'permission', 'listkeys', 'eithercount', 'listkeys', 'resource', 'trackedissue', 'azuredegrades', 'outright', 'permission', 'field']",{'permission': 100}
"['string', 'length', 'empty', 'content', 'setting']",{'length': 100}
"['request', 'resource', 'stack', 'lookupstorage', 'resource', 'table', 'lookup']",{'stack': 100}
"['ffdbfmerge', 'request', 'length', 'resource', 'group', 'update', 'eddieramirezcorrect', 'length']",{'length': 100}
"['mergemerge', 'request', 'issue']",{'issue': 100}
"['resource', 'subnet', 'deadlock']",{'deadlock': 100}
"['bcfcf', 'mergemerge', 'request', 'shenderchuklimit', 'increase', 'length']",{'length': 100}
"['length', 'validation']",{'length': 100}
"['issue', 'resourceissue', 'request', 'provider', 'resourcepoint', 'provider', 'resource', 'schedule', 'azure']",{'issue': 100}
"['deletion', 'service', 'issue', 'principal']",{'issue': 100}
"['expose', 'property', 'allocation', 'batch', 'azure', 'accountkeyvault', 'resource', 'source', 'azure', 'reference']",{'expose': 100}
"['crash', 'preventissue']",{'crash': 100}
"['sensitive', 'default', 'example', 'value']",{'Sensitive': 100}
"['family', 'error', 'generation', 'conflict']",{'generation': 100}
"['security', 'center', 'contactphone', 'optionalphone', 'security', 'contact', 'optional', 'center', 'documentation']",{'Security': 100}
"['check', 'incorrect']",{'incorrect': 100}
"['cfebd', 'mergemerge', 'request', 'nixonrestore', 'issue', 'support']",{'issue': 100}
"['updateaddress', 'issue']",{'issue': 100}
"['client', 'point', 'registration', 'crash']",{'crash': 100}
"['panic', 'issuepanic', 'issue']",{'issue': 100}
"['check', 'expose', 'cleanup', 'version', 'admin']",{'expose': 100}
"['request', 'insensitivetreat', 'assignment', 'insensitive']",{'Sensitive': 90}
"['issue', 'gofmt']",{'issue': 100}
"['goimport', 'network', 'issue']",{'issue': 100}
"['request', 'collationcollation', 'insensitive']",{'Sensitive': 90}
"['issue', 'layout']",{'issue': 100}
"['request', 'provider', 'terraformpreview', 'security']",{'Security': 100}
"['issue', 'gofmt', 'format']",{'issue': 100}
"['public', 'prefixfulfil', 'issue']",{'issue': 100}
"['schema', 'crash']",{'crash': 100}
"['requeststorage', 'access', 'resource', 'policy', 'permission']",{'permission': 100}
"['storage', 'access', 'resource', 'policy', 'permission']",{'permission': 100}
"['collation', 'insensitive']",{'Sensitive': 90}
"['storage', 'permission', 'keyvaultissue', 'provider', 'terraform', 'azurerm']",{'permission': 100}
"['request', 'gateway', 'property', 'application', 'checkingalign', 'issue', 'configuration', 'gateway', 'provider', 'request', 'limit', 'suite', 'azure', 'application', 'terraform']",{'issue': 100}
"['documentationissue', 'provider', 'terraform', 'azurermagent', 'issue', 'documentation', 'sentence']",{'issue': 100}
"['issue', 'provider', 'terraform', 'azurerm']",{'issue': 100}
"['expose', 'account', 'batch', 'azuresecondary', 'endpoint', 'expose', 'access', 'primary', 'allocation', 'batch', 'resource', 'batchservice', 'terraform', 'account', 'documentation']",{'expose': 100}
"['mergemerge', 'request', 'lucretiuspassword', 'content', 'sensitive', 'certificate']",{'Sensitive': 100}
"['password', 'content', 'sensitive', 'certificate']",{'Sensitive': 100}
"['issue', 'sidebar']",{'issue': 100}
"['issue', 'review']",{'issue': 100}
"['issue', 'review']",{'issue': 100}
"['incorrect', 'documentation']",{'incorrect': 100}
"['permission', 'certificate', 'vault']",{'permission': 100}
"['issue', 'review']",{'issue': 100}
"['issue', 'review']",{'issue': 100}
"['issue', 'review']",{'issue': 100}
"['security', 'search', 'import', 'centre', 'scheduler', 'resource']",{'Security': 100}
"['issue', 'review']",{'issue': 100}
"['multiple', 'start', 'batch', 'settinginside', 'issue', 'value']",{'issue': 100}
"['request', 'providernetwork', 'virtual', 'protection', 'issue']",{'issue': 100}
"['issue', 'empty', 'setting']",{'issue': 100}
"['issue', 'gofmt']",{'issue': 100}
"['issue', 'import']",{'issue': 100}
"['crash', 'couple']",{'crash': 100}
"['issue', 'review', 'support', 'virtual']",{'issue': 100}
"['newreader', 'buffer']",{'buffer': 100}
"['workaround', 'issue']",{'issue': 100}
"['check', 'alignment', 'issue']",{'issue': 100}
"['point', 'crash']",{'crash': 100}
"['flatten', 'issue', 'function', 'delegation']",{'issue': 100}
"['permission', 'value', 'enforcepdecat']",{'permission': 100}
"['aaebb', 'mergestorage', 'request', 'provider', 'encryption', 'terraformencryption']",{'encryption': 100}
"['issue', 'review']",{'issue': 100}
"['linters', 'issue']",{'issue': 100}
"['linters', 'issue']",{'issue': 100}
"['request', 'provider', 'encryption', 'store', 'terraformexample']",{'encryption': 100}
"['issue', 'inconsistent']",{'issue': 100}
"['permission', 'certificate', 'optional']",{'permission': 100}
"['refactor', 'generation', 'package', 'computationhelper', 'package', 'hashicorp', 'azure']",{'generation': 100}
"['issue', 'association', 'subnet', 'resourcesubnet', 'attribute', 'computedsbunet', 'rollback']",{'issue': 100}
"['method', 'deprecatedrefactoringmethod', 'default', 'point', 'array', 'crash', 'method', 'track', 'backend', 'address', 'refactor', 'crashrather', 'refactor', 'schema', 'refactor', 'crash', 'pointrefactorschema', 'optional', 'requiredgateway', 'documentation', 'application', 'rewritingexample', 'addingprobe', 'bugfix', 'bugfix', 'settingblock', 'making', 'password', 'certificate', 'input', 'configrefactor', 'refactor', 'commentrefactor', 'value', 'existinglintinggateway', 'rewritinghostnameright']",{'crash': 100}
"['issue', 'validation']",{'issue': 100}
"['subject', 'alternativesubject', 'alternativeexample', 'update', 'brokenupdate', 'documentation', 'capabilityupdate', 'unnecessaryupdate', 'acceptanceupdate', 'emailgofmt', 'unnecessaryerrorcause', 'alwaysblock', 'optionalupdate', 'azurermdraggeta', 'authoredupdate', 'azurermdraggeta', 'authoredupdate', 'azurermdraggeta', 'authoredupdate', 'azurermdraggeta', 'changecomputedflatten', 'array', 'alwayspanic', 'empty', 'regardingstatement', 'removebinary', 'issue', 'gofmt', 'version']",{'issue': 100}
"['issue', 'vendor']",{'issue': 100}
"['network', 'issue']",{'issue': 100}
"['security', 'network']",{'Security': 100}
"['point', 'crash']",{'crash': 100}
"['pointer', 'issue']",{'issue': 100}
"['styling', 'issue']",{'issue': 100}
"['issue', 'devspace']",{'issue': 100}
"['validation', 'limit', 'length', 'regex', 'management', 'publisher']",{'length': 100}
"['security', 'instance', 'group', 'application', 'scale', 'option']",{'Security': 100}
"['resourcemanagement', 'azure', 'addedclient', 'management', 'service', 'registeredmanagement', 'source', 'addedsource', 'provider', 'addedmanagement', 'azure', 'resourcemanagement', 'sidebar', 'addedgeneric', 'scriptintegration', 'source', 'management', 'azure', 'documentednetwork', 'review', 'azure', 'support', 'reuse', 'optioncertificate', 'azure', 'apimanagement', 'govendorschema', 'schemaerror', 'state', 'terraform', 'return', 'founddeveloper', 'default', 'optionalschema', 'removedadditional', 'sincesecurity', 'custom', 'option', 'config', 'settingblock', 'security', 'section', 'securityinstead', 'cofigureclient', 'value', 'issue', 'custom', 'service', 'management', 'relatedpreview', 'issue', 'preview', 'sensitive', 'ignore', 'azure', 'verification', 'management', 'issue', 'hotname', 'default', 'cleanup', 'managementmanagement', 'source', 'customizediff', 'removemanagement', 'resourcesecurity', 'block', 'configuration', 'hostnameblock', 'security', 'default', 'valuecapacity', 'block', 'making', 'requiredvalidate', 'function', 'point', 'crash', 'empty', 'requiredresource', 'provider', 'validation', 'packagestructure', 'alwayssecurity', 'block', 'default', 'value', 'fixinghighlight', 'sidebar', 'fixingbroken', 'fixingregion', 'concurrency', 'issue', 'aroundduplicate', 'section', 'spacingchangedincorrect', 'assignment', 'different', 'group']","{'Security': 100, 'issue': 100, 'Sensitive': 100, 'crash': 100, 'concurren': 90}"
"['fieldbroken', 'azuread', 'application', 'crash', 'couple', 'potential']",{'crash': 100}
"['agent', 'issue', 'casingagent']",{'issue': 100}
"['resourcedevtestlabs', 'vendoringresourcesourceresourcedevtestlab', 'validationazurerm', 'accteststerraform', 'azurerm', 'providernetwork', 'validation', 'devtest', 'virtualgroup', 'making', 'insensitive', 'source', 'validationvalidation', 'package', 'devtest', 'azure']",{'Sensitive': 90}
"['resourceskeleton', 'firewall', 'resourcebasiccreate', 'methodfirewall', 'complete', 'resourcenetwork', 'resourcefirewall', 'importfirewallfirewall', 'tweaknetwork', 'complete', 'collectionstartcheckcheck', 'updatecollection', 'updateupdate', 'formattingrenamerenameformattingrenamerenamefirewall', 'crash', 'pointaction', 'protocol', 'sensitive', 'makingvirtual', 'resourcesuccessful', 'function', 'delete', 'confignetwork', 'object', 'check', 'resource', 'statenetwork', 'collection', 'import', 'field', 'validationazurerm', 'accteststerraform', 'azurerm', 'issue', 'review', 'fixingcollection', 'check', 'function', 'fixingrefactor', 'fixingbroken']","{'crash': 100, 'Sensitive': 100, 'issue': 100}"
"['mergemerge', 'request', 'provider', 'crash', 'solution', 'point', 'crash', 'analytics']",{'crash': 100}
"['solution', 'point', 'crash', 'analytics']",{'crash': 100}
"['mergemerge', 'request', 'lrxtomaction', 'count', 'permission', 'contributor']",{'permission': 100}
"['count', 'permission', 'contributoraction', 'addedaction', 'changedissue']",{'permission': 100}
"['tfaga', 'request', 'detectionpolicy', 'configuration', 'threat', 'detection']",{'threat': 100}
"['request', 'providerpotential', 'source', 'crash', 'empty']",{'crash': 100}
"['potential', 'crash', 'empty']",{'crash': 100}
"['issue', 'configuration']",{'issue': 100}
"['azurestack', 'resource', 'table', 'datasourcereview', 'comment', 'stack', 'azure', 'backportroute', 'table', 'datasource']",{'stack': 100}
"['review', 'comment', 'stack', 'azure', 'backport']",{'stack': 100}
"['threat', 'reading', 'configuration', 'detection', 'remote', 'resource', 'minor', 'state']",{'threat': 100}
"['review', 'comment', 'stack', 'azure', 'backportreview', 'comment', 'stack', 'azure', 'backportimport']",{'stack': 100}
"['issue', 'syntax', 'documentation']",{'issue': 100}
"['resourceaction', 'resource', 'group', 'azure', 'monitordocumentationdescription', 'locationacceptanceimportaction', 'group', 'resourcemodify', 'feedbacklatest', 'upgradeinclude', 'normal', 'importrenameminor', 'issue', 'feedback', 'accordingfeedback']",{'issue': 100}
"['destruction', 'issue']",{'issue': 100}
"['indentation', 'issue']",{'issue': 100}
"['string', 'threat', 'configuration', 'detection', 'resource', 'minor', 'schema']",{'threat': 100}
"['firewall', 'property', 'encryption', 'supportdatalake', 'encryption', 'store', 'initial', 'settingmerge', 'cleanup', 'encryptiondatalakestore', 'firewall', 'encryption', 'supportazurerm', 'accteststerraform', 'azurerm', 'providerdatalakestore', 'encryption', 'firewall', 'supportazurerm', 'accteststerraform', 'azurerm']",{'encryption': 100}
"['threat', 'configuration', 'detection', 'cleanup', 'resource', 'minor', 'condition']",{'threat': 100}
"['threat', 'detection', 'resource', 'policy', 'property']",{'threat': 100}
"['autoscale', 'setting', 'resourcebuild', 'provider', 'notification', 'operation', 'scale', 'valuenewer', 'updateautoscale', 'settingstyle', 'codingdefinition', 'style', 'resourceinitial', 'crash', 'documentation', 'highlightremnant', 'timezones', 'settingmonitor', 'additional', 'cleanupazurerm', 'accteststerraform', 'azurerm']",{'crash': 100}
"['logicresourceazurerm', 'accteststerraform', 'azurerm', 'azure', 'logicaction', 'object', 'trigger', 'separateazurerm', 'accteststerraform', 'azurerm', 'providerresourceazurerm', 'accteststerraform', 'azurerm', 'documentation', 'resourcecheck', 'function', 'generic', 'makingresourceresourceexample', 'logicsourceazurerm', 'accteststerraform', 'azurerm', 'issue', 'review']",{'issue': 100}
"['manager', 'workaround', 'issue', 'traffic', 'upstream', 'azureendpoints']",{'issue': 100}
"['point', 'crash']",{'crash': 100}
"['mergemerge', 'request', 'straubtgroup', 'security', 'application']",{'Security': 100}
"['group', 'security', 'application']",{'Security': 100}
"['resourcecommit', 'intialcleanuptravistravispopulate', 'smallupdate', 'validationexample', 'updatedexample', 'collection', 'schduler', 'formattedadjustment', 'commentround', 'firstfutheraddress', 'comment', 'schedulerminor', 'schedulerfunction', 'validationcheck', 'inline', 'methodsidebar', 'highlight', 'fixingmerge', 'issue', 'fixingcrash']",{'issue': 100}
"['private', 'supportpreview', 'upgradeprivat', 'issue', 'provider', 'terraform', 'azurermcomment', 'refactoringflatten', 'function', 'expandconsistent', 'making', 'field', 'resourcesource', 'field', 'documentingconsistent', 'making', 'spacingsensitive', 'makinggovendor']",{'issue': 100}
"['disclaimer', 'resourceincorrect', 'assignment', 'fixingdocumentationbroken', 'issue', 'review']",{'issue': 100}
"['cbdcab', 'mergemerge', 'request', 'issue', 'environment', 'setting']",{'issue': 100}
"['request', 'providerdefault', 'encryption']",{'encryption': 100}
"['default', 'encryption']",{'encryption': 100}
"['request', 'issueadditional', 'issue', 'property']",{'issue': 100}
"['testcases', 'quote', 'additional', 'integer']",{'integer': 100}
"['resourcecharset', 'issue']",{'issue': 100}
"['update', 'mysqlmysql', 'support', 'update', 'importschema', 'updatedupdate', 'mysql', 'ignorepostgresql', 'revertmysql', 'preview', 'postgre', 'revertedcomment', 'addressingvalidatorvalidationvalidator', 'fixedvalidationerror', 'expectederror', 'output', 'correctedaddress', 'issue', 'remainingpointer', 'updatedmysql', 'reference', 'preview', 'postgresqlpreview', 'mysql', 'vendormaster', 'createmodeimport', 'documentation', 'indentation', 'matchminor', 'consistent']",{'issue': 100}
"['sensitive', 'numerous', 'password', 'property']",{'Sensitive': 100}
"['sensitive', 'disclaimer', 'value', 'statesourcesource', 'prefixingsource', 'settingexpectation', 'fixingsecret', 'error', 'message', 'vaultconsistent', 'making', 'documentation']",{'Sensitive': 100}
"['issue', 'template']",{'issue': 100}
"['sourcesourcesource', 'provider', 'issue', 'review']",{'issue': 100}
"['issue', 'review']",{'issue': 100}
"['issue', 'review']",{'issue': 100}
"['sourceresource', 'update', 'location', 'updateprimary', 'rename', 'location', 'resource', 'resgroupminor', 'fixingregression', 'endless', 'revert', 'settingmerge', 'cleanupfound', 'issue', 'review']",{'issue': 100}
"['unexpected', 'errorissue', 'field', 'documentingagent', 'error', 'regex', 'message', 'validatingfixingbetter', 'issue']",{'issue': 100}
"['crash', 'field']",{'crash': 100}
"['property', 'schema', 'field', 'insensitive']",{'Sensitive': 90}
"['purge', 'permission']",{'permission': 100}
"['expressroute', 'concurrent', 'failure', 'provisioningavailability', 'fixingazurerm', 'accteststerraform', 'azurerm', 'providerlocal', 'template', 'provider']",{'concurrent': 100}
"['request', 'provider', 'watcher', 'network', 'issue', 'watcher', 'azure']",{'issue': 100}
"['network', 'issue', 'watcher', 'azure']",{'issue': 100}
"['number', 'issue']",{'issue': 100}
"['caddfmerge', 'request', 'provider', 'crash', 'terraform', 'elasticpoollegacy', 'location', 'resource', 'crash']",{'crash': 100}
"['crash', 'fixingazurerm', 'accteststerraform', 'azurerm', 'provider']",{'crash': 100}
"['mergemerge', 'request', 'gateway', 'provider', 'crash', 'terraformcrash']",{'crash': 100}
"['request', 'provider', 'group', 'application', 'terraformnetwork', 'security', 'group', 'support', 'application']",{'Security': 100}
"['security', 'group', 'support', 'application', 'connectingazurerm', 'accteststerraform', 'azurerm', 'providerazurerm', 'accteststerraform', 'azurerm', 'provider']",{'Security': 100}
"['security', 'group', 'application', 'support']",{'Security': 100}
"['rebase', 'issue']",{'issue': 100}
"['security', 'resource', 'group']",{'Security': 100}
"['regression', 'security']",{'Security': 100}
"['mergenetworkif', 'subnet', 'request', 'casesensitive', 'provider', 'terraformchange', 'insensitive']",{'Sensitive': 90}
"['mergemerge', 'request', 'provider', 'terraform', 'acceleratednetwork', 'issue']",{'issue': 100}
"['ceaecmerge', 'request', 'gateway', 'provider', 'crash', 'crash', 'point']",{'crash': 100}
"['request', 'provider', 'source', 'crash', 'error', 'service']",{'crash': 100}
"['point', 'potential', 'crash', 'field']",{'crash': 100}
"['storageterraform', 'issue', 'azurerm', 'providergenevieve', 'lesperance']",{'issue': 100}
"['request', 'provider', 'source', 'crash', 'terraform', 'virtualsource', 'crash']",{'crash': 100}
"['expose', 'service']",{'expose': 100}
"['specifie', 'dhcpoptions', 'crash']",{'crash': 100}
"['security', 'support', 'augmentedalready']",{'Security': 100}
"['request', 'provider', 'domain', 'crash', 'terraformstorage', 'custom', 'domain', 'support', 'account']",{'crash': 100}
"['storage', 'custom', 'domain', 'support', 'crash', 'fieldstorage', 'custom', 'domain', 'account']",{'crash': 100}
"['connection', 'documentation', 'consistencyexample', 'issue', 'sidebar', 'fixingprovision']",{'issue': 100}
"['minor', 'issue']",{'issue': 100}
"['protection', 'legacy', 'resource', 'crash']",{'crash': 100}
"['account', 'insensitive']",{'Sensitive': 90}
"['issue', 'golint']",{'issue': 100}
"['issue', 'attribute']",{'issue': 100}
"['incorrect', 'property']",{'incorrect': 100}
"['security', 'support']",{'Security': 100}
"['storage', 'string', 'making', 'sensitive', 'connection']",{'Sensitive': 100}
"['request', 'provider', 'terraform', 'virtualissue', 'multiple', 'deadlock']",{'deadlock': 100}
"['request', 'metadata', 'trotttrotttrottmetadata', 'issue', 'website']",{'issue': 100}
"['control', 'crash']",{'crash': 100}
"['mergeregistry', 'container', 'request', 'provider', 'crash', 'terraformregistry', 'container', 'block', 'crash', 'migration']",{'crash': 100}
"['block', 'crash']",{'crash': 100}
"['namespace', 'issue', 'intermittent', 'servicebus', 'return', 'fixingstdouterror', 'errornamespace', 'error', 'servicebus', 'request', 'delete', 'azure']",{'issue': 100}
"['ensure', 'example', 'permission', 'vault']",{'permission': 100}
"['ensure', 'permission', 'vault']",{'permission': 100}
"['fcdeaab', 'mergemerge', 'request', 'stack', 'cleanup', 'resource', 'group', 'sweeper']",{'stack': 100}
"['issue', 'refence']",{'issue': 100}
"['mergemerge', 'request', 'issue']",{'issue': 100}
"['mergemerge', 'request', 'provider', 'crash', 'terraform']",{'crash': 100}
"['dereference', 'issue', 'azure', 'monitor']",{'issue': 100}
"['issue', 'validation']",{'issue': 100}
"['mergemerge', 'request', 'image', 'provider', 'terraformresource', 'source', 'crash']",{'crash': 100}
"['dfccca', 'mergemerge', 'request', 'keyvault', 'provider', 'issue', 'timeout']",{'issue': 100}
"['issue', 'timeout']",{'issue': 100}
"['mergemerge', 'request', 'issue', 'sebastussubnet']",{'issue': 100}
"['request', 'providervarious', 'issue']",{'issue': 100}
"['various', 'issue']",{'issue': 100}
"['state', 'encryption', 'source', 'account', 'migration']",{'encryption': 100}
"['permission', 'vault']",{'permission': 100}
"['update', 'permission']",{'permission': 100}
"['source', 'encryption']",{'encryption': 100}
"['fbdcfcnetwork', 'security', 'request', 'provider', 'terraformgroup', 'network', 'security']",{'Security': 100}
"['network', 'security']",{'Security': 100}
"['setting', 'encryption']",{'encryption': 100}
"['string', 'resource', 'crash', 'empty', 'terraform', 'contains', 'state']",{'crash': 100}
"['crash', 'support', 'terraform', 'configsource', 'certificate']",{'crash': 100}
"['terraform', 'exactlycommandline', 'command', 'registration', 'valueprocess', 'issue', 'different', 'provider', 'register', 'microservice', 'credentialissue']",{'issue': 100}
"['rebase', 'issue']",{'issue': 100}
"['certificate', 'application', 'permission', 'vault']",{'permission': 100}
"['rebase', 'issue']",{'issue': 100}
"['rebase', 'issue']",{'issue': 100}
"['cbece', 'mergemerge', 'request', 'stack', 'sweeper', 'servicebusnamespaces', 'clean', 'sweeper', 'servicebus', 'logic']",{'stack': 100}
"['issue', 'block', 'address', 'winrm', 'setting']",{'issue': 100}
"['group', 'network', 'security']",{'Security': 100}
"['primary', 'support', 'settingnetwork', 'issue', 'subnets', 'multiple', 'virtual', 'deadlock']","{'issue': 100, 'deadlock': 100}"
"['group', 'network', 'security']",{'Security': 100}
"['network', 'security']",{'Security': 100}
"['mergemerge', 'request', 'block', 'provider', 'terraform', 'configblock', 'crash', 'empty']",{'crash': 100}
"['block', 'crash', 'empty']",{'crash': 100}
"['outstanding', 'issue']",{'issue': 100}
"['eceba', 'mergeewbankkit', 'request', 'patchnetwork', 'security', 'resource', 'group']",{'Security': 100}
"['network', 'security', 'resource', 'group']",{'Security': 100}
"['eaabf', 'mergemerge', 'request', 'azure', 'table', 'requirement', 'mjgpystorage', 'length', 'azure', 'table']",{'length': 100}
"['storage', 'length', 'table']",{'length': 100}
"['storage', 'length', 'azure', 'tableredirectedfrom', 'understanding', 'service', 'model', 'table', 'storageservices']",{'length': 100}
"['network', 'security', 'making', 'forcenew', 'group', 'property']",{'Security': 100}
"['security', 'route', 'subnets', 'catch', 'group', 'entry', 'azure', 'table']",{'Security': 100}
"['mergemerge', 'request', 'provider', 'terraform', 'deadlockissue', 'deadlock']",{'deadlock': 100}
"['issue', 'template']",{'issue': 100}
"['circuit', 'route', 'express', 'provider', 'resource', 'azurermexpressroute', 'circuit', 'documentationimprovementcircuit', 'route', 'express', 'basic', 'supporthelper', 'informationtouchupproperty', 'movingupdatetweakswitch', 'sprintf', 'consistency', 'acceptance']",{'Sprintf': 100}
"['circuit', 'route', 'express', 'provider', 'resource', 'azurermexpressroute', 'circuit', 'documentationimprovementcircuit', 'route', 'express', 'basic', 'supporthelper', 'informationtouchupproperty', 'movingupdatetweakswitch', 'sprintf', 'consistency', 'acceptance']",{'Sprintf': 100}
"['mergemerge', 'requestoutput', 'crash', 'support']",{'crash': 100}
"['mergemerge', 'requestoutput', 'crash', 'support']",{'crash': 100}
"['incorrect', 'description']",{'incorrect': 100}
"['private', 'expose']",{'expose': 100}
"['private', 'expose']",{'expose': 100}
"['support', 'crash', 'object', 'outputincludedcrashdebug', 'outputoutput', 'supportedindicates', 'limitation', 'documentationincludedsecureobject']",{'crash': 100}
"['support', 'crash', 'object', 'outputincludedcrashdebug', 'outputoutput', 'supportedindicates', 'limitation', 'documentationincludedsecureobject']",{'crash': 100}
"['interpolation', 'issue', 'sshcommand']",{'issue': 100}
"['incorrect', 'reference']",{'incorrect': 100}
"['string', 'generation', 'robust']",{'generation': 100}
"['string', 'generation']",{'generation': 100}
"['import', 'provider', 'support', 'scale', 'customscale', 'support', 'support', 'importwould', 'incorrect', 'indexsecond', 'entry', 'crash']","{'incorrect': 100, 'crash': 100}"
"['import', 'provider', 'support', 'scale', 'customscale', 'support', 'support', 'importwould', 'incorrect', 'indexsecond', 'entry', 'crash']","{'incorrect': 100, 'crash': 100}"
"['manager', 'issue', 'endpoint', 'traffic', 'documentation', 'azurerm']",{'issue': 100}
"['request', 'harijaymsnetwork', 'local', 'gateway', 'provider', 'crash']",{'crash': 100}
"['request', 'harijaymsnetwork', 'local', 'gateway', 'provider', 'crash']",{'crash': 100}
"['network', 'local', 'gateway', 'provider', 'crash']",{'crash': 100}
"['network', 'local', 'gateway', 'provider', 'crash']",{'crash': 100}
"['crash', 'revert', 'importcommit', 'reverts']",{'crash': 100}
"['crash', 'revert', 'importcommit', 'reverts']",{'crash': 100}
"['crash', 'importverify', 'parameter', 'crash', 'plugin', 'documentation', 'example', 'crash']",{'crash': 100}
"['crash', 'importverify', 'parameter', 'crash', 'plugin', 'documentation', 'example', 'crash']",{'crash': 100}
"['crash', 'importverify', 'parameter', 'crash', 'plugin', 'documentation', 'example', 'crash']",{'crash': 100}
"['crash', 'importverify', 'parameter', 'crash', 'plugin', 'documentation', 'example', 'crash']",{'crash': 100}
"['sensitive', 'state']",{'Sensitive': 100}
"['security', 'provider', 'acceptance', 'group']",{'Security': 100}
"['security', 'provider', 'acceptance']",{'Security': 100}
"['context', 'information', 'expose', 'helper', 'schema']",{'expose': 100}
"['context', 'information', 'expose', 'helper', 'schema']",{'expose': 100}
"['update', 'experience', 'portalregistration', 'permission', 'instruction']",{'permission': 100}
"['expose', 'default', 'azurerm', 'providerpresent', 'default', 'authorizationbuiltin', 'timeout', 'azurerm', 'providerbuiltin', 'provider', 'hashicorp', 'terraform', 'azurerm']",{'expose': 100}
"['expose', 'default', 'azurerm', 'providerpresent', 'default', 'authorizationbuiltin', 'timeout', 'azurerm', 'providerbuiltin', 'provider', 'hashicorp', 'terraform', 'azurerm']",{'expose': 100}
"['insensitive', 'acceptancealways', 'resourceinsensitive', 'resource']",{'Sensitive': 90}
"['storage', 'local', 'source', 'azure', 'supportsource', 'field', 'attempt', 'parallelismblock', 'uploadsrange', 'upload', 'large', 'sparse', 'absolute', 'source', 'expectssystemnumber', 'integer', 'value', 'parallelismuploads', 'concurrent', 'workernumber', 'attempt', 'integer', 'value', 'expectsblock', 'uploadingmasand', 'raina']","{'integer': 100, 'concurrent': 100}"
"['error', 'catch', 'azurerm', 'error', 'deployment', 'terraform', 'reportsuccessful', 'operation', 'commitreportstorage', 'length', 'forcebuiltin', 'timeout', 'azurerm', 'providerbuiltin', 'provider', 'hashicorp', 'terraform', 'azurerm']",{'length': 100}
"['issue', 'upgrade', 'provider', 'small', 'azurermissue']",{'issue': 100}
"['crash', 'azure']",{'crash': 100}
"['issue', 'azurerm', 'providererror', 'similar', 'throwingdebug', 'machine', 'error', 'virtual', 'settingstorage', 'configuration', 'linux', 'profile', 'invalidaddress', 'testedconnection', 'block', 'remotestill']",{'issue': 100}
"['issue', 'azurerm', 'providererror', 'similar', 'throwingdebug', 'machine', 'error', 'virtual', 'settingstorage', 'configuration', 'linux', 'profile', 'invalidaddress', 'testedconnection', 'block', 'remotestill']",{'issue': 100}
"['network', 'security', 'resource', 'azure', 'scaffold']",{'Security': 100}
"['network', 'security', 'resource', 'azure', 'scaffold']",{'Security': 100}
"['network', 'security', 'rename', 'group', 'azurerm']",{'Security': 100}
"['network', 'security', 'rename', 'group', 'azurerm']",{'Security': 100}
"['network', 'security', 'group', 'azurerm']",{'Security': 100}
"['network', 'security', 'group', 'azurerm']",{'Security': 100}
"['minor', 'issue', 'azurerm', 'providercommit', 'clean', 'azure', 'variablevariable', 'environment', 'order']",{'issue': 100}
