message,fuzzy
"['label', 'istio', 'injection', 'disablingsupport', 'desirableinclude', 'request', 'protectedlucas']",{'injection': 100}
"['kubernetescondition', 'appearsreplica', 'issue', 'gateway', 'reproducedproblem', 'patch', 'testedoperator', 'cluster', 'controllerfunction', 'openfaas', 'alexellis']",{'issue': 100}
"['false', 'defaultnobody', 'commitaffect', 'concern', 'negativeplease', 'issue', 'openfaas', 'alexellis']",{'issue': 100}
"['error', 'issue', 'followingopenfaas', 'serializedchange', 'testedcloud', 'openfaas', 'openfaas', 'alexellis']",{'issue': 100}
"['profile', 'refactorprofile', 'definitionconfig', 'client', 'settingprofile', 'expose', 'functionfactorydetail', 'implementation', 'kubernetesnetes']",{'expose': 100}
"['security', 'context', 'supportpolicy', 'configure', 'securitycontextswitch']",{'Security': 100}
"['injection', 'linkerdthomas']",{'injection': 100}
"['operator', 'namespace', 'wrong', 'ingresoperator', 'issue', 'ingres', 'openfaas', 'chart', 'aleksandr', 'fofanov']",{'issue': 100}
"['expose', 'metric', 'prometheus', 'monitoringissue', 'openfaas', 'queue', 'workerhanel']",{'expose': 100}
"['enable', 'workerinflight', 'multiple', 'request', 'concurrent', 'withoutqueue', 'openfaas', 'alexellis']",{'concurrent': 100}
"['function', 'scrapeopenfaas', 'issueprometheus', 'patch', 'directive', 'permission', 'scrapeopenfaasprometheus', 'updatedfunction', 'default', 'scope', 'namespacecover', 'longermultiple', 'clusterrole', 'netes', 'defaultprometheus', 'wildcardinsteadgateway', 'lucasroesler', 'option', 'raisedfuturewatchdog', 'annotation', 'scrape', 'prometheusserve', 'custom', 'serveralternative', 'specifyinstancescrapeannotation', 'scrape', 'issuecurrent', 'openfaas', 'alexellis']",{'permission': 100}
"['highlightclearer', 'issue', 'openfaas', 'alexellis']",{'issue': 100}
"['secret', 'refactor', 'logicstructure', 'handler', 'secret', 'expose', 'refactorinterface', 'secret', 'standardpackage', 'method', 'updatesecretsfunctionfactory', 'reflectsbehavior', 'usage', 'betterlayer', 'nature', 'reflectspreviouslysecret', 'interface', 'logic', 'kubernetes', 'refactor', 'secretclientseparation', 'clean', 'handlerinterface', 'layer', 'providersimpler', 'error', 'compatiblepublicreflectserror', 'handlersmall', 'deploy', 'update', 'secretclientfactorylucas']",{'expose': 100}
"['usage', 'issue', 'namespaceupdate', 'handler', 'namespacequery', 'request', 'clientmatch', 'handler', 'approach', 'delete', 'handler', 'openfaas', 'alexellis']",{'issue': 100}
"['dockerfiles', 'armhfrelate', 'issue', 'reportedarmhf', 'openfaas', 'alexellis']",{'issue': 100}
"['security', 'patch', 'image', 'chartbasic', 'queuesecurity']",{'Security': 100}
"['istio', 'supportcontrol', 'service', 'enable', 'plane', 'sidecar', 'injection', 'openfaasopenfaas', 'enforcedisable', 'trafficdisable', 'compatible', 'alertmanager', 'gossip', 'istiodisable', 'option', 'chart']",{'injection': 100}
"['security', 'policy', 'capability', 'restrictopenfaas', 'istio']",{'Security': 100}
"['security', 'policy', 'chartdisable', 'hostpid', 'hostnetwork', 'createcluster', 'namespace', 'service']",{'Security': 100}
"['security', 'context', 'logic']",{'Security': 100}
"['issue', 'gateway', 'security', 'context', 'netessanchez', 'angel']","{'issue': 100, 'Security': 100}"
"['function', 'generation', 'namespacefunction', 'template', 'namespaceallow', 'static', 'manifest', 'value', 'createopenfaas', 'usingpreserve', 'configurationmanifest', 'static', 'introduction', 'createresolvelucas']",{'generation': 100}
"['version', 'gatewayimage', 'leverage', 'gateway', 'alert', 'password', 'security', 'endpointdefault', 'image', 'gatewaylucas']",{'Security': 100}
"['version', 'issue', 'templatecommit', 'issue', 'templaterequest', 'version', 'providerdiagnose', 'information', 'issue', 'templatefaster', 'issueburton']",{'issue': 100}
"['version', 'operatorfound', 'critical', 'issue', 'includesincubator', 'openfaas', 'operator', 'alexellis', 'vmware']",{'issue': 100}
"['revert', 'version', 'operatoroperator', 'reverts', 'issue', 'version', 'alexellis', 'vmware']",{'issue': 100}
"['label', 'istio', 'namespaces', 'injection', 'openfaasistio', 'service', 'enable', 'sidecar', 'injection', 'function', 'openfaas', 'webhookprodan']",{'injection': 100}
"['container', 'level', 'gateway', 'security', 'contextistio', 'securitycontext', 'usingprodan']",{'Security': 100}
"['component', 'update', 'version', 'openfaasfunction', 'gateway', 'expose', 'endpoint', 'scaleopenfaas', 'docker', 'operatorprodan']",{'expose': 100}
"['expose', 'cluster', 'netes', 'outsidelocalhost', 'internal', 'external', 'gateway', 'netesprodan']",{'expose': 100}
"['context', 'chart', 'option', 'security', 'basiccontainer', 'istio', 'security', 'contexttestedprodan']",{'Security': 100}
"['attempt', 'docker', 'issue']",{'issue': 100}
"['expose', 'default', 'gateway']",{'expose': 100}
"['stack', 'async']",{'stack': 100}
